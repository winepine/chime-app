{"version":3,"file":"amazon-chime-sdk.min.js","sources":["../node_modules/amazon-chime-sdk-js/build/videostreamidset/DefaultVideoStreamIdSet.js","../node_modules/amazon-chime-sdk-js/build/videodownlinkbandwidthpolicy/AllHighestVideoBandwidthPolicy.js","../node_modules/amazon-chime-sdk-js/build/applicationmetadata/ApplicationMetadata.js","../node_modules/amazon-chime-sdk-js/build/scheduler/TimeoutScheduler.js","../node_modules/amazon-chime-sdk-js/build/scheduler/AsyncScheduler.js","../node_modules/amazon-chime-sdk-js/build/statscollector/VideoLogEvent.js","../node_modules/amazon-chime-sdk-js/build/logger/LogLevel.js","../node_modules/amazon-chime-sdk-js/build/task/OnceTask.js","../node_modules/amazon-chime-sdk-js/build/task/TaskStatus.js","../node_modules/amazon-chime-sdk-js/build/task/BaseTask.js","../node_modules/amazon-chime-sdk-js/build/task/AttachMediaInputTask.js","../node_modules/amazon-chime-sdk-js/build/attendee/Attendee.js","../node_modules/amazon-chime-sdk-js/build/statscollector/AudioLogEvent.js","../node_modules/amazon-chime-sdk-js/build/audioprofile/AudioProfile.js","../node_modules/amazon-chime-sdk-js/build/audiovideocontroller/AudioVideoControllerState.js","../node_modules/amazon-chime-sdk-js/build/backgroundblurprocessor/BackgroundBlurStrength.js","../node_modules/amazon-chime-sdk-js/libs/voicefocus/fetch.js","../node_modules/amazon-chime-sdk-js/libs/voicefocus/loader.js","../node_modules/amazon-chime-sdk-js/libs/voicefocus/support.js","../node_modules/amazon-chime-sdk-js/build/backgroundblurprocessor/ModelSpecBuilder.js","../node_modules/detect-browser/es/index.js","../node_modules/ua-parser-js/src/ua-parser.js","../node_modules/amazon-chime-sdk-js/build/browserbehavior/DefaultBrowserBehavior.js","../node_modules/amazon-chime-sdk-js/build/versioning/version.js","../node_modules/amazon-chime-sdk-js/build/versioning/Versioning.js","../node_modules/amazon-chime-sdk-js/build/backgroundfilter/BackgroundFilterVideoFrameProcessor.js","../node_modules/amazon-chime-sdk-js/build/logger/ConsoleLogger.js","../node_modules/amazon-chime-sdk-js/build/videoframeprocessor/NoOpVideoFrameProcessor.js","../node_modules/amazon-chime-sdk-js/build/videoframeprocessor/CanvasVideoFrameBuffer.js","../node_modules/amazon-chime-sdk-js/build/backgroundfilter/BackgroundFilterFrameCounter.js","../node_modules/amazon-chime-sdk-js/build/backgroundfilter/BackgroundFilterProcessor.js","../node_modules/amazon-chime-sdk-js/build/backgroundfilter/BackgroundFilterVideoFrameProcessorDelegate.js","../node_modules/amazon-chime-sdk-js/build/backgroundblurprocessor/BackgroundBlurVideoFrameProcessorDelegate.js","../node_modules/amazon-chime-sdk-js/build/backgroundblurprocessor/BackgroundBlurProcessorProvided.js","../node_modules/amazon-chime-sdk-js/build/backgroundblurprocessor/BackgroundBlurProcessorBuiltIn.js","../node_modules/amazon-chime-sdk-js/build/backgroundblurprocessor/BackgroundBlurVideoFrameProcessor.js","../node_modules/amazon-chime-sdk-js/build/backgroundreplacementprocessor/BackgroundReplacementVideoFrameProcessorDelegate.js","../node_modules/amazon-chime-sdk-js/build/backgroundreplacementprocessor/BackgroundReplacementFilter.js","../node_modules/amazon-chime-sdk-js/build/backgroundreplacementprocessor/BackgroundReplacementVideoFrameProcessor.js","../node_modules/amazon-chime-sdk-js/build/connectionhealthpolicy/BaseConnectionHealthPolicy.js","../node_modules/amazon-chime-sdk-js/build/videouplinkbandwidthpolicy/BitrateParameters.js","../node_modules/amazon-chime-sdk-js/build/cspmonitor/CSPMonitor.js","../node_modules/amazon-chime-sdk-js/build/meetingreadinesschecker/CheckAudioConnectivityFeedback.js","../node_modules/amazon-chime-sdk-js/build/meetingreadinesschecker/CheckAudioInputFeedback.js","../node_modules/amazon-chime-sdk-js/build/meetingreadinesschecker/CheckAudioOutputFeedback.js","../node_modules/amazon-chime-sdk-js/build/meetingreadinesschecker/CheckCameraResolutionFeedback.js","../node_modules/amazon-chime-sdk-js/build/meetingreadinesschecker/CheckContentShareConnectivityFeedback.js","../node_modules/amazon-chime-sdk-js/build/meetingreadinesschecker/CheckNetworkTCPConnectivityFeedback.js","../node_modules/amazon-chime-sdk-js/build/meetingreadinesschecker/CheckNetworkUDPConnectivityFeedback.js","../node_modules/amazon-chime-sdk-js/build/meetingreadinesschecker/CheckVideoConnectivityFeedback.js","../node_modules/amazon-chime-sdk-js/build/meetingreadinesschecker/CheckVideoInputFeedback.js","../node_modules/amazon-chime-sdk-js/build/task/CleanRestartedSessionTask.js","../node_modules/amazon-chime-sdk-js/build/signalingclient/SignalingClientEventType.js","../node_modules/amazon-chime-sdk-js/build/task/CleanStoppedSessionTask.js","../node_modules/@protobufjs/aspromise/index.js","../node_modules/@protobufjs/base64/index.js","../node_modules/@protobufjs/eventemitter/index.js","../node_modules/@protobufjs/float/index.js","../node_modules/@protobufjs/inquire/index.js","../node_modules/@protobufjs/utf8/index.js","../node_modules/@protobufjs/pool/index.js","../node_modules/protobufjs/src/util/longbits.js","../node_modules/protobufjs/src/util/minimal.js","../node_modules/protobufjs/src/writer.js","../node_modules/protobufjs/src/writer_buffer.js","../node_modules/protobufjs/src/reader.js","../node_modules/protobufjs/src/reader_buffer.js","../node_modules/protobufjs/src/rpc/service.js","../node_modules/protobufjs/src/rpc.js","../node_modules/protobufjs/src/roots.js","../node_modules/protobufjs/src/index-minimal.js","../node_modules/protobufjs/minimal.js","../node_modules/amazon-chime-sdk-js/build/signalingprotocol/SignalingProtocol.js","../node_modules/amazon-chime-sdk-js/build/clientmetricreport/ClientMetricReportDirection.js","../node_modules/amazon-chime-sdk-js/build/clientmetricreport/ClientMetricReportMediaType.js","../node_modules/amazon-chime-sdk-js/build/clientmetricreport/GlobalMetricReport.js","../node_modules/amazon-chime-sdk-js/build/clientmetricreport/ClientMetricReport.js","../node_modules/amazon-chime-sdk-js/build/clientmetricreport/ClientVideoStreamReceivingReport.js","../node_modules/amazon-chime-sdk-js/build/connectionhealthpolicy/ConnectionHealthData.js","../node_modules/amazon-chime-sdk-js/build/connectionhealthpolicy/ConnectionHealthPolicyConfiguration.js","../node_modules/amazon-chime-sdk-js/build/contentsharecontroller/ContentShareConstants.js","../node_modules/amazon-chime-sdk-js/build/scheduler/IntervalScheduler.js","../node_modules/amazon-chime-sdk-js/build/mediadevicefactory/MediaDeviceProxyHandler.js","../node_modules/amazon-chime-sdk-js/build/mediadevicefactory/DefaultMediaDeviceFactory.js","../node_modules/amazon-chime-sdk-js/build/utils/PromiseQueue.js","../node_modules/amazon-chime-sdk-js/build/utils/Types.js","../node_modules/amazon-chime-sdk-js/build/modality/DefaultModality.js","../node_modules/amazon-chime-sdk-js/build/videotile/VideoTileState.js","../node_modules/amazon-chime-sdk-js/build/videotile/DefaultVideoTile.js","../node_modules/amazon-chime-sdk-js/build/devicecontroller/AudioTransformDevice.js","../node_modules/amazon-chime-sdk-js/build/devicecontroller/DeviceSelection.js","../node_modules/amazon-chime-sdk-js/build/devicecontroller/GetUserMediaError.js","../node_modules/amazon-chime-sdk-js/build/devicecontroller/NotFoundError.js","../node_modules/amazon-chime-sdk-js/build/devicecontroller/NotReadableError.js","../node_modules/amazon-chime-sdk-js/build/devicecontroller/OverconstrainedError.js","../node_modules/amazon-chime-sdk-js/build/devicecontroller/PermissionDeniedError.js","../node_modules/amazon-chime-sdk-js/build/devicecontroller/TypeError.js","../node_modules/amazon-chime-sdk-js/build/devicecontroller/VideoQualitySettings.js","../node_modules/amazon-chime-sdk-js/build/devicecontroller/VideoTransformDevice.js","../node_modules/amazon-chime-sdk-js/build/devicecontroller/DefaultDeviceController.js","../node_modules/amazon-chime-sdk-js/build/contentsharecontroller/ContentShareMediaStreamBroker.js","../node_modules/amazon-chime-sdk-js/build/task/CreatePeerConnectionTask.js","../node_modules/amazon-chime-sdk-js/build/meetingsession/MeetingSessionStatusCode.js","../node_modules/amazon-chime-sdk-js/build/sdp/SDPCandidateType.js","../node_modules/amazon-chime-sdk-js/build/sdp/SDPMediaSection.js","../node_modules/amazon-chime-sdk-js/build/sdp/VideoCodecCapability.js","../node_modules/amazon-chime-sdk-js/build/sdp/SDP.js","../node_modules/amazon-chime-sdk-js/build/task/CreateSDPTask.js","../node_modules/amazon-chime-sdk-js/build/datamessage/DataMessage.js","../node_modules/amazon-chime-sdk-js/build/activespeakerdetector/DefaultActiveSpeakerDetector.js","../node_modules/amazon-chime-sdk-js/build/activespeakerpolicy/DefaultActiveSpeakerPolicy.js","../node_modules/amazon-chime-sdk-js/build/audiomixcontroller/DefaultAudioMixController.js","../node_modules/amazon-chime-sdk-js/build/connectionmonitor/SignalingAndMetricsConnectionMonitor.js","../node_modules/amazon-chime-sdk-js/build/meetingsession/MeetingSessionStatus.js","../node_modules/amazon-chime-sdk-js/build/meetingsession/MeetingSessionVideoAvailability.js","../node_modules/amazon-chime-sdk-js/build/pingpong/DefaultPingPong.js","../node_modules/amazon-chime-sdk-js/build/transcript/Transcript.js","../node_modules/amazon-chime-sdk-js/build/transcript/TranscriptionStatus.js","../node_modules/amazon-chime-sdk-js/build/transcript/TranscriptionStatusType.js","../node_modules/amazon-chime-sdk-js/build/transcript/TranscriptItemType.js","../node_modules/amazon-chime-sdk-js/build/transcript/TranscriptEvent.js","../node_modules/amazon-chime-sdk-js/build/transcript/DefaultTranscriptionController.js","../node_modules/amazon-chime-sdk-js/build/realtimecontroller/RealtimeState.js","../node_modules/amazon-chime-sdk-js/build/realtimecontroller/RealtimeVolumeIndicator.js","../node_modules/amazon-chime-sdk-js/build/realtimecontroller/DefaultRealtimeController.js","../node_modules/amazon-chime-sdk-js/build/sessionstatecontroller/SessionStateControllerAction.js","../node_modules/amazon-chime-sdk-js/build/sessionstatecontroller/SessionStateControllerDeferPriority.js","../node_modules/amazon-chime-sdk-js/build/sessionstatecontroller/SessionStateControllerState.js","../node_modules/amazon-chime-sdk-js/build/sessionstatecontroller/SessionStateControllerTransitionResult.js","../node_modules/amazon-chime-sdk-js/build/sessionstatecontroller/DefaultSessionStateController.js","../node_modules/amazon-chime-sdk-js/build/websocketadapter/WebSocketReadyState.js","../node_modules/amazon-chime-sdk-js/build/signalingclient/ServerSideNetworkAdaption.js","../node_modules/amazon-chime-sdk-js/build/signalingclient/SignalingClientEvent.js","../node_modules/amazon-chime-sdk-js/build/signalingclient/DefaultSignalingClient.js","../node_modules/amazon-chime-sdk-js/build/signalingclient/SignalingClientVideoSubscriptionConfiguration.js","../node_modules/amazon-chime-sdk-js/build/clientmetricreport/StreamMetricReport.js","../node_modules/amazon-chime-sdk-js/build/meetingsession/MeetingSessionLifecycleEvent.js","../node_modules/amazon-chime-sdk-js/build/meetingsession/MeetingSessionLifecycleEventCondition.js","../node_modules/amazon-chime-sdk-js/build/statscollector/StatsCollector.js","../node_modules/amazon-chime-sdk-js/build/task/FinishGatheringICECandidatesTask.js","../node_modules/amazon-chime-sdk-js/build/meetingsession/MeetingSessionTURNCredentials.js","../node_modules/amazon-chime-sdk-js/build/signalingclient/SignalingClientJoin.js","../node_modules/amazon-chime-sdk-js/build/task/JoinAndReceiveIndexTask.js","../node_modules/amazon-chime-sdk-js/build/task/LeaveAndReceiveLeaveAckTask.js","../node_modules/amazon-chime-sdk-js/build/task/ListenForVolumeIndicatorsTask.js","../node_modules/amazon-chime-sdk-js/build/connectionhealthpolicy/ReconnectionHealthPolicy.js","../node_modules/amazon-chime-sdk-js/build/connectionhealthpolicy/SendingAudioFailureConnectionHealthPolicy.js","../node_modules/amazon-chime-sdk-js/build/connectionhealthpolicy/UnusableAudioWarningConnectionHealthPolicy.js","../node_modules/amazon-chime-sdk-js/build/task/MonitorTask.js","../node_modules/amazon-chime-sdk-js/build/signalingclient/SignalingClientConnectionRequest.js","../node_modules/amazon-chime-sdk-js/build/task/OpenSignalingConnectionTask.js","../node_modules/amazon-chime-sdk-js/build/task/ParallelGroupTask.js","../node_modules/amazon-chime-sdk-js/build/task/PromoteToPrimaryMeetingTask.js","../node_modules/amazon-chime-sdk-js/build/task/ReceiveAudioInputTask.js","../node_modules/amazon-chime-sdk-js/build/task/ReceiveTURNCredentialsTask.js","../node_modules/amazon-chime-sdk-js/build/task/ReceiveVideoInputTask.js","../node_modules/amazon-chime-sdk-js/build/task/ReceiveVideoStreamIndexTask.js","../node_modules/amazon-chime-sdk-js/build/task/SendAndReceiveDataMessagesTask.js","../node_modules/amazon-chime-sdk-js/build/task/SerialGroupTask.js","../node_modules/amazon-chime-sdk-js/build/task/SetLocalDescriptionTask.js","../node_modules/amazon-chime-sdk-js/build/task/SetRemoteDescriptionTask.js","../node_modules/pako/lib/zlib/trees.js","../node_modules/pako/lib/zlib/adler32.js","../node_modules/pako/lib/zlib/crc32.js","../node_modules/pako/lib/zlib/messages.js","../node_modules/pako/lib/zlib/constants.js","../node_modules/pako/lib/zlib/deflate.js","../node_modules/pako/lib/utils/common.js","../node_modules/pako/lib/utils/strings.js","../node_modules/pako/lib/zlib/zstream.js","../node_modules/pako/lib/deflate.js","../node_modules/pako/lib/zlib/inffast.js","../node_modules/pako/lib/zlib/inftrees.js","../node_modules/pako/lib/zlib/inflate.js","../node_modules/pako/lib/zlib/gzheader.js","../node_modules/pako/lib/inflate.js","../node_modules/pako/index.js","../node_modules/amazon-chime-sdk-js/build/sdp/ZLIBTextCompressor.js","../node_modules/amazon-chime-sdk-js/build/signalingclient/SignalingClientSubscribe.js","../node_modules/amazon-chime-sdk-js/build/task/SubscribeAndReceiveSubscribeAckTask.js","../node_modules/amazon-chime-sdk-js/build/task/TimeoutTask.js","../node_modules/amazon-chime-sdk-js/build/task/WaitForAttendeePresenceTask.js","../node_modules/amazon-chime-sdk-js/build/transceivercontroller/DefaultTransceiverController.js","../node_modules/amazon-chime-sdk-js/build/transceivercontroller/SimulcastTransceiverController.js","../node_modules/amazon-chime-sdk-js/build/transceivercontroller/SimulcastContentShareTransceiverController.js","../node_modules/amazon-chime-sdk-js/build/transceivercontroller/VideoOnlyTransceiverController.js","../node_modules/amazon-chime-sdk-js/build/videocaptureandencodeparameter/DefaultVideoCaptureAndEncodeParameter.js","../node_modules/amazon-chime-sdk-js/build/videodownlinkbandwidthpolicy/TargetDisplaySize.js","../node_modules/amazon-chime-sdk-js/build/videodownlinkbandwidthpolicy/VideoPreference.js","../node_modules/amazon-chime-sdk-js/build/videodownlinkbandwidthpolicy/VideoPreferences.js","../node_modules/amazon-chime-sdk-js/build/videodownlinkbandwidthpolicy/VideoPriorityBasedPolicyConfig.js","../node_modules/amazon-chime-sdk-js/build/videodownlinkbandwidthpolicy/VideoPriorityBasedPolicy.js","../node_modules/amazon-chime-sdk-js/build/videodownlinkbandwidthpolicy/VideoAdaptiveProbePolicy.js","../node_modules/amazon-chime-sdk-js/build/videostreamindex/VideoStreamDescription.js","../node_modules/amazon-chime-sdk-js/build/videostreamindex/DefaultVideoStreamIndex.js","../node_modules/amazon-chime-sdk-js/build/videostreamindex/SimulcastVideoStreamIndex.js","../node_modules/amazon-chime-sdk-js/build/devicepixelratiomonitor/DefaultDevicePixelRatioMonitor.js","../node_modules/amazon-chime-sdk-js/build/devicepixelratiosource/DevicePixelRatioWindowSource.js","../node_modules/amazon-chime-sdk-js/build/videotilecontroller/DefaultVideoTileController.js","../node_modules/amazon-chime-sdk-js/build/videotilefactory/DefaultVideoTileFactory.js","../node_modules/amazon-chime-sdk-js/build/simulcastlayers/SimulcastLayers.js","../node_modules/amazon-chime-sdk-js/build/videouplinkbandwidthpolicy/DefaultSimulcastUplinkPolicy.js","../node_modules/amazon-chime-sdk-js/build/videouplinkbandwidthpolicy/NScaleVideoUplinkBandwidthPolicy.js","../node_modules/amazon-chime-sdk-js/build/volumeindicatoradapter/DefaultVolumeIndicatorAdapter.js","../node_modules/amazon-chime-sdk-js/build/audiovideocontroller/DefaultAudioVideoController.js","../node_modules/amazon-chime-sdk-js/build/audiovideofacade/DefaultAudioVideoFacade.js","../node_modules/amazon-chime-sdk-js/build/utils/Utils.js","../node_modules/amazon-chime-sdk-js/build/meetingsession/MeetingSessionCredentials.js","../node_modules/amazon-chime-sdk-js/build/meetingsession/MeetingSessionURLs.js","../node_modules/amazon-chime-sdk-js/build/meetingsession/MeetingSessionConfiguration.js","../node_modules/amazon-chime-sdk-js/build/videouplinkbandwidthpolicy/DefaultSimulcastUplinkPolicyForContentShare.js","../node_modules/amazon-chime-sdk-js/build/contentsharecontroller/DefaultContentShareController.js","../node_modules/amazon-chime-sdk-js/build/destroyable/Destroyable.js","../node_modules/amazon-chime-sdk-js/build/eventbufferconfiguration/EventBufferConfiguration.js","../node_modules/amazon-chime-sdk-js/build/eventingestionconfiguration/EventIngestionConfiguration.js","../node_modules/amazon-chime-sdk-js/build/backoff/FullJitterBackoff.js","../node_modules/amazon-chime-sdk-js/build/useragentparser/DefaultUserAgentParser.js","../node_modules/amazon-chime-sdk-js/build/eventbuffer/InMemoryJSONEventBuffer.js","../node_modules/amazon-chime-sdk-js/build/eventreporter/DefaultMeetingEventReporter.js","../node_modules/amazon-chime-sdk-js/build/eventsclientconfiguration/MeetingEventsClientConfiguration.js","../node_modules/amazon-chime-sdk-js/build/eventcontroller/flattenEventAttributes.js","../node_modules/amazon-chime-sdk-js/build/eventcontroller/DefaultEventController.js","../node_modules/amazon-chime-sdk-js/build/meetingreadinesschecker/MeetingReadinessCheckerConfiguration.js","../node_modules/amazon-chime-sdk-js/build/meetingreadinesschecker/DefaultMeetingReadinessChecker.js","../node_modules/amazon-chime-sdk-js/build/reconnectcontroller/DefaultReconnectController.js","../node_modules/amazon-chime-sdk-js/build/websocketadapter/DefaultWebSocketAdapter.js","../node_modules/amazon-chime-sdk-js/build/meetingsession/DefaultMeetingSession.js","../node_modules/@aws-sdk/util-config-provider/dist-es/booleanSelector.js","../node_modules/@aws-sdk/config-resolver/dist-es/endpointsConfig/NodeUseDualstackEndpointConfigOptions.js","../node_modules/@aws-sdk/config-resolver/dist-es/endpointsConfig/NodeUseFipsEndpointConfigOptions.js","../node_modules/@aws-sdk/util-middleware/dist-es/normalizeProvider.js","../node_modules/@aws-sdk/config-resolver/dist-es/regionConfig/isFipsRegion.js","../node_modules/@aws-sdk/config-resolver/dist-es/regionConfig/getRealRegion.js","../node_modules/@aws-sdk/config-resolver/dist-es/regionConfig/resolveRegionConfig.js","../node_modules/@aws-sdk/protocol-http/dist-es/httpRequest.js","../node_modules/@aws-sdk/protocol-http/dist-es/httpResponse.js","../node_modules/@aws-sdk/middleware-content-length/dist-es/index.js","../node_modules/@aws-sdk/middleware-endpoint/dist-es/service-customizations/s3.js","../node_modules/@aws-sdk/middleware-endpoint/dist-es/adaptors/createConfigValueProvider.js","../node_modules/@aws-sdk/middleware-endpoint/dist-es/adaptors/getEndpointFromInstructions.js","../node_modules/@aws-sdk/querystring-parser/dist-es/index.js","../node_modules/@aws-sdk/url-parser/dist-es/index.js","../node_modules/@aws-sdk/middleware-endpoint/dist-es/adaptors/toEndpointV1.js","../node_modules/@aws-sdk/middleware-endpoint/dist-es/endpointMiddleware.js","../node_modules/@aws-sdk/middleware-serde/dist-es/deserializerMiddleware.js","../node_modules/@aws-sdk/middleware-serde/dist-es/serializerMiddleware.js","../node_modules/@aws-sdk/middleware-serde/dist-es/serdePlugin.js","../node_modules/@aws-sdk/middleware-endpoint/dist-es/getEndpointPlugin.js","../node_modules/@aws-sdk/middleware-endpoint/dist-es/resolveEndpointConfig.js","../node_modules/@aws-sdk/middleware-host-header/dist-es/index.js","../node_modules/@aws-sdk/middleware-logger/dist-es/loggerMiddleware.js","../node_modules/@aws-sdk/middleware-recursion-detection/dist-es/index.js","../node_modules/@aws-sdk/util-retry/dist-es/config.js","../node_modules/@aws-sdk/service-error-classification/dist-es/constants.js","../node_modules/@aws-sdk/service-error-classification/dist-es/index.js","../node_modules/@aws-sdk/util-retry/dist-es/DefaultRateLimiter.js","../node_modules/@aws-sdk/util-retry/dist-es/constants.js","../node_modules/@aws-sdk/util-retry/dist-es/defaultRetryBackoffStrategy.js","../node_modules/@aws-sdk/util-retry/dist-es/defaultRetryToken.js","../node_modules/@aws-sdk/util-retry/dist-es/StandardRetryStrategy.js","../node_modules/@aws-sdk/util-retry/dist-es/AdaptiveRetryStrategy.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/@aws-sdk/middleware-retry/dist-es/util.js","../node_modules/@aws-sdk/middleware-retry/dist-es/configurations.js","../node_modules/@aws-sdk/middleware-retry/dist-es/retryMiddleware.js","../node_modules/@aws-sdk/property-provider/dist-es/memoize.js","../node_modules/@aws-sdk/util-hex-encoding/dist-es/index.js","../node_modules/@aws-sdk/util-utf8/dist-es/fromUtf8.browser.js","../node_modules/@aws-sdk/util-utf8/dist-es/toUint8Array.js","../node_modules/@aws-sdk/util-utf8/dist-es/toUtf8.browser.js","../node_modules/@aws-sdk/signature-v4/dist-es/constants.js","../node_modules/@aws-sdk/signature-v4/dist-es/credentialDerivation.js","../node_modules/@aws-sdk/signature-v4/dist-es/getCanonicalHeaders.js","../node_modules/@aws-sdk/util-uri-escape/dist-es/escape-uri.js","../node_modules/@aws-sdk/signature-v4/dist-es/getCanonicalQuery.js","../node_modules/@aws-sdk/is-array-buffer/dist-es/index.js","../node_modules/@aws-sdk/signature-v4/dist-es/getPayloadHash.js","../node_modules/@aws-sdk/signature-v4/dist-es/headerUtil.js","../node_modules/@aws-sdk/signature-v4/dist-es/cloneRequest.js","../node_modules/@aws-sdk/signature-v4/dist-es/moveHeadersToQuery.js","../node_modules/@aws-sdk/signature-v4/dist-es/prepareRequest.js","../node_modules/@aws-sdk/signature-v4/dist-es/utilDate.js","../node_modules/@aws-sdk/signature-v4/dist-es/SignatureV4.js","../node_modules/@aws-sdk/middleware-signing/dist-es/configurations.js","../node_modules/@aws-sdk/middleware-signing/dist-es/utils/getSkewCorrectedDate.js","../node_modules/@aws-sdk/middleware-signing/dist-es/utils/isClockSkewed.js","../node_modules/@aws-sdk/middleware-signing/dist-es/utils/getUpdatedSystemClockOffset.js","../node_modules/@aws-sdk/middleware-signing/dist-es/middleware.js","../node_modules/@aws-sdk/middleware-user-agent/dist-es/configurations.js","../node_modules/@aws-sdk/middleware-user-agent/dist-es/constants.js","../node_modules/@aws-sdk/middleware-user-agent/dist-es/user-agent-middleware.js","../node_modules/@aws-sdk/smithy-client/dist-es/NoOpLogger.js","../node_modules/@aws-sdk/middleware-stack/dist-es/MiddlewareStack.js","../node_modules/@aws-sdk/smithy-client/dist-es/client.js","../node_modules/@aws-sdk/smithy-client/dist-es/command.js","../node_modules/@aws-sdk/smithy-client/dist-es/constants.js","../node_modules/@aws-sdk/smithy-client/dist-es/parse-utils.js","../node_modules/@aws-sdk/smithy-client/dist-es/date-utils.js","../node_modules/@aws-sdk/smithy-client/dist-es/exceptions.js","../node_modules/@aws-sdk/smithy-client/dist-es/default-error-handler.js","../node_modules/@aws-sdk/smithy-client/dist-es/defaults-mode.js","../node_modules/@aws-sdk/smithy-client/dist-es/extended-encode-uri-component.js","../node_modules/@aws-sdk/smithy-client/dist-es/lazy-json.js","../node_modules/@aws-sdk/smithy-client/dist-es/object-mapping.js","../node_modules/@aws-sdk/smithy-client/dist-es/resolve-path.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/endpoint/EndpointParameters.js","../node_modules/tslib/tslib.es6.js","../node_modules/@aws-crypto/sha256-browser/build/isEmptyData.js","../node_modules/@aws-crypto/sha256-browser/build/constants.js","../node_modules/@aws-sdk/util-utf8-browser/dist-es/pureJs.js","../node_modules/@aws-sdk/util-utf8-browser/dist-es/whatwgEncodingApi.js","../node_modules/@aws-sdk/util-utf8-browser/dist-es/index.js","../node_modules/@aws-sdk/util-locate-window/dist-es/index.js","../node_modules/@aws-crypto/sha256-browser/build/ie11Sha256.js","../node_modules/@aws-crypto/sha256-browser/node_modules/@aws-crypto/util/build/convertToBuffer.js","../node_modules/@aws-crypto/sha256-browser/node_modules/@aws-crypto/util/build/isEmptyData.js","../node_modules/@aws-crypto/sha256-browser/node_modules/@aws-crypto/util/build/numToUint8.js","../node_modules/@aws-crypto/sha256-browser/node_modules/@aws-crypto/util/build/uint32ArrayFrom.js","../node_modules/@aws-crypto/sha256-browser/node_modules/@aws-crypto/util/build/index.js","../node_modules/@aws-crypto/sha256-browser/build/webCryptoSha256.js","../node_modules/@aws-crypto/sha256-browser/node_modules/@aws-crypto/sha256-js/build/constants.js","../node_modules/@aws-crypto/sha256-browser/node_modules/@aws-crypto/sha256-js/build/RawSha256.js","../node_modules/@aws-crypto/sha256-browser/node_modules/@aws-crypto/sha256-js/build/jsSha256.js","../node_modules/@aws-crypto/sha256-browser/node_modules/@aws-crypto/sha256-js/build/index.js","../node_modules/@aws-crypto/supports-web-crypto/build/supportsWebCrypto.js","../node_modules/@aws-crypto/supports-web-crypto/build/index.js","../node_modules/@aws-crypto/ie11-detection/build/CryptoOperation.js","../node_modules/@aws-crypto/ie11-detection/build/Key.js","../node_modules/@aws-crypto/ie11-detection/build/KeyOperation.js","../node_modules/@aws-crypto/ie11-detection/build/MsSubtleCrypto.js","../node_modules/@aws-crypto/ie11-detection/build/MsWindow.js","../node_modules/@aws-crypto/ie11-detection/build/index.js","../node_modules/@aws-crypto/sha256-browser/build/crossPlatformSha256.js","../node_modules/@aws-sdk/querystring-builder/dist-es/index.js","../node_modules/@aws-sdk/fetch-http-handler/dist-es/request-timeout.js","../node_modules/@aws-crypto/sha256-browser/build/index.js","../node_modules/@aws-sdk/fetch-http-handler/dist-es/fetch-http-handler.js","../node_modules/@aws-sdk/util-base64/dist-es/constants.browser.js","../node_modules/@aws-sdk/util-base64/dist-es/fromBase64.browser.js","../node_modules/@aws-sdk/util-base64/dist-es/toBase64.browser.js","../node_modules/@aws-sdk/fetch-http-handler/dist-es/stream-collector.js","../node_modules/@aws-sdk/invalid-dependency/dist-es/invalidProvider.js","../node_modules/@aws-sdk/util-body-length-browser/dist-es/calculateBodyLength.js","../node_modules/bowser/src/constants.js","../node_modules/bowser/src/utils.js","../node_modules/bowser/src/parser-browsers.js","../node_modules/bowser/src/parser-os.js","../node_modules/bowser/src/parser-platforms.js","../node_modules/bowser/src/parser-engines.js","../node_modules/bowser/src/parser.js","../node_modules/bowser/src/bowser.js","../node_modules/@aws-sdk/util-user-agent-browser/dist-es/index.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/partition.js","../node_modules/@aws-sdk/util-endpoints/dist-es/debug/debugId.js","../node_modules/@aws-sdk/util-endpoints/dist-es/debug/toDebugString.js","../node_modules/@aws-sdk/util-endpoints/dist-es/types/EndpointError.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/isIpAddress.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/isValidHostLabel.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/isVirtualHostableS3Bucket.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/parseArn.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/booleanEquals.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/getAttrPathList.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/getAttr.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/isSet.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/not.js","../node_modules/@aws-sdk/types/dist-es/auth.js","../node_modules/@aws-sdk/types/dist-es/endpoint.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/parseURL.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/stringEquals.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/substring.js","../node_modules/@aws-sdk/util-endpoints/dist-es/lib/uriEncode.js","../node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateTemplate.js","../node_modules/@aws-sdk/util-endpoints/dist-es/utils/getReferenceValue.js","../node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateExpression.js","../node_modules/@aws-sdk/util-endpoints/dist-es/utils/callFunction.js","../node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateCondition.js","../node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateConditions.js","../node_modules/@aws-sdk/util-endpoints/dist-es/utils/getEndpointHeaders.js","../node_modules/@aws-sdk/util-endpoints/dist-es/utils/getEndpointProperty.js","../node_modules/@aws-sdk/util-endpoints/dist-es/utils/getEndpointProperties.js","../node_modules/@aws-sdk/util-endpoints/dist-es/utils/getEndpointUrl.js","../node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateEndpointRule.js","../node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateErrorRule.js","../node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateTreeRule.js","../node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateRules.js","../node_modules/@aws-sdk/util-endpoints/dist-es/resolveEndpoint.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/endpoint/ruleset.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/endpoint/endpointResolver.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/runtimeConfig.shared.js","../node_modules/@aws-sdk/util-defaults-mode-browser/dist-es/constants.js","../node_modules/@aws-sdk/util-defaults-mode-browser/dist-es/resolveDefaultsModeConfig.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/runtimeConfig.browser.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/ChimeSDKMessagingClient.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/models/ChimeSDKMessagingServiceException.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/models/models_0.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/protocols/Aws_restJson1.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/AssociateChannelFlowCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/BatchCreateChannelMembershipCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/ChannelFlowCallbackCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/CreateChannelBanCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/CreateChannelCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/CreateChannelFlowCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/CreateChannelMembershipCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/CreateChannelModeratorCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/DeleteChannelBanCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/DeleteChannelCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/DeleteChannelFlowCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/DeleteChannelMembershipCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/DeleteChannelMessageCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/DeleteChannelModeratorCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/DescribeChannelBanCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/DescribeChannelCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/DescribeChannelFlowCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/DescribeChannelMembershipCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/DescribeChannelMembershipForAppInstanceUserCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/DescribeChannelModeratedByAppInstanceUserCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/DescribeChannelModeratorCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/DisassociateChannelFlowCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/GetChannelMembershipPreferencesCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/GetChannelMessageCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/GetChannelMessageStatusCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/GetMessagingSessionEndpointCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/ListChannelBansCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/ListChannelFlowsCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/ListChannelMembershipsCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/ListChannelMembershipsForAppInstanceUserCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/ListChannelMessagesCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/ListChannelModeratorsCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/ListChannelsAssociatedWithChannelFlowCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/ListChannelsCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/ListChannelsModeratedByAppInstanceUserCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/ListSubChannelsCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/ListTagsForResourceCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/PutChannelMembershipPreferencesCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/RedactChannelMessageCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/SearchChannelsCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/SendChannelMessageCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/TagResourceCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/UntagResourceCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/UpdateChannelCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/UpdateChannelFlowCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/UpdateChannelMessageCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/commands/UpdateChannelReadMarkerCommand.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/ChimeSDKMessaging.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/pagination/ListChannelBansPaginator.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/pagination/ListChannelFlowsPaginator.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/pagination/ListChannelMembershipsForAppInstanceUserPaginator.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/pagination/ListChannelMembershipsPaginator.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/pagination/ListChannelMessagesPaginator.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/pagination/ListChannelModeratorsPaginator.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/pagination/ListChannelsAssociatedWithChannelFlowPaginator.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/pagination/ListChannelsModeratedByAppInstanceUserPaginator.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/pagination/ListChannelsPaginator.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/pagination/ListSubChannelsPaginator.js","../node_modules/@aws-sdk/client-chime-sdk-messaging/dist-es/pagination/SearchChannelsPaginator.js","../node_modules/amazon-chime-sdk-js/build/message/Message.js","../node_modules/@aws-crypto/sha256-js/build/constants.js","../node_modules/@aws-crypto/sha256-js/build/RawSha256.js","../node_modules/@aws-crypto/util/build/convertToBuffer.js","../node_modules/@aws-crypto/util/build/isEmptyData.js","../node_modules/@aws-crypto/util/build/numToUint8.js","../node_modules/@aws-crypto/util/build/uint32ArrayFrom.js","../node_modules/@aws-crypto/util/build/index.js","../node_modules/@aws-crypto/sha256-js/build/jsSha256.js","../node_modules/@aws-crypto/sha256-js/build/index.js","../node_modules/amazon-chime-sdk-js/build/sigv4/DefaultSigV4.js","../node_modules/amazon-chime-sdk-js/build/messagingsession/PrefetchOn.js","../node_modules/amazon-chime-sdk-js/build/messagingsession/DefaultMessagingSession.js","../node_modules/amazon-chime-sdk-js/build/videoframeprocessor/DefaultVideoFrameProcessorPipeline.js","../node_modules/amazon-chime-sdk-js/build/videoframeprocessor/DefaultVideoTransformDevice.js","../node_modules/amazon-chime-sdk-js/build/backoff/FullJitterLimitedBackoff.js","../node_modules/amazon-chime-sdk-js/build/backoff/FullJitterBackoffFactory.js","../node_modules/amazon-chime-sdk-js/build/logger/Log.js","../node_modules/amazon-chime-sdk-js/build/messagingsession/MessagingSessionConfiguration.js","../node_modules/amazon-chime-sdk-js/build/logger/MultiLogger.js","../node_modules/amazon-chime-sdk-js/build/logger/NoOpLogger.js","../node_modules/amazon-chime-sdk-js/build/logger/NoOpDebugLogger.js","../node_modules/amazon-chime-sdk-js/build/mediastreambroker/NoOpMediaStreamBroker.js","../node_modules/amazon-chime-sdk-js/build/audiovideocontroller/NoOpAudioVideoController.js","../node_modules/amazon-chime-sdk-js/build/devicecontroller/NoOpDeviceController.js","../node_modules/amazon-chime-sdk-js/build/eventreporter/NoOpEventReporter.js","../node_modules/amazon-chime-sdk-js/build/task/NoOpTask.js","../node_modules/amazon-chime-sdk-js/build/videoelementfactory/NoOpVideoElementFactory.js","../node_modules/amazon-chime-sdk-js/build/videodownlinkbandwidthpolicy/NoVideoDownlinkBandwidthPolicy.js","../node_modules/amazon-chime-sdk-js/build/videouplinkbandwidthpolicy/NoVideoUplinkBandwidthPolicy.js","../node_modules/amazon-chime-sdk-js/build/logger/POSTLogger.js","../node_modules/amazon-chime-sdk-js/build/messagingsession/PrefetchSortBy.js","../node_modules/amazon-chime-sdk-js/build/realtimecontroller/RealtimeAttendeePositionInFrame.js","../node_modules/amazon-chime-sdk-js/build/task/RunnableTask.js","../node_modules/amazon-chime-sdk-js/build/devicecontroller/SingleNodeAudioTransformDevice.js","../node_modules/amazon-chime-sdk-js/build/transcript/TranscriptAlternative.js","../node_modules/amazon-chime-sdk-js/build/transcript/TranscriptEntity.js","../node_modules/amazon-chime-sdk-js/build/transcript/TranscriptItem.js","../node_modules/amazon-chime-sdk-js/build/transcript/TranscriptLanguageWithScore.js","../node_modules/amazon-chime-sdk-js/build/transcript/TranscriptResult.js","../node_modules/amazon-chime-sdk-js/build/videosource/VideoSource.js","../node_modules/amazon-chime-sdk-js/libs/voicefocus/decider.js","../node_modules/amazon-chime-sdk-js/libs/voicefocus/types.js","../node_modules/amazon-chime-sdk-js/libs/voicefocus/worklet-inline-node.js","../node_modules/amazon-chime-sdk-js/libs/voicefocus/worklet-worker-sab-node.js","../node_modules/amazon-chime-sdk-js/libs/voicefocus/worklet-worker-postMessage-node.js","../node_modules/amazon-chime-sdk-js/libs/voicefocus/voicefocus.js","../node_modules/amazon-chime-sdk-js/build/voicefocus/LoggerAdapter.js","../node_modules/amazon-chime-sdk-js/build/voicefocus/VoiceFocusTransformDevice.js","../node_modules/amazon-chime-sdk-js/build/voicefocus/VoiceFocusTransformDeviceDelegate.js","../node_modules/amazon-chime-sdk-js/build/voicefocus/VoiceFocusDeviceTransformer.js","../node_modules/amazon-chime-sdk-js/build/index.js"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[DefaultVideoStreamIdSet]] implements [[VideoStreamIdSet]].\n */\nclass DefaultVideoStreamIdSet {\n    constructor(ids) {\n        this.ids = new Set(ids);\n    }\n    add(streamId) {\n        this.ids.add(streamId);\n    }\n    array() {\n        const values = Array.from(this.ids.values());\n        return values.sort((a, b) => a - b);\n    }\n    contain(streamId) {\n        return this.ids.has(streamId);\n    }\n    forEach(callbackFn) {\n        this.ids.forEach(callbackFn);\n    }\n    empty() {\n        return this.ids.size === 0;\n    }\n    size() {\n        return this.ids.size;\n    }\n    equal(other) {\n        if (!other) {\n            return this.ids.size === 0;\n        }\n        const x = this.array();\n        const y = other.array();\n        if (x.length !== y.length) {\n            return false;\n        }\n        for (let i = 0; i < x.length; i++) {\n            if (x[i] !== y[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    clone() {\n        return new DefaultVideoStreamIdSet(this.array());\n    }\n    remove(streamId) {\n        this.ids.delete(streamId);\n    }\n    toJSON() {\n        return this.array();\n    }\n    truncate(length) {\n        const x = this.array();\n        return new DefaultVideoStreamIdSet(x.splice(0, length));\n    }\n}\nexports.default = DefaultVideoStreamIdSet;\n//# sourceMappingURL=DefaultVideoStreamIdSet.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultVideoStreamIdSet_1 = require(\"../videostreamidset/DefaultVideoStreamIdSet\");\n/**\n * [[AllHighestVideoBandwidthPolicy]] implements is a rudimentary policy that simply\n * always subscribes to the highest quality video stream available\n * for all non-self participants.\n */\nclass AllHighestVideoBandwidthPolicy {\n    constructor(selfAttendeeId) {\n        this.selfAttendeeId = selfAttendeeId;\n        this.reset();\n    }\n    reset() {\n        this.optimalReceiveSet = new DefaultVideoStreamIdSet_1.default();\n        this.subscribedReceiveSet = new DefaultVideoStreamIdSet_1.default();\n        this.videoSources = undefined;\n    }\n    updateIndex(videoIndex) {\n        this.videoIndex = videoIndex;\n        this.optimalReceiveSet = this.calculateOptimalReceiveSet(videoIndex);\n    }\n    updateMetrics(_clientMetricReport) { }\n    wantsResubscribe() {\n        return !this.subscribedReceiveSet.equal(this.optimalReceiveSet);\n    }\n    chooseSubscriptions() {\n        this.subscribedReceiveSet = this.optimalReceiveSet.clone();\n        return this.subscribedReceiveSet.clone();\n    }\n    chooseRemoteVideoSources(videoSources) {\n        this.videoSources = videoSources;\n        this.optimalReceiveSet = this.calculateOptimalReceiveSet(this.videoIndex).clone();\n    }\n    calculateOptimalReceiveSet(videoIndex) {\n        const streamSelectionSet = new DefaultVideoStreamIdSet_1.default();\n        if (!this.videoIndex || this.videoIndex.allStreams().empty()) {\n            return streamSelectionSet;\n        }\n        const receiveSet = videoIndex.highestQualityStreamFromEachGroupExcludingSelf(this.selfAttendeeId);\n        // If video sources are not chosen, then return the default receive set.\n        if (this.videoSources === undefined) {\n            return receiveSet;\n        }\n        // Get the list of all the remote stream information\n        const remoteInfos = this.videoIndex.remoteStreamDescriptions();\n        const mapOfAttendeeIdToOptimalStreamId = new Map();\n        for (const info of remoteInfos) {\n            if (receiveSet.contain(info.streamId)) {\n                mapOfAttendeeIdToOptimalStreamId.set(info.attendeeId, info.streamId);\n            }\n        }\n        for (const videoSource of this.videoSources) {\n            const attendeeId = videoSource.attendee.attendeeId;\n            if (mapOfAttendeeIdToOptimalStreamId.has(attendeeId)) {\n                streamSelectionSet.add(mapOfAttendeeIdToOptimalStreamId.get(attendeeId));\n            }\n        }\n        return streamSelectionSet;\n    }\n}\nexports.default = AllHighestVideoBandwidthPolicy;\n//# sourceMappingURL=AllHighestVideoBandwidthPolicy.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n *\n * [[ApplicationMetadata]] contains application metadata such as application name and version.\n * Amazon Chime SDK for JavaScript allows builders to provide application metadata in\n * the meeting session configuration. This field is optional. Amazon Chime uses application metadata to\n * analyze meeting health trends or identify common failures to improve your meeting experience.\n *\n * Do not pass any Personal Identifiable Information (PII).\n *\n * ```js\n * import { MeetingSessionConfiguration, ApplicationMetadata } from 'amazon-chime-sdk-js';\n *\n * const createMeetingResponse = // CreateMeeting API response.\n * const createAttendeeResponse = // CreateAttendee API response.\n * const meetingSessionConfiguration = new MeetingSessionConfiguration(\n *  createMeetingResponse,\n *  createAttendeeResponse\n * );\n *\n * meetingSessionConfiguration.applicationMetadata = ApplicationMetadata.create({\n *  appName: 'AppName',\n *  appVersion: '1.0.0'\n * });\n *\n * ```\n */\nclass ApplicationMetadata {\n    constructor(appName, appVersion) {\n        this.appName = appName;\n        this.appVersion = appVersion;\n    }\n    /**\n     *\n     * @param appName Builder's application name.\n     * The app name must satisfy following regular expression:\n     * `/^[a-zA-Z0-9]+[a-zA-Z0-9_-]*[a-zA-Z0-9]+$/g`\n     *\n     * @param appVersion Builder's application version.\n     * The app version must follow the [Semantic Versioning](https://semver.org/) format.\n     *\n     * @returns [[ApplicationMetadata]]\n     */\n    static create(appName, appVersion) {\n        const APP_NAME_REGEX = /^[a-zA-Z0-9]+[a-zA-Z0-9_-]*[a-zA-Z0-9]+$/g;\n        if (!appName || appName.length > 32) {\n            throw new Error(`appName should be a valid string and 1 to 32 characters in length`);\n        }\n        if (!APP_NAME_REGEX.test(appName)) {\n            throw new Error(`appName must satisfy ${APP_NAME_REGEX} regular expression`);\n        }\n        const APP_VERSION_REGEX = /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/gm;\n        if (!appVersion || appVersion.length > 32) {\n            throw new Error(`appVersion should be a valid string and 1 to 32 characters in length`);\n        }\n        if (!APP_VERSION_REGEX.test(appVersion)) {\n            throw new Error(`appVersion must satisfy Semantic Versioning format`);\n        }\n        return new ApplicationMetadata(appName, appVersion);\n    }\n}\nexports.default = ApplicationMetadata;\n//# sourceMappingURL=ApplicationMetadata.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[TimeoutScheduler]] calls the callback once after timeoutMs milliseconds.\n */\nclass TimeoutScheduler {\n    constructor(timeoutMs) {\n        this.timeoutMs = timeoutMs;\n        // eslint-disable-next-line\n        this.timer = null;\n    }\n    start(callback) {\n        this.stop();\n        this.timer = setTimeout(() => {\n            clearTimeout(this.timer);\n            callback();\n        }, this.timeoutMs);\n    }\n    stop() {\n        if (this.timer !== null) {\n            clearTimeout(this.timer);\n            this.timer = null;\n        }\n    }\n}\nexports.default = TimeoutScheduler;\n//# sourceMappingURL=TimeoutScheduler.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst TimeoutScheduler_1 = require(\"./TimeoutScheduler\");\n/**\n * [[AsyncScheduler]] enqueues the callback for the soonest available run of the\n * event loop.\n */\nclass AsyncScheduler extends TimeoutScheduler_1.default {\n    constructor() {\n        super(0);\n    }\n    /**\n     * Execute the provided callback on the next tick of the event loop.\n     * This is semantically equivalent to\n     *\n     * ```typescript\n     * new AsyncScheduler(callback).start();\n     * ```\n     *\n     * but with less overhead.\n     *\n     * @param callback the code to run.\n     */\n    static nextTick(callback) {\n        setTimeout(callback, 0);\n    }\n}\nexports.default = AsyncScheduler;\n//# sourceMappingURL=AsyncScheduler.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VideoLogEvent = void 0;\nvar VideoLogEvent;\n(function (VideoLogEvent) {\n    VideoLogEvent[VideoLogEvent[\"InputAttached\"] = 0] = \"InputAttached\";\n    VideoLogEvent[VideoLogEvent[\"SendingFailed\"] = 1] = \"SendingFailed\";\n    VideoLogEvent[VideoLogEvent[\"SendingSuccess\"] = 2] = \"SendingSuccess\";\n})(VideoLogEvent = exports.VideoLogEvent || (exports.VideoLogEvent = {}));\nexports.default = VideoLogEvent;\n//# sourceMappingURL=VideoLogEvent.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogLevel = void 0;\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\n    LogLevel[LogLevel[\"INFO\"] = 1] = \"INFO\";\n    LogLevel[LogLevel[\"WARN\"] = 2] = \"WARN\";\n    LogLevel[LogLevel[\"ERROR\"] = 3] = \"ERROR\";\n    LogLevel[LogLevel[\"OFF\"] = 4] = \"OFF\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\nexports.default = LogLevel;\n//# sourceMappingURL=LogLevel.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst LogLevel_1 = require(\"../logger/LogLevel\");\nconst AsyncScheduler_1 = require(\"../scheduler/AsyncScheduler\");\n/**\n * A task that wraps another task and ensures it is run only once,\n * regardless of how many times `run` is called.\n *\n * This allows you to implement a kind of barrier synchronization.\n */\nclass OnceTask {\n    constructor(logger, task, dependencies) {\n        this.logger = logger;\n        this.task = task;\n        this.dependencies = dependencies;\n        // Whether we have canceled.\n        this.canceled = false;\n    }\n    name() {\n        return `${this.task.name()} (once)`;\n    }\n    cancel() {\n        // We want to preserve one interesting property: the deepest dependency that hasn't\n        // already finished or been canceled is the first to be canceled, and its failure\n        // will propagate back up the promise chain.\n        //\n        // We can't just cancel ourselves with cancelPromise -- we will cut off the rest of\n        // the tree. Nor can we necessarily do it on the same event loop tick, because the\n        // cancelation might be subtly async.\n        //\n        // Instead, we immediately cancel each dependency, and then we cancel the current\n        // task (if it's running), and then we cancel via our promise escape hatch if needed.\n        /* istanbul ignore if */\n        if (this.canceled) {\n            return;\n        }\n        if (this.dependencies) {\n            for (const dep of this.dependencies) {\n                dep.cancel();\n            }\n        }\n        // Do this on the next tick so that our canceled dependencies cascade.\n        this.logger.info(`Canceling ${this.name()}`);\n        AsyncScheduler_1.default.nextTick(() => this.task.cancel());\n        this.canceled = true;\n        if (this.cancelPromise) {\n            AsyncScheduler_1.default.nextTick(() => this.cancelPromise(new Error(`canceling ${this.name()}`)));\n        }\n    }\n    logDependencies() {\n        if (this.logger.getLogLevel() > LogLevel_1.default.INFO) {\n            return;\n        }\n        if (!this.dependencies) {\n            return;\n        }\n        const names = this.dependencies\n            .filter(d => d)\n            .map(d => d.name())\n            .join(', ');\n        this.logger.info(`${this.task.name()} waiting for dependencies: ${names}`);\n    }\n    run() {\n        if (this.promise) {\n            return this.promise;\n        }\n        const dependencies = this.dependencies\n            ? Promise.all(this.dependencies.map(d => d === null || d === void 0 ? void 0 : d.run()))\n            : Promise.resolve();\n        this.logDependencies();\n        this.ongoing = dependencies.then(() => this.task.run());\n        return (this.promise = new Promise((resolve, reject) => {\n            this.cancelPromise = reject;\n            this.ongoing.then(resolve).catch(reject);\n        }));\n    }\n    setParent(parentTask) {\n        this.task.setParent(parentTask);\n    }\n}\nexports.default = OnceTask;\n//# sourceMappingURL=OnceTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TaskStatus;\n(function (TaskStatus) {\n    TaskStatus[\"IDLE\"] = \"IDLE\";\n    TaskStatus[\"RUNNING\"] = \"RUNNING\";\n    TaskStatus[\"CANCELED\"] = \"CANCELED\";\n    TaskStatus[\"FINISHED\"] = \"FINISHED\";\n})(TaskStatus || (TaskStatus = {}));\nexports.default = TaskStatus;\n//# sourceMappingURL=TaskStatus.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst OnceTask_1 = require(\"./OnceTask\");\nconst TaskStatus_1 = require(\"./TaskStatus\");\n/*\n * [[BaseTask]] provides common utilities for task implementations.\n */\nclass BaseTask {\n    constructor(logger) {\n        this.logger = logger;\n        this.taskName = 'BaseTask';\n        this.parentTask = null;\n        this.status = TaskStatus_1.default.IDLE;\n        this.run = this.baseRun.bind(this, this.run);\n        this.cancel = this.baseCancel.bind(this, this.cancel);\n    }\n    once(...dependencies) {\n        return new OnceTask_1.default(this.logger, this, dependencies);\n    }\n    cancel() { }\n    name() {\n        return this.parentTask ? `${this.parentTask.name()}/${this.taskName}` : this.taskName;\n    }\n    setParent(parentTask) {\n        this.parentTask = parentTask;\n    }\n    getStatus() {\n        return this.status;\n    }\n    logAndThrow(message) {\n        this.logger.info(message);\n        throw new Error(message);\n    }\n    baseRun(originalRun) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const startTime = Date.now();\n                this.logger.info(`running task ${this.name()}`);\n                switch (this.status) {\n                    case TaskStatus_1.default.RUNNING:\n                        this.logAndThrow(`${this.name()} is already running`);\n                    case TaskStatus_1.default.CANCELED:\n                        this.logAndThrow(`${this.name()} was canceled before running`);\n                    case TaskStatus_1.default.FINISHED:\n                        this.logAndThrow(`${this.name()} was already finished`);\n                }\n                this.status = TaskStatus_1.default.RUNNING;\n                yield originalRun.call(this);\n                this.logger.info(`${this.name()} took ${Math.round(Date.now() - startTime)} ms`);\n            }\n            catch (err) {\n                throw err;\n            }\n            finally {\n                if (this.status !== TaskStatus_1.default.CANCELED) {\n                    this.status = TaskStatus_1.default.FINISHED;\n                }\n            }\n        });\n    }\n    baseCancel(originalCancel) {\n        if (this.status === TaskStatus_1.default.CANCELED || this.status === TaskStatus_1.default.FINISHED) {\n            this.logger.info(`Not canceling ${this.name()}: state is ${this.status}`);\n            return;\n        }\n        this.logger.info(`canceling task ${this.name()}`);\n        this.status = TaskStatus_1.default.CANCELED;\n        originalCancel.call(this);\n    }\n}\nexports.default = BaseTask;\n//# sourceMappingURL=BaseTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst VideoLogEvent_1 = require(\"../statscollector/VideoLogEvent\");\nconst BaseTask_1 = require(\"./BaseTask\");\n/*\n * [[AttachMediaInputTask]] adds audio and video input to peer connection.\n */\nclass AttachMediaInputTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'AttachMediaInputTask';\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const transceiverController = this.context.transceiverController;\n            transceiverController.setPeer(this.context.peer);\n            transceiverController.setupLocalTransceivers();\n            const audioInput = this.context.activeAudioInput;\n            if (audioInput) {\n                const audioTracks = audioInput.getAudioTracks();\n                this.context.logger.info('attaching audio track to peer connection');\n                yield transceiverController.setAudioInput(audioTracks.length ? audioTracks[0] : null);\n            }\n            else {\n                yield transceiverController.setAudioInput(null);\n                this.context.logger.info('no audio track');\n            }\n            const videoInput = this.context.activeVideoInput;\n            if (videoInput) {\n                const videoTracks = videoInput.getVideoTracks();\n                const videoTrack = videoTracks.length ? videoTracks[0] : null;\n                this.context.logger.info('attaching video track to peer connection');\n                yield transceiverController.setVideoInput(videoTrack);\n                if (this.context.enableSimulcast && this.context.videoUplinkBandwidthPolicy) {\n                    const encodingParam = this.context.videoUplinkBandwidthPolicy.chooseEncodingParameters();\n                    transceiverController.setEncodingParameters(encodingParam);\n                }\n                if (videoTrack) {\n                    this.context.statsCollector.logVideoEvent(VideoLogEvent_1.default.InputAttached, this.context.videoDeviceInformation);\n                }\n            }\n            else {\n                yield transceiverController.setVideoInput(null);\n                this.context.logger.info('no video track');\n            }\n            this.context.videoSubscriptions = transceiverController.updateVideoTransceivers(this.context.videoStreamIndex, this.context.videosToReceive);\n        });\n    }\n}\nexports.default = AttachMediaInputTask;\n//# sourceMappingURL=AttachMediaInputTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[Attendee]] contains the information of an attendee.\n */\nclass Attendee {\n}\nexports.default = Attendee;\n//# sourceMappingURL=Attendee.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AudioLogEvent = void 0;\nvar AudioLogEvent;\n(function (AudioLogEvent) {\n    AudioLogEvent[AudioLogEvent[\"DeviceChanged\"] = 0] = \"DeviceChanged\";\n    AudioLogEvent[AudioLogEvent[\"MutedLocal\"] = 1] = \"MutedLocal\";\n    AudioLogEvent[AudioLogEvent[\"UnmutedLocal\"] = 2] = \"UnmutedLocal\";\n    AudioLogEvent[AudioLogEvent[\"Connected\"] = 3] = \"Connected\";\n    AudioLogEvent[AudioLogEvent[\"ConnectFailed\"] = 4] = \"ConnectFailed\";\n    AudioLogEvent[AudioLogEvent[\"RedmicStartLoss\"] = 5] = \"RedmicStartLoss\";\n    AudioLogEvent[AudioLogEvent[\"RedmicEndLoss\"] = 6] = \"RedmicEndLoss\";\n})(AudioLogEvent = exports.AudioLogEvent || (exports.AudioLogEvent = {}));\nexports.default = AudioLogEvent;\n//# sourceMappingURL=AudioLogEvent.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * AudioProfile defines quality settings of the audio input\n * device. Use the static methods to create presets optimized\n * for fullband speech and fullband music with a mono channel.\n */\nclass AudioProfile {\n    /**\n     * Constructs an AudioProfile given an audio bitrate. If no\n     * audio bitrate is supplied, then the default AudioProfile\n     * is constructed. The default AudioProfile does not adjust\n     * the browser's internal bitrate setting.\n     */\n    constructor(audioBitrateBps = null) {\n        this.audioBitrateBps = audioBitrateBps;\n    }\n    /**\n     * Creates an AudioProfile optimized for fullband speech (40 kbit/s mono).\n     */\n    static fullbandSpeechMono() {\n        return new AudioProfile(40000);\n    }\n    /**\n     * Creates an AudioProfile optimized for fullband music (64 kbit/s mono).\n     */\n    static fullbandMusicMono() {\n        return new AudioProfile(64000);\n    }\n    /**\n     * Creates an AudioProfile optimized for fullband stereo music (128 kbit/s stereo).\n     */\n    static fullbandMusicStereo() {\n        return new AudioProfile(128000);\n    }\n    /**\n     * Returns true if audio profile is set to stereo mode.\n     */\n    isStereo() {\n        return this.audioBitrateBps === 128000;\n    }\n}\nexports.default = AudioProfile;\n//# sourceMappingURL=AudioProfile.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_VIDEO_SUBSCRIPTION_LIMIT = void 0;\nexports.DEFAULT_VIDEO_SUBSCRIPTION_LIMIT = 25;\n/**\n * [[AudioVideoControllerState]] includes the compute resources shared by [[DefaultAudioVideoController]] and any running [[Task]].\n *\n * **Note**: Any additions to this class need to consider whether they need to be reset in `resetConnectionSpecificState`, `CleanStoppedSessionTask`, or\n * `CleanRestartedSessionTask`, e.g. if it is relies on backend state and will go stale across reconnections.  Failing\n * to reset state may lead to unexpected behavior.\n */\nclass AudioVideoControllerState {\n    constructor() {\n        this.logger = null;\n        this.browserBehavior = null;\n        this.meetingSessionConfiguration = null;\n        this.signalingClient = null;\n        this.peer = null;\n        this.previousSdpOffer = null;\n        this.sdpOfferInit = null;\n        this.audioVideoController = null;\n        this.realtimeController = null;\n        this.videoTileController = null;\n        this.mediaStreamBroker = null;\n        this.activeAudioInput = undefined;\n        this.activeVideoInput = undefined;\n        this.audioMixController = null;\n        this.transceiverController = null;\n        this.indexFrame = null;\n        this.iceCandidates = [];\n        this.iceCandidateHandler = null;\n        this.iceGatheringStateEventHandler = null;\n        this.sdpAnswer = null;\n        this.turnCredentials = null;\n        this.reconnectController = null;\n        this.removableObservers = [];\n        this.audioProfile = null;\n        this.videoStreamIndex = null;\n        this.videoDownlinkBandwidthPolicy = null;\n        this.videoUplinkBandwidthPolicy = null;\n        this.lastKnownVideoAvailability = null;\n        this.videoCaptureAndEncodeParameter = null;\n        // An unordered list of IDs provided by the downlink policy that\n        // we will eventually subscribe to.\n        this.videosToReceive = null;\n        // The last processed set of IDs provided by the policy, so that we can\n        // compare what changes were additions, stream switches, or removals.\n        this.lastVideosToReceive = null;\n        // An ordered list corresponding to `videosToReceive` where the order\n        // itself correspond to transceivers; 0 in this list corresponds to an inactive tranceiver.\n        this.videoSubscriptions = null;\n        // The video subscription limit is set by the backend and is subject to change in future.\n        // This value is set in the `JoinAndReceiveIndexTask` when we process the `SdkJoinAckFrame`\n        // and is used in the `ReceiveVideoStreamIndexTask` to limit the total number of streams\n        // that we include in the `videosToReceive`.\n        this.videoSubscriptionLimit = exports.DEFAULT_VIDEO_SUBSCRIPTION_LIMIT;\n        // The previous SDP answer will be used as a dictionary to seed the compression library\n        // during decompressing the compressed SDP answer.\n        this.previousSdpAnswerAsString = '';\n        // This flag indicates if the backend supports compression for the client.\n        this.serverSupportsCompression = false;\n        // Values set by `setVideoCodecSendPreferences`.\n        this.videoSendCodecPreferences = [];\n        // Calculated as the highest priority available codec set in the (possibly munged) SDP answer\n        // that is provide to the peer connection, which will be what is sent.\n        this.currentVideoSendCodec = undefined;\n        // Intersection of `videoSendCodecPreferences` and the supported receive codecs of\n        // all the other clients in the meeting.\n        this.meetingSupportedVideoSendCodecPreferences = undefined;\n        this.videosPaused = null;\n        this.videoDuplexMode = null;\n        this.volumeIndicatorAdapter = null;\n        this.statsCollector = null;\n        this.connectionMonitor = null;\n        // This state is deprecated and unused.\n        this.videoInputAttachedTimestampMs = 0;\n        // This state is deprecated and unused.\n        this.audioDeviceInformation = {};\n        // This state is deprecated and unused.\n        this.videoDeviceInformation = {};\n        this.enableSimulcast = false;\n        this.eventController = null;\n        this.signalingOpenDurationMs = null;\n        this.iceGatheringDurationMs = null;\n        this.startAudioVideoTimestamp = null;\n        this.attendeePresenceDurationMs = null;\n        this.meetingStartDurationMs = null;\n        this.poorConnectionCount = 0;\n        this.maxVideoTileCount = 0;\n        this.startTimeMs = null;\n    }\n    /*\n     * Reset state corresponding to state that is dependent on a individual connection\n     * and may not be valid for others, e.g. on a reconnection.\n     */\n    resetConnectionSpecificState() {\n        // For auditing reasons, we will comment on the state that we do not touch here. Note that `DefaultAudioVideoController.actionConnect`\n        // also resets certain state, some to cached members:\n        // Reset to empty/null/new state: `browserBehavior`, `transceiverController`, `volumeIndicatorAdapter`, `enableSimulcast`\n        //                                `signalingOpenDurationMs`, `iceGatheringDurationMs`, `startAudioVideoTimestamp`, `attendeePresenceDurationMs`\n        //                                `meetingStartDurationMs`, `startTimeMs`, `lastKnownVideoAvailability`, `videoCaptureAndEncodeParameter`, `videosToReceive`\n        //                                `videosPaused`, `videoStreamIndex`, `statsCollector`, `connectionMonitor`\n        // Reset to existing/cached values: `logger`, `meetingSessionConfiguration`, `realtimeController`, `mediaStreamBroker`,\n        //                                  `audioMixController`, `reconnectController, `audioProfile`, `eventController`\n        // `signalingClient` can be reused from a failed/disconnected state.\n        if (this.peer) {\n            this.peer.close();\n        }\n        this.peer = null;\n        this.previousSdpOffer = null;\n        this.sdpOfferInit = null;\n        // `audioVideoController` members should either be reusable, or moved to `AudioVideoControllerState` and\n        // cleaned up here.\n        // We don't want to mutate `videoTileController` as most video tiles will still be there on reconnect. We can remove tiles on the\n        // first index we receive if they no longer exist\n        // `mediaStreamBroker`, `activeAudioInput`, and `activeVideoInput` are cleaned up seperately in `DefaultAudioVideoController.cleanUpMediaStreamsAfterStop`\n        // but only on `stop` or non-reconnectable failures. They are also set to cached `DefaultAudioVideoController` members on restart.\n        if (this.transceiverController !== undefined) {\n            this.transceiverController.reset();\n        }\n        this.indexFrame = null;\n        this.iceCandidates = [];\n        this.iceCandidateHandler = null;\n        this.sdpAnswer = null;\n        this.turnCredentials = null;\n        this.videoDownlinkBandwidthPolicy.reset();\n        if (this.videoUplinkBandwidthPolicy.reset) {\n            this.videoUplinkBandwidthPolicy.reset();\n        }\n        this.lastVideosToReceive = null;\n        this.videoSubscriptions = null;\n        this.videoSubscriptionLimit = exports.DEFAULT_VIDEO_SUBSCRIPTION_LIMIT;\n        this.previousSdpAnswerAsString = '';\n        this.serverSupportsCompression = false;\n        // `videoSendCodecPreferences` is set by builder and needs to stay consistent.\n        this.currentVideoSendCodec = undefined;\n        this.meetingSupportedVideoSendCodecPreferences = undefined;\n        this.videoDuplexMode = null;\n        // `poorConnectionCount`and `maxVideoTileCount` is intentionally not set to 0 across reconnections.\n    }\n}\nexports.default = AudioVideoControllerState;\n//# sourceMappingURL=AudioVideoControllerState.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlurStrengthMapper = void 0;\n/**\n * The numbers below indicate the amount of blur to apply. Larger numbers will produce\n * more blur.\n */\nconst BlurStrength = {\n    LOW: 7,\n    MEDIUM: 15,\n    HIGH: 30,\n};\n/** @internal */\nclass BlurStrengthMapper {\n    static getBlurAmount(bstrength, options) {\n        if (bstrength <= 0) {\n            throw new Error(`invalid value for blur strength: ${bstrength}`);\n        }\n        return Math.round((bstrength * options.height) / this.BLUR_STRENGTH_DIVISOR);\n    }\n}\nexports.BlurStrengthMapper = BlurStrengthMapper;\nBlurStrengthMapper.BLUR_STRENGTH_DIVISOR = 540; // use 540P as baseline blur strength\nexports.default = BlurStrength;\n//# sourceMappingURL=BackgroundBlurStrength.js.map","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidRevisionID = exports.isValidAssetGroup = exports.resolveURL = exports.addQueryParams = exports.withQueryString = exports.withRequestHeaders = exports.fetchWithBehavior = void 0;\nfunction fetchWithBehavior(url, init, fetchBehavior) {\n    if (!fetchBehavior) {\n        return fetch(url, init);\n    }\n    const withQuery = withQueryString(url, fetchBehavior);\n    const withHeaders = withRequestHeaders(init, fetchBehavior);\n    return fetch(withQuery, withHeaders);\n}\nexports.fetchWithBehavior = fetchWithBehavior;\nfunction withRequestHeaders(init, fetchBehavior) {\n    if (!(fetchBehavior === null || fetchBehavior === void 0 ? void 0 : fetchBehavior.headers)) {\n        return init;\n    }\n    if (!init) {\n        return {\n            headers: fetchBehavior.headers,\n        };\n    }\n    return Object.assign(Object.assign({}, init), { headers: Object.assign(Object.assign({}, init.headers || {}), fetchBehavior.headers) });\n}\nexports.withRequestHeaders = withRequestHeaders;\nfunction withQueryString(url, fetchBehavior) {\n    if (!(fetchBehavior === null || fetchBehavior === void 0 ? void 0 : fetchBehavior.escapedQueryString)) {\n        return url;\n    }\n    const hasQuery = url.lastIndexOf('?') !== -1;\n    return `${url}${hasQuery ? '&' : '?'}${fetchBehavior.escapedQueryString}`;\n}\nexports.withQueryString = withQueryString;\nfunction addQueryParams(fetchBehavior, queryParams) {\n    const keys = Object.keys(queryParams);\n    if (!keys.length) {\n        return fetchBehavior;\n    }\n    const params = new URLSearchParams(fetchBehavior === null || fetchBehavior === void 0 ? void 0 : fetchBehavior.escapedQueryString);\n    for (const key of keys) {\n        params.append(key, queryParams[key]);\n    }\n    return Object.assign(Object.assign({}, fetchBehavior), { escapedQueryString: params.toString() });\n}\nexports.addQueryParams = addQueryParams;\nconst HEAD_OPTIONS = {\n    method: 'HEAD',\n    mode: 'cors',\n    credentials: 'omit',\n    redirect: 'follow',\n    referrerPolicy: 'origin',\n};\nfunction resolveURL(url, fetchBehavior) {\n    return fetchWithBehavior(url, HEAD_OPTIONS, fetchBehavior)\n        .then(response => response.redirected ? response.url : url);\n}\nexports.resolveURL = resolveURL;\nfunction isValidAssetGroup(assetGroup) {\n    return !!assetGroup && /^[-.a-zA-Z0-9]+$/.test(assetGroup);\n}\nexports.isValidAssetGroup = isValidAssetGroup;\nfunction isValidRevisionID(revisionID) {\n    return !!revisionID && /^[123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ]{22}$/.test(revisionID);\n}\nexports.isValidRevisionID = isValidRevisionID;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadWorker = void 0;\nconst fetch_js_1 = require(\"./fetch.js\");\nconst WORKER_FETCH_OPTIONS = {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'omit',\n    redirect: 'follow',\n    referrerPolicy: 'no-referrer',\n};\nconst loadWorker = (workerURL, name, fetchBehavior, logger) => {\n    logger === null || logger === void 0 ? void 0 : logger.debug(`Loading ${name} worker from ${workerURL}.`);\n    let workerURLIsSameOrigin = false;\n    try {\n        workerURLIsSameOrigin = self.origin === (new URL(workerURL)).origin;\n    }\n    catch (e) {\n        logger === null || logger === void 0 ? void 0 : logger.error('Could not compare origins.', e);\n    }\n    if (workerURLIsSameOrigin) {\n        const workerURLWithQuery = fetch_js_1.withQueryString(workerURL, fetchBehavior);\n        return Promise.resolve(new Worker(workerURLWithQuery, { name }));\n    }\n    return fetch_js_1.fetchWithBehavior(workerURL, WORKER_FETCH_OPTIONS, fetchBehavior).then((res) => {\n        if (res.ok) {\n            return res.blob()\n                .then((blob) => new Worker(window.URL.createObjectURL(blob)));\n        }\n        throw new Error('Fetch failed.');\n    });\n};\nexports.loadWorker = loadWorker;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isOldChrome = exports.supportsWASMStreaming = exports.supportsSharedArrayBuffer = exports.supportsWASM = exports.supportsAudioWorklet = exports.supportsWorker = exports.supportsVoiceFocusWorker = exports.supportsWASMPostMessage = exports.isSafari = void 0;\nconst loader_js_1 = require(\"./loader.js\");\nconst isChrome = (global = globalThis) => {\n    const ua = global.navigator.userAgent;\n    return !!ua.match(/Chrom(?:e|ium)\\/([0-9]+)/);\n};\nconst isSafari = (global = globalThis) => {\n    const ua = global.navigator.userAgent;\n    const hasSafari = ua.match(/Safari\\//);\n    const hasChrome = ua.match(/Chrom(?:e|ium)\\//);\n    return !!(hasSafari && !hasChrome);\n};\nexports.isSafari = isSafari;\nconst supportsWASMPostMessage = (global = globalThis) => {\n    if (exports.isSafari(global)) {\n        return false;\n    }\n    if (isChrome(global)) {\n        const version = chromeVersion(global) || 0;\n        return version < 95;\n    }\n    return true;\n};\nexports.supportsWASMPostMessage = supportsWASMPostMessage;\nconst supportsVoiceFocusWorker = (scope = globalThis, fetchConfig, logger) => __awaiter(void 0, void 0, void 0, function* () {\n    if (!exports.supportsWorker(scope, logger)) {\n        return false;\n    }\n    const workerURL = `${fetchConfig.paths.workers}worker-v1.js`;\n    try {\n        const worker = yield loader_js_1.loadWorker(workerURL, 'VoiceFocusTestWorker', fetchConfig, logger);\n        try {\n            worker.terminate();\n        }\n        catch (e) {\n            logger === null || logger === void 0 ? void 0 : logger.debug('Failed to terminate worker.', e);\n        }\n        return true;\n    }\n    catch (e) {\n        logger === null || logger === void 0 ? void 0 : logger.info('Failed to fetch and instantiate test worker', e);\n        return false;\n    }\n});\nexports.supportsVoiceFocusWorker = supportsVoiceFocusWorker;\nconst supportsWorker = (scope = globalThis, logger) => {\n    try {\n        return !!scope.Worker;\n    }\n    catch (e) {\n        logger === null || logger === void 0 ? void 0 : logger.info('Does not support Worker', e);\n        return false;\n    }\n};\nexports.supportsWorker = supportsWorker;\nconst supportsAudioWorklet = (scope = globalThis, logger) => {\n    try {\n        return !!scope.AudioWorklet && !!scope.AudioWorkletNode;\n    }\n    catch (e) {\n        logger === null || logger === void 0 ? void 0 : logger.info('Does not support Audio Worklet', e);\n        return false;\n    }\n};\nexports.supportsAudioWorklet = supportsAudioWorklet;\nconst supportsWASM = (scope = globalThis, logger) => {\n    try {\n        return !!scope.WebAssembly && (!!scope.WebAssembly.compile || !!scope.WebAssembly.compileStreaming);\n    }\n    catch (e) {\n        logger === null || logger === void 0 ? void 0 : logger.info('Does not support WASM', e);\n        return false;\n    }\n};\nexports.supportsWASM = supportsWASM;\nconst supportsSharedArrayBuffer = (scope = globalThis, window = globalThis, logger) => {\n    try {\n        return !!scope.SharedArrayBuffer && (!!window.chrome || !!scope.crossOriginIsolated);\n    }\n    catch (e) {\n        logger === null || logger === void 0 ? void 0 : logger.info('Does not support SharedArrayBuffer.');\n        return false;\n    }\n};\nexports.supportsSharedArrayBuffer = supportsSharedArrayBuffer;\nconst supportsWASMStreaming = (scope = globalThis, logger) => {\n    var _a;\n    try {\n        return !!((_a = scope.WebAssembly) === null || _a === void 0 ? void 0 : _a.compileStreaming);\n    }\n    catch (e) {\n        logger === null || logger === void 0 ? void 0 : logger.info('Does not support WASM streaming compilation', e);\n        return false;\n    }\n};\nexports.supportsWASMStreaming = supportsWASMStreaming;\nconst SUPPORTED_CHROME_VERSION = 90;\nconst chromeVersion = (global = globalThis) => {\n    try {\n        if (!global.chrome) {\n            return undefined;\n        }\n    }\n    catch (e) {\n    }\n    const versionCheck = global.navigator.userAgent.match(/Chrom(?:e|ium)\\/([0-9]+)/);\n    if (!versionCheck) {\n        return undefined;\n    }\n    return parseInt(versionCheck[1], 10);\n};\nconst isOldChrome = (global = globalThis, logger) => {\n    const version = chromeVersion(global);\n    if (!version) {\n        return false;\n    }\n    if (version < SUPPORTED_CHROME_VERSION) {\n        logger === null || logger === void 0 ? void 0 : logger.debug(`Chrome ${version} has incomplete SIMD support.`);\n        return true;\n    }\n    return false;\n};\nexports.isOldChrome = isOldChrome;\n","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A builder class to instantiate a model spec.\n */\nclass ModelSpecBuilder {\n    constructor() {\n        this.path = null;\n        this.input = null;\n        this.output = null;\n    }\n    static builder() {\n        return new ModelSpecBuilder();\n    }\n    /**\n     * Set up the builder to use the default model implementation.\n     *\n     * Members of this interface can change without a major version bump to accommodate new browser\n     * bugs and capabilities. If you extend this type, you might need to rework your code for new minor\n     * versions of this library.\n     * @returns a reference to the current builder.\n     */\n    withDefaultModel() {\n        return this.withSelfieSegmentationDefaults();\n    }\n    /**\n     * Set up the builder to use the defaults for selfie segmentation model.\n     * @returns the builder to allow for fluent API (e.g., ModelSpecBuilder.withSelfieSegmentationDefaults().build()).\n     */\n    withSelfieSegmentationDefaults() {\n        const SELFIE_MODEL_INPUT_SHAPE = {\n            height: 144,\n            width: 256,\n            range: [0, 1],\n            channels: 3,\n        };\n        const SELFIE_MODEL_OUTPUT_SHAPE = {\n            height: 144,\n            width: 256,\n            range: [0, 1],\n            channels: 1,\n        };\n        const DEFAULT_SELFIE_MODEL_PATH = 'https://static.sdkassets.chime.aws/bgblur/models/selfie_segmentation_landscape.tflite';\n        this.path = DEFAULT_SELFIE_MODEL_PATH;\n        this.input = SELFIE_MODEL_INPUT_SHAPE;\n        this.output = SELFIE_MODEL_OUTPUT_SHAPE;\n        return this;\n    }\n    /**\n     * A method to override the path to the segmentation model.\n     * @param path A function that returns the path to the segmentation model.\n     * @returns the builder to allow for fluent API (e.g., ModelSpecBuilder.builder().withPath(\"some path\").build()).\n     */\n    withPath(path) {\n        this.path = path;\n        return this;\n    }\n    /**\n     * A method to override the input shape to the segmentation model.\n     * @param input An object that defines input shape of the segmentation model.\n     * @returns the builder to allow for fluent API (e.g., ModelSpecBuilder.builder().withInput({}).build()).\n     */\n    withInput(input) {\n        this.input = input;\n        return this;\n    }\n    /**\n     * A method to override the output shape to the segmentation model.\n     * @param input An object that defines input shape of the segmentation model.\n     * @returns the builder to allow for fluent API (e.g., ModelSpecBuilder.builder().withOutput({}).build()).\n     */\n    withOutput(output) {\n        this.output = output;\n        return this;\n    }\n    /**\n     * Validate that inputs to the model spec are valid.\n     */\n    validate() {\n        if (!this.path) {\n            throw new Error('model spec path is not set');\n        }\n        if (!this.input) {\n            throw new Error('model spec input is not set');\n        }\n        if (!this.output) {\n            throw new Error('model spec output is not set');\n        }\n    }\n    /**\n     * A method that returns an instantiated object that implements the ModelSpec interface with values set for\n     * the use of the selfie segmentation model.\n     * @returns an object that implements the ModelSpec interface.\n     */\n    build() {\n        this.validate();\n        return {\n            path: this.path,\n            input: this.input,\n            output: this.output,\n        };\n    }\n}\nexports.default = ModelSpecBuilder;\n//# sourceMappingURL=ModelSpecBuilder.js.map","var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar BrowserInfo = /** @class */ (function () {\n    function BrowserInfo(name, version, os) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.type = 'browser';\n    }\n    return BrowserInfo;\n}());\nexport { BrowserInfo };\nvar NodeInfo = /** @class */ (function () {\n    function NodeInfo(version) {\n        this.version = version;\n        this.type = 'node';\n        this.name = 'node';\n        this.os = process.platform;\n    }\n    return NodeInfo;\n}());\nexport { NodeInfo };\nvar SearchBotDeviceInfo = /** @class */ (function () {\n    function SearchBotDeviceInfo(name, version, os, bot) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.bot = bot;\n        this.type = 'bot-device';\n    }\n    return SearchBotDeviceInfo;\n}());\nexport { SearchBotDeviceInfo };\nvar BotInfo = /** @class */ (function () {\n    function BotInfo() {\n        this.type = 'bot';\n        this.bot = true; // NOTE: deprecated test name instead\n        this.name = 'bot';\n        this.version = null;\n        this.os = null;\n    }\n    return BotInfo;\n}());\nexport { BotInfo };\nvar ReactNativeInfo = /** @class */ (function () {\n    function ReactNativeInfo() {\n        this.type = 'react-native';\n        this.name = 'react-native';\n        this.version = null;\n        this.os = null;\n    }\n    return ReactNativeInfo;\n}());\nexport { ReactNativeInfo };\n// tslint:disable-next-line:max-line-length\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\n    ['edge', /Edge\\/([0-9\\._]+)/],\n    ['edge-ios', /EdgiOS\\/([0-9\\._]+)/],\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\n    ['edge-chromium', /EdgA?\\/([0-9\\.]+)/],\n    [\n        'chromium-webview',\n        /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/,\n    ],\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\n    ['pie', /^Microsoft Pocket Internet Explorer\\/(\\d+\\.\\d+)$/],\n    ['pie', /^Mozilla\\/\\d\\.\\d+\\s\\(compatible;\\s(?:MSP?IE|MSInternet Explorer) (\\d+\\.\\d+);.*Windows CE.*\\)$/],\n    ['netfront', /^Mozilla\\/\\d\\.\\d+.*NetFront\\/(\\d.\\d)/],\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n    ['ie', /MSIE\\s(7\\.0)/],\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\n    ['android', /Android\\s([0-9\\.]+)/],\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\n    ['facebook', /FB[AS]V\\/([0-9\\.]+)/],\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\n    ['curl', /^curl\\/([0-9\\.]+)$/],\n    ['searchbot', SEARCHBOX_UA_REGEX],\n];\nvar operatingSystemRules = [\n    ['iOS', /iP(hone|od|ad)/],\n    ['Android OS', /Android/],\n    ['BlackBerry OS', /BlackBerry|BB10/],\n    ['Windows Mobile', /IEMobile/],\n    ['Amazon OS', /Kindle/],\n    ['Windows 3.11', /Win16/],\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\n    ['Windows 98', /(Windows 98)|(Win98)/],\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\n    ['Windows Server 2003', /(Windows NT 5.2)/],\n    ['Windows Vista', /(Windows NT 6.0)/],\n    ['Windows 7', /(Windows NT 6.1)/],\n    ['Windows 8', /(Windows NT 6.2)/],\n    ['Windows 8.1', /(Windows NT 6.3)/],\n    ['Windows 10', /(Windows NT 10.0)/],\n    ['Windows ME', /Windows ME/],\n    ['Windows CE', /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],\n    ['Open BSD', /OpenBSD/],\n    ['Sun OS', /SunOS/],\n    ['Chrome OS', /CrOS/],\n    ['Linux', /(Linux)|(X11)/],\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\n    ['QNX', /QNX/],\n    ['BeOS', /BeOS/],\n    ['OS/2', /OS\\/2/],\n];\nexport function detect(userAgent) {\n    if (!!userAgent) {\n        return parseUserAgent(userAgent);\n    }\n    if (typeof document === 'undefined' &&\n        typeof navigator !== 'undefined' &&\n        navigator.product === 'ReactNative') {\n        return new ReactNativeInfo();\n    }\n    if (typeof navigator !== 'undefined') {\n        return parseUserAgent(navigator.userAgent);\n    }\n    return getNodeVersion();\n}\nfunction matchUserAgent(ua) {\n    // opted for using reduce here rather than Array#first with a regex.test call\n    // this is primarily because using the reduce we only perform the regex\n    // execution once rather than once for the test and for the exec again below\n    // probably something that needs to be benchmarked though\n    return (ua !== '' &&\n        userAgentRules.reduce(function (matched, _a) {\n            var browser = _a[0], regex = _a[1];\n            if (matched) {\n                return matched;\n            }\n            var uaMatch = regex.exec(ua);\n            return !!uaMatch && [browser, uaMatch];\n        }, false));\n}\nexport function browserName(ua) {\n    var data = matchUserAgent(ua);\n    return data ? data[0] : null;\n}\nexport function parseUserAgent(ua) {\n    var matchedRule = matchUserAgent(ua);\n    if (!matchedRule) {\n        return null;\n    }\n    var name = matchedRule[0], match = matchedRule[1];\n    if (name === 'searchbot') {\n        return new BotInfo();\n    }\n    // Do not use RegExp for split operation as some browser do not support it (See: http://blog.stevenlevithan.com/archives/cross-browser-split)\n    var versionParts = match[1] && match[1].split('.').join('_').split('_').slice(0, 3);\n    if (versionParts) {\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\n            versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);\n        }\n    }\n    else {\n        versionParts = [];\n    }\n    var version = versionParts.join('.');\n    var os = detectOS(ua);\n    var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\n    if (searchBotMatch && searchBotMatch[1]) {\n        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\n    }\n    return new BrowserInfo(name, version, os);\n}\nexport function detectOS(ua) {\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\n        var match = regex.exec(ua);\n        if (match) {\n            return os;\n        }\n    }\n    return null;\n}\nexport function getNodeVersion() {\n    var isNode = typeof process !== 'undefined' && process.version;\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\nfunction createVersionParts(count) {\n    var output = [];\n    for (var ii = 0; ii < count; ii++) {\n        output.push('0');\n    }\n    return output;\n}\n","/////////////////////////////////////////////////////////////////////////////////\n/* UAParser.js v1.0.33\n   Copyright © 2012-2021 Faisal Salman <f@faisalman.com>\n   MIT License *//*\n   Detect Browser, Engine, OS, CPU, and Device type/model from User-Agent data.\n   Supports browser & node.js environment. \n   Demo   : https://faisalman.github.io/ua-parser-js\n   Source : https://github.com/faisalman/ua-parser-js */\n/////////////////////////////////////////////////////////////////////////////////\n\n(function (window, undefined) {\n\n    'use strict';\n\n    //////////////\n    // Constants\n    /////////////\n\n\n    var LIBVERSION  = '1.0.33',\n        EMPTY       = '',\n        UNKNOWN     = '?',\n        FUNC_TYPE   = 'function',\n        UNDEF_TYPE  = 'undefined',\n        OBJ_TYPE    = 'object',\n        STR_TYPE    = 'string',\n        MAJOR       = 'major',\n        MODEL       = 'model',\n        NAME        = 'name',\n        TYPE        = 'type',\n        VENDOR      = 'vendor',\n        VERSION     = 'version',\n        ARCHITECTURE= 'architecture',\n        CONSOLE     = 'console',\n        MOBILE      = 'mobile',\n        TABLET      = 'tablet',\n        SMARTTV     = 'smarttv',\n        WEARABLE    = 'wearable',\n        EMBEDDED    = 'embedded',\n        UA_MAX_LENGTH = 350;\n\n    var AMAZON  = 'Amazon',\n        APPLE   = 'Apple',\n        ASUS    = 'ASUS',\n        BLACKBERRY = 'BlackBerry',\n        BROWSER = 'Browser',\n        CHROME  = 'Chrome',\n        EDGE    = 'Edge',\n        FIREFOX = 'Firefox',\n        GOOGLE  = 'Google',\n        HUAWEI  = 'Huawei',\n        LG      = 'LG',\n        MICROSOFT = 'Microsoft',\n        MOTOROLA  = 'Motorola',\n        OPERA   = 'Opera',\n        SAMSUNG = 'Samsung',\n        SHARP   = 'Sharp',\n        SONY    = 'Sony',\n        XIAOMI  = 'Xiaomi',\n        ZEBRA   = 'Zebra',\n        FACEBOOK   = 'Facebook';\n\n    ///////////\n    // Helper\n    //////////\n\n    var extend = function (regexes, extensions) {\n            var mergedRegexes = {};\n            for (var i in regexes) {\n                if (extensions[i] && extensions[i].length % 2 === 0) {\n                    mergedRegexes[i] = extensions[i].concat(regexes[i]);\n                } else {\n                    mergedRegexes[i] = regexes[i];\n                }\n            }\n            return mergedRegexes;\n        },\n        enumerize = function (arr) {\n            var enums = {};\n            for (var i=0; i<arr.length; i++) {\n                enums[arr[i].toUpperCase()] = arr[i];\n            }\n            return enums;\n        },\n        has = function (str1, str2) {\n            return typeof str1 === STR_TYPE ? lowerize(str2).indexOf(lowerize(str1)) !== -1 : false;\n        },\n        lowerize = function (str) {\n            return str.toLowerCase();\n        },\n        majorize = function (version) {\n            return typeof(version) === STR_TYPE ? version.replace(/[^\\d\\.]/g, EMPTY).split('.')[0] : undefined;\n        },\n        trim = function (str, len) {\n            if (typeof(str) === STR_TYPE) {\n                str = str.replace(/^\\s\\s*/, EMPTY);\n                return typeof(len) === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);\n            }\n    };\n\n    ///////////////\n    // Map helper\n    //////////////\n\n    var rgxMapper = function (ua, arrays) {\n\n            var i = 0, j, k, p, q, matches, match;\n\n            // loop through all regexes maps\n            while (i < arrays.length && !matches) {\n\n                var regex = arrays[i],       // even sequence (0,2,4,..)\n                    props = arrays[i + 1];   // odd sequence (1,3,5,..)\n                j = k = 0;\n\n                // try matching uastring with regexes\n                while (j < regex.length && !matches) {\n\n                    matches = regex[j++].exec(ua);\n\n                    if (!!matches) {\n                        for (p = 0; p < props.length; p++) {\n                            match = matches[++k];\n                            q = props[p];\n                            // check if given property is actually array\n                            if (typeof q === OBJ_TYPE && q.length > 0) {\n                                if (q.length === 2) {\n                                    if (typeof q[1] == FUNC_TYPE) {\n                                        // assign modified match\n                                        this[q[0]] = q[1].call(this, match);\n                                    } else {\n                                        // assign given value, ignore regex match\n                                        this[q[0]] = q[1];\n                                    }\n                                } else if (q.length === 3) {\n                                    // check whether function or regex\n                                    if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {\n                                        // call function (usually string mapper)\n                                        this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                                    } else {\n                                        // sanitize match using given regex\n                                        this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                                    }\n                                } else if (q.length === 4) {\n                                        this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n                                }\n                            } else {\n                                this[q] = match ? match : undefined;\n                            }\n                        }\n                    }\n                }\n                i += 2;\n            }\n        },\n\n        strMapper = function (str, map) {\n\n            for (var i in map) {\n                // check if current value is array\n                if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {\n                    for (var j = 0; j < map[i].length; j++) {\n                        if (has(map[i][j], str)) {\n                            return (i === UNKNOWN) ? undefined : i;\n                        }\n                    }\n                } else if (has(map[i], str)) {\n                    return (i === UNKNOWN) ? undefined : i;\n                }\n            }\n            return str;\n    };\n\n    ///////////////\n    // String map\n    //////////////\n\n    // Safari < 3.0\n    var oldSafariMap = {\n            '1.0'   : '/8',\n            '1.2'   : '/1',\n            '1.3'   : '/3',\n            '2.0'   : '/412',\n            '2.0.2' : '/416',\n            '2.0.3' : '/417',\n            '2.0.4' : '/419',\n            '?'     : '/'\n        },\n        windowsVersionMap = {\n            'ME'        : '4.90',\n            'NT 3.11'   : 'NT3.51',\n            'NT 4.0'    : 'NT4.0',\n            '2000'      : 'NT 5.0',\n            'XP'        : ['NT 5.1', 'NT 5.2'],\n            'Vista'     : 'NT 6.0',\n            '7'         : 'NT 6.1',\n            '8'         : 'NT 6.2',\n            '8.1'       : 'NT 6.3',\n            '10'        : ['NT 6.4', 'NT 10.0'],\n            'RT'        : 'ARM'\n    };\n\n    //////////////\n    // Regex map\n    /////////////\n\n    var regexes = {\n\n        browser : [[\n\n            /\\b(?:crmo|crios)\\/([\\w\\.]+)/i                                      // Chrome for Android/iOS\n            ], [VERSION, [NAME, 'Chrome']], [\n            /edg(?:e|ios|a)?\\/([\\w\\.]+)/i                                       // Microsoft Edge\n            ], [VERSION, [NAME, 'Edge']], [\n\n            // Presto based\n            /(opera mini)\\/([-\\w\\.]+)/i,                                        // Opera Mini\n            /(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,                 // Opera Mobi/Tablet\n            /(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i                           // Opera\n            ], [NAME, VERSION], [\n            /opios[\\/ ]+([\\w\\.]+)/i                                             // Opera mini on iphone >= 8.0\n            ], [VERSION, [NAME, OPERA+' Mini']], [\n            /\\bopr\\/([\\w\\.]+)/i                                                 // Opera Webkit\n            ], [VERSION, [NAME, OPERA]], [\n\n            // Mixed\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(lunascape|maxthon|netfront|jasmine|blazer)[\\/ ]?([\\w\\.]*)/i,      // Lunascape/Maxthon/Netfront/Jasmine/Blazer\n            // Trident based\n            /(avant |iemobile|slim)(?:browser)?[\\/ ]?([\\w\\.]*)/i,               // Avant/IEMobile/SlimBrowser\n            /(ba?idubrowser)[\\/ ]?([\\w\\.]+)/i,                                  // Baidu Browser\n            /(?:ms|\\()(ie) ([\\w\\.]+)/i,                                         // Internet Explorer\n\n            // Webkit/KHTML based                                               // Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon\n            /(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale|qqbrowserlite|qq|duckduckgo)\\/([-\\w\\.]+)/i,\n                                                                                // Rekonq/Puffin/Brave/Whale/QQBrowserLite/QQ, aka ShouQ\n            /(weibo)__([\\d\\.]+)/i                                               // Weibo\n            ], [NAME, VERSION], [\n            /(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i                 // UCBrowser\n            ], [VERSION, [NAME, 'UC'+BROWSER]], [\n            /microm.+\\bqbcore\\/([\\w\\.]+)/i,                                     // WeChat Desktop for Windows Built-in Browser\n            /\\bqbcore\\/([\\w\\.]+).+microm/i\n            ], [VERSION, [NAME, 'WeChat(Win) Desktop']], [\n            /micromessenger\\/([\\w\\.]+)/i                                        // WeChat\n            ], [VERSION, [NAME, 'WeChat']], [\n            /konqueror\\/([\\w\\.]+)/i                                             // Konqueror\n            ], [VERSION, [NAME, 'Konqueror']], [\n            /trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i                       // IE11\n            ], [VERSION, [NAME, 'IE']], [\n            /yabrowser\\/([\\w\\.]+)/i                                             // Yandex\n            ], [VERSION, [NAME, 'Yandex']], [\n            /(avast|avg)\\/([\\w\\.]+)/i                                           // Avast/AVG Secure Browser\n            ], [[NAME, /(.+)/, '$1 Secure '+BROWSER], VERSION], [\n            /\\bfocus\\/([\\w\\.]+)/i                                               // Firefox Focus\n            ], [VERSION, [NAME, FIREFOX+' Focus']], [\n            /\\bopt\\/([\\w\\.]+)/i                                                 // Opera Touch\n            ], [VERSION, [NAME, OPERA+' Touch']], [\n            /coc_coc\\w+\\/([\\w\\.]+)/i                                            // Coc Coc Browser\n            ], [VERSION, [NAME, 'Coc Coc']], [\n            /dolfin\\/([\\w\\.]+)/i                                                // Dolphin\n            ], [VERSION, [NAME, 'Dolphin']], [\n            /coast\\/([\\w\\.]+)/i                                                 // Opera Coast\n            ], [VERSION, [NAME, OPERA+' Coast']], [\n            /miuibrowser\\/([\\w\\.]+)/i                                           // MIUI Browser\n            ], [VERSION, [NAME, 'MIUI '+BROWSER]], [\n            /fxios\\/([-\\w\\.]+)/i                                                // Firefox for iOS\n            ], [VERSION, [NAME, FIREFOX]], [\n            /\\bqihu|(qi?ho?o?|360)browser/i                                     // 360\n            ], [[NAME, '360 '+BROWSER]], [\n            /(oculus|samsung|sailfish|huawei)browser\\/([\\w\\.]+)/i\n            ], [[NAME, /(.+)/, '$1 '+BROWSER], VERSION], [                      // Oculus/Samsung/Sailfish/Huawei Browser\n            /(comodo_dragon)\\/([\\w\\.]+)/i                                       // Comodo Dragon\n            ], [[NAME, /_/g, ' '], VERSION], [\n            /(electron)\\/([\\w\\.]+) safari/i,                                    // Electron-based App\n            /(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,                   // Tesla\n            /m?(qqbrowser|baiduboxapp|2345Explorer)[\\/ ]?([\\w\\.]+)/i            // QQBrowser/Baidu App/2345 Browser\n            ], [NAME, VERSION], [\n            /(metasr)[\\/ ]?([\\w\\.]+)/i,                                         // SouGouBrowser\n            /(lbbrowser)/i,                                                     // LieBao Browser\n            /\\[(linkedin)app\\]/i                                                // LinkedIn App for iOS & Android\n            ], [NAME], [\n\n            // WebView\n            /((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i       // Facebook App for iOS & Android\n            ], [[NAME, FACEBOOK], VERSION], [\n            /safari (line)\\/([\\w\\.]+)/i,                                        // Line App for iOS\n            /\\b(line)\\/([\\w\\.]+)\\/iab/i,                                        // Line App for Android\n            /(chromium|instagram)[\\/ ]([-\\w\\.]+)/i                              // Chromium/Instagram\n            ], [NAME, VERSION], [\n            /\\bgsa\\/([\\w\\.]+) .*safari\\//i                                      // Google Search Appliance on iOS\n            ], [VERSION, [NAME, 'GSA']], [\n\n            /headlesschrome(?:\\/([\\w\\.]+)| )/i                                  // Chrome Headless\n            ], [VERSION, [NAME, CHROME+' Headless']], [\n\n            / wv\\).+(chrome)\\/([\\w\\.]+)/i                                       // Chrome WebView\n            ], [[NAME, CHROME+' WebView'], VERSION], [\n\n            /droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i           // Android Browser\n            ], [VERSION, [NAME, 'Android '+BROWSER]], [\n\n            /(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i       // Chrome/OmniWeb/Arora/Tizen/Nokia\n            ], [NAME, VERSION], [\n\n            /version\\/([\\w\\.\\,]+) .*mobile\\/\\w+ (safari)/i                      // Mobile Safari\n            ], [VERSION, [NAME, 'Mobile Safari']], [\n            /version\\/([\\w(\\.|\\,)]+) .*(mobile ?safari|safari)/i                // Safari & Safari Mobile\n            ], [VERSION, NAME], [\n            /webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i                      // Safari < 3.0\n            ], [NAME, [VERSION, strMapper, oldSafariMap]], [\n\n            /(webkit|khtml)\\/([\\w\\.]+)/i\n            ], [NAME, VERSION], [\n\n            // Gecko based\n            /(navigator|netscape\\d?)\\/([-\\w\\.]+)/i                              // Netscape\n            ], [[NAME, 'Netscape'], VERSION], [\n            /mobile vr; rv:([\\w\\.]+)\\).+firefox/i                               // Firefox Reality\n            ], [VERSION, [NAME, FIREFOX+' Reality']], [\n            /ekiohf.+(flow)\\/([\\w\\.]+)/i,                                       // Flow\n            /(swiftfox)/i,                                                      // Swiftfox\n            /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\\/ ]?([\\w\\.\\+]+)/i,\n                                                                                // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror/Klar\n            /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,\n                                                                                // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\n            /(firefox)\\/([\\w\\.]+)/i,                                            // Other Firefox-based\n            /(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,                         // Mozilla\n\n            // Other\n            /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,\n                                                                                // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Sleipnir/Obigo/Mosaic/Go/ICE/UP.Browser\n            /(links) \\(([\\w\\.]+)/i                                              // Links\n            ], [NAME, VERSION], [\n            \n            /(cobalt)\\/([\\w\\.]+)/i                                              // Cobalt\n            ], [NAME, [VERSION, /master.|lts./, \"\"]]\n        ],\n\n        cpu : [[\n\n            /(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i                     // AMD64 (x64)\n            ], [[ARCHITECTURE, 'amd64']], [\n\n            /(ia32(?=;))/i                                                      // IA32 (quicktime)\n            ], [[ARCHITECTURE, lowerize]], [\n\n            /((?:i[346]|x)86)[;\\)]/i                                            // IA32 (x86)\n            ], [[ARCHITECTURE, 'ia32']], [\n\n            /\\b(aarch64|arm(v?8e?l?|_?64))\\b/i                                 // ARM64\n            ], [[ARCHITECTURE, 'arm64']], [\n\n            /\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i                                   // ARMHF\n            ], [[ARCHITECTURE, 'armhf']], [\n\n            // PocketPC mistakenly identified as PowerPC\n            /windows (ce|mobile); ppc;/i\n            ], [[ARCHITECTURE, 'arm']], [\n\n            /((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i                            // PowerPC\n            ], [[ARCHITECTURE, /ower/, EMPTY, lowerize]], [\n\n            /(sun4\\w)[;\\)]/i                                                    // SPARC\n            ], [[ARCHITECTURE, 'sparc']], [\n\n            /((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i\n                                                                                // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC\n            ], [[ARCHITECTURE, lowerize]]\n        ],\n\n        device : [[\n\n            //////////////////////////\n            // MOBILES & TABLETS\n            // Ordered by popularity\n            /////////////////////////\n\n            // Samsung\n            /\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, TABLET]], [\n            /\\b((?:s[cgp]h|gt|sm)-\\w+|galaxy nexus)/i,\n            /samsung[- ]([-\\w]+)/i,\n            /sec-(sgh\\w+)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, MOBILE]], [\n\n            // Apple\n            /\\((ip(?:hone|od)[\\w ]*);/i                                         // iPod/iPhone\n            ], [MODEL, [VENDOR, APPLE], [TYPE, MOBILE]], [\n            /\\((ipad);[-\\w\\),; ]+apple/i,                                       // iPad\n            /applecoremedia\\/[\\w\\.]+ \\((ipad)/i,\n            /\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i\n            ], [MODEL, [VENDOR, APPLE], [TYPE, TABLET]], [\n            /(macintosh);/i\n            ], [MODEL, [VENDOR, APPLE]], [\n\n            // Huawei\n            /\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, TABLET]], [\n            /(?:huawei|honor)([-\\w ]+)[;\\)]/i,\n            /\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, MOBILE]], [\n\n            // Xiaomi\n            /\\b(poco[\\w ]+)(?: bui|\\))/i,                                       // Xiaomi POCO\n            /\\b; (\\w+) build\\/hm\\1/i,                                           // Xiaomi Hongmi 'numeric' models\n            /\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,                             // Xiaomi Hongmi\n            /\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,                   // Xiaomi Redmi\n            /\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\\))/i // Xiaomi Mi\n            ], [[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, MOBILE]], [\n            /\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i                        // Mi Pad tablets\n            ],[[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, TABLET]], [\n\n            // OPPO\n            /; (\\w+) bui.+ oppo/i,\n            /\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i\n            ], [MODEL, [VENDOR, 'OPPO'], [TYPE, MOBILE]], [\n\n            // Vivo\n            /vivo (\\w+)(?: bui|\\))/i,\n            /\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i\n            ], [MODEL, [VENDOR, 'Vivo'], [TYPE, MOBILE]], [\n\n            // Realme\n            /\\b(rmx[12]\\d{3})(?: bui|;|\\))/i\n            ], [MODEL, [VENDOR, 'Realme'], [TYPE, MOBILE]], [\n\n            // Motorola\n            /\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,\n            /\\bmot(?:orola)?[- ](\\w*)/i,\n            /((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, MOBILE]], [\n            /\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, TABLET]], [\n\n            // LG\n            /((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i\n            ], [MODEL, [VENDOR, LG], [TYPE, TABLET]], [\n            /(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,\n            /\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,\n            /\\blg-?([\\d\\w]+) bui/i\n            ], [MODEL, [VENDOR, LG], [TYPE, MOBILE]], [\n\n            // Lenovo\n            /(ideatab[-\\w ]+)/i,\n            /lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i\n            ], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [\n\n            // Nokia\n            /(?:maemo|nokia).*(n900|lumia \\d+)/i,\n            /nokia[-_ ]?([-\\w\\.]*)/i\n            ], [[MODEL, /_/g, ' '], [VENDOR, 'Nokia'], [TYPE, MOBILE]], [\n\n            // Google\n            /(pixel c)\\b/i                                                      // Google Pixel C\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, TABLET]], [\n            /droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i                         // Google Pixel\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, MOBILE]], [\n\n            // Sony\n            /droid.+ (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i\n            ], [MODEL, [VENDOR, SONY], [TYPE, MOBILE]], [\n            /sony tablet [ps]/i,\n            /\\b(?:sony)?sgp\\w+(?: bui|\\))/i\n            ], [[MODEL, 'Xperia Tablet'], [VENDOR, SONY], [TYPE, TABLET]], [\n\n            // OnePlus\n            / (kb2005|in20[12]5|be20[12][59])\\b/i,\n            /(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i\n            ], [MODEL, [VENDOR, 'OnePlus'], [TYPE, MOBILE]], [\n\n            // Amazon\n            /(alexa)webm/i,\n            /(kf[a-z]{2}wi)( bui|\\))/i,                                         // Kindle Fire without Silk\n            /(kf[a-z]+)( bui|\\)).+silk\\//i                                      // Kindle Fire HD\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, TABLET]], [\n            /((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i                     // Fire Phone\n            ], [[MODEL, /(.+)/g, 'Fire Phone $1'], [VENDOR, AMAZON], [TYPE, MOBILE]], [\n\n            // BlackBerry\n            /(playbook);[-\\w\\),; ]+(rim)/i                                      // BlackBerry PlayBook\n            ], [MODEL, VENDOR, [TYPE, TABLET]], [\n            /\\b((?:bb[a-f]|st[hv])100-\\d)/i,\n            /\\(bb10; (\\w+)/i                                                    // BlackBerry 10\n            ], [MODEL, [VENDOR, BLACKBERRY], [TYPE, MOBILE]], [\n\n            // Asus\n            /(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, TABLET]], [\n            / (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, MOBILE]], [\n\n            // HTC\n            /(nexus 9)/i                                                        // HTC Nexus 9\n            ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [\n            /(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,                         // HTC\n\n            // ZTE\n            /(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,\n            /(alcatel|geeksphone|nexian|panasonic|sony(?!-bra))[-_ ]?([-\\w]*)/i         // Alcatel/GeeksPhone/Nexian/Panasonic/Sony\n            ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [\n\n            // Acer\n            /droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i\n            ], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [\n\n            // Meizu\n            /droid.+; (m[1-5] note) bui/i,\n            /\\bmz-([-\\w]{2,})/i\n            ], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [\n\n            // Sharp\n            /\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i\n            ], [MODEL, [VENDOR, SHARP], [TYPE, MOBILE]], [\n\n            // MIXED\n            /(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[-_ ]?([-\\w]*)/i,\n                                                                                // BlackBerry/BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron\n            /(hp) ([\\w ]+\\w)/i,                                                 // HP iPAQ\n            /(asus)-?(\\w+)/i,                                                   // Asus\n            /(microsoft); (lumia[\\w ]+)/i,                                      // Microsoft Lumia\n            /(lenovo)[-_ ]?([-\\w]+)/i,                                          // Lenovo\n            /(jolla)/i,                                                         // Jolla\n            /(oppo) ?([\\w ]+) bui/i                                             // OPPO\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /(archos) (gamepad2?)/i,                                            // Archos\n            /(hp).+(touchpad(?!.+tablet)|tablet)/i,                             // HP TouchPad\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(nook)[\\w ]+build\\/(\\w+)/i,                                        // Nook\n            /(dell) (strea[kpr\\d ]*[\\dko])/i,                                   // Dell Streak\n            /(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,                                  // Le Pan Tablets\n            /(trinity)[- ]*(t\\d{3}) bui/i,                                      // Trinity Tablets\n            /(gigaset)[- ]+(q\\w{1,9}) bui/i,                                    // Gigaset Tablets\n            /(vodafone) ([\\w ]+)(?:\\)| bui)/i                                   // Vodafone\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /(surface duo)/i                                                    // Surface Duo\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, TABLET]], [\n            /droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i                                 // Fairphone\n            ], [MODEL, [VENDOR, 'Fairphone'], [TYPE, MOBILE]], [\n            /(u304aa)/i                                                         // AT&T\n            ], [MODEL, [VENDOR, 'AT&T'], [TYPE, MOBILE]], [\n            /\\bsie-(\\w*)/i                                                      // Siemens\n            ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [\n            /\\b(rct\\w+) b/i                                                     // RCA Tablets\n            ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [\n            /\\b(venue[\\d ]{2,7}) b/i                                            // Dell Venue Tablets\n            ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [\n            /\\b(q(?:mv|ta)\\w+) b/i                                              // Verizon Tablet\n            ], [MODEL, [VENDOR, 'Verizon'], [TYPE, TABLET]], [\n            /\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i                       // Barnes & Noble Tablet\n            ], [MODEL, [VENDOR, 'Barnes & Noble'], [TYPE, TABLET]], [\n            /\\b(tm\\d{3}\\w+) b/i\n            ], [MODEL, [VENDOR, 'NuVision'], [TYPE, TABLET]], [\n            /\\b(k88) b/i                                                        // ZTE K Series Tablet\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, TABLET]], [\n            /\\b(nx\\d{3}j) b/i                                                   // ZTE Nubia\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, MOBILE]], [\n            /\\b(gen\\d{3}) b.+49h/i                                              // Swiss GEN Mobile\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, MOBILE]], [\n            /\\b(zur\\d{3}) b/i                                                   // Swiss ZUR Tablet\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, TABLET]], [\n            /\\b((zeki)?tb.*\\b) b/i                                              // Zeki Tablets\n            ], [MODEL, [VENDOR, 'Zeki'], [TYPE, TABLET]], [\n            /\\b([yr]\\d{2}) b/i,\n            /\\b(dragon[- ]+touch |dt)(\\w{5}) b/i                                // Dragon Touch Tablet\n            ], [[VENDOR, 'Dragon Touch'], MODEL, [TYPE, TABLET]], [\n            /\\b(ns-?\\w{0,9}) b/i                                                // Insignia Tablets\n            ], [MODEL, [VENDOR, 'Insignia'], [TYPE, TABLET]], [\n            /\\b((nxa|next)-?\\w{0,9}) b/i                                        // NextBook Tablets\n            ], [MODEL, [VENDOR, 'NextBook'], [TYPE, TABLET]], [\n            /\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i                  // Voice Xtreme Phones\n            ], [[VENDOR, 'Voice'], MODEL, [TYPE, MOBILE]], [\n            /\\b(lvtel\\-)?(v1[12]) b/i                                           // LvTel Phones\n            ], [[VENDOR, 'LvTel'], MODEL, [TYPE, MOBILE]], [\n            /\\b(ph-1) /i                                                        // Essential PH-1\n            ], [MODEL, [VENDOR, 'Essential'], [TYPE, MOBILE]], [\n            /\\b(v(100md|700na|7011|917g).*\\b) b/i                               // Envizen Tablets\n            ], [MODEL, [VENDOR, 'Envizen'], [TYPE, TABLET]], [\n            /\\b(trio[-\\w\\. ]+) b/i                                              // MachSpeed Tablets\n            ], [MODEL, [VENDOR, 'MachSpeed'], [TYPE, TABLET]], [\n            /\\btu_(1491) b/i                                                    // Rotor Tablets\n            ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [\n            /(shield[\\w ]+) b/i                                                 // Nvidia Shield Tablets\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, TABLET]], [\n            /(sprint) (\\w+)/i                                                   // Sprint Phones\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n            /(kin\\.[onetw]{3})/i                                                // Microsoft Kin\n            ], [[MODEL, /\\./g, ' '], [VENDOR, MICROSOFT], [TYPE, MOBILE]], [\n            /droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i             // Zebra\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, TABLET]], [\n            /droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, MOBILE]], [\n\n            ///////////////////\n            // CONSOLES\n            ///////////////////\n\n            /(ouya)/i,                                                          // Ouya\n            /(nintendo) ([wids3utch]+)/i                                        // Nintendo\n            ], [VENDOR, MODEL, [TYPE, CONSOLE]], [\n            /droid.+; (shield) bui/i                                            // Nvidia\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [\n            /(playstation [345portablevi]+)/i                                   // Playstation\n            ], [MODEL, [VENDOR, SONY], [TYPE, CONSOLE]], [\n            /\\b(xbox(?: one)?(?!; xbox))[\\); ]/i                                // Microsoft Xbox\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, CONSOLE]], [\n\n            ///////////////////\n            // SMARTTVS\n            ///////////////////\n\n            /smart-tv.+(samsung)/i                                              // Samsung\n            ], [VENDOR, [TYPE, SMARTTV]], [\n            /hbbtv.+maple;(\\d+)/i\n            ], [[MODEL, /^/, 'SmartTV'], [VENDOR, SAMSUNG], [TYPE, SMARTTV]], [\n            /(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i        // LG SmartTV\n            ], [[VENDOR, LG], [TYPE, SMARTTV]], [\n            /(apple) ?tv/i                                                      // Apple TV\n            ], [VENDOR, [MODEL, APPLE+' TV'], [TYPE, SMARTTV]], [\n            /crkey/i                                                            // Google Chromecast\n            ], [[MODEL, CHROME+'cast'], [VENDOR, GOOGLE], [TYPE, SMARTTV]], [\n            /droid.+aft(\\w)( bui|\\))/i                                          // Fire TV\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, SMARTTV]], [\n            /\\(dtv[\\);].+(aquos)/i,\n            /(aquos-tv[\\w ]+)\\)/i                                               // Sharp\n            ], [MODEL, [VENDOR, SHARP], [TYPE, SMARTTV]],[\n            /(bravia[\\w ]+)( bui|\\))/i                                              // Sony\n            ], [MODEL, [VENDOR, SONY], [TYPE, SMARTTV]], [\n            /(mitv-\\w{5}) bui/i                                                 // Xiaomi\n            ], [MODEL, [VENDOR, XIAOMI], [TYPE, SMARTTV]], [\n            /\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,                          // Roku\n            /hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w ]*; *(\\w[^;]*);([^;]*)/i               // HbbTV devices\n            ], [[VENDOR, trim], [MODEL, trim], [TYPE, SMARTTV]], [\n            /\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i                   // SmartTV from Unidentified Vendors\n            ], [[TYPE, SMARTTV]], [\n\n            ///////////////////\n            // WEARABLES\n            ///////////////////\n\n            /((pebble))app/i                                                    // Pebble\n            ], [VENDOR, MODEL, [TYPE, WEARABLE]], [\n            /droid.+; (glass) \\d/i                                              // Google Glass\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, WEARABLE]], [\n            /droid.+; (wt63?0{2,3})\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, WEARABLE]], [\n            /(quest( 2)?)/i                                                     // Oculus Quest\n            ], [MODEL, [VENDOR, FACEBOOK], [TYPE, WEARABLE]], [\n\n            ///////////////////\n            // EMBEDDED\n            ///////////////////\n\n            /(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i                              // Tesla\n            ], [VENDOR, [TYPE, EMBEDDED]], [\n\n            ////////////////////\n            // MIXED (GENERIC)\n            ///////////////////\n\n            /droid .+?; ([^;]+?)(?: bui|\\) applew).+? mobile safari/i           // Android Phones from Unidentified Vendors\n            ], [MODEL, [TYPE, MOBILE]], [\n            /droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i       // Android Tablets from Unidentified Vendors\n            ], [MODEL, [TYPE, TABLET]], [\n            /\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i                      // Unidentifiable Tablet\n            ], [[TYPE, TABLET]], [\n            /(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i    // Unidentifiable Mobile\n            ], [[TYPE, MOBILE]], [\n            /(android[-\\w\\. ]{0,9});.+buil/i                                    // Generic Android Device\n            ], [MODEL, [VENDOR, 'Generic']]\n        ],\n\n        engine : [[\n\n            /windows.+ edge\\/([\\w\\.]+)/i                                       // EdgeHTML\n            ], [VERSION, [NAME, EDGE+'HTML']], [\n\n            /webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i                         // Blink\n            ], [VERSION, [NAME, 'Blink']], [\n\n            /(presto)\\/([\\w\\.]+)/i,                                             // Presto\n            /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i, // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna\n            /ekioh(flow)\\/([\\w\\.]+)/i,                                          // Flow\n            /(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,                           // KHTML/Tasman/Links\n            /(icab)[\\/ ]([23]\\.[\\d\\.]+)/i                                       // iCab\n            ], [NAME, VERSION], [\n\n            /rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i                                     // Gecko\n            ], [VERSION, NAME]\n        ],\n\n        os : [[\n\n            // Windows\n            /microsoft (windows) (vista|xp)/i                                   // Windows (iTunes)\n            ], [NAME, VERSION], [\n            /(windows) nt 6\\.2; (arm)/i,                                        // Windows RT\n            /(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i,            // Windows Phone\n            /(windows)[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i\n            ], [NAME, [VERSION, strMapper, windowsVersionMap]], [\n            /(win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i\n            ], [[NAME, 'Windows'], [VERSION, strMapper, windowsVersionMap]], [\n\n            // iOS/macOS\n            /ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,              // iOS\n            /cfnetwork\\/.+darwin/i\n            ], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [\n            /(mac os x) ?([\\w\\. ]*)/i,\n            /(macintosh|mac_powerpc\\b)(?!.+haiku)/i                             // Mac OS\n            ], [[NAME, 'Mac OS'], [VERSION, /_/g, '.']], [\n\n            // Mobile OSes\n            /droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i                    // Android-x86/HarmonyOS\n            ], [VERSION, NAME], [                                               // Android/WebOS/QNX/Bada/RIM/Maemo/MeeGo/Sailfish OS\n            /(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\\/ ]?([\\w\\.]*)/i,\n            /(blackberry)\\w*\\/([\\w\\.]*)/i,                                      // Blackberry\n            /(tizen|kaios)[\\/ ]([\\w\\.]+)/i,                                     // Tizen/KaiOS\n            /\\((series40);/i                                                    // Series 40\n            ], [NAME, VERSION], [\n            /\\(bb(10);/i                                                        // BlackBerry 10\n            ], [VERSION, [NAME, BLACKBERRY]], [\n            /(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i         // Symbian\n            ], [VERSION, [NAME, 'Symbian']], [\n            /mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i // Firefox OS\n            ], [VERSION, [NAME, FIREFOX+' OS']], [\n            /web0s;.+rt(tv)/i,\n            /\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i                              // WebOS\n            ], [VERSION, [NAME, 'webOS']], [\n\n            // Google Chromecast\n            /crkey\\/([\\d\\.]+)/i                                                 // Google Chromecast\n            ], [VERSION, [NAME, CHROME+'cast']], [\n            /(cros) [\\w]+ ([\\w\\.]+\\w)/i                                         // Chromium OS\n            ], [[NAME, 'Chromium OS'], VERSION],[\n\n            // Console\n            /(nintendo|playstation) ([wids345portablevuch]+)/i,                 // Nintendo/Playstation\n            /(xbox); +xbox ([^\\);]+)/i,                                         // Microsoft Xbox (360, One, X, S, Series X, Series S)\n\n            // Other\n            /\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,                            // Joli/Palm\n            /(mint)[\\/\\(\\) ]?(\\w*)/i,                                           // Mint\n            /(mageia|vectorlinux)[; ]/i,                                        // Mageia/VectorLinux\n            /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,\n                                                                                // Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware/Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus/Raspbian/Plan9/Minix/RISCOS/Contiki/Deepin/Manjaro/elementary/Sabayon/Linspire\n            /(hurd|linux) ?([\\w\\.]*)/i,                                         // Hurd/Linux\n            /(gnu) ?([\\w\\.]*)/i,                                                // GNU\n            /\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i, // FreeBSD/NetBSD/OpenBSD/PC-BSD/GhostBSD/DragonFly\n            /(haiku) (\\w+)/i                                                    // Haiku\n            ], [NAME, VERSION], [\n            /(sunos) ?([\\w\\.\\d]*)/i                                             // Solaris\n            ], [[NAME, 'Solaris'], VERSION], [\n            /((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,                              // Solaris\n            /(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,                                  // AIX\n            /\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux)/i,            // BeOS/OS2/AmigaOS/MorphOS/OpenVMS/Fuchsia/HP-UX\n            /(unix) ?([\\w\\.]*)/i                                                // UNIX\n            ], [NAME, VERSION]\n        ]\n    };\n\n    /////////////////\n    // Constructor\n    ////////////////\n\n    var UAParser = function (ua, extensions) {\n\n        if (typeof ua === OBJ_TYPE) {\n            extensions = ua;\n            ua = undefined;\n        }\n\n        if (!(this instanceof UAParser)) {\n            return new UAParser(ua, extensions).getResult();\n        }\n\n        var _ua = ua || ((typeof window !== UNDEF_TYPE && window.navigator && window.navigator.userAgent) ? window.navigator.userAgent : EMPTY);\n        var _rgxmap = extensions ? extend(regexes, extensions) : regexes;\n\n        this.getBrowser = function () {\n            var _browser = {};\n            _browser[NAME] = undefined;\n            _browser[VERSION] = undefined;\n            rgxMapper.call(_browser, _ua, _rgxmap.browser);\n            _browser.major = majorize(_browser.version);\n            return _browser;\n        };\n        this.getCPU = function () {\n            var _cpu = {};\n            _cpu[ARCHITECTURE] = undefined;\n            rgxMapper.call(_cpu, _ua, _rgxmap.cpu);\n            return _cpu;\n        };\n        this.getDevice = function () {\n            var _device = {};\n            _device[VENDOR] = undefined;\n            _device[MODEL] = undefined;\n            _device[TYPE] = undefined;\n            rgxMapper.call(_device, _ua, _rgxmap.device);\n            return _device;\n        };\n        this.getEngine = function () {\n            var _engine = {};\n            _engine[NAME] = undefined;\n            _engine[VERSION] = undefined;\n            rgxMapper.call(_engine, _ua, _rgxmap.engine);\n            return _engine;\n        };\n        this.getOS = function () {\n            var _os = {};\n            _os[NAME] = undefined;\n            _os[VERSION] = undefined;\n            rgxMapper.call(_os, _ua, _rgxmap.os);\n            return _os;\n        };\n        this.getResult = function () {\n            return {\n                ua      : this.getUA(),\n                browser : this.getBrowser(),\n                engine  : this.getEngine(),\n                os      : this.getOS(),\n                device  : this.getDevice(),\n                cpu     : this.getCPU()\n            };\n        };\n        this.getUA = function () {\n            return _ua;\n        };\n        this.setUA = function (ua) {\n            _ua = (typeof ua === STR_TYPE && ua.length > UA_MAX_LENGTH) ? trim(ua, UA_MAX_LENGTH) : ua;\n            return this;\n        };\n        this.setUA(_ua);\n        return this;\n    };\n\n    UAParser.VERSION = LIBVERSION;\n    UAParser.BROWSER =  enumerize([NAME, VERSION, MAJOR]);\n    UAParser.CPU = enumerize([ARCHITECTURE]);\n    UAParser.DEVICE = enumerize([MODEL, VENDOR, TYPE, CONSOLE, MOBILE, SMARTTV, TABLET, WEARABLE, EMBEDDED]);\n    UAParser.ENGINE = UAParser.OS = enumerize([NAME, VERSION]);\n\n    ///////////\n    // Export\n    //////////\n\n    // check js environment\n    if (typeof(exports) !== UNDEF_TYPE) {\n        // nodejs env\n        if (typeof module !== UNDEF_TYPE && module.exports) {\n            exports = module.exports = UAParser;\n        }\n        exports.UAParser = UAParser;\n    } else {\n        // requirejs env (optional)\n        if (typeof(define) === FUNC_TYPE && define.amd) {\n            define(function () {\n                return UAParser;\n            });\n        } else if (typeof window !== UNDEF_TYPE) {\n            // browser env\n            window.UAParser = UAParser;\n        }\n    }\n\n    // jQuery/Zepto specific (optional)\n    // Note:\n    //   In AMD env the global scope should be kept clean, but jQuery is an exception.\n    //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,\n    //   and we should catch that.\n    var $ = typeof window !== UNDEF_TYPE && (window.jQuery || window.Zepto);\n    if ($ && !$.ua) {\n        var parser = new UAParser();\n        $.ua = parser.getResult();\n        $.ua.get = function () {\n            return parser.getUA();\n        };\n        $.ua.set = function (ua) {\n            parser.setUA(ua);\n            var result = parser.getResult();\n            for (var prop in result) {\n                $.ua[prop] = result[prop];\n            }\n        };\n    }\n\n})(typeof window === 'object' ? window : this);\n","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst detect_browser_1 = require(\"detect-browser\");\nconst ua_parser_js_1 = require(\"ua-parser-js\");\nclass DefaultBrowserBehavior {\n    constructor() {\n        this.browser = detect_browser_1.detect();\n        this.uaParserResult = navigator && navigator.userAgent ? new ua_parser_js_1.UAParser(navigator.userAgent).getResult() : null;\n        this.browserSupport = {\n            chrome: 78,\n            'edge-chromium': 79,\n            electron: 7,\n            firefox: 75,\n            ios: 13,\n            safari: 13,\n            opera: 66,\n            samsung: 12,\n            crios: 86,\n            fxios: 23,\n            'ios-webview': 605,\n            'chromium-webview': 92,\n        };\n        this.browserName = {\n            chrome: 'Google Chrome',\n            'edge-chromium': 'Microsoft Edge',\n            electron: 'Electron',\n            firefox: 'Mozilla Firefox',\n            ios: 'Safari iOS',\n            safari: 'Safari',\n            opera: 'Opera',\n            samsung: 'Samsung Internet',\n            crios: 'Chrome iOS',\n            fxios: 'Firefox iOS',\n            'ios-webview': 'WKWebView iOS',\n            'chromium-webview': 'Chrome WebView',\n        };\n        this.chromeLike = [\n            'chrome',\n            'edge-chromium',\n            'chromium-webview',\n            'opera',\n            'samsung',\n        ];\n        this.webkitBrowsers = ['crios', 'fxios', 'safari', 'ios', 'ios-webview', 'edge-ios'];\n    }\n    version() {\n        return this.browser.version;\n    }\n    majorVersion() {\n        return parseInt(this.version().split('.')[0]);\n    }\n    osMajorVersion() {\n        return parseInt(this.uaParserResult.os.version.split('.')[0]);\n    }\n    name() {\n        return this.browser.name;\n    }\n    hasChromiumWebRTC() {\n        for (const browser of this.chromeLike) {\n            if (browser === this.browser.name) {\n                return true;\n            }\n        }\n        return false;\n    }\n    hasWebKitWebRTC() {\n        for (const browser of this.webkitBrowsers) {\n            if (browser === this.browser.name) {\n                return true;\n            }\n        }\n        return false;\n    }\n    hasFirefoxWebRTC() {\n        return this.isFirefox();\n    }\n    requiresPlaybackLatencyHintForAudioContext() {\n        return navigator.userAgent.indexOf('Windows') !== -1;\n    }\n    supportsCanvasCapturedStreamPlayback() {\n        return (\n        // Desktop browser\n        (!this.isIOSSafari() && !this.isIOSChrome() && !this.isIOSFirefox() && !this.isIOSEdge()) ||\n            // iOS Safari (Firefox on iOS with desktop view will be identified as iOS Safari\n            (this.isIOSSafari() &&\n                this.majorVersion() >= DefaultBrowserBehavior.MIN_IOS_SUPPORT_CANVAS_STREAM_PLAYBACK) ||\n            // Chrome, Edge, or Firefox (mobile view) on iOS\n            this.majorVersion() >=\n                DefaultBrowserBehavior.MIN_IOS_NON_SAFARI_SUPPORT_CANVAS_STREAM_PLAYBACK);\n    }\n    supportsBackgroundFilter() {\n        // disable Safari 15\n        // see: https://github.com/aws/amazon-chime-sdk-js/issues/1059\n        if (this.name() === 'safari' && this.majorVersion() === 15) {\n            return false;\n        }\n        if (!this.supportsCanvasCapturedStreamPlayback()) {\n            return false;\n        }\n        return true;\n    }\n    supportsVideoLayersAllocationRtpHeaderExtension() {\n        return this.hasChromiumWebRTC();\n    }\n    requiresResolutionAlignment(width, height) {\n        if (this.isAndroid() && this.isPixel3()) {\n            return [Math.ceil(width / 64) * 64, Math.ceil(height / 64) * 64];\n        }\n        return [width, height];\n    }\n    requiresCheckForSdpConnectionAttributes() {\n        return !this.isIOSSafari() && !this.isIOSChrome() && !this.isIOSFirefox();\n    }\n    requiresIceCandidateGatheringTimeoutWorkaround() {\n        return this.hasChromiumWebRTC();\n    }\n    requiresBundlePolicy() {\n        return 'max-bundle';\n    }\n    requiresNoExactMediaStreamConstraints() {\n        return this.isSamsungInternet();\n    }\n    requiresGroupIdMediaStreamConstraints() {\n        return this.isSamsungInternet();\n    }\n    getDisplayMediaAudioCaptureSupport() {\n        return this.isChrome() || this.isEdge();\n    }\n    // There's a issue in Chormium WebView that causes enumerate devices to return empty labels, this is a check for this issue.\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=669492\n    doesNotSupportMediaDeviceLabels() {\n        return this.browser.name === 'chromium-webview';\n    }\n    isSupported() {\n        if (!this.browserSupport[this.browser.name] ||\n            this.majorVersion() < this.browserSupport[this.browser.name]) {\n            return false;\n        }\n        if (this.browser.name === 'firefox' && this.isAndroid()) {\n            return false;\n        }\n        return true;\n    }\n    isSimulcastSupported() {\n        return this.hasChromiumWebRTC();\n    }\n    supportDownlinkBandwidthEstimation() {\n        return !this.isFirefox();\n    }\n    supportString() {\n        if (this.isAndroid()) {\n            return `${this.browserName['chrome']} ${this.browserSupport['chrome']}+, ${this.browserName['samsung']} ${this.browserSupport['samsung']}+`;\n        }\n        const s = [];\n        for (const k in this.browserSupport) {\n            s.push(`${this.browserName[k]} ${this.browserSupport[k]}+`);\n        }\n        return s.join(', ');\n    }\n    supportedVideoCodecs() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const pc = new RTCPeerConnection();\n            pc.addTransceiver('video', { direction: 'inactive', streams: [] });\n            return (yield pc.createOffer({ offerToReceiveVideo: true })).sdp\n                .split('\\r\\n')\n                .filter(x => {\n                return x.includes('a=rtpmap:');\n            })\n                .map(x => {\n                return x.replace(/.* /, '').replace(/\\/.*/, '');\n            })\n                .filter((v, i, a) => {\n                return a.indexOf(v) === i;\n            })\n                .filter(x => {\n                return x !== 'rtx' && x !== 'red' && x !== 'ulpfec';\n            });\n        });\n    }\n    supportsSetSinkId() {\n        return 'setSinkId' in HTMLAudioElement.prototype;\n    }\n    disableResolutionScaleDown() {\n        return this.isAndroid();\n    }\n    disable480pResolutionScaleDown() {\n        return /( Chrome\\/98\\.)/i.test(navigator.userAgent) && this.browser.os.startsWith('Windows');\n    }\n    requiresDisablingH264Encoding() {\n        return ((this.isIOSSafari() || this.isIOSChrome() || this.isIOSFirefox()) &&\n            (this.version() === '15.1.0' || /( OS 15_1)/i.test(navigator.userAgent)));\n    }\n    // In Safari, a hidden video element can show a black screen.\n    // See https://bugs.webkit.org/show_bug.cgi?id=241152 for more information.\n    requiresVideoPlayWorkaround() {\n        return this.isSafari();\n    }\n    // These helpers should be kept private to encourage\n    // feature detection instead of browser detection.\n    isIOSSafari() {\n        return (this.browser.name === 'ios' ||\n            this.browser.name === 'ios-webview' ||\n            (this.browser.name === 'safari' &&\n                /( Mac )/i.test(navigator.userAgent) &&\n                navigator.maxTouchPoints > 1) //Ipad\n        );\n    }\n    isSafari() {\n        return this.browser.name === 'safari' || this.isIOSSafari();\n    }\n    isFirefox() {\n        return this.browser.name === 'firefox';\n    }\n    isIOSFirefox() {\n        return this.browser.name === 'fxios';\n    }\n    isIOSChrome() {\n        return this.browser.name === 'crios';\n    }\n    isChrome() {\n        return this.browser.name === 'chrome';\n    }\n    isEdge() {\n        return this.browser.name === 'edge-chromium';\n    }\n    isIOSEdge() {\n        return this.browser.name === 'edge-ios';\n    }\n    isSamsungInternet() {\n        return this.browser.name === 'samsung';\n    }\n    isAndroid() {\n        return /(android)/i.test(navigator.userAgent);\n    }\n    isPixel3() {\n        return /( pixel 3)/i.test(navigator.userAgent);\n    }\n}\nexports.default = DefaultBrowserBehavior;\nDefaultBrowserBehavior.MIN_IOS_SUPPORT_CANVAS_STREAM_PLAYBACK = 16;\nDefaultBrowserBehavior.MIN_IOS_NON_SAFARI_SUPPORT_CANVAS_STREAM_PLAYBACK = 106;\n//# sourceMappingURL=DefaultBrowserBehavior.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    \"hash\": \"2e403fb\",\n    \"raw\": \"v3.12.0\",\n    \"semverString\": \"3.12.0\"\n};\n//# sourceMappingURL=version.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\nconst version_1 = require(\"./version\");\nclass Versioning {\n    /**\n     * Return string representation of SDK name\n     */\n    static get sdkName() {\n        return 'amazon-chime-sdk-js';\n    }\n    /**\n     * Return string representation of SDK version\n     */\n    static get sdkVersion() {\n        return version_1.default.semverString;\n    }\n    /**\n     * Returns the parts of the semver, so major/minor/patch can be extracted individually.\n     */\n    static get sdkVersionSemVer() {\n        var _a, _b, _c, _d;\n        const v = version_1.default.semverString.match(/^(?<major>[0-9]+)\\.(?<minor>[0-9]+)((?:\\.(?<patch>[0-9]+))(?:-(?<preRelease>[a-zA-Z]+(\\.[0-9])*))?)?/);\n        return {\n            major: (_a = v === null || v === void 0 ? void 0 : v.groups) === null || _a === void 0 ? void 0 : _a.major,\n            minor: (_b = v === null || v === void 0 ? void 0 : v.groups) === null || _b === void 0 ? void 0 : _b.minor,\n            patch: (_c = v === null || v === void 0 ? void 0 : v.groups) === null || _c === void 0 ? void 0 : _c.patch,\n            preRelease: (_d = v === null || v === void 0 ? void 0 : v.groups) === null || _d === void 0 ? void 0 : _d.preRelease,\n        };\n    }\n    /**\n     * Return the SHA-1 of the Git commit from which this build was created.\n     */\n    static get buildSHA() {\n        // Skip the leading 'g'.\n        return version_1.default.hash.substr(1);\n    }\n    /**\n     * Return low-resolution string representation of SDK user agent (e.g. `chrome-78`)\n     */\n    static get sdkUserAgentLowResolution() {\n        const browserBehavior = new DefaultBrowserBehavior_1.default();\n        return `${browserBehavior.name()}-${browserBehavior.majorVersion()}`;\n    }\n    /**\n     * Return URL with versioning information appended\n     */\n    static urlWithVersion(url) {\n        const urlWithVersion = new URL(url);\n        urlWithVersion.searchParams.append(Versioning.X_AMZN_VERSION, Versioning.sdkVersion);\n        urlWithVersion.searchParams.append(Versioning.X_AMZN_USER_AGENT, Versioning.sdkUserAgentLowResolution);\n        return urlWithVersion.toString();\n    }\n}\nexports.default = Versioning;\nVersioning.X_AMZN_VERSION = 'X-Amzn-Version';\nVersioning.X_AMZN_USER_AGENT = 'X-Amzn-User-Agent';\n//# sourceMappingURL=Versioning.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst loader_1 = require(\"../../libs/voicefocus/loader\");\nconst support_1 = require(\"../../libs/voicefocus/support\");\nconst ModelSpecBuilder_1 = require(\"../backgroundblurprocessor/ModelSpecBuilder\");\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\nconst Versioning_1 = require(\"../versioning/Versioning\");\n/** @internal */\nconst CREATE_DEFAULT_MODEL_SPEC = () => ModelSpecBuilder_1.default.builder().withSelfieSegmentationDefaults().build();\n/** @internal */\nconst DEFAULT_CDN = 'https://static.sdkassets.chime.aws';\n/** @internal */\nconst DEFAULT_PATHS = {\n    worker: `${DEFAULT_CDN}/bgblur/workers/worker.js`,\n    wasm: `${DEFAULT_CDN}/bgblur/wasm/_cwt-wasm.wasm`,\n    simd: `${DEFAULT_CDN}/bgblur/wasm/_cwt-wasm-simd.wasm`,\n};\nclass BackgroundFilterVideoFrameProcessor {\n    /**\n     * Based on the SDK version, return an asset group.\n     *\n     * @returns the default asset spec, based on the SDK version.\n     */\n    static defaultAssetSpec() {\n        const version = Versioning_1.default.sdkVersionSemVer;\n        return {\n            assetGroup: `sdk-${version.major}.${version.minor}`,\n        };\n    }\n    /**\n     * Set the given parameters to the url. Existing parameters in the url are preserved.\n     * If duplicate parameters exist, they are overwritten, so it's safe to call this method multiple\n     * times on the same url.\n     *\n     * @param url the initial url, can include query parameters\n     * @param queryParams the query parameters to set\n     * @returns a new url with the given query parameters.\n     */\n    static createUrlWithParams(url, queryParams) {\n        const u = new URL(url);\n        const keys = Object.keys(queryParams);\n        for (const key of keys) {\n            if (queryParams[key] !== undefined) {\n                u.searchParams.set(key, queryParams[key]);\n            }\n        }\n        return u.toString();\n    }\n    /**\n     * Based on the spec that is passed in set defaults for spec\n     * @param spec the spec that was passed in\n     * @returns An updated spec with defaults set\n     */\n    static resolveSpec(spec) {\n        const { paths = DEFAULT_PATHS, model = CREATE_DEFAULT_MODEL_SPEC(), assetGroup = this.defaultAssetSpec().assetGroup, revisionID = this.defaultAssetSpec().revisionID, } = spec || {};\n        const params = {\n            assetGroup,\n            revisionID,\n            sdk: encodeURIComponent(Versioning_1.default.sdkVersion),\n            ua: encodeURIComponent(Versioning_1.default.sdkUserAgentLowResolution),\n        };\n        paths.worker = this.createUrlWithParams(paths.worker, params);\n        paths.wasm = this.createUrlWithParams(paths.wasm, params);\n        paths.simd = this.createUrlWithParams(paths.simd, params);\n        model.path = this.createUrlWithParams(model.path, params);\n        return {\n            paths,\n            model,\n            assetGroup,\n            revisionID,\n        };\n    }\n    /**\n     * Based on the options that are passed in set defaults for options\n     * @param options  the options that are passed in\n     * @returns An updated set of options with defaults set\n     */\n    static resolveOptions(options) {\n        if (!options.reportingPeriodMillis) {\n            options.reportingPeriodMillis = 1000;\n        }\n        const DEFAULT_FILTER_CPU_UTILIZATION = 30;\n        if (!options.filterCPUUtilization) {\n            options.filterCPUUtilization = DEFAULT_FILTER_CPU_UTILIZATION;\n        }\n        else if (options.filterCPUUtilization < 0 || options.filterCPUUtilization > 100) {\n            options.logger.warn(`filterCPUUtilization must be set to a range between 0 and 100 percent. Falling back to default of ${DEFAULT_FILTER_CPU_UTILIZATION} percent`);\n            options.filterCPUUtilization = DEFAULT_FILTER_CPU_UTILIZATION;\n        }\n        return options;\n    }\n    /**\n     * This method will detect the environment in which it is being used and determine if background\n     * blur/replacement can be used.\n     * @param spec The {@link BackgroundBlurSpec} spec that will be used to initialize assets\n     * @param options options such as logger\n     * @returns a boolean promise that will resolve to true if supported and false if not\n     */\n    static isSupported(spec, options) {\n        const { logger } = options;\n        // could not figure out how to remove globalThis to test failure case\n        /* istanbul ignore next */\n        if (typeof globalThis === 'undefined') {\n            logger.info('Browser does not have globalThis.');\n            return Promise.resolve(false);\n        }\n        const browser = new DefaultBrowserBehavior_1.default();\n        if (!browser.supportsBackgroundFilter()) {\n            logger.info('Browser is not supported.');\n            return Promise.resolve(false);\n        }\n        if (!support_1.supportsWASM(globalThis, logger)) {\n            logger.info('Browser does not support WASM.');\n            return Promise.resolve(false);\n        }\n        return this.supportsBackgroundFilter(globalThis, spec, logger);\n    }\n    static supportsBackgroundFilter(\n    /* istanbul ignore next */\n    scope = globalThis, spec, logger) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!support_1.supportsWorker(scope, logger)) {\n                logger.info('Browser does not support web workers.');\n                return false;\n            }\n            // Use the actual worker path -- it's only 20KB, and it'll get the cache warm.\n            const workerURL = spec.paths.worker;\n            try {\n                const worker = yield loader_1.loadWorker(workerURL, 'BackgroundFilterWorker', {}, null);\n                try {\n                    worker.terminate();\n                }\n                catch (e) {\n                    logger.info(`Failed to terminate worker. ${e.message}`);\n                }\n                return true;\n            }\n            catch (e) {\n                logger.info(`Failed to fetch and instantiate test worker ${e.message}`);\n                return false;\n            }\n        });\n    }\n}\nexports.default = BackgroundFilterVideoFrameProcessor;\n//# sourceMappingURL=BackgroundFilterVideoFrameProcessor.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst LogLevel_1 = require(\"./LogLevel\");\n/**\n * ConsoleLogger writes logs with console\n *\n * ```typescript\n *   // working with the ConsoleLogger\n *   const logger = new ConsoleLogger('demo'); //default level is LogLevel.WARN\n *   logger.info('info');\n *   logger.debug('debug');\n *   logger.warn('warn');\n *   logger.error('error');\n *\n *   // setting logging levels\n *   const logger = new ConsoleLogger('demo', LogLevel.INFO)\n *   logger.debug(debugFunc()); // this will not show up\n *   logger.setLogLevel(LogLevel.DEBUG)\n *   logger.debug(debugFunc()); // this will show up\n *\n * ```\n */\nclass ConsoleLogger {\n    constructor(name, level = LogLevel_1.default.WARN) {\n        this.name = name;\n        this.level = level;\n    }\n    info(msg) {\n        this.log(LogLevel_1.default.INFO, msg);\n    }\n    warn(msg) {\n        this.log(LogLevel_1.default.WARN, msg);\n    }\n    error(msg) {\n        this.log(LogLevel_1.default.ERROR, msg);\n    }\n    debug(debugFunction) {\n        if (LogLevel_1.default.DEBUG < this.level) {\n            return;\n        }\n        if (typeof debugFunction === 'string') {\n            this.log(LogLevel_1.default.DEBUG, debugFunction);\n        }\n        else if (debugFunction) {\n            this.log(LogLevel_1.default.DEBUG, debugFunction());\n        }\n        else {\n            this.log(LogLevel_1.default.DEBUG, '' + debugFunction);\n        }\n    }\n    setLogLevel(level) {\n        this.level = level;\n    }\n    getLogLevel() {\n        return this.level;\n    }\n    log(type, msg) {\n        if (type < this.level) {\n            return;\n        }\n        const timestamp = new Date().toISOString();\n        const logMessage = `${timestamp} [${LogLevel_1.default[type]}] ${this.name} - ${msg}`;\n        switch (type) {\n            case LogLevel_1.default.ERROR:\n                console.error(logMessage);\n                break;\n            case LogLevel_1.default.WARN:\n                console.warn(logMessage);\n                break;\n            case LogLevel_1.default.DEBUG:\n                console.debug(logMessage.replace(/\\\\r\\\\n/g, '\\n'));\n                break;\n            case LogLevel_1.default.INFO:\n                console.info(logMessage);\n                break;\n        }\n    }\n}\nexports.default = ConsoleLogger;\n//# sourceMappingURL=ConsoleLogger.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[NoOpVideoFrameProcessor]] implements [[VideoFrameProcessor]].\n * It's a no-op processor and input is passed to output directly.\n */\nclass NoOpVideoFrameProcessor {\n    process(buffers) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return buffers;\n        });\n    }\n    destroy() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return;\n        });\n    }\n}\nexports.default = NoOpVideoFrameProcessor;\n//# sourceMappingURL=NoOpVideoFrameProcessor.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[CanvasVideoFrameBuffer]] implements [[VideoFrameBuffer]]. It internally holds an `HTMLCanvasElement`.\n */\nclass CanvasVideoFrameBuffer {\n    constructor(canvas) {\n        this.canvas = canvas;\n        this.destroyed = false;\n    }\n    destroy() {\n        this.canvas = null;\n        this.destroyed = true;\n    }\n    asCanvasImageSource() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.destroyed) {\n                return Promise.reject('canvas buffer is destroyed');\n            }\n            return Promise.resolve(this.canvas);\n        });\n    }\n    asCanvasElement() {\n        return this.canvas;\n    }\n}\nexports.default = CanvasVideoFrameBuffer;\n//# sourceMappingURL=CanvasVideoFrameBuffer.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst FILTER_DURATION_FACTOR = 0.8;\n/**\n * The frame counter tracks frame rates of video and segmentation.\n */\n/** @internal */\nclass BackgroundFilterFrameCounter {\n    constructor(delegate, reportingPeriodMillis, filterCPUUtilization, logger) {\n        this.delegate = delegate;\n        this.reportingPeriodMillis = reportingPeriodMillis;\n        this.filterCPUUtilization = filterCPUUtilization;\n        this.logger = logger;\n        this._processingFilter = true;\n        this.lastReportedEventTimestamp = 0;\n        this.lastFilterCompleteTimestamp = 0;\n        this.filterTotalMillis = 0;\n        this.filterCount = 0;\n        this.framerate = 0;\n        this.filterDurationNotifyMillis = 0;\n        this.setSegmentationDuration();\n    }\n    /**\n     * Report events once per period.\n     */\n    reportEvent(timestamp) {\n        const timeDiff = timestamp - this.lastReportedEventTimestamp;\n        if (timeDiff >= this.reportingPeriodMillis) {\n            const currentFilterCount = this.filterCount;\n            const currentFilterTotalMillis = this.filterTotalMillis;\n            this.filterCount = 0;\n            this.filterTotalMillis = 0;\n            this.lastReportedEventTimestamp = timestamp;\n            // Do not send notification unless a valid framerate or segment count is set.\n            if (this.framerate === 0 || currentFilterCount === 0) {\n                return;\n            }\n            const avgFilterDurationMillis = Math.round(currentFilterTotalMillis / currentFilterCount);\n            const framesDropped = Math.round(this.framerate * (timeDiff / 1000)) - currentFilterCount;\n            const cpuUtilization = Math.round((100 * currentFilterTotalMillis) / timeDiff);\n            if (avgFilterDurationMillis >= this.filterDurationNotifyMillis) {\n                this.delegate.filterFrameDurationHigh({\n                    framesDropped,\n                    avgFilterDurationMillis,\n                    framerate: this.framerate,\n                    periodMillis: timeDiff,\n                });\n            }\n            if (cpuUtilization >= this.filterCPUUtilization) {\n                this.delegate.filterCPUUtilizationHigh({\n                    cpuUtilization,\n                    filterMillis: currentFilterTotalMillis,\n                    periodMillis: timeDiff,\n                });\n            }\n        }\n    }\n    setSegmentationDuration() {\n        // allow filtering to take up to 80% of the expected frame duration\n        this.filterDurationNotifyMillis = Math.round((1000 / this.framerate) * FILTER_DURATION_FACTOR);\n    }\n    frameReceived(framerate) {\n        if (framerate !== this.framerate) {\n            this.framerate = framerate;\n            this.logger.info(`frame counter setting frame rate to ${this.framerate}`);\n            this.setSegmentationDuration();\n        }\n        const timestamp = Date.now();\n        this.reportEvent(timestamp);\n    }\n    filterSubmitted() {\n        this._processingFilter = true;\n        this.lastFilterCompleteTimestamp = Date.now();\n    }\n    filterComplete() {\n        this.filterTotalMillis += Date.now() - this.lastFilterCompleteTimestamp;\n        this._processingFilter = false;\n        this.filterCount++;\n    }\n    get processingSegment() {\n        return this._processingFilter;\n    }\n}\nexports.default = BackgroundFilterFrameCounter;\n//# sourceMappingURL=BackgroundFilterFrameCounter.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BackgroundFilterMonitor = void 0;\nconst loader_1 = require(\"../../libs/voicefocus/loader\");\nconst CanvasVideoFrameBuffer_1 = require(\"../videoframeprocessor/CanvasVideoFrameBuffer\");\nconst BackgroundFilterFrameCounter_1 = require(\"./BackgroundFilterFrameCounter\");\n/** @internal */\nclass DeferredObservable {\n    constructor() {\n        /** Access the last-resolved value of next()\n         */\n        this.value = undefined;\n        this.resolve = null;\n    }\n    /** Create a promise that resolves once next() is called\n     */\n    whenNext() {\n        /* istanbul ignore else */\n        if (!this.promise) {\n            // externally-resolvable promise\n            this.promise = new Promise(resolve => (this.resolve = resolve));\n        }\n        return this.promise;\n    }\n    /** Update the value and resolve\n     */\n    next(value) {\n        // store the value, for sync access\n        this.value = value;\n        // resolve the promise so anyone awaiting whenNext resolves\n        this.resolve(value);\n        // delete the promise so future whenNext calls get a new promise\n        delete this.promise;\n    }\n}\n/**\n * The [[BackgroundFilterProcessor]] uses WASM and TensorFlow Lite to apply changes to the\n * background image.\n */\n/** @internal */\nclass BackgroundFilterProcessor {\n    constructor(filterType, spec, options, delegate) {\n        this.targetCanvas = document.createElement('canvas');\n        this.canvasCtx = this.targetCanvas.getContext('2d');\n        this.canvasVideoFrameBuffer = new CanvasVideoFrameBuffer_1.default(this.targetCanvas);\n        this.mask$ = new DeferredObservable();\n        this.sourceWidth = 0;\n        this.sourceHeight = 0;\n        this.frameNumber = 0;\n        this.videoFramesPerFilterUpdate = 1;\n        this.initWorkerPromise = BackgroundFilterProcessor.createWorkerPromise();\n        this.loadModelPromise = BackgroundFilterProcessor.createWorkerPromise();\n        this.modelInitialized = false;\n        this.destroyed = false;\n        this.filterType = filterType;\n        this.validateSpec(spec);\n        this.validateOptions(options);\n        this.spec = spec;\n        this.logger = options.logger;\n        this.delegate = delegate;\n        this.initCPUMonitor(options);\n    }\n    static createWorkerPromise() {\n        const resolver = { resolve: null, reject: null, promise: null };\n        resolver.promise = new Promise((resolve, reject) => {\n            resolver.resolve = resolve;\n            resolver.reject = reject;\n        });\n        return resolver;\n    }\n    /** Check if the input spec are not null\n     */\n    validateSpec(spec) {\n        if (!spec) {\n            throw new Error('processor has null spec');\n        }\n        if (!spec.model) {\n            throw new Error('processor spec has null model');\n        }\n        if (!spec.paths) {\n            throw new Error('processor spec has null paths');\n        }\n    }\n    validateOptions(options) {\n        if (!options) {\n            throw new Error('processor has null options');\n        }\n        if (!options.logger) {\n            throw new Error('processor has null options - logger');\n        }\n        if (!options.reportingPeriodMillis) {\n            throw new Error('processor has null options - reportingPeriodMillis');\n        }\n        if (!options.filterCPUUtilization) {\n            throw new Error('processor has null options - filterCPUUtilization');\n        }\n    }\n    initCPUMonitor(options) {\n        const CPU_MONITORING_PERIOD_MILLIS = 5000;\n        const MAX_SEGMENTATION_SKIP_RATE = 10;\n        const MIN_SEGMENTATION_SKIP_RATE = 1;\n        this.videoFramesPerFilterUpdate = 1;\n        this.frameCounter = new BackgroundFilterFrameCounter_1.default(this.delegate, options.reportingPeriodMillis, options.filterCPUUtilization, this.logger);\n        this.cpuMonitor = new BackgroundFilterMonitor(CPU_MONITORING_PERIOD_MILLIS, {\n            reduceCPUUtilization: () => {\n                this.updateVideoFramesPerFilterUpdate(Math.min(this.videoFramesPerFilterUpdate + 1, MAX_SEGMENTATION_SKIP_RATE));\n            },\n            increaseCPUUtilization: () => {\n                this.updateVideoFramesPerFilterUpdate(Math.max(this.videoFramesPerFilterUpdate - 1, MIN_SEGMENTATION_SKIP_RATE));\n            },\n        });\n        this.delegate.addObserver(this.cpuMonitor);\n    }\n    /** Converts a value to a JSON string\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    stringify(value) {\n        return JSON.stringify(value, null, 2);\n    }\n    /**\n     * Sends a message to worker and resolves promise in response to worker's initialize event\n     */\n    handleInitialize(msg) {\n        this.logger.info(`received initialize message: ${this.stringify(msg)}`);\n        if (!msg.payload) {\n            this.logger.error('failed to initialize module');\n            this.initWorkerPromise.reject(new Error('failed to initialize the module'));\n            return;\n        }\n        const model = this.spec.model;\n        this.worker.postMessage({\n            msg: 'loadModel',\n            payload: {\n                modelUrl: model.path,\n                inputHeight: model.input.height,\n                inputWidth: model.input.width,\n                inputChannels: 4,\n                modelRangeMin: model.input.range[0],\n                modelRangeMax: model.input.range[1],\n                blurPixels: 0,\n            },\n        });\n        this.initWorkerPromise.resolve({});\n    }\n    /**\n     * Resolves promise in response to worker's loadModel event\n     */\n    handleLoadModel(msg) {\n        this.logger.info(`received load model message: ${this.stringify(msg)}`);\n        if (msg.payload !== 2) {\n            this.logger.error('failed to load model! status: ' + msg.payload);\n            /** Rejects model promise\n             */\n            this.loadModelPromise.reject(new Error('failed to load model! status: ' + msg.payload));\n            return;\n        }\n        this.modelInitialized = true;\n        this.loadModelPromise.resolve({});\n    }\n    /** Updates the payload output value in response to worker's predict event\n     */\n    handlePredict(msg) {\n        this.mask$.next(msg.payload.output);\n    }\n    /**\n     * This method will handle the asynchronous messaging between the main JS thread\n     * and the worker thread.\n     * @param evt An event that was sent from the worker to the JS thread.\n     * @returns\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    handleWorkerEvent(evt) {\n        const msg = evt.data;\n        switch (msg.msg) {\n            case 'initialize':\n                this.handleInitialize(msg);\n                break;\n            case 'loadModel':\n                this.handleLoadModel(msg);\n                break;\n            case 'predict':\n                this.handlePredict(msg);\n                break;\n            default:\n                this.logger.info(`unexpected event msg: ${this.stringify(msg)}`);\n                break;\n        }\n    }\n    /**\n     * This method initializes all of the resource necessary to processs background filter. It returns\n     * a promise and resolves or rejects the promise once the initialization is complete.\n     * @returns\n     * @throws An error will be thrown\n     */\n    loadAssets() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.logger.info('start initializing the processor');\n            try {\n                this.worker = yield loader_1.loadWorker(this.spec.paths.worker, 'BackgroundFilterWorker', {}, null);\n                this.worker.addEventListener('message', ev => this.handleWorkerEvent(ev));\n                this.worker.postMessage({\n                    msg: 'initialize',\n                    payload: {\n                        wasmPath: this.spec.paths.wasm,\n                        simdPath: this.spec.paths.simd,\n                    },\n                });\n                yield this.initWorkerPromise.promise;\n                this.logger.info(`successfully initialized the ${this.filterType} worker`);\n                yield this.loadModelPromise.promise;\n                this.logger.info(`successfully loaded ${this.filterType} worker segmentation model`);\n            }\n            catch (error) {\n                throw new Error(`could not initialize the ${this.filterType} video frame processor due to '${error.message}'`);\n            }\n            this.logger.info(`successfully initialized the ${this.filterType} processor`);\n        });\n    }\n    /**\n     * Processes the VideoFrameBuffer by applying a segmentation mask and replacing the background.\n     * @param buffers object that contains the canvas element that will be used to obtain the image data to process\n     * @returns the updated buffer that contains the image with the background replaced.\n     */\n    process(buffers) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.destroyed) {\n                return buffers;\n            }\n            this.frameCounter.frameReceived(buffers[0].framerate);\n            this.cpuMonitor.frameReceived();\n            const inputCanvas = buffers[0].asCanvasElement();\n            if (!inputCanvas) {\n                return buffers;\n            }\n            if (!this.modelInitialized) {\n                // return existing buffer, if any\n                buffers[0] = this.canvasVideoFrameBuffer;\n                return buffers;\n            }\n            const frameWidth = inputCanvas.width;\n            const frameHeight = inputCanvas.height;\n            if (frameWidth === 0 || frameHeight === 0) {\n                return buffers;\n            }\n            // on first execution of process the source width will be zero\n            if (this.sourceWidth === 0) {\n                this.sourceWidth = frameWidth;\n                this.sourceHeight = frameHeight;\n                // update target canvas size to match the frame size\n                this.targetCanvas.width = this.sourceWidth;\n                this.targetCanvas.height = this.sourceHeight;\n                this.logger.info(`${this.filterType} source width: ${this.sourceWidth}`);\n                this.logger.info(`${this.filterType} source height: ${this.sourceHeight}`);\n                this.initOnFirstExecution();\n            }\n            if (this.sourceWidth !== frameWidth || this.sourceHeight !== frameHeight) {\n                this.sourceWidth = frameWidth;\n                this.sourceHeight = frameHeight;\n                // update target canvas size to match the frame size\n                this.targetCanvas.width = this.sourceWidth;\n                this.targetCanvas.height = this.sourceHeight;\n            }\n            try {\n                this.frameCounter.filterSubmitted();\n                let mask = this.mask$.value;\n                const hscale = this.spec.model.input.width / inputCanvas.width;\n                const vscale = this.spec.model.input.height / inputCanvas.height;\n                if (this.scaledCanvas === undefined) {\n                    this.scaledCanvas = document.createElement('canvas');\n                    this.scaledCanvas.width = this.spec.model.input.width;\n                    this.scaledCanvas.height = this.spec.model.input.height;\n                }\n                const scaledCtx = this.scaledCanvas.getContext('2d');\n                scaledCtx.save();\n                scaledCtx.scale(hscale, vscale);\n                scaledCtx.drawImage(inputCanvas, 0, 0);\n                scaledCtx.restore();\n                const imageData = scaledCtx.getImageData(0, 0, this.scaledCanvas.width, this.scaledCanvas.height);\n                // update the filter mask based on the filter update rate\n                if (this.frameNumber % this.videoFramesPerFilterUpdate === 0) {\n                    // process frame...\n                    const maskPromise = this.mask$.whenNext();\n                    this.worker.postMessage({ msg: 'predict', payload: imageData }, [imageData.data.buffer]);\n                    mask = yield maskPromise;\n                }\n                // It's possible that while waiting for the predict to complete the processor was destroyed.\n                // adding a destroyed check here to ensure the implementation of drawImageWithMask does not throw\n                // an error due to destroyed processor.\n                if (!this.destroyed) {\n                    this.drawImageWithMask(inputCanvas, mask);\n                }\n            }\n            catch (error) {\n                this.logger.error(`could not process ${this.filterType} frame buffer due to ${error}`);\n                return buffers;\n            }\n            finally {\n                this.frameCounter.filterComplete();\n                this.frameNumber++;\n            }\n            buffers[0] = this.canvasVideoFrameBuffer;\n            return buffers;\n        });\n    }\n    updateVideoFramesPerFilterUpdate(newRate) {\n        if (newRate !== this.videoFramesPerFilterUpdate) {\n            this.videoFramesPerFilterUpdate = newRate;\n            this.logger.info(`Adjusting filter rate to compensate for CPU utilization. ` +\n                `Filter rate is ${this.videoFramesPerFilterUpdate} video frames per filter.`);\n        }\n    }\n    /**\n     * Clean up processor resources\n     */\n    destroy() {\n        var _a, _b, _c, _d;\n        return __awaiter(this, void 0, void 0, function* () {\n            this.destroyed = true;\n            this.delegate.removeObserver(this.cpuMonitor);\n            this.canvasVideoFrameBuffer.destroy();\n            (_a = this.worker) === null || _a === void 0 ? void 0 : _a.postMessage({ msg: 'destroy' });\n            (_b = this.worker) === null || _b === void 0 ? void 0 : _b.postMessage({ msg: 'stop' });\n            (_c = this.targetCanvas) === null || _c === void 0 ? void 0 : _c.remove();\n            this.targetCanvas = undefined;\n            (_d = this.scaledCanvas) === null || _d === void 0 ? void 0 : _d.remove();\n            this.scaledCanvas = undefined;\n            this.logger.info(`${this.filterType} frame process destroyed`);\n        });\n    }\n}\nexports.default = BackgroundFilterProcessor;\n/** @internal */\nclass BackgroundFilterMonitor {\n    constructor(monitoringPeriodMillis, observer) {\n        this.monitoringPeriodMillis = monitoringPeriodMillis;\n        this.observer = observer;\n        this.lastCPUChangeTimestamp = 0;\n    }\n    filterCPUUtilizationHigh() {\n        const timestamp = Date.now();\n        // Allow some time to pass before we check CPU utilization.\n        if (timestamp - this.lastCPUChangeTimestamp >= this.monitoringPeriodMillis) {\n            this.lastCPUChangeTimestamp = timestamp;\n            this.observer.reduceCPUUtilization();\n        }\n    }\n    frameReceived() {\n        const timestamp = Date.now();\n        // If a enough time has passed, reset the processor and continue to monitor\n        if (timestamp - this.lastCPUChangeTimestamp >= this.monitoringPeriodMillis * 2) {\n            this.lastCPUChangeTimestamp = timestamp;\n            this.observer.increaseCPUUtilization();\n        }\n    }\n}\nexports.BackgroundFilterMonitor = BackgroundFilterMonitor;\n//# sourceMappingURL=BackgroundFilterProcessor.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * This class adds the functionality to allow for a set of unique observers to be added to the\n * video frame processor.\n */\n/** @internal */\nclass BackgroundFilterVideoFrameProcessorDelegate {\n    constructor() {\n        this.observers = new Set();\n    }\n    /**\n     * Add an observer to the unique set. If a duplicate observer cannot be added.\n     * @param observer An implementation of the observer interface.\n     */\n    addObserver(observer) {\n        this.observers.add(observer);\n    }\n    /**\n     * Remove the observer from the set of observers.\n     * @param observer An implementation of the observer interface.\n     */\n    removeObserver(observer) {\n        this.observers.delete(observer);\n    }\n    /**\n     * Call the observer method with the event information. See [[BackgroundFilterVideoFrameProcessorObserver]]\n     * for detailed info on this event.\n     * @param event\n     */\n    filterFrameDurationHigh(event) {\n        var _a;\n        for (const observer of this.observers) {\n            (_a = observer.filterFrameDurationHigh) === null || _a === void 0 ? void 0 : _a.call(observer, event);\n        }\n    }\n    filterCPUUtilizationHigh(event) {\n        var _a;\n        for (const observer of this.observers) {\n            (_a = observer.filterCPUUtilizationHigh) === null || _a === void 0 ? void 0 : _a.call(observer, event);\n        }\n    }\n}\nexports.default = BackgroundFilterVideoFrameProcessorDelegate;\n//# sourceMappingURL=BackgroundFilterVideoFrameProcessorDelegate.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BackgroundFilterVideoFrameProcessorDelegate_1 = require(\"../backgroundfilter/BackgroundFilterVideoFrameProcessorDelegate\");\n/**\n * This class adds the functionality to allow for a set of unique observers to be added to the\n * video frame processor.\n */\n/** @internal */\nclass BackgroundBlurVideoFrameProcessorDelegate extends BackgroundFilterVideoFrameProcessorDelegate_1.default {\n}\nexports.default = BackgroundBlurVideoFrameProcessorDelegate;\n//# sourceMappingURL=BackgroundBlurVideoFrameProcessorDelegate.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BackgroundFilterProcessor_1 = require(\"../backgroundfilter/BackgroundFilterProcessor\");\nconst BackgroundBlurStrength_1 = require(\"./BackgroundBlurStrength\");\nconst BackgroundBlurVideoFrameProcessorDelegate_1 = require(\"./BackgroundBlurVideoFrameProcessorDelegate\");\n/**\n * [[BackgroundBlurProcessorProvided]] implements [[BackgroundBlurProcessor]].\n * It's a background blur processor and input is passed into a worker that will apply a segmentation\n * to separate the foreground from the background. Then the background will have a blur applied.\n *\n * The [[BackgroundBlurProcessorProvided]] uses WASM and TensorFlow Lite to apply the blurring of the\n * background image as apposed to [[BackgroundBlurProcessorBuiltIn]] that uses the browser's built-in\n * capability to apply the blur.\n */\n/** @internal */\nclass BackgroundBlurProcessorProvided extends BackgroundFilterProcessor_1.default {\n    /**\n     * A constructor that will apply default values if spec and strength are not provided.\n     * If no spec is provided the selfie segmentation model is used with default paths to CDN for the\n     * worker and wasm files used to process each frame.\n     * @param spec The spec defines the assets that will be used for adding background blur to a frame\n     * @param options How much blur to apply to a frame\n     */\n    constructor(spec, options) {\n        super('background blur', spec, options, new BackgroundBlurVideoFrameProcessorDelegate_1.default());\n        this.blurAmount = 0;\n        this.setBlurStrength(options.blurStrength);\n        this.logger.info('BackgroundBlur processor successfully created');\n        this.logger.info(`BackgroundBlur spec: ${this.stringify(this.spec)}`);\n        this.logger.info(`BackgroundBlur options: ${this.stringify(options)}`);\n    }\n    validateOptions(options) {\n        super.validateOptions(options);\n        if (!options.blurStrength) {\n            throw new Error('processor has null options - blurStrength');\n        }\n    }\n    initOnFirstExecution() {\n        this.setBlurPixels();\n    }\n    drawImageWithMask(inputCanvas, mask) {\n        // Mask will not be set until the worker has completed handling the predict event. Until the first frame is processed,\n        // the whole frame will be blurred.\n        if (!mask) {\n            mask = new ImageData(this.spec.model.input.width, this.spec.model.input.height);\n        }\n        const scaledCtx = this.scaledCanvas.getContext('2d');\n        scaledCtx.putImageData(mask, 0, 0);\n        const { canvasCtx, targetCanvas } = this;\n        const { width, height } = targetCanvas;\n        // draw the mask\n        canvasCtx.save();\n        canvasCtx.clearRect(0, 0, width, height);\n        canvasCtx.drawImage(this.scaledCanvas, 0, 0, width, height);\n        // Only overwrite existing pixels.\n        canvasCtx.globalCompositeOperation = 'source-in';\n        // draw image over mask...\n        canvasCtx.drawImage(inputCanvas, 0, 0, width, height);\n        // draw under person\n        canvasCtx.globalCompositeOperation = 'destination-over';\n        canvasCtx.filter = `blur(${this.blurAmount}px)`;\n        canvasCtx.drawImage(inputCanvas, 0, 0, targetCanvas.width, targetCanvas.height);\n        canvasCtx.restore();\n    }\n    setBlurStrength(blurStrength) {\n        this._blurStrength = blurStrength;\n        this.logger.info(`blur strength set to ${this._blurStrength}`);\n        this.setBlurPixels();\n    }\n    /**\n     * Calculate the blur amount based on the blur strength passed in and height of the image being blurred.\n     */\n    setBlurPixels() {\n        this.blurAmount = BackgroundBlurStrength_1.BlurStrengthMapper.getBlurAmount(this._blurStrength, {\n            height: this.sourceHeight,\n        });\n        this.logger.info(`background blur amount set to ${this.blurAmount}`);\n    }\n    addObserver(observer) {\n        this.delegate.addObserver(observer);\n    }\n    removeObserver(observer) {\n        this.delegate.removeObserver(observer);\n    }\n    static isSupported() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const canvas = document.createElement('canvas');\n            const supportsBlurFilter = canvas.getContext('2d').filter !== undefined;\n            canvas.remove();\n            return supportsBlurFilter;\n        });\n    }\n}\nexports.default = BackgroundBlurProcessorProvided;\n//# sourceMappingURL=BackgroundBlurProcessorProvided.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BackgroundBlurProcessorProvided_1 = require(\"./BackgroundBlurProcessorProvided\");\nconst BackgroundBlurStrength_1 = require(\"./BackgroundBlurStrength\");\n/**\n * The [[BackgroundBlurProcessorBuiltIn]] uses the browser's built-in capability to apply blurring to\n * the background image as apposed to [[BackgroundBlurProcessorProvided]] that uses WASM and\n * TensorFlow Lite to apply the blur.\n */\n/** @internal */\nclass BackgroundBlurProcessorBuiltIn extends BackgroundBlurProcessorProvided_1.default {\n    /**\n     * A constructor that will apply default values if spec and strength are not provided.\n     * If no spec is provided the selfie segmentation model is used with default paths to CDN for the\n     * worker and wasm files used to process each frame.\n     * @param spec The spec defines the assets that will be used for adding background blur to a frame.\n     * @param options How much blur to apply to a frame.\n     */\n    constructor(spec, options) {\n        super(spec, options);\n        this.blurCanvas = document.createElement('canvas');\n        this.blurCanvasCtx = this.blurCanvas.getContext('2d');\n        this.blurCanvas.width = this.spec.model.input.width;\n        this.blurCanvas.height = this.spec.model.input.height;\n        this.logger.info('BackgroundBlur processor using builtin blur');\n    }\n    drawImageWithMask(inputCanvas, mask) {\n        // Mask will not be set until the worker has completed handling the predict event. Until the first frame is processed,\n        // the whole frame will be blurred.\n        const blurredImage = this.blurredImage;\n        const { canvasCtx, targetCanvas } = this;\n        const { width, height } = targetCanvas;\n        if (!mask || !blurredImage) {\n            canvasCtx.clearRect(0, 0, width, height);\n            return;\n        }\n        const scaledCtx = this.scaledCanvas.getContext('2d');\n        scaledCtx.putImageData(mask, 0, 0);\n        this.blurCanvasCtx.putImageData(this.blurredImage, 0, 0);\n        // draw the mask\n        canvasCtx.save();\n        canvasCtx.clearRect(0, 0, width, height);\n        canvasCtx.drawImage(this.scaledCanvas, 0, 0, width, height);\n        // Only overwrite existing pixels.\n        canvasCtx.globalCompositeOperation = 'source-in';\n        // draw image over mask...\n        canvasCtx.drawImage(inputCanvas, 0, 0, width, height);\n        // draw under person\n        canvasCtx.globalCompositeOperation = 'destination-over';\n        canvasCtx.drawImage(this.blurCanvas, 0, 0, width, height);\n        canvasCtx.restore();\n    }\n    setBlurStrength(blurStrength) {\n        super.setBlurStrength(blurStrength);\n        if (this.worker) {\n            // live update\n            this.modelInitialized = false;\n            this.worker.postMessage({ msg: 'destroy' });\n            const model = this.spec.model;\n            this.worker.postMessage({\n                msg: 'loadModel',\n                payload: {\n                    modelUrl: model.path,\n                    inputHeight: model.input.height,\n                    inputWidth: model.input.width,\n                    inputChannels: 4,\n                    modelRangeMin: model.input.range[0],\n                    modelRangeMax: model.input.range[1],\n                    blurPixels: this.blurAmount,\n                },\n            });\n        }\n    }\n    setBlurPixels() {\n        // the blurred image is sized down to 144, regardless of what the canvas size is, so\n        // we use the default blur strengths (540p)\n        this.blurAmount = BackgroundBlurStrength_1.BlurStrengthMapper.getBlurAmount(this._blurStrength, { height: 540 });\n        this.logger.info(`background blur amount set to ${this.blurAmount}`);\n    }\n    handleInitialize(msg) {\n        this.logger.info(`received initialize message: ${this.stringify(msg)}`);\n        if (!msg.payload) {\n            this.logger.error('failed to initialize module');\n            this.initWorkerPromise.reject(new Error('failed to initialize the module'));\n            return;\n        }\n        const model = this.spec.model;\n        this.worker.postMessage({\n            msg: 'loadModel',\n            payload: {\n                modelUrl: model.path,\n                inputHeight: model.input.height,\n                inputWidth: model.input.width,\n                inputChannels: 4,\n                modelRangeMin: model.input.range[0],\n                modelRangeMax: model.input.range[1],\n                blurPixels: this.blurAmount,\n            },\n        });\n        this.initWorkerPromise.resolve({});\n    }\n    handlePredict(msg) {\n        this.blurredImage = msg.payload.blurOutput;\n        super.handlePredict(msg);\n    }\n    destroy() {\n        const _super = Object.create(null, {\n            destroy: { get: () => super.destroy }\n        });\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            _super.destroy.call(this);\n            (_a = this.blurCanvas) === null || _a === void 0 ? void 0 : _a.remove();\n            this.blurCanvas = undefined;\n        });\n    }\n}\nexports.default = BackgroundBlurProcessorBuiltIn;\n//# sourceMappingURL=BackgroundBlurProcessorBuiltIn.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BackgroundFilterVideoFrameProcessor_1 = require(\"../backgroundfilter/BackgroundFilterVideoFrameProcessor\");\nconst ConsoleLogger_1 = require(\"../logger/ConsoleLogger\");\nconst LogLevel_1 = require(\"../logger/LogLevel\");\nconst NoOpVideoFrameProcessor_1 = require(\"../videoframeprocessor/NoOpVideoFrameProcessor\");\nconst BackgroundBlurProcessorBuiltIn_1 = require(\"./BackgroundBlurProcessorBuiltIn\");\nconst BackgroundBlurProcessorProvided_1 = require(\"./BackgroundBlurProcessorProvided\");\nconst BackgroundBlurStrength_1 = require(\"./BackgroundBlurStrength\");\n/**\n * No-op implementation of the blur processor. An instance of this class will be returned when a user attempts\n * to create a blur processor when it is not supported.\n */\n/** @internal */\nclass NoOpBackgroundBlurProcessor extends NoOpVideoFrameProcessor_1.default {\n    /**\n     * no-op\n     */\n    setBlurStrength() { }\n    /**\n     * no-op\n     * @returns\n     */\n    loadAssets() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return;\n        });\n    }\n    /**\n     * no-op\n     */\n    addObserver() { }\n    /**\n     * no-op\n     */\n    removeObserver() { }\n}\n/**\n * [[BackgroundBlurVideoFrameProcessor]]\n * Creates a background blur processor which identifies the foreground person and blurs the background.\n */\nclass BackgroundBlurVideoFrameProcessor extends BackgroundFilterVideoFrameProcessor_1.default {\n    /**\n     * A factory method that will call the private constructor to instantiate the processor and asynchronously\n     * initialize the worker, wasm, and ML models. Upon completion of the initialization the promise will either\n     * be resolved or rejected.\n     * @param spec The spec defines the assets that will be used for adding background blur to a frame\n     * @param blurStrength How much blur to apply to a frame\n     * @returns\n     */\n    static create(spec, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            spec = BackgroundBlurVideoFrameProcessor.resolveSpec(spec);\n            options = BackgroundBlurVideoFrameProcessor.resolveOptions(options);\n            const { logger } = options;\n            const supported = yield BackgroundBlurVideoFrameProcessor.isSupported(spec, options);\n            // if blur is not supported do not initialize. The processor will become a no op if not supported.\n            logger.info(`processor is ${supported ? '' : 'not'} supported`);\n            if (!supported) {\n                logger.warn('Using no-op processor because background blur is not supported');\n                return new NoOpBackgroundBlurProcessor();\n            }\n            let processor;\n            if (yield BackgroundBlurProcessorProvided_1.default.isSupported()) {\n                logger.info('Using browser-provided background blur');\n                processor = new BackgroundBlurProcessorProvided_1.default(spec, options);\n            }\n            else {\n                logger.info('Using built-in background blur');\n                processor = new BackgroundBlurProcessorBuiltIn_1.default(spec, options);\n            }\n            yield processor.loadAssets();\n            return processor;\n        });\n    }\n    /**\n     * Based on the options that are passed in set defaults for options\n     * @param options  the options that are passed in\n     * @returns An updated set of options with defaults set\n     */\n    static resolveOptions(options = {}) {\n        let processorOptions = Object.assign({}, options);\n        if (!processorOptions.blurStrength) {\n            processorOptions.blurStrength = BackgroundBlurStrength_1.default.MEDIUM;\n        }\n        if (!processorOptions.logger) {\n            processorOptions.logger = new ConsoleLogger_1.default('BackgroundBlurProcessor', LogLevel_1.default.INFO);\n        }\n        processorOptions = super.resolveOptions(processorOptions);\n        return processorOptions;\n    }\n    /**\n     * This method will detect the environment in which it is being used and determine if background\n     * blur can be used.\n     * @param spec The {@link BackgroundBlurSpec} spec that will be used to initialize assets\n     * @param options options such as logger\n     * @returns a boolean promise that will resolve to true if supported and false if not\n     */\n    static isSupported(spec, options) {\n        spec = BackgroundBlurVideoFrameProcessor.resolveSpec(spec);\n        options = BackgroundBlurVideoFrameProcessor.resolveOptions(options);\n        return super.isSupported(spec, options);\n    }\n}\nexports.default = BackgroundBlurVideoFrameProcessor;\n//# sourceMappingURL=BackgroundBlurVideoFrameProcessor.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BackgroundFilterVideoFrameProcessorDelegate_1 = require(\"../backgroundfilter/BackgroundFilterVideoFrameProcessorDelegate\");\n/**\n * This class adds the functionality to allow for a set of unique observers to be added to the\n * video frame processor.\n */\n/** @internal */\nclass BackgroundReplacementVideoFrameProcessorDelegate extends BackgroundFilterVideoFrameProcessorDelegate_1.default {\n}\nexports.default = BackgroundReplacementVideoFrameProcessorDelegate;\n//# sourceMappingURL=BackgroundReplacementVideoFrameProcessorDelegate.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BackgroundFilterProcessor_1 = require(\"../backgroundfilter/BackgroundFilterProcessor\");\nconst BackgroundReplacementVideoFrameProcessorDelegate_1 = require(\"./BackgroundReplacementVideoFrameProcessorDelegate\");\n/**\n * [[BackgroundReplacementFilter]] implements [[BackgroundReplacementProcessor]].\n * It's a background replacement processor and input is passed into a worker that will apply a segmentation\n * to separate the foreground from the background. Then the background will have a replacement applied.\n *\n * The [[BackgroundReplacementProcessorProvided]] uses WASM and TensorFlow Lite to apply replacement of the\n * background image.\n */\n/** @internal */\nclass BackgroundReplacementFilter extends BackgroundFilterProcessor_1.default {\n    /**\n     * A constructor that will apply default values if spec and strength are not provided.\n     * If no spec is provided the selfie segmentation model is used with default paths to CDN for the\n     * worker and wasm files used to process each frame.\n     * @param spec The spec defines the assets that will be used for adding background filter to a frame\n     * @param options The background replacement image path\n     */\n    constructor(spec, options) {\n        super('background replacement', spec, options, new BackgroundReplacementVideoFrameProcessorDelegate_1.default());\n        this.replacementBlob = options.imageBlob;\n        this.logger.info('BackgroundReplacement processor successfully created');\n        this.logger.info(`BackgroundReplacement spec: ${this.stringify(this.spec)}`);\n        this.logger.info(`BackgroundReplacement options: ${this.stringify(options)}`);\n    }\n    setImageBlob(blob) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.replacementBlob = blob;\n            this.replacementImage = yield BackgroundReplacementFilter.loadImage(this.createReplacementObjectUrl());\n        });\n    }\n    initOnFirstExecution() { }\n    drawImageWithMask(inputCanvas, mask) {\n        // Mask will not be set until the worker has completed handling the predict event. Until the first frame is processed,\n        // the whole frame will be replaced.\n        if (!mask) {\n            mask = new ImageData(this.spec.model.input.width, this.spec.model.input.height);\n        }\n        const scaledCtx = this.scaledCanvas.getContext('2d');\n        scaledCtx.putImageData(mask, 0, 0);\n        const { canvasCtx, targetCanvas } = this;\n        const { width, height } = targetCanvas;\n        // draw the mask\n        canvasCtx.save();\n        canvasCtx.clearRect(0, 0, width, height);\n        canvasCtx.drawImage(this.scaledCanvas, 0, 0, width, height);\n        // Only overwrite existing pixels.\n        canvasCtx.globalCompositeOperation = 'source-in';\n        // draw image over mask...\n        canvasCtx.drawImage(inputCanvas, 0, 0, width, height);\n        // draw under person\n        canvasCtx.globalCompositeOperation = 'destination-over';\n        canvasCtx.drawImage(this.replacementImage, 0, 0, targetCanvas.width, targetCanvas.height);\n        canvasCtx.restore();\n    }\n    /* istanbul ignore next */\n    static loadImageExecutor(resolve, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    reject, imageUrl) {\n        const image = new Image();\n        image.crossOrigin = 'Anonymous';\n        image.addEventListener('load', () => {\n            resolve(image);\n        }, false);\n        image.addEventListener('error', error => {\n            reject(new Error(`Could not load replacement image ${image.src}: ${error.message}`));\n        }, false);\n        image.src = imageUrl;\n    }\n    /** @internal */\n    static loadImage(imageUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => this.loadImageExecutor(resolve, reject, imageUrl));\n        });\n    }\n    revokeReplacementObjectUrl() {\n        if (this.replacementObjectUrl) {\n            URL.revokeObjectURL(this.replacementObjectUrl);\n        }\n    }\n    createReplacementObjectUrl() {\n        this.revokeReplacementObjectUrl();\n        this.replacementObjectUrl = URL.createObjectURL(this.replacementBlob);\n        return this.replacementObjectUrl;\n    }\n    /**\n     * This method initializes all of the resource necessary to process background replacement. It returns\n     * a promise and resolves or rejects the promise once the initialization is complete.\n     * @returns\n     * @throws An error will be thrown\n     */\n    loadAssets() {\n        const _super = Object.create(null, {\n            loadAssets: { get: () => super.loadAssets }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            this.replacementImage = yield BackgroundReplacementFilter.loadImage(this.createReplacementObjectUrl());\n            _super.loadAssets.call(this);\n            return;\n        });\n    }\n    addObserver(observer) {\n        this.delegate.addObserver(observer);\n    }\n    removeObserver(observer) {\n        this.delegate.removeObserver(observer);\n    }\n    destroy() {\n        const _super = Object.create(null, {\n            destroy: { get: () => super.destroy }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            _super.destroy.call(this);\n            this.revokeReplacementObjectUrl();\n        });\n    }\n}\nexports.default = BackgroundReplacementFilter;\n//# sourceMappingURL=BackgroundReplacementFilter.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BackgroundFilterVideoFrameProcessor_1 = require(\"../backgroundfilter/BackgroundFilterVideoFrameProcessor\");\nconst ConsoleLogger_1 = require(\"../logger/ConsoleLogger\");\nconst LogLevel_1 = require(\"../logger/LogLevel\");\nconst NoOpVideoFrameProcessor_1 = require(\"../videoframeprocessor/NoOpVideoFrameProcessor\");\nconst BackgroundReplacementFilter_1 = require(\"./BackgroundReplacementFilter\");\n/**\n * No-op implementation of the background replacement processor. An instance of this class will be returned when a user attempts\n * to create a background replacement processor when it is not supported.\n */\n/** @internal */\nclass NoOpBackgroundReplacementProcessor extends NoOpVideoFrameProcessor_1.default {\n    /**\n     * no-op\n     * @returns\n     */\n    loadAssets() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return;\n        });\n    }\n    /**\n     * no-op\n     */\n    addObserver() { }\n    /**\n     * no-op\n     */\n    removeObserver() { }\n    /**\n     * no-op\n     */\n    setImageBlob() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return;\n        });\n    }\n}\n/**\n * [[BackgroundReplacementVideoFrameProcessor]]\n * Creates a background replacement processor which identifies the foreground person and replaces the background.\n */\nclass BackgroundReplacementVideoFrameProcessor extends BackgroundFilterVideoFrameProcessor_1.default {\n    /**\n     * A factory method that will call the private constructor to instantiate the processor and asynchronously\n     * initialize the worker, wasm, and ML models. Upon completion of the initialization the promise will either\n     * be resolved or rejected.\n     * @param spec The spec defines the assets that will be used for adding background filter to a frame\n     * @param imagePath The background replacement image path\n     */\n    static create(spec, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            spec = this.resolveSpec(spec);\n            options = this.resolveOptions(options);\n            yield this.resolveOptionsAsync(options);\n            const { logger } = options;\n            const supported = yield BackgroundReplacementVideoFrameProcessor.isSupported(spec, options);\n            // if background replacement is not supported do not initialize. The processor will become a no op if not supported.\n            if (!supported) {\n                logger.warn('Using no-op processor because background replacement is not supported');\n                return new NoOpBackgroundReplacementProcessor();\n            }\n            logger.info('Using background replacement filter');\n            const processor = new BackgroundReplacementFilter_1.default(spec, options);\n            yield processor.loadAssets();\n            return processor;\n        });\n    }\n    /**\n     * Based on the options that are passed in set defaults for options\n     * @param options  the options that are passed in\n     * @returns An updated set of options with defaults set\n     */\n    static resolveOptions(options = {}) {\n        const processorOptions = Object.assign({}, options);\n        if (!processorOptions.logger) {\n            processorOptions.logger = new ConsoleLogger_1.default('BackgroundReplacementProcessor', LogLevel_1.default.INFO);\n        }\n        return super.resolveOptions(processorOptions);\n    }\n    static resolveOptionsAsync(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!options.imageBlob) {\n                const canvas = document.createElement('canvas');\n                canvas.width = 100;\n                canvas.height = 100;\n                const ctx = canvas.getContext('2d');\n                ctx.fillStyle = 'blue';\n                ctx.fillRect(0, 0, 100, 100);\n                const blob = yield new Promise(resolve => {\n                    canvas.toBlob(resolve);\n                });\n                options.imageBlob = blob;\n            }\n            return;\n        });\n    }\n    /**\n     * This method will detect the environment in which it is being used and determine if background\n     * replacement can be used.\n     * @param spec The {@link BackgroundFilterSpec} spec that will be used to initialize assets\n     * @param options options such as logger and imagePath\n     * @returns a boolean promise that will resolve to true if supported and false if not\n     */\n    static isSupported(spec, options) {\n        const _super = Object.create(null, {\n            isSupported: { get: () => super.isSupported }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            spec = this.resolveSpec(spec);\n            options = this.resolveOptions(options);\n            yield this.resolveOptionsAsync(options);\n            const imageBlob = options.imageBlob;\n            const imageUrl = URL.createObjectURL(imageBlob);\n            try {\n                yield BackgroundReplacementFilter_1.default.loadImage(imageUrl);\n            }\n            catch (e) {\n                options.logger.info(`Failed to fetch load replacement image ${e.message}`);\n                return false;\n            }\n            finally {\n                URL.revokeObjectURL(imageUrl);\n            }\n            return _super.isSupported.call(this, spec, options);\n        });\n    }\n}\nexports.default = BackgroundReplacementVideoFrameProcessor;\n//# sourceMappingURL=BackgroundReplacementVideoFrameProcessor.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass BaseConnectionHealthPolicy {\n    constructor(configuration, data, name) {\n        this.minHealth = configuration.minHealth;\n        this.maxHealth = configuration.maxHealth;\n        this.currentHealth = configuration.initialHealth;\n        this.currentData = data.clone();\n        this.name = name;\n    }\n    minimumHealth() {\n        return this.minHealth;\n    }\n    maximumHealth() {\n        return this.maxHealth;\n    }\n    health() {\n        return this.maximumHealth();\n    }\n    update(connectionHealthData) {\n        this.currentData = connectionHealthData;\n    }\n    getConnectionHealthData() {\n        return this.currentData.clone();\n    }\n    healthy() {\n        return this.health() > this.minimumHealth();\n    }\n    healthIfChanged() {\n        const newHealth = this.health();\n        if (newHealth !== this.currentHealth) {\n            this.currentHealth = newHealth;\n            return newHealth;\n        }\n        return null;\n    }\n}\nexports.default = BaseConnectionHealthPolicy;\n//# sourceMappingURL=BaseConnectionHealthPolicy.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass BitrateParameters {\n}\nexports.default = BitrateParameters;\n//# sourceMappingURL=BitrateParameters.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass CSPMonitor {\n    /* istanbul ignore next */\n    static register() {\n        if (!('document' in global) || !document.addEventListener) {\n            return;\n        }\n        if (CSPMonitor.shouldRegisterCSPMonitor) {\n            if (!CSPMonitor.added) {\n                document.addEventListener('securitypolicyviolation', CSPMonitor.listener);\n                CSPMonitor.added = true;\n            }\n        }\n    }\n    /* istanbul ignore next */\n    static unregister() {\n        if (!('document' in global) || !document.removeEventListener) {\n            return;\n        }\n        document.removeEventListener('securitypolicyviolation', CSPMonitor.listener);\n        CSPMonitor.loggers = new Set();\n        CSPMonitor.added = false;\n    }\n    static disable() {\n        CSPMonitor.shouldRegisterCSPMonitor = false;\n        CSPMonitor.unregister();\n    }\n    static addLogger(logger) {\n        if (logger) {\n            CSPMonitor.loggers.add(logger);\n        }\n    }\n    static removeLogger(logger) {\n        if (logger) {\n            CSPMonitor.loggers.delete(logger);\n        }\n    }\n}\nexports.default = CSPMonitor;\nCSPMonitor.loggers = new Set();\nCSPMonitor.shouldRegisterCSPMonitor = true;\nCSPMonitor.added = false;\n/* istanbul ignore next */\nCSPMonitor.listener = (event) => {\n    const message = 'Security Policy Violation\\n' +\n        `Blocked URI: ${event.blockedURI}\\n` +\n        `Violated Directive: ${event.violatedDirective}\\n` +\n        `Original Policy: ${event.originalPolicy}\\n` +\n        `Document URI: ${event.documentURI}\\n` +\n        `Source File: ${event.sourceFile}\\n` +\n        `Line No.: ${event.lineNumber}\\n`;\n    for (const logger of CSPMonitor.loggers) {\n        logger.error(message);\n    }\n    if (CSPMonitor.loggers.size === 0) {\n        console.error(message);\n    }\n};\n//# sourceMappingURL=CSPMonitor.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CheckAudioConnectivityFeedback = void 0;\nvar CheckAudioConnectivityFeedback;\n(function (CheckAudioConnectivityFeedback) {\n    CheckAudioConnectivityFeedback[CheckAudioConnectivityFeedback[\"Succeeded\"] = 0] = \"Succeeded\";\n    CheckAudioConnectivityFeedback[CheckAudioConnectivityFeedback[\"AudioInputRequestFailed\"] = 1] = \"AudioInputRequestFailed\";\n    CheckAudioConnectivityFeedback[CheckAudioConnectivityFeedback[\"AudioInputPermissionDenied\"] = 2] = \"AudioInputPermissionDenied\";\n    CheckAudioConnectivityFeedback[CheckAudioConnectivityFeedback[\"ConnectionFailed\"] = 3] = \"ConnectionFailed\";\n    CheckAudioConnectivityFeedback[CheckAudioConnectivityFeedback[\"AudioNotReceived\"] = 4] = \"AudioNotReceived\";\n})(CheckAudioConnectivityFeedback = exports.CheckAudioConnectivityFeedback || (exports.CheckAudioConnectivityFeedback = {}));\nexports.default = CheckAudioConnectivityFeedback;\n//# sourceMappingURL=CheckAudioConnectivityFeedback.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CheckAudioInputFeedback = void 0;\nvar CheckAudioInputFeedback;\n(function (CheckAudioInputFeedback) {\n    CheckAudioInputFeedback[CheckAudioInputFeedback[\"Succeeded\"] = 0] = \"Succeeded\";\n    CheckAudioInputFeedback[CheckAudioInputFeedback[\"Failed\"] = 1] = \"Failed\";\n    CheckAudioInputFeedback[CheckAudioInputFeedback[\"PermissionDenied\"] = 2] = \"PermissionDenied\";\n})(CheckAudioInputFeedback = exports.CheckAudioInputFeedback || (exports.CheckAudioInputFeedback = {}));\nexports.default = CheckAudioInputFeedback;\n//# sourceMappingURL=CheckAudioInputFeedback.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CheckAudioOutputFeedback = void 0;\nvar CheckAudioOutputFeedback;\n(function (CheckAudioOutputFeedback) {\n    CheckAudioOutputFeedback[CheckAudioOutputFeedback[\"Succeeded\"] = 0] = \"Succeeded\";\n    CheckAudioOutputFeedback[CheckAudioOutputFeedback[\"Failed\"] = 1] = \"Failed\";\n})(CheckAudioOutputFeedback = exports.CheckAudioOutputFeedback || (exports.CheckAudioOutputFeedback = {}));\nexports.default = CheckAudioOutputFeedback;\n//# sourceMappingURL=CheckAudioOutputFeedback.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CheckCameraResolutionFeedback = void 0;\nvar CheckCameraResolutionFeedback;\n(function (CheckCameraResolutionFeedback) {\n    CheckCameraResolutionFeedback[CheckCameraResolutionFeedback[\"Succeeded\"] = 0] = \"Succeeded\";\n    CheckCameraResolutionFeedback[CheckCameraResolutionFeedback[\"Failed\"] = 1] = \"Failed\";\n    CheckCameraResolutionFeedback[CheckCameraResolutionFeedback[\"ResolutionNotSupported\"] = 2] = \"ResolutionNotSupported\";\n    CheckCameraResolutionFeedback[CheckCameraResolutionFeedback[\"PermissionDenied\"] = 3] = \"PermissionDenied\";\n})(CheckCameraResolutionFeedback = exports.CheckCameraResolutionFeedback || (exports.CheckCameraResolutionFeedback = {}));\nexports.default = CheckCameraResolutionFeedback;\n//# sourceMappingURL=CheckCameraResolutionFeedback.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CheckContentShareConnectivityFeedback = void 0;\nvar CheckContentShareConnectivityFeedback;\n(function (CheckContentShareConnectivityFeedback) {\n    CheckContentShareConnectivityFeedback[CheckContentShareConnectivityFeedback[\"Succeeded\"] = 0] = \"Succeeded\";\n    CheckContentShareConnectivityFeedback[CheckContentShareConnectivityFeedback[\"Failed\"] = 1] = \"Failed\";\n    CheckContentShareConnectivityFeedback[CheckContentShareConnectivityFeedback[\"PermissionDenied\"] = 2] = \"PermissionDenied\";\n    CheckContentShareConnectivityFeedback[CheckContentShareConnectivityFeedback[\"TimedOut\"] = 3] = \"TimedOut\";\n    CheckContentShareConnectivityFeedback[CheckContentShareConnectivityFeedback[\"ConnectionFailed\"] = 4] = \"ConnectionFailed\";\n})(CheckContentShareConnectivityFeedback = exports.CheckContentShareConnectivityFeedback || (exports.CheckContentShareConnectivityFeedback = {}));\nexports.default = CheckContentShareConnectivityFeedback;\n//# sourceMappingURL=CheckContentShareConnectivityFeedback.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CheckNetworkTCPConnectivityFeedback = void 0;\nvar CheckNetworkTCPConnectivityFeedback;\n(function (CheckNetworkTCPConnectivityFeedback) {\n    CheckNetworkTCPConnectivityFeedback[CheckNetworkTCPConnectivityFeedback[\"Succeeded\"] = 0] = \"Succeeded\";\n    CheckNetworkTCPConnectivityFeedback[CheckNetworkTCPConnectivityFeedback[\"MeetingSessionURLsNotInitialized\"] = 1] = \"MeetingSessionURLsNotInitialized\";\n    CheckNetworkTCPConnectivityFeedback[CheckNetworkTCPConnectivityFeedback[\"ConnectionFailed\"] = 2] = \"ConnectionFailed\";\n    CheckNetworkTCPConnectivityFeedback[CheckNetworkTCPConnectivityFeedback[\"ICENegotiationFailed\"] = 3] = \"ICENegotiationFailed\";\n})(CheckNetworkTCPConnectivityFeedback = exports.CheckNetworkTCPConnectivityFeedback || (exports.CheckNetworkTCPConnectivityFeedback = {}));\nexports.default = CheckNetworkTCPConnectivityFeedback;\n//# sourceMappingURL=CheckNetworkTCPConnectivityFeedback.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CheckNetworkUDPConnectivityFeedback = void 0;\nvar CheckNetworkUDPConnectivityFeedback;\n(function (CheckNetworkUDPConnectivityFeedback) {\n    CheckNetworkUDPConnectivityFeedback[CheckNetworkUDPConnectivityFeedback[\"Succeeded\"] = 0] = \"Succeeded\";\n    CheckNetworkUDPConnectivityFeedback[CheckNetworkUDPConnectivityFeedback[\"MeetingSessionURLsNotInitialized\"] = 1] = \"MeetingSessionURLsNotInitialized\";\n    CheckNetworkUDPConnectivityFeedback[CheckNetworkUDPConnectivityFeedback[\"ConnectionFailed\"] = 2] = \"ConnectionFailed\";\n    CheckNetworkUDPConnectivityFeedback[CheckNetworkUDPConnectivityFeedback[\"ICENegotiationFailed\"] = 3] = \"ICENegotiationFailed\";\n})(CheckNetworkUDPConnectivityFeedback = exports.CheckNetworkUDPConnectivityFeedback || (exports.CheckNetworkUDPConnectivityFeedback = {}));\nexports.default = CheckNetworkUDPConnectivityFeedback;\n//# sourceMappingURL=CheckNetworkUDPConnectivityFeedback.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CheckVideoConnectivityFeedback = void 0;\nvar CheckVideoConnectivityFeedback;\n(function (CheckVideoConnectivityFeedback) {\n    CheckVideoConnectivityFeedback[CheckVideoConnectivityFeedback[\"Succeeded\"] = 0] = \"Succeeded\";\n    CheckVideoConnectivityFeedback[CheckVideoConnectivityFeedback[\"VideoInputRequestFailed\"] = 1] = \"VideoInputRequestFailed\";\n    CheckVideoConnectivityFeedback[CheckVideoConnectivityFeedback[\"VideoInputPermissionDenied\"] = 2] = \"VideoInputPermissionDenied\";\n    CheckVideoConnectivityFeedback[CheckVideoConnectivityFeedback[\"ConnectionFailed\"] = 3] = \"ConnectionFailed\";\n    CheckVideoConnectivityFeedback[CheckVideoConnectivityFeedback[\"VideoNotSent\"] = 4] = \"VideoNotSent\";\n})(CheckVideoConnectivityFeedback = exports.CheckVideoConnectivityFeedback || (exports.CheckVideoConnectivityFeedback = {}));\nexports.default = CheckVideoConnectivityFeedback;\n//# sourceMappingURL=CheckVideoConnectivityFeedback.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CheckVideoInputFeedback = void 0;\nvar CheckVideoInputFeedback;\n(function (CheckVideoInputFeedback) {\n    CheckVideoInputFeedback[CheckVideoInputFeedback[\"Succeeded\"] = 0] = \"Succeeded\";\n    CheckVideoInputFeedback[CheckVideoInputFeedback[\"Failed\"] = 1] = \"Failed\";\n    CheckVideoInputFeedback[CheckVideoInputFeedback[\"PermissionDenied\"] = 2] = \"PermissionDenied\";\n})(CheckVideoInputFeedback = exports.CheckVideoInputFeedback || (exports.CheckVideoInputFeedback = {}));\nexports.default = CheckVideoInputFeedback;\n//# sourceMappingURL=CheckVideoInputFeedback.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BaseTask_1 = require(\"./BaseTask\");\nclass CleanRestartedSessionTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'CleanRestartedSessionTask';\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.context.resetConnectionSpecificState();\n        });\n    }\n}\nexports.default = CleanRestartedSessionTask;\n//# sourceMappingURL=CleanRestartedSessionTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignalingClientEventType = void 0;\n/** Defines the event types generated by SignalingClient and the underlying WebSocket connection. */\nvar SignalingClientEventType;\n(function (SignalingClientEventType) {\n    SignalingClientEventType[SignalingClientEventType[\"WebSocketConnecting\"] = 0] = \"WebSocketConnecting\";\n    SignalingClientEventType[SignalingClientEventType[\"WebSocketOpen\"] = 1] = \"WebSocketOpen\";\n    SignalingClientEventType[SignalingClientEventType[\"WebSocketError\"] = 2] = \"WebSocketError\";\n    SignalingClientEventType[SignalingClientEventType[\"WebSocketClosing\"] = 3] = \"WebSocketClosing\";\n    SignalingClientEventType[SignalingClientEventType[\"WebSocketClosed\"] = 4] = \"WebSocketClosed\";\n    SignalingClientEventType[SignalingClientEventType[\"WebSocketFailed\"] = 5] = \"WebSocketFailed\";\n    SignalingClientEventType[SignalingClientEventType[\"WebSocketMessage\"] = 6] = \"WebSocketMessage\";\n    SignalingClientEventType[SignalingClientEventType[\"WebSocketSendMessageFailure\"] = 7] = \"WebSocketSendMessageFailure\";\n    SignalingClientEventType[SignalingClientEventType[\"WebSocketSentMessage\"] = 8] = \"WebSocketSentMessage\";\n    SignalingClientEventType[SignalingClientEventType[\"ProtocolDecodeFailure\"] = 9] = \"ProtocolDecodeFailure\";\n    SignalingClientEventType[SignalingClientEventType[\"ReceivedSignalFrame\"] = 10] = \"ReceivedSignalFrame\";\n    SignalingClientEventType[SignalingClientEventType[\"WebSocketSkippedMessage\"] = 11] = \"WebSocketSkippedMessage\";\n})(SignalingClientEventType = exports.SignalingClientEventType || (exports.SignalingClientEventType = {}));\nexports.default = SignalingClientEventType;\n//# sourceMappingURL=SignalingClientEventType.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SignalingClientEventType_1 = require(\"../signalingclient/SignalingClientEventType\");\nconst BaseTask_1 = require(\"./BaseTask\");\n/*\n * `CleanStoppedSessionTask` permenently cleans up all components of `AudioVideoControllerState` after a stop call.\n */\nclass CleanStoppedSessionTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'CleanStoppedSessionTask';\n        this.taskCanceler = null;\n    }\n    cancel() {\n        if (this.taskCanceler) {\n            this.taskCanceler.cancel();\n            this.taskCanceler = null;\n        }\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (this.context.signalingClient.ready()) {\n                    this.context.signalingClient.closeConnection();\n                    yield this.receiveWebSocketClosedEvent();\n                }\n            }\n            catch (error) {\n                throw error;\n            }\n            finally {\n                for (const observer of this.context.removableObservers) {\n                    observer.removeObserver();\n                }\n                this.context.resetConnectionSpecificState();\n                this.context.statsCollector.stop();\n                this.context.statsCollector = null;\n                this.context.connectionMonitor.stop();\n                this.context.connectionMonitor = null;\n                if (this.context.videoUplinkBandwidthPolicy.setTransceiverController) {\n                    this.context.videoUplinkBandwidthPolicy.setTransceiverController(undefined);\n                }\n                if (this.context.videoDownlinkBandwidthPolicy.bindToTileController) {\n                    this.context.videoDownlinkBandwidthPolicy.bindToTileController(undefined);\n                }\n                // This state may be reused to join another conference, so clear out all the existing video tiles\n                const tile = this.context.videoTileController.getLocalVideoTile();\n                if (tile) {\n                    tile.bindVideoStream('', true, null, null, null, null);\n                }\n                this.context.videoTileController.removeAllVideoTiles();\n            }\n        });\n    }\n    receiveWebSocketClosedEvent() {\n        return new Promise((resolve, reject) => {\n            class Interceptor {\n                constructor(signalingClient) {\n                    this.signalingClient = signalingClient;\n                }\n                cancel() {\n                    this.signalingClient.removeObserver(this);\n                    reject(new Error(`CleanStoppedSessionTask got canceled while waiting for the WebSocket closed event`));\n                }\n                handleSignalingClientEvent(event) {\n                    if (event.type === SignalingClientEventType_1.default.WebSocketClosed) {\n                        this.signalingClient.removeObserver(this);\n                        resolve();\n                    }\n                }\n            }\n            const interceptor = new Interceptor(this.context.signalingClient);\n            this.taskCanceler = interceptor;\n            this.context.signalingClient.registerObserver(interceptor);\n        });\n    }\n}\nexports.default = CleanStoppedSessionTask;\n//# sourceMappingURL=CleanStoppedSessionTask.js.map","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.SdkSignalFrame = (function() {\n\n    /**\n     * Properties of a SdkSignalFrame.\n     * @exports ISdkSignalFrame\n     * @interface ISdkSignalFrame\n     * @property {number|Long} timestampMs SdkSignalFrame timestampMs\n     * @property {SdkSignalFrame.Type} type SdkSignalFrame type\n     * @property {ISdkErrorFrame|null} [error] SdkSignalFrame error\n     * @property {ISdkJoinFrame|null} [join] SdkSignalFrame join\n     * @property {ISdkJoinAckFrame|null} [joinack] SdkSignalFrame joinack\n     * @property {ISdkSubscribeFrame|null} [sub] SdkSignalFrame sub\n     * @property {ISdkSubscribeAckFrame|null} [suback] SdkSignalFrame suback\n     * @property {ISdkIndexFrame|null} [index] SdkSignalFrame index\n     * @property {ISdkPauseResumeFrame|null} [pause] SdkSignalFrame pause\n     * @property {ISdkLeaveFrame|null} [leave] SdkSignalFrame leave\n     * @property {ISdkLeaveAckFrame|null} [leaveAck] SdkSignalFrame leaveAck\n     * @property {ISdkBitrateFrame|null} [bitrates] SdkSignalFrame bitrates\n     * @property {ISdkAudioControlFrame|null} [audioControl] SdkSignalFrame audioControl\n     * @property {ISdkAudioMetadataFrame|null} [audioMetadata] SdkSignalFrame audioMetadata\n     * @property {ISdkAudioStreamIdInfoFrame|null} [audioStreamIdInfo] SdkSignalFrame audioStreamIdInfo\n     * @property {ISdkPingPongFrame|null} [pingPong] SdkSignalFrame pingPong\n     * @property {ISdkAudioStatusFrame|null} [audioStatus] SdkSignalFrame audioStatus\n     * @property {ISdkClientMetricFrame|null} [clientMetric] SdkSignalFrame clientMetric\n     * @property {ISdkDataMessageFrame|null} [dataMessage] SdkSignalFrame dataMessage\n     * @property {ISdkRemoteVideoUpdateFrame|null} [remoteVideoUpdate] SdkSignalFrame remoteVideoUpdate\n     * @property {ISdkPrimaryMeetingJoinFrame|null} [primaryMeetingJoin] SdkSignalFrame primaryMeetingJoin\n     * @property {ISdkPrimaryMeetingJoinAckFrame|null} [primaryMeetingJoinAck] SdkSignalFrame primaryMeetingJoinAck\n     * @property {ISdkPrimaryMeetingLeaveFrame|null} [primaryMeetingLeave] SdkSignalFrame primaryMeetingLeave\n     */\n\n    /**\n     * Constructs a new SdkSignalFrame.\n     * @exports SdkSignalFrame\n     * @classdesc Represents a SdkSignalFrame.\n     * @implements ISdkSignalFrame\n     * @constructor\n     * @param {ISdkSignalFrame=} [properties] Properties to set\n     */\n    function SdkSignalFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkSignalFrame timestampMs.\n     * @member {number|Long} timestampMs\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.timestampMs = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * SdkSignalFrame type.\n     * @member {SdkSignalFrame.Type} type\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.type = 1;\n\n    /**\n     * SdkSignalFrame error.\n     * @member {ISdkErrorFrame|null|undefined} error\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.error = null;\n\n    /**\n     * SdkSignalFrame join.\n     * @member {ISdkJoinFrame|null|undefined} join\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.join = null;\n\n    /**\n     * SdkSignalFrame joinack.\n     * @member {ISdkJoinAckFrame|null|undefined} joinack\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.joinack = null;\n\n    /**\n     * SdkSignalFrame sub.\n     * @member {ISdkSubscribeFrame|null|undefined} sub\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.sub = null;\n\n    /**\n     * SdkSignalFrame suback.\n     * @member {ISdkSubscribeAckFrame|null|undefined} suback\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.suback = null;\n\n    /**\n     * SdkSignalFrame index.\n     * @member {ISdkIndexFrame|null|undefined} index\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.index = null;\n\n    /**\n     * SdkSignalFrame pause.\n     * @member {ISdkPauseResumeFrame|null|undefined} pause\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.pause = null;\n\n    /**\n     * SdkSignalFrame leave.\n     * @member {ISdkLeaveFrame|null|undefined} leave\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.leave = null;\n\n    /**\n     * SdkSignalFrame leaveAck.\n     * @member {ISdkLeaveAckFrame|null|undefined} leaveAck\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.leaveAck = null;\n\n    /**\n     * SdkSignalFrame bitrates.\n     * @member {ISdkBitrateFrame|null|undefined} bitrates\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.bitrates = null;\n\n    /**\n     * SdkSignalFrame audioControl.\n     * @member {ISdkAudioControlFrame|null|undefined} audioControl\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.audioControl = null;\n\n    /**\n     * SdkSignalFrame audioMetadata.\n     * @member {ISdkAudioMetadataFrame|null|undefined} audioMetadata\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.audioMetadata = null;\n\n    /**\n     * SdkSignalFrame audioStreamIdInfo.\n     * @member {ISdkAudioStreamIdInfoFrame|null|undefined} audioStreamIdInfo\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.audioStreamIdInfo = null;\n\n    /**\n     * SdkSignalFrame pingPong.\n     * @member {ISdkPingPongFrame|null|undefined} pingPong\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.pingPong = null;\n\n    /**\n     * SdkSignalFrame audioStatus.\n     * @member {ISdkAudioStatusFrame|null|undefined} audioStatus\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.audioStatus = null;\n\n    /**\n     * SdkSignalFrame clientMetric.\n     * @member {ISdkClientMetricFrame|null|undefined} clientMetric\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.clientMetric = null;\n\n    /**\n     * SdkSignalFrame dataMessage.\n     * @member {ISdkDataMessageFrame|null|undefined} dataMessage\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.dataMessage = null;\n\n    /**\n     * SdkSignalFrame remoteVideoUpdate.\n     * @member {ISdkRemoteVideoUpdateFrame|null|undefined} remoteVideoUpdate\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.remoteVideoUpdate = null;\n\n    /**\n     * SdkSignalFrame primaryMeetingJoin.\n     * @member {ISdkPrimaryMeetingJoinFrame|null|undefined} primaryMeetingJoin\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.primaryMeetingJoin = null;\n\n    /**\n     * SdkSignalFrame primaryMeetingJoinAck.\n     * @member {ISdkPrimaryMeetingJoinAckFrame|null|undefined} primaryMeetingJoinAck\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.primaryMeetingJoinAck = null;\n\n    /**\n     * SdkSignalFrame primaryMeetingLeave.\n     * @member {ISdkPrimaryMeetingLeaveFrame|null|undefined} primaryMeetingLeave\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.primaryMeetingLeave = null;\n\n    /**\n     * Creates a new SdkSignalFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {ISdkSignalFrame=} [properties] Properties to set\n     * @returns {SdkSignalFrame} SdkSignalFrame instance\n     */\n    SdkSignalFrame.create = function create(properties) {\n        return new SdkSignalFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkSignalFrame message. Does not implicitly {@link SdkSignalFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {ISdkSignalFrame} message SdkSignalFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkSignalFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.timestampMs);\n        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);\n        if (message.error != null && Object.hasOwnProperty.call(message, \"error\"))\n            $root.SdkErrorFrame.encode(message.error, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        if (message.join != null && Object.hasOwnProperty.call(message, \"join\"))\n            $root.SdkJoinFrame.encode(message.join, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n        if (message.joinack != null && Object.hasOwnProperty.call(message, \"joinack\"))\n            $root.SdkJoinAckFrame.encode(message.joinack, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n        if (message.sub != null && Object.hasOwnProperty.call(message, \"sub\"))\n            $root.SdkSubscribeFrame.encode(message.sub, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n        if (message.suback != null && Object.hasOwnProperty.call(message, \"suback\"))\n            $root.SdkSubscribeAckFrame.encode(message.suback, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n        if (message.index != null && Object.hasOwnProperty.call(message, \"index\"))\n            $root.SdkIndexFrame.encode(message.index, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n        if (message.pause != null && Object.hasOwnProperty.call(message, \"pause\"))\n            $root.SdkPauseResumeFrame.encode(message.pause, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n        if (message.leave != null && Object.hasOwnProperty.call(message, \"leave\"))\n            $root.SdkLeaveFrame.encode(message.leave, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n        if (message.leaveAck != null && Object.hasOwnProperty.call(message, \"leaveAck\"))\n            $root.SdkLeaveAckFrame.encode(message.leaveAck, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n        if (message.bitrates != null && Object.hasOwnProperty.call(message, \"bitrates\"))\n            $root.SdkBitrateFrame.encode(message.bitrates, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n        if (message.audioControl != null && Object.hasOwnProperty.call(message, \"audioControl\"))\n            $root.SdkAudioControlFrame.encode(message.audioControl, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();\n        if (message.audioMetadata != null && Object.hasOwnProperty.call(message, \"audioMetadata\"))\n            $root.SdkAudioMetadataFrame.encode(message.audioMetadata, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();\n        if (message.audioStreamIdInfo != null && Object.hasOwnProperty.call(message, \"audioStreamIdInfo\"))\n            $root.SdkAudioStreamIdInfoFrame.encode(message.audioStreamIdInfo, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();\n        if (message.pingPong != null && Object.hasOwnProperty.call(message, \"pingPong\"))\n            $root.SdkPingPongFrame.encode(message.pingPong, writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();\n        if (message.audioStatus != null && Object.hasOwnProperty.call(message, \"audioStatus\"))\n            $root.SdkAudioStatusFrame.encode(message.audioStatus, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();\n        if (message.clientMetric != null && Object.hasOwnProperty.call(message, \"clientMetric\"))\n            $root.SdkClientMetricFrame.encode(message.clientMetric, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();\n        if (message.dataMessage != null && Object.hasOwnProperty.call(message, \"dataMessage\"))\n            $root.SdkDataMessageFrame.encode(message.dataMessage, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();\n        if (message.remoteVideoUpdate != null && Object.hasOwnProperty.call(message, \"remoteVideoUpdate\"))\n            $root.SdkRemoteVideoUpdateFrame.encode(message.remoteVideoUpdate, writer.uint32(/* id 25, wireType 2 =*/202).fork()).ldelim();\n        if (message.primaryMeetingJoin != null && Object.hasOwnProperty.call(message, \"primaryMeetingJoin\"))\n            $root.SdkPrimaryMeetingJoinFrame.encode(message.primaryMeetingJoin, writer.uint32(/* id 26, wireType 2 =*/210).fork()).ldelim();\n        if (message.primaryMeetingJoinAck != null && Object.hasOwnProperty.call(message, \"primaryMeetingJoinAck\"))\n            $root.SdkPrimaryMeetingJoinAckFrame.encode(message.primaryMeetingJoinAck, writer.uint32(/* id 27, wireType 2 =*/218).fork()).ldelim();\n        if (message.primaryMeetingLeave != null && Object.hasOwnProperty.call(message, \"primaryMeetingLeave\"))\n            $root.SdkPrimaryMeetingLeaveFrame.encode(message.primaryMeetingLeave, writer.uint32(/* id 28, wireType 2 =*/226).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkSignalFrame message, length delimited. Does not implicitly {@link SdkSignalFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {ISdkSignalFrame} message SdkSignalFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkSignalFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkSignalFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkSignalFrame} SdkSignalFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkSignalFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkSignalFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.timestampMs = reader.uint64();\n                break;\n            case 2:\n                message.type = reader.int32();\n                break;\n            case 3:\n                message.error = $root.SdkErrorFrame.decode(reader, reader.uint32());\n                break;\n            case 4:\n                message.join = $root.SdkJoinFrame.decode(reader, reader.uint32());\n                break;\n            case 5:\n                message.joinack = $root.SdkJoinAckFrame.decode(reader, reader.uint32());\n                break;\n            case 6:\n                message.sub = $root.SdkSubscribeFrame.decode(reader, reader.uint32());\n                break;\n            case 7:\n                message.suback = $root.SdkSubscribeAckFrame.decode(reader, reader.uint32());\n                break;\n            case 8:\n                message.index = $root.SdkIndexFrame.decode(reader, reader.uint32());\n                break;\n            case 10:\n                message.pause = $root.SdkPauseResumeFrame.decode(reader, reader.uint32());\n                break;\n            case 11:\n                message.leave = $root.SdkLeaveFrame.decode(reader, reader.uint32());\n                break;\n            case 12:\n                message.leaveAck = $root.SdkLeaveAckFrame.decode(reader, reader.uint32());\n                break;\n            case 14:\n                message.bitrates = $root.SdkBitrateFrame.decode(reader, reader.uint32());\n                break;\n            case 17:\n                message.audioControl = $root.SdkAudioControlFrame.decode(reader, reader.uint32());\n                break;\n            case 18:\n                message.audioMetadata = $root.SdkAudioMetadataFrame.decode(reader, reader.uint32());\n                break;\n            case 19:\n                message.audioStreamIdInfo = $root.SdkAudioStreamIdInfoFrame.decode(reader, reader.uint32());\n                break;\n            case 20:\n                message.pingPong = $root.SdkPingPongFrame.decode(reader, reader.uint32());\n                break;\n            case 21:\n                message.audioStatus = $root.SdkAudioStatusFrame.decode(reader, reader.uint32());\n                break;\n            case 22:\n                message.clientMetric = $root.SdkClientMetricFrame.decode(reader, reader.uint32());\n                break;\n            case 23:\n                message.dataMessage = $root.SdkDataMessageFrame.decode(reader, reader.uint32());\n                break;\n            case 25:\n                message.remoteVideoUpdate = $root.SdkRemoteVideoUpdateFrame.decode(reader, reader.uint32());\n                break;\n            case 26:\n                message.primaryMeetingJoin = $root.SdkPrimaryMeetingJoinFrame.decode(reader, reader.uint32());\n                break;\n            case 27:\n                message.primaryMeetingJoinAck = $root.SdkPrimaryMeetingJoinAckFrame.decode(reader, reader.uint32());\n                break;\n            case 28:\n                message.primaryMeetingLeave = $root.SdkPrimaryMeetingLeaveFrame.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        if (!message.hasOwnProperty(\"timestampMs\"))\n            throw $util.ProtocolError(\"missing required 'timestampMs'\", { instance: message });\n        if (!message.hasOwnProperty(\"type\"))\n            throw $util.ProtocolError(\"missing required 'type'\", { instance: message });\n        return message;\n    };\n\n    /**\n     * Decodes a SdkSignalFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkSignalFrame} SdkSignalFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkSignalFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkSignalFrame message.\n     * @function verify\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkSignalFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (!$util.isInteger(message.timestampMs) && !(message.timestampMs && $util.isInteger(message.timestampMs.low) && $util.isInteger(message.timestampMs.high)))\n            return \"timestampMs: integer|Long expected\";\n        switch (message.type) {\n        default:\n            return \"type: enum value expected\";\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 13:\n        case 16:\n        case 17:\n        case 18:\n        case 19:\n        case 20:\n        case 21:\n        case 22:\n        case 24:\n        case 25:\n        case 26:\n        case 27:\n            break;\n        }\n        if (message.error != null && message.hasOwnProperty(\"error\")) {\n            var error = $root.SdkErrorFrame.verify(message.error);\n            if (error)\n                return \"error.\" + error;\n        }\n        if (message.join != null && message.hasOwnProperty(\"join\")) {\n            var error = $root.SdkJoinFrame.verify(message.join);\n            if (error)\n                return \"join.\" + error;\n        }\n        if (message.joinack != null && message.hasOwnProperty(\"joinack\")) {\n            var error = $root.SdkJoinAckFrame.verify(message.joinack);\n            if (error)\n                return \"joinack.\" + error;\n        }\n        if (message.sub != null && message.hasOwnProperty(\"sub\")) {\n            var error = $root.SdkSubscribeFrame.verify(message.sub);\n            if (error)\n                return \"sub.\" + error;\n        }\n        if (message.suback != null && message.hasOwnProperty(\"suback\")) {\n            var error = $root.SdkSubscribeAckFrame.verify(message.suback);\n            if (error)\n                return \"suback.\" + error;\n        }\n        if (message.index != null && message.hasOwnProperty(\"index\")) {\n            var error = $root.SdkIndexFrame.verify(message.index);\n            if (error)\n                return \"index.\" + error;\n        }\n        if (message.pause != null && message.hasOwnProperty(\"pause\")) {\n            var error = $root.SdkPauseResumeFrame.verify(message.pause);\n            if (error)\n                return \"pause.\" + error;\n        }\n        if (message.leave != null && message.hasOwnProperty(\"leave\")) {\n            var error = $root.SdkLeaveFrame.verify(message.leave);\n            if (error)\n                return \"leave.\" + error;\n        }\n        if (message.leaveAck != null && message.hasOwnProperty(\"leaveAck\")) {\n            var error = $root.SdkLeaveAckFrame.verify(message.leaveAck);\n            if (error)\n                return \"leaveAck.\" + error;\n        }\n        if (message.bitrates != null && message.hasOwnProperty(\"bitrates\")) {\n            var error = $root.SdkBitrateFrame.verify(message.bitrates);\n            if (error)\n                return \"bitrates.\" + error;\n        }\n        if (message.audioControl != null && message.hasOwnProperty(\"audioControl\")) {\n            var error = $root.SdkAudioControlFrame.verify(message.audioControl);\n            if (error)\n                return \"audioControl.\" + error;\n        }\n        if (message.audioMetadata != null && message.hasOwnProperty(\"audioMetadata\")) {\n            var error = $root.SdkAudioMetadataFrame.verify(message.audioMetadata);\n            if (error)\n                return \"audioMetadata.\" + error;\n        }\n        if (message.audioStreamIdInfo != null && message.hasOwnProperty(\"audioStreamIdInfo\")) {\n            var error = $root.SdkAudioStreamIdInfoFrame.verify(message.audioStreamIdInfo);\n            if (error)\n                return \"audioStreamIdInfo.\" + error;\n        }\n        if (message.pingPong != null && message.hasOwnProperty(\"pingPong\")) {\n            var error = $root.SdkPingPongFrame.verify(message.pingPong);\n            if (error)\n                return \"pingPong.\" + error;\n        }\n        if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\")) {\n            var error = $root.SdkAudioStatusFrame.verify(message.audioStatus);\n            if (error)\n                return \"audioStatus.\" + error;\n        }\n        if (message.clientMetric != null && message.hasOwnProperty(\"clientMetric\")) {\n            var error = $root.SdkClientMetricFrame.verify(message.clientMetric);\n            if (error)\n                return \"clientMetric.\" + error;\n        }\n        if (message.dataMessage != null && message.hasOwnProperty(\"dataMessage\")) {\n            var error = $root.SdkDataMessageFrame.verify(message.dataMessage);\n            if (error)\n                return \"dataMessage.\" + error;\n        }\n        if (message.remoteVideoUpdate != null && message.hasOwnProperty(\"remoteVideoUpdate\")) {\n            var error = $root.SdkRemoteVideoUpdateFrame.verify(message.remoteVideoUpdate);\n            if (error)\n                return \"remoteVideoUpdate.\" + error;\n        }\n        if (message.primaryMeetingJoin != null && message.hasOwnProperty(\"primaryMeetingJoin\")) {\n            var error = $root.SdkPrimaryMeetingJoinFrame.verify(message.primaryMeetingJoin);\n            if (error)\n                return \"primaryMeetingJoin.\" + error;\n        }\n        if (message.primaryMeetingJoinAck != null && message.hasOwnProperty(\"primaryMeetingJoinAck\")) {\n            var error = $root.SdkPrimaryMeetingJoinAckFrame.verify(message.primaryMeetingJoinAck);\n            if (error)\n                return \"primaryMeetingJoinAck.\" + error;\n        }\n        if (message.primaryMeetingLeave != null && message.hasOwnProperty(\"primaryMeetingLeave\")) {\n            var error = $root.SdkPrimaryMeetingLeaveFrame.verify(message.primaryMeetingLeave);\n            if (error)\n                return \"primaryMeetingLeave.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkSignalFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkSignalFrame} SdkSignalFrame\n     */\n    SdkSignalFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkSignalFrame)\n            return object;\n        var message = new $root.SdkSignalFrame();\n        if (object.timestampMs != null)\n            if ($util.Long)\n                (message.timestampMs = $util.Long.fromValue(object.timestampMs)).unsigned = true;\n            else if (typeof object.timestampMs === \"string\")\n                message.timestampMs = parseInt(object.timestampMs, 10);\n            else if (typeof object.timestampMs === \"number\")\n                message.timestampMs = object.timestampMs;\n            else if (typeof object.timestampMs === \"object\")\n                message.timestampMs = new $util.LongBits(object.timestampMs.low >>> 0, object.timestampMs.high >>> 0).toNumber(true);\n        switch (object.type) {\n        case \"JOIN\":\n        case 1:\n            message.type = 1;\n            break;\n        case \"JOIN_ACK\":\n        case 2:\n            message.type = 2;\n            break;\n        case \"SUBSCRIBE\":\n        case 3:\n            message.type = 3;\n            break;\n        case \"SUBSCRIBE_ACK\":\n        case 4:\n            message.type = 4;\n            break;\n        case \"INDEX\":\n        case 5:\n            message.type = 5;\n            break;\n        case \"PAUSE\":\n        case 7:\n            message.type = 7;\n            break;\n        case \"RESUME\":\n        case 8:\n            message.type = 8;\n            break;\n        case \"LEAVE\":\n        case 9:\n            message.type = 9;\n            break;\n        case \"LEAVE_ACK\":\n        case 10:\n            message.type = 10;\n            break;\n        case \"BITRATES\":\n        case 13:\n            message.type = 13;\n            break;\n        case \"AUDIO_CONTROL\":\n        case 16:\n            message.type = 16;\n            break;\n        case \"AUDIO_METADATA\":\n        case 17:\n            message.type = 17;\n            break;\n        case \"AUDIO_STREAM_ID_INFO\":\n        case 18:\n            message.type = 18;\n            break;\n        case \"PING_PONG\":\n        case 19:\n            message.type = 19;\n            break;\n        case \"AUDIO_STATUS\":\n        case 20:\n            message.type = 20;\n            break;\n        case \"CLIENT_METRIC\":\n        case 21:\n            message.type = 21;\n            break;\n        case \"DATA_MESSAGE\":\n        case 22:\n            message.type = 22;\n            break;\n        case \"REMOTE_VIDEO_UPDATE\":\n        case 24:\n            message.type = 24;\n            break;\n        case \"PRIMARY_MEETING_JOIN\":\n        case 25:\n            message.type = 25;\n            break;\n        case \"PRIMARY_MEETING_JOIN_ACK\":\n        case 26:\n            message.type = 26;\n            break;\n        case \"PRIMARY_MEETING_LEAVE\":\n        case 27:\n            message.type = 27;\n            break;\n        }\n        if (object.error != null) {\n            if (typeof object.error !== \"object\")\n                throw TypeError(\".SdkSignalFrame.error: object expected\");\n            message.error = $root.SdkErrorFrame.fromObject(object.error);\n        }\n        if (object.join != null) {\n            if (typeof object.join !== \"object\")\n                throw TypeError(\".SdkSignalFrame.join: object expected\");\n            message.join = $root.SdkJoinFrame.fromObject(object.join);\n        }\n        if (object.joinack != null) {\n            if (typeof object.joinack !== \"object\")\n                throw TypeError(\".SdkSignalFrame.joinack: object expected\");\n            message.joinack = $root.SdkJoinAckFrame.fromObject(object.joinack);\n        }\n        if (object.sub != null) {\n            if (typeof object.sub !== \"object\")\n                throw TypeError(\".SdkSignalFrame.sub: object expected\");\n            message.sub = $root.SdkSubscribeFrame.fromObject(object.sub);\n        }\n        if (object.suback != null) {\n            if (typeof object.suback !== \"object\")\n                throw TypeError(\".SdkSignalFrame.suback: object expected\");\n            message.suback = $root.SdkSubscribeAckFrame.fromObject(object.suback);\n        }\n        if (object.index != null) {\n            if (typeof object.index !== \"object\")\n                throw TypeError(\".SdkSignalFrame.index: object expected\");\n            message.index = $root.SdkIndexFrame.fromObject(object.index);\n        }\n        if (object.pause != null) {\n            if (typeof object.pause !== \"object\")\n                throw TypeError(\".SdkSignalFrame.pause: object expected\");\n            message.pause = $root.SdkPauseResumeFrame.fromObject(object.pause);\n        }\n        if (object.leave != null) {\n            if (typeof object.leave !== \"object\")\n                throw TypeError(\".SdkSignalFrame.leave: object expected\");\n            message.leave = $root.SdkLeaveFrame.fromObject(object.leave);\n        }\n        if (object.leaveAck != null) {\n            if (typeof object.leaveAck !== \"object\")\n                throw TypeError(\".SdkSignalFrame.leaveAck: object expected\");\n            message.leaveAck = $root.SdkLeaveAckFrame.fromObject(object.leaveAck);\n        }\n        if (object.bitrates != null) {\n            if (typeof object.bitrates !== \"object\")\n                throw TypeError(\".SdkSignalFrame.bitrates: object expected\");\n            message.bitrates = $root.SdkBitrateFrame.fromObject(object.bitrates);\n        }\n        if (object.audioControl != null) {\n            if (typeof object.audioControl !== \"object\")\n                throw TypeError(\".SdkSignalFrame.audioControl: object expected\");\n            message.audioControl = $root.SdkAudioControlFrame.fromObject(object.audioControl);\n        }\n        if (object.audioMetadata != null) {\n            if (typeof object.audioMetadata !== \"object\")\n                throw TypeError(\".SdkSignalFrame.audioMetadata: object expected\");\n            message.audioMetadata = $root.SdkAudioMetadataFrame.fromObject(object.audioMetadata);\n        }\n        if (object.audioStreamIdInfo != null) {\n            if (typeof object.audioStreamIdInfo !== \"object\")\n                throw TypeError(\".SdkSignalFrame.audioStreamIdInfo: object expected\");\n            message.audioStreamIdInfo = $root.SdkAudioStreamIdInfoFrame.fromObject(object.audioStreamIdInfo);\n        }\n        if (object.pingPong != null) {\n            if (typeof object.pingPong !== \"object\")\n                throw TypeError(\".SdkSignalFrame.pingPong: object expected\");\n            message.pingPong = $root.SdkPingPongFrame.fromObject(object.pingPong);\n        }\n        if (object.audioStatus != null) {\n            if (typeof object.audioStatus !== \"object\")\n                throw TypeError(\".SdkSignalFrame.audioStatus: object expected\");\n            message.audioStatus = $root.SdkAudioStatusFrame.fromObject(object.audioStatus);\n        }\n        if (object.clientMetric != null) {\n            if (typeof object.clientMetric !== \"object\")\n                throw TypeError(\".SdkSignalFrame.clientMetric: object expected\");\n            message.clientMetric = $root.SdkClientMetricFrame.fromObject(object.clientMetric);\n        }\n        if (object.dataMessage != null) {\n            if (typeof object.dataMessage !== \"object\")\n                throw TypeError(\".SdkSignalFrame.dataMessage: object expected\");\n            message.dataMessage = $root.SdkDataMessageFrame.fromObject(object.dataMessage);\n        }\n        if (object.remoteVideoUpdate != null) {\n            if (typeof object.remoteVideoUpdate !== \"object\")\n                throw TypeError(\".SdkSignalFrame.remoteVideoUpdate: object expected\");\n            message.remoteVideoUpdate = $root.SdkRemoteVideoUpdateFrame.fromObject(object.remoteVideoUpdate);\n        }\n        if (object.primaryMeetingJoin != null) {\n            if (typeof object.primaryMeetingJoin !== \"object\")\n                throw TypeError(\".SdkSignalFrame.primaryMeetingJoin: object expected\");\n            message.primaryMeetingJoin = $root.SdkPrimaryMeetingJoinFrame.fromObject(object.primaryMeetingJoin);\n        }\n        if (object.primaryMeetingJoinAck != null) {\n            if (typeof object.primaryMeetingJoinAck !== \"object\")\n                throw TypeError(\".SdkSignalFrame.primaryMeetingJoinAck: object expected\");\n            message.primaryMeetingJoinAck = $root.SdkPrimaryMeetingJoinAckFrame.fromObject(object.primaryMeetingJoinAck);\n        }\n        if (object.primaryMeetingLeave != null) {\n            if (typeof object.primaryMeetingLeave !== \"object\")\n                throw TypeError(\".SdkSignalFrame.primaryMeetingLeave: object expected\");\n            message.primaryMeetingLeave = $root.SdkPrimaryMeetingLeaveFrame.fromObject(object.primaryMeetingLeave);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkSignalFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {SdkSignalFrame} message SdkSignalFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkSignalFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.timestampMs = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.timestampMs = options.longs === String ? \"0\" : 0;\n            object.type = options.enums === String ? \"JOIN\" : 1;\n            object.error = null;\n            object.join = null;\n            object.joinack = null;\n            object.sub = null;\n            object.suback = null;\n            object.index = null;\n            object.pause = null;\n            object.leave = null;\n            object.leaveAck = null;\n            object.bitrates = null;\n            object.audioControl = null;\n            object.audioMetadata = null;\n            object.audioStreamIdInfo = null;\n            object.pingPong = null;\n            object.audioStatus = null;\n            object.clientMetric = null;\n            object.dataMessage = null;\n            object.remoteVideoUpdate = null;\n            object.primaryMeetingJoin = null;\n            object.primaryMeetingJoinAck = null;\n            object.primaryMeetingLeave = null;\n        }\n        if (message.timestampMs != null && message.hasOwnProperty(\"timestampMs\"))\n            if (typeof message.timestampMs === \"number\")\n                object.timestampMs = options.longs === String ? String(message.timestampMs) : message.timestampMs;\n            else\n                object.timestampMs = options.longs === String ? $util.Long.prototype.toString.call(message.timestampMs) : options.longs === Number ? new $util.LongBits(message.timestampMs.low >>> 0, message.timestampMs.high >>> 0).toNumber(true) : message.timestampMs;\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            object.type = options.enums === String ? $root.SdkSignalFrame.Type[message.type] : message.type;\n        if (message.error != null && message.hasOwnProperty(\"error\"))\n            object.error = $root.SdkErrorFrame.toObject(message.error, options);\n        if (message.join != null && message.hasOwnProperty(\"join\"))\n            object.join = $root.SdkJoinFrame.toObject(message.join, options);\n        if (message.joinack != null && message.hasOwnProperty(\"joinack\"))\n            object.joinack = $root.SdkJoinAckFrame.toObject(message.joinack, options);\n        if (message.sub != null && message.hasOwnProperty(\"sub\"))\n            object.sub = $root.SdkSubscribeFrame.toObject(message.sub, options);\n        if (message.suback != null && message.hasOwnProperty(\"suback\"))\n            object.suback = $root.SdkSubscribeAckFrame.toObject(message.suback, options);\n        if (message.index != null && message.hasOwnProperty(\"index\"))\n            object.index = $root.SdkIndexFrame.toObject(message.index, options);\n        if (message.pause != null && message.hasOwnProperty(\"pause\"))\n            object.pause = $root.SdkPauseResumeFrame.toObject(message.pause, options);\n        if (message.leave != null && message.hasOwnProperty(\"leave\"))\n            object.leave = $root.SdkLeaveFrame.toObject(message.leave, options);\n        if (message.leaveAck != null && message.hasOwnProperty(\"leaveAck\"))\n            object.leaveAck = $root.SdkLeaveAckFrame.toObject(message.leaveAck, options);\n        if (message.bitrates != null && message.hasOwnProperty(\"bitrates\"))\n            object.bitrates = $root.SdkBitrateFrame.toObject(message.bitrates, options);\n        if (message.audioControl != null && message.hasOwnProperty(\"audioControl\"))\n            object.audioControl = $root.SdkAudioControlFrame.toObject(message.audioControl, options);\n        if (message.audioMetadata != null && message.hasOwnProperty(\"audioMetadata\"))\n            object.audioMetadata = $root.SdkAudioMetadataFrame.toObject(message.audioMetadata, options);\n        if (message.audioStreamIdInfo != null && message.hasOwnProperty(\"audioStreamIdInfo\"))\n            object.audioStreamIdInfo = $root.SdkAudioStreamIdInfoFrame.toObject(message.audioStreamIdInfo, options);\n        if (message.pingPong != null && message.hasOwnProperty(\"pingPong\"))\n            object.pingPong = $root.SdkPingPongFrame.toObject(message.pingPong, options);\n        if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\"))\n            object.audioStatus = $root.SdkAudioStatusFrame.toObject(message.audioStatus, options);\n        if (message.clientMetric != null && message.hasOwnProperty(\"clientMetric\"))\n            object.clientMetric = $root.SdkClientMetricFrame.toObject(message.clientMetric, options);\n        if (message.dataMessage != null && message.hasOwnProperty(\"dataMessage\"))\n            object.dataMessage = $root.SdkDataMessageFrame.toObject(message.dataMessage, options);\n        if (message.remoteVideoUpdate != null && message.hasOwnProperty(\"remoteVideoUpdate\"))\n            object.remoteVideoUpdate = $root.SdkRemoteVideoUpdateFrame.toObject(message.remoteVideoUpdate, options);\n        if (message.primaryMeetingJoin != null && message.hasOwnProperty(\"primaryMeetingJoin\"))\n            object.primaryMeetingJoin = $root.SdkPrimaryMeetingJoinFrame.toObject(message.primaryMeetingJoin, options);\n        if (message.primaryMeetingJoinAck != null && message.hasOwnProperty(\"primaryMeetingJoinAck\"))\n            object.primaryMeetingJoinAck = $root.SdkPrimaryMeetingJoinAckFrame.toObject(message.primaryMeetingJoinAck, options);\n        if (message.primaryMeetingLeave != null && message.hasOwnProperty(\"primaryMeetingLeave\"))\n            object.primaryMeetingLeave = $root.SdkPrimaryMeetingLeaveFrame.toObject(message.primaryMeetingLeave, options);\n        return object;\n    };\n\n    /**\n     * Converts this SdkSignalFrame to JSON.\n     * @function toJSON\n     * @memberof SdkSignalFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkSignalFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * Type enum.\n     * @name SdkSignalFrame.Type\n     * @enum {number}\n     * @property {number} JOIN=1 JOIN value\n     * @property {number} JOIN_ACK=2 JOIN_ACK value\n     * @property {number} SUBSCRIBE=3 SUBSCRIBE value\n     * @property {number} SUBSCRIBE_ACK=4 SUBSCRIBE_ACK value\n     * @property {number} INDEX=5 INDEX value\n     * @property {number} PAUSE=7 PAUSE value\n     * @property {number} RESUME=8 RESUME value\n     * @property {number} LEAVE=9 LEAVE value\n     * @property {number} LEAVE_ACK=10 LEAVE_ACK value\n     * @property {number} BITRATES=13 BITRATES value\n     * @property {number} AUDIO_CONTROL=16 AUDIO_CONTROL value\n     * @property {number} AUDIO_METADATA=17 AUDIO_METADATA value\n     * @property {number} AUDIO_STREAM_ID_INFO=18 AUDIO_STREAM_ID_INFO value\n     * @property {number} PING_PONG=19 PING_PONG value\n     * @property {number} AUDIO_STATUS=20 AUDIO_STATUS value\n     * @property {number} CLIENT_METRIC=21 CLIENT_METRIC value\n     * @property {number} DATA_MESSAGE=22 DATA_MESSAGE value\n     * @property {number} REMOTE_VIDEO_UPDATE=24 REMOTE_VIDEO_UPDATE value\n     * @property {number} PRIMARY_MEETING_JOIN=25 PRIMARY_MEETING_JOIN value\n     * @property {number} PRIMARY_MEETING_JOIN_ACK=26 PRIMARY_MEETING_JOIN_ACK value\n     * @property {number} PRIMARY_MEETING_LEAVE=27 PRIMARY_MEETING_LEAVE value\n     */\n    SdkSignalFrame.Type = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[1] = \"JOIN\"] = 1;\n        values[valuesById[2] = \"JOIN_ACK\"] = 2;\n        values[valuesById[3] = \"SUBSCRIBE\"] = 3;\n        values[valuesById[4] = \"SUBSCRIBE_ACK\"] = 4;\n        values[valuesById[5] = \"INDEX\"] = 5;\n        values[valuesById[7] = \"PAUSE\"] = 7;\n        values[valuesById[8] = \"RESUME\"] = 8;\n        values[valuesById[9] = \"LEAVE\"] = 9;\n        values[valuesById[10] = \"LEAVE_ACK\"] = 10;\n        values[valuesById[13] = \"BITRATES\"] = 13;\n        values[valuesById[16] = \"AUDIO_CONTROL\"] = 16;\n        values[valuesById[17] = \"AUDIO_METADATA\"] = 17;\n        values[valuesById[18] = \"AUDIO_STREAM_ID_INFO\"] = 18;\n        values[valuesById[19] = \"PING_PONG\"] = 19;\n        values[valuesById[20] = \"AUDIO_STATUS\"] = 20;\n        values[valuesById[21] = \"CLIENT_METRIC\"] = 21;\n        values[valuesById[22] = \"DATA_MESSAGE\"] = 22;\n        values[valuesById[24] = \"REMOTE_VIDEO_UPDATE\"] = 24;\n        values[valuesById[25] = \"PRIMARY_MEETING_JOIN\"] = 25;\n        values[valuesById[26] = \"PRIMARY_MEETING_JOIN_ACK\"] = 26;\n        values[valuesById[27] = \"PRIMARY_MEETING_LEAVE\"] = 27;\n        return values;\n    })();\n\n    return SdkSignalFrame;\n})();\n\n$root.SdkErrorFrame = (function() {\n\n    /**\n     * Properties of a SdkErrorFrame.\n     * @exports ISdkErrorFrame\n     * @interface ISdkErrorFrame\n     * @property {number|null} [status] SdkErrorFrame status\n     * @property {string|null} [description] SdkErrorFrame description\n     */\n\n    /**\n     * Constructs a new SdkErrorFrame.\n     * @exports SdkErrorFrame\n     * @classdesc Represents a SdkErrorFrame.\n     * @implements ISdkErrorFrame\n     * @constructor\n     * @param {ISdkErrorFrame=} [properties] Properties to set\n     */\n    function SdkErrorFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkErrorFrame status.\n     * @member {number} status\n     * @memberof SdkErrorFrame\n     * @instance\n     */\n    SdkErrorFrame.prototype.status = 0;\n\n    /**\n     * SdkErrorFrame description.\n     * @member {string} description\n     * @memberof SdkErrorFrame\n     * @instance\n     */\n    SdkErrorFrame.prototype.description = \"\";\n\n    /**\n     * Creates a new SdkErrorFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {ISdkErrorFrame=} [properties] Properties to set\n     * @returns {SdkErrorFrame} SdkErrorFrame instance\n     */\n    SdkErrorFrame.create = function create(properties) {\n        return new SdkErrorFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkErrorFrame message. Does not implicitly {@link SdkErrorFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {ISdkErrorFrame} message SdkErrorFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkErrorFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.status != null && Object.hasOwnProperty.call(message, \"status\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.status);\n        if (message.description != null && Object.hasOwnProperty.call(message, \"description\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkErrorFrame message, length delimited. Does not implicitly {@link SdkErrorFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {ISdkErrorFrame} message SdkErrorFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkErrorFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkErrorFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkErrorFrame} SdkErrorFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkErrorFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkErrorFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.status = reader.uint32();\n                break;\n            case 2:\n                message.description = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkErrorFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkErrorFrame} SdkErrorFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkErrorFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkErrorFrame message.\n     * @function verify\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkErrorFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.status != null && message.hasOwnProperty(\"status\"))\n            if (!$util.isInteger(message.status))\n                return \"status: integer expected\";\n        if (message.description != null && message.hasOwnProperty(\"description\"))\n            if (!$util.isString(message.description))\n                return \"description: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkErrorFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkErrorFrame} SdkErrorFrame\n     */\n    SdkErrorFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkErrorFrame)\n            return object;\n        var message = new $root.SdkErrorFrame();\n        if (object.status != null)\n            message.status = object.status >>> 0;\n        if (object.description != null)\n            message.description = String(object.description);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkErrorFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {SdkErrorFrame} message SdkErrorFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkErrorFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.status = 0;\n            object.description = \"\";\n        }\n        if (message.status != null && message.hasOwnProperty(\"status\"))\n            object.status = message.status;\n        if (message.description != null && message.hasOwnProperty(\"description\"))\n            object.description = message.description;\n        return object;\n    };\n\n    /**\n     * Converts this SdkErrorFrame to JSON.\n     * @function toJSON\n     * @memberof SdkErrorFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkErrorFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkErrorFrame;\n})();\n\n/**\n * SdkJoinFlags enum.\n * @exports SdkJoinFlags\n * @enum {number}\n * @property {number} HAS_STREAM_UPDATE=2 HAS_STREAM_UPDATE value\n * @property {number} COMPLETE_VIDEO_SOURCES_LIST=16 COMPLETE_VIDEO_SOURCES_LIST value\n * @property {number} EXCLUDE_SELF_CONTENT_IN_INDEX=32 EXCLUDE_SELF_CONTENT_IN_INDEX value\n */\n$root.SdkJoinFlags = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[2] = \"HAS_STREAM_UPDATE\"] = 2;\n    values[valuesById[16] = \"COMPLETE_VIDEO_SOURCES_LIST\"] = 16;\n    values[valuesById[32] = \"EXCLUDE_SELF_CONTENT_IN_INDEX\"] = 32;\n    return values;\n})();\n\n$root.SdkClientDetails = (function() {\n\n    /**\n     * Properties of a SdkClientDetails.\n     * @exports ISdkClientDetails\n     * @interface ISdkClientDetails\n     * @property {string|null} [appName] SdkClientDetails appName\n     * @property {string|null} [appVersion] SdkClientDetails appVersion\n     * @property {string|null} [deviceModel] SdkClientDetails deviceModel\n     * @property {string|null} [deviceMake] SdkClientDetails deviceMake\n     * @property {string|null} [platformName] SdkClientDetails platformName\n     * @property {string|null} [platformVersion] SdkClientDetails platformVersion\n     * @property {string|null} [clientSource] SdkClientDetails clientSource\n     * @property {string|null} [chimeSdkVersion] SdkClientDetails chimeSdkVersion\n     */\n\n    /**\n     * Constructs a new SdkClientDetails.\n     * @exports SdkClientDetails\n     * @classdesc Represents a SdkClientDetails.\n     * @implements ISdkClientDetails\n     * @constructor\n     * @param {ISdkClientDetails=} [properties] Properties to set\n     */\n    function SdkClientDetails(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkClientDetails appName.\n     * @member {string} appName\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.appName = \"\";\n\n    /**\n     * SdkClientDetails appVersion.\n     * @member {string} appVersion\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.appVersion = \"\";\n\n    /**\n     * SdkClientDetails deviceModel.\n     * @member {string} deviceModel\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.deviceModel = \"\";\n\n    /**\n     * SdkClientDetails deviceMake.\n     * @member {string} deviceMake\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.deviceMake = \"\";\n\n    /**\n     * SdkClientDetails platformName.\n     * @member {string} platformName\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.platformName = \"\";\n\n    /**\n     * SdkClientDetails platformVersion.\n     * @member {string} platformVersion\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.platformVersion = \"\";\n\n    /**\n     * SdkClientDetails clientSource.\n     * @member {string} clientSource\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.clientSource = \"\";\n\n    /**\n     * SdkClientDetails chimeSdkVersion.\n     * @member {string} chimeSdkVersion\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.chimeSdkVersion = \"\";\n\n    /**\n     * Creates a new SdkClientDetails instance using the specified properties.\n     * @function create\n     * @memberof SdkClientDetails\n     * @static\n     * @param {ISdkClientDetails=} [properties] Properties to set\n     * @returns {SdkClientDetails} SdkClientDetails instance\n     */\n    SdkClientDetails.create = function create(properties) {\n        return new SdkClientDetails(properties);\n    };\n\n    /**\n     * Encodes the specified SdkClientDetails message. Does not implicitly {@link SdkClientDetails.verify|verify} messages.\n     * @function encode\n     * @memberof SdkClientDetails\n     * @static\n     * @param {ISdkClientDetails} message SdkClientDetails message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkClientDetails.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.appName != null && Object.hasOwnProperty.call(message, \"appName\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.appName);\n        if (message.appVersion != null && Object.hasOwnProperty.call(message, \"appVersion\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.appVersion);\n        if (message.deviceModel != null && Object.hasOwnProperty.call(message, \"deviceModel\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.deviceModel);\n        if (message.deviceMake != null && Object.hasOwnProperty.call(message, \"deviceMake\"))\n            writer.uint32(/* id 4, wireType 2 =*/34).string(message.deviceMake);\n        if (message.platformName != null && Object.hasOwnProperty.call(message, \"platformName\"))\n            writer.uint32(/* id 5, wireType 2 =*/42).string(message.platformName);\n        if (message.platformVersion != null && Object.hasOwnProperty.call(message, \"platformVersion\"))\n            writer.uint32(/* id 6, wireType 2 =*/50).string(message.platformVersion);\n        if (message.clientSource != null && Object.hasOwnProperty.call(message, \"clientSource\"))\n            writer.uint32(/* id 7, wireType 2 =*/58).string(message.clientSource);\n        if (message.chimeSdkVersion != null && Object.hasOwnProperty.call(message, \"chimeSdkVersion\"))\n            writer.uint32(/* id 8, wireType 2 =*/66).string(message.chimeSdkVersion);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkClientDetails message, length delimited. Does not implicitly {@link SdkClientDetails.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkClientDetails\n     * @static\n     * @param {ISdkClientDetails} message SdkClientDetails message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkClientDetails.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkClientDetails message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkClientDetails\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkClientDetails} SdkClientDetails\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkClientDetails.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkClientDetails();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.appName = reader.string();\n                break;\n            case 2:\n                message.appVersion = reader.string();\n                break;\n            case 3:\n                message.deviceModel = reader.string();\n                break;\n            case 4:\n                message.deviceMake = reader.string();\n                break;\n            case 5:\n                message.platformName = reader.string();\n                break;\n            case 6:\n                message.platformVersion = reader.string();\n                break;\n            case 7:\n                message.clientSource = reader.string();\n                break;\n            case 8:\n                message.chimeSdkVersion = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkClientDetails message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkClientDetails\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkClientDetails} SdkClientDetails\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkClientDetails.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkClientDetails message.\n     * @function verify\n     * @memberof SdkClientDetails\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkClientDetails.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.appName != null && message.hasOwnProperty(\"appName\"))\n            if (!$util.isString(message.appName))\n                return \"appName: string expected\";\n        if (message.appVersion != null && message.hasOwnProperty(\"appVersion\"))\n            if (!$util.isString(message.appVersion))\n                return \"appVersion: string expected\";\n        if (message.deviceModel != null && message.hasOwnProperty(\"deviceModel\"))\n            if (!$util.isString(message.deviceModel))\n                return \"deviceModel: string expected\";\n        if (message.deviceMake != null && message.hasOwnProperty(\"deviceMake\"))\n            if (!$util.isString(message.deviceMake))\n                return \"deviceMake: string expected\";\n        if (message.platformName != null && message.hasOwnProperty(\"platformName\"))\n            if (!$util.isString(message.platformName))\n                return \"platformName: string expected\";\n        if (message.platformVersion != null && message.hasOwnProperty(\"platformVersion\"))\n            if (!$util.isString(message.platformVersion))\n                return \"platformVersion: string expected\";\n        if (message.clientSource != null && message.hasOwnProperty(\"clientSource\"))\n            if (!$util.isString(message.clientSource))\n                return \"clientSource: string expected\";\n        if (message.chimeSdkVersion != null && message.hasOwnProperty(\"chimeSdkVersion\"))\n            if (!$util.isString(message.chimeSdkVersion))\n                return \"chimeSdkVersion: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkClientDetails message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkClientDetails\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkClientDetails} SdkClientDetails\n     */\n    SdkClientDetails.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkClientDetails)\n            return object;\n        var message = new $root.SdkClientDetails();\n        if (object.appName != null)\n            message.appName = String(object.appName);\n        if (object.appVersion != null)\n            message.appVersion = String(object.appVersion);\n        if (object.deviceModel != null)\n            message.deviceModel = String(object.deviceModel);\n        if (object.deviceMake != null)\n            message.deviceMake = String(object.deviceMake);\n        if (object.platformName != null)\n            message.platformName = String(object.platformName);\n        if (object.platformVersion != null)\n            message.platformVersion = String(object.platformVersion);\n        if (object.clientSource != null)\n            message.clientSource = String(object.clientSource);\n        if (object.chimeSdkVersion != null)\n            message.chimeSdkVersion = String(object.chimeSdkVersion);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkClientDetails message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkClientDetails\n     * @static\n     * @param {SdkClientDetails} message SdkClientDetails\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkClientDetails.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.appName = \"\";\n            object.appVersion = \"\";\n            object.deviceModel = \"\";\n            object.deviceMake = \"\";\n            object.platformName = \"\";\n            object.platformVersion = \"\";\n            object.clientSource = \"\";\n            object.chimeSdkVersion = \"\";\n        }\n        if (message.appName != null && message.hasOwnProperty(\"appName\"))\n            object.appName = message.appName;\n        if (message.appVersion != null && message.hasOwnProperty(\"appVersion\"))\n            object.appVersion = message.appVersion;\n        if (message.deviceModel != null && message.hasOwnProperty(\"deviceModel\"))\n            object.deviceModel = message.deviceModel;\n        if (message.deviceMake != null && message.hasOwnProperty(\"deviceMake\"))\n            object.deviceMake = message.deviceMake;\n        if (message.platformName != null && message.hasOwnProperty(\"platformName\"))\n            object.platformName = message.platformName;\n        if (message.platformVersion != null && message.hasOwnProperty(\"platformVersion\"))\n            object.platformVersion = message.platformVersion;\n        if (message.clientSource != null && message.hasOwnProperty(\"clientSource\"))\n            object.clientSource = message.clientSource;\n        if (message.chimeSdkVersion != null && message.hasOwnProperty(\"chimeSdkVersion\"))\n            object.chimeSdkVersion = message.chimeSdkVersion;\n        return object;\n    };\n\n    /**\n     * Converts this SdkClientDetails to JSON.\n     * @function toJSON\n     * @memberof SdkClientDetails\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkClientDetails.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkClientDetails;\n})();\n\n/**\n * SdkServerSideNetworkAdaption enum.\n * @exports SdkServerSideNetworkAdaption\n * @enum {number}\n * @property {number} DEFAULT=1 DEFAULT value\n * @property {number} NONE=2 NONE value\n * @property {number} BANDWIDTH_PROBING=3 BANDWIDTH_PROBING value\n */\n$root.SdkServerSideNetworkAdaption = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[1] = \"DEFAULT\"] = 1;\n    values[valuesById[2] = \"NONE\"] = 2;\n    values[valuesById[3] = \"BANDWIDTH_PROBING\"] = 3;\n    return values;\n})();\n\n$root.SdkJoinFrame = (function() {\n\n    /**\n     * Properties of a SdkJoinFrame.\n     * @exports ISdkJoinFrame\n     * @interface ISdkJoinFrame\n     * @property {number|null} [protocolVersion] SdkJoinFrame protocolVersion\n     * @property {number|null} [maxNumOfVideos] SdkJoinFrame maxNumOfVideos\n     * @property {number|null} [flags] SdkJoinFrame flags\n     * @property {ISdkClientDetails|null} [clientDetails] SdkJoinFrame clientDetails\n     * @property {number|Long|null} [audioSessionId] SdkJoinFrame audioSessionId\n     * @property {boolean|null} [wantsCompressedSdp] SdkJoinFrame wantsCompressedSdp\n     * @property {SdkServerSideNetworkAdaption|null} [serverSideNetworkAdaption] SdkJoinFrame serverSideNetworkAdaption\n     * @property {Array.<SdkServerSideNetworkAdaption>|null} [supportedServerSideNetworkAdaptions] SdkJoinFrame supportedServerSideNetworkAdaptions\n     * @property {boolean|null} [disablePeriodicKeyframeRequestOnContentSender] SdkJoinFrame disablePeriodicKeyframeRequestOnContentSender\n     */\n\n    /**\n     * Constructs a new SdkJoinFrame.\n     * @exports SdkJoinFrame\n     * @classdesc Represents a SdkJoinFrame.\n     * @implements ISdkJoinFrame\n     * @constructor\n     * @param {ISdkJoinFrame=} [properties] Properties to set\n     */\n    function SdkJoinFrame(properties) {\n        this.supportedServerSideNetworkAdaptions = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkJoinFrame protocolVersion.\n     * @member {number} protocolVersion\n     * @memberof SdkJoinFrame\n     * @instance\n     */\n    SdkJoinFrame.prototype.protocolVersion = 2;\n\n    /**\n     * SdkJoinFrame maxNumOfVideos.\n     * @member {number} maxNumOfVideos\n     * @memberof SdkJoinFrame\n     * @instance\n     */\n    SdkJoinFrame.prototype.maxNumOfVideos = 0;\n\n    /**\n     * SdkJoinFrame flags.\n     * @member {number} flags\n     * @memberof SdkJoinFrame\n     * @instance\n     */\n    SdkJoinFrame.prototype.flags = 0;\n\n    /**\n     * SdkJoinFrame clientDetails.\n     * @member {ISdkClientDetails|null|undefined} clientDetails\n     * @memberof SdkJoinFrame\n     * @instance\n     */\n    SdkJoinFrame.prototype.clientDetails = null;\n\n    /**\n     * SdkJoinFrame audioSessionId.\n     * @member {number|Long} audioSessionId\n     * @memberof SdkJoinFrame\n     * @instance\n     */\n    SdkJoinFrame.prototype.audioSessionId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * SdkJoinFrame wantsCompressedSdp.\n     * @member {boolean} wantsCompressedSdp\n     * @memberof SdkJoinFrame\n     * @instance\n     */\n    SdkJoinFrame.prototype.wantsCompressedSdp = false;\n\n    /**\n     * SdkJoinFrame serverSideNetworkAdaption.\n     * @member {SdkServerSideNetworkAdaption} serverSideNetworkAdaption\n     * @memberof SdkJoinFrame\n     * @instance\n     */\n    SdkJoinFrame.prototype.serverSideNetworkAdaption = 1;\n\n    /**\n     * SdkJoinFrame supportedServerSideNetworkAdaptions.\n     * @member {Array.<SdkServerSideNetworkAdaption>} supportedServerSideNetworkAdaptions\n     * @memberof SdkJoinFrame\n     * @instance\n     */\n    SdkJoinFrame.prototype.supportedServerSideNetworkAdaptions = $util.emptyArray;\n\n    /**\n     * SdkJoinFrame disablePeriodicKeyframeRequestOnContentSender.\n     * @member {boolean} disablePeriodicKeyframeRequestOnContentSender\n     * @memberof SdkJoinFrame\n     * @instance\n     */\n    SdkJoinFrame.prototype.disablePeriodicKeyframeRequestOnContentSender = false;\n\n    /**\n     * Creates a new SdkJoinFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {ISdkJoinFrame=} [properties] Properties to set\n     * @returns {SdkJoinFrame} SdkJoinFrame instance\n     */\n    SdkJoinFrame.create = function create(properties) {\n        return new SdkJoinFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkJoinFrame message. Does not implicitly {@link SdkJoinFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {ISdkJoinFrame} message SdkJoinFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkJoinFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.protocolVersion != null && Object.hasOwnProperty.call(message, \"protocolVersion\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.protocolVersion);\n        if (message.maxNumOfVideos != null && Object.hasOwnProperty.call(message, \"maxNumOfVideos\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.maxNumOfVideos);\n        if (message.flags != null && Object.hasOwnProperty.call(message, \"flags\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.flags);\n        if (message.clientDetails != null && Object.hasOwnProperty.call(message, \"clientDetails\"))\n            $root.SdkClientDetails.encode(message.clientDetails, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n        if (message.audioSessionId != null && Object.hasOwnProperty.call(message, \"audioSessionId\"))\n            writer.uint32(/* id 6, wireType 0 =*/48).uint64(message.audioSessionId);\n        if (message.wantsCompressedSdp != null && Object.hasOwnProperty.call(message, \"wantsCompressedSdp\"))\n            writer.uint32(/* id 7, wireType 0 =*/56).bool(message.wantsCompressedSdp);\n        if (message.serverSideNetworkAdaption != null && Object.hasOwnProperty.call(message, \"serverSideNetworkAdaption\"))\n            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.serverSideNetworkAdaption);\n        if (message.supportedServerSideNetworkAdaptions != null && message.supportedServerSideNetworkAdaptions.length)\n            for (var i = 0; i < message.supportedServerSideNetworkAdaptions.length; ++i)\n                writer.uint32(/* id 11, wireType 0 =*/88).int32(message.supportedServerSideNetworkAdaptions[i]);\n        if (message.disablePeriodicKeyframeRequestOnContentSender != null && Object.hasOwnProperty.call(message, \"disablePeriodicKeyframeRequestOnContentSender\"))\n            writer.uint32(/* id 13, wireType 0 =*/104).bool(message.disablePeriodicKeyframeRequestOnContentSender);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkJoinFrame message, length delimited. Does not implicitly {@link SdkJoinFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {ISdkJoinFrame} message SdkJoinFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkJoinFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkJoinFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkJoinFrame} SdkJoinFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkJoinFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkJoinFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.protocolVersion = reader.uint32();\n                break;\n            case 2:\n                message.maxNumOfVideos = reader.uint32();\n                break;\n            case 3:\n                message.flags = reader.uint32();\n                break;\n            case 4:\n                message.clientDetails = $root.SdkClientDetails.decode(reader, reader.uint32());\n                break;\n            case 6:\n                message.audioSessionId = reader.uint64();\n                break;\n            case 7:\n                message.wantsCompressedSdp = reader.bool();\n                break;\n            case 10:\n                message.serverSideNetworkAdaption = reader.int32();\n                break;\n            case 11:\n                if (!(message.supportedServerSideNetworkAdaptions && message.supportedServerSideNetworkAdaptions.length))\n                    message.supportedServerSideNetworkAdaptions = [];\n                if ((tag & 7) === 2) {\n                    var end2 = reader.uint32() + reader.pos;\n                    while (reader.pos < end2)\n                        message.supportedServerSideNetworkAdaptions.push(reader.int32());\n                } else\n                    message.supportedServerSideNetworkAdaptions.push(reader.int32());\n                break;\n            case 13:\n                message.disablePeriodicKeyframeRequestOnContentSender = reader.bool();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkJoinFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkJoinFrame} SdkJoinFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkJoinFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkJoinFrame message.\n     * @function verify\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkJoinFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.protocolVersion != null && message.hasOwnProperty(\"protocolVersion\"))\n            if (!$util.isInteger(message.protocolVersion))\n                return \"protocolVersion: integer expected\";\n        if (message.maxNumOfVideos != null && message.hasOwnProperty(\"maxNumOfVideos\"))\n            if (!$util.isInteger(message.maxNumOfVideos))\n                return \"maxNumOfVideos: integer expected\";\n        if (message.flags != null && message.hasOwnProperty(\"flags\"))\n            if (!$util.isInteger(message.flags))\n                return \"flags: integer expected\";\n        if (message.clientDetails != null && message.hasOwnProperty(\"clientDetails\")) {\n            var error = $root.SdkClientDetails.verify(message.clientDetails);\n            if (error)\n                return \"clientDetails.\" + error;\n        }\n        if (message.audioSessionId != null && message.hasOwnProperty(\"audioSessionId\"))\n            if (!$util.isInteger(message.audioSessionId) && !(message.audioSessionId && $util.isInteger(message.audioSessionId.low) && $util.isInteger(message.audioSessionId.high)))\n                return \"audioSessionId: integer|Long expected\";\n        if (message.wantsCompressedSdp != null && message.hasOwnProperty(\"wantsCompressedSdp\"))\n            if (typeof message.wantsCompressedSdp !== \"boolean\")\n                return \"wantsCompressedSdp: boolean expected\";\n        if (message.serverSideNetworkAdaption != null && message.hasOwnProperty(\"serverSideNetworkAdaption\"))\n            switch (message.serverSideNetworkAdaption) {\n            default:\n                return \"serverSideNetworkAdaption: enum value expected\";\n            case 1:\n            case 2:\n            case 3:\n                break;\n            }\n        if (message.supportedServerSideNetworkAdaptions != null && message.hasOwnProperty(\"supportedServerSideNetworkAdaptions\")) {\n            if (!Array.isArray(message.supportedServerSideNetworkAdaptions))\n                return \"supportedServerSideNetworkAdaptions: array expected\";\n            for (var i = 0; i < message.supportedServerSideNetworkAdaptions.length; ++i)\n                switch (message.supportedServerSideNetworkAdaptions[i]) {\n                default:\n                    return \"supportedServerSideNetworkAdaptions: enum value[] expected\";\n                case 1:\n                case 2:\n                case 3:\n                    break;\n                }\n        }\n        if (message.disablePeriodicKeyframeRequestOnContentSender != null && message.hasOwnProperty(\"disablePeriodicKeyframeRequestOnContentSender\"))\n            if (typeof message.disablePeriodicKeyframeRequestOnContentSender !== \"boolean\")\n                return \"disablePeriodicKeyframeRequestOnContentSender: boolean expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkJoinFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkJoinFrame} SdkJoinFrame\n     */\n    SdkJoinFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkJoinFrame)\n            return object;\n        var message = new $root.SdkJoinFrame();\n        if (object.protocolVersion != null)\n            message.protocolVersion = object.protocolVersion >>> 0;\n        if (object.maxNumOfVideos != null)\n            message.maxNumOfVideos = object.maxNumOfVideos >>> 0;\n        if (object.flags != null)\n            message.flags = object.flags >>> 0;\n        if (object.clientDetails != null) {\n            if (typeof object.clientDetails !== \"object\")\n                throw TypeError(\".SdkJoinFrame.clientDetails: object expected\");\n            message.clientDetails = $root.SdkClientDetails.fromObject(object.clientDetails);\n        }\n        if (object.audioSessionId != null)\n            if ($util.Long)\n                (message.audioSessionId = $util.Long.fromValue(object.audioSessionId)).unsigned = true;\n            else if (typeof object.audioSessionId === \"string\")\n                message.audioSessionId = parseInt(object.audioSessionId, 10);\n            else if (typeof object.audioSessionId === \"number\")\n                message.audioSessionId = object.audioSessionId;\n            else if (typeof object.audioSessionId === \"object\")\n                message.audioSessionId = new $util.LongBits(object.audioSessionId.low >>> 0, object.audioSessionId.high >>> 0).toNumber(true);\n        if (object.wantsCompressedSdp != null)\n            message.wantsCompressedSdp = Boolean(object.wantsCompressedSdp);\n        switch (object.serverSideNetworkAdaption) {\n        case \"DEFAULT\":\n        case 1:\n            message.serverSideNetworkAdaption = 1;\n            break;\n        case \"NONE\":\n        case 2:\n            message.serverSideNetworkAdaption = 2;\n            break;\n        case \"BANDWIDTH_PROBING\":\n        case 3:\n            message.serverSideNetworkAdaption = 3;\n            break;\n        }\n        if (object.supportedServerSideNetworkAdaptions) {\n            if (!Array.isArray(object.supportedServerSideNetworkAdaptions))\n                throw TypeError(\".SdkJoinFrame.supportedServerSideNetworkAdaptions: array expected\");\n            message.supportedServerSideNetworkAdaptions = [];\n            for (var i = 0; i < object.supportedServerSideNetworkAdaptions.length; ++i)\n                switch (object.supportedServerSideNetworkAdaptions[i]) {\n                default:\n                case \"DEFAULT\":\n                case 1:\n                    message.supportedServerSideNetworkAdaptions[i] = 1;\n                    break;\n                case \"NONE\":\n                case 2:\n                    message.supportedServerSideNetworkAdaptions[i] = 2;\n                    break;\n                case \"BANDWIDTH_PROBING\":\n                case 3:\n                    message.supportedServerSideNetworkAdaptions[i] = 3;\n                    break;\n                }\n        }\n        if (object.disablePeriodicKeyframeRequestOnContentSender != null)\n            message.disablePeriodicKeyframeRequestOnContentSender = Boolean(object.disablePeriodicKeyframeRequestOnContentSender);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkJoinFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {SdkJoinFrame} message SdkJoinFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkJoinFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.supportedServerSideNetworkAdaptions = [];\n        if (options.defaults) {\n            object.protocolVersion = 2;\n            object.maxNumOfVideos = 0;\n            object.flags = 0;\n            object.clientDetails = null;\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.audioSessionId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.audioSessionId = options.longs === String ? \"0\" : 0;\n            object.wantsCompressedSdp = false;\n            object.serverSideNetworkAdaption = options.enums === String ? \"DEFAULT\" : 1;\n            object.disablePeriodicKeyframeRequestOnContentSender = false;\n        }\n        if (message.protocolVersion != null && message.hasOwnProperty(\"protocolVersion\"))\n            object.protocolVersion = message.protocolVersion;\n        if (message.maxNumOfVideos != null && message.hasOwnProperty(\"maxNumOfVideos\"))\n            object.maxNumOfVideos = message.maxNumOfVideos;\n        if (message.flags != null && message.hasOwnProperty(\"flags\"))\n            object.flags = message.flags;\n        if (message.clientDetails != null && message.hasOwnProperty(\"clientDetails\"))\n            object.clientDetails = $root.SdkClientDetails.toObject(message.clientDetails, options);\n        if (message.audioSessionId != null && message.hasOwnProperty(\"audioSessionId\"))\n            if (typeof message.audioSessionId === \"number\")\n                object.audioSessionId = options.longs === String ? String(message.audioSessionId) : message.audioSessionId;\n            else\n                object.audioSessionId = options.longs === String ? $util.Long.prototype.toString.call(message.audioSessionId) : options.longs === Number ? new $util.LongBits(message.audioSessionId.low >>> 0, message.audioSessionId.high >>> 0).toNumber(true) : message.audioSessionId;\n        if (message.wantsCompressedSdp != null && message.hasOwnProperty(\"wantsCompressedSdp\"))\n            object.wantsCompressedSdp = message.wantsCompressedSdp;\n        if (message.serverSideNetworkAdaption != null && message.hasOwnProperty(\"serverSideNetworkAdaption\"))\n            object.serverSideNetworkAdaption = options.enums === String ? $root.SdkServerSideNetworkAdaption[message.serverSideNetworkAdaption] : message.serverSideNetworkAdaption;\n        if (message.supportedServerSideNetworkAdaptions && message.supportedServerSideNetworkAdaptions.length) {\n            object.supportedServerSideNetworkAdaptions = [];\n            for (var j = 0; j < message.supportedServerSideNetworkAdaptions.length; ++j)\n                object.supportedServerSideNetworkAdaptions[j] = options.enums === String ? $root.SdkServerSideNetworkAdaption[message.supportedServerSideNetworkAdaptions[j]] : message.supportedServerSideNetworkAdaptions[j];\n        }\n        if (message.disablePeriodicKeyframeRequestOnContentSender != null && message.hasOwnProperty(\"disablePeriodicKeyframeRequestOnContentSender\"))\n            object.disablePeriodicKeyframeRequestOnContentSender = message.disablePeriodicKeyframeRequestOnContentSender;\n        return object;\n    };\n\n    /**\n     * Converts this SdkJoinFrame to JSON.\n     * @function toJSON\n     * @memberof SdkJoinFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkJoinFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkJoinFrame;\n})();\n\n$root.SdkJoinAckFrame = (function() {\n\n    /**\n     * Properties of a SdkJoinAckFrame.\n     * @exports ISdkJoinAckFrame\n     * @interface ISdkJoinAckFrame\n     * @property {ISdkTurnCredentials|null} [turnCredentials] SdkJoinAckFrame turnCredentials\n     * @property {number|null} [videoSubscriptionLimit] SdkJoinAckFrame videoSubscriptionLimit\n     * @property {boolean|null} [wantsCompressedSdp] SdkJoinAckFrame wantsCompressedSdp\n     * @property {SdkServerSideNetworkAdaption|null} [defaultServerSideNetworkAdaption] SdkJoinAckFrame defaultServerSideNetworkAdaption\n     */\n\n    /**\n     * Constructs a new SdkJoinAckFrame.\n     * @exports SdkJoinAckFrame\n     * @classdesc Represents a SdkJoinAckFrame.\n     * @implements ISdkJoinAckFrame\n     * @constructor\n     * @param {ISdkJoinAckFrame=} [properties] Properties to set\n     */\n    function SdkJoinAckFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkJoinAckFrame turnCredentials.\n     * @member {ISdkTurnCredentials|null|undefined} turnCredentials\n     * @memberof SdkJoinAckFrame\n     * @instance\n     */\n    SdkJoinAckFrame.prototype.turnCredentials = null;\n\n    /**\n     * SdkJoinAckFrame videoSubscriptionLimit.\n     * @member {number} videoSubscriptionLimit\n     * @memberof SdkJoinAckFrame\n     * @instance\n     */\n    SdkJoinAckFrame.prototype.videoSubscriptionLimit = 0;\n\n    /**\n     * SdkJoinAckFrame wantsCompressedSdp.\n     * @member {boolean} wantsCompressedSdp\n     * @memberof SdkJoinAckFrame\n     * @instance\n     */\n    SdkJoinAckFrame.prototype.wantsCompressedSdp = false;\n\n    /**\n     * SdkJoinAckFrame defaultServerSideNetworkAdaption.\n     * @member {SdkServerSideNetworkAdaption} defaultServerSideNetworkAdaption\n     * @memberof SdkJoinAckFrame\n     * @instance\n     */\n    SdkJoinAckFrame.prototype.defaultServerSideNetworkAdaption = 1;\n\n    /**\n     * Creates a new SdkJoinAckFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {ISdkJoinAckFrame=} [properties] Properties to set\n     * @returns {SdkJoinAckFrame} SdkJoinAckFrame instance\n     */\n    SdkJoinAckFrame.create = function create(properties) {\n        return new SdkJoinAckFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkJoinAckFrame message. Does not implicitly {@link SdkJoinAckFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {ISdkJoinAckFrame} message SdkJoinAckFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkJoinAckFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.turnCredentials != null && Object.hasOwnProperty.call(message, \"turnCredentials\"))\n            $root.SdkTurnCredentials.encode(message.turnCredentials, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        if (message.videoSubscriptionLimit != null && Object.hasOwnProperty.call(message, \"videoSubscriptionLimit\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.videoSubscriptionLimit);\n        if (message.wantsCompressedSdp != null && Object.hasOwnProperty.call(message, \"wantsCompressedSdp\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).bool(message.wantsCompressedSdp);\n        if (message.defaultServerSideNetworkAdaption != null && Object.hasOwnProperty.call(message, \"defaultServerSideNetworkAdaption\"))\n            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.defaultServerSideNetworkAdaption);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkJoinAckFrame message, length delimited. Does not implicitly {@link SdkJoinAckFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {ISdkJoinAckFrame} message SdkJoinAckFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkJoinAckFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkJoinAckFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkJoinAckFrame} SdkJoinAckFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkJoinAckFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkJoinAckFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.turnCredentials = $root.SdkTurnCredentials.decode(reader, reader.uint32());\n                break;\n            case 2:\n                message.videoSubscriptionLimit = reader.uint32();\n                break;\n            case 3:\n                message.wantsCompressedSdp = reader.bool();\n                break;\n            case 4:\n                message.defaultServerSideNetworkAdaption = reader.int32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkJoinAckFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkJoinAckFrame} SdkJoinAckFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkJoinAckFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkJoinAckFrame message.\n     * @function verify\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkJoinAckFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.turnCredentials != null && message.hasOwnProperty(\"turnCredentials\")) {\n            var error = $root.SdkTurnCredentials.verify(message.turnCredentials);\n            if (error)\n                return \"turnCredentials.\" + error;\n        }\n        if (message.videoSubscriptionLimit != null && message.hasOwnProperty(\"videoSubscriptionLimit\"))\n            if (!$util.isInteger(message.videoSubscriptionLimit))\n                return \"videoSubscriptionLimit: integer expected\";\n        if (message.wantsCompressedSdp != null && message.hasOwnProperty(\"wantsCompressedSdp\"))\n            if (typeof message.wantsCompressedSdp !== \"boolean\")\n                return \"wantsCompressedSdp: boolean expected\";\n        if (message.defaultServerSideNetworkAdaption != null && message.hasOwnProperty(\"defaultServerSideNetworkAdaption\"))\n            switch (message.defaultServerSideNetworkAdaption) {\n            default:\n                return \"defaultServerSideNetworkAdaption: enum value expected\";\n            case 1:\n            case 2:\n            case 3:\n                break;\n            }\n        return null;\n    };\n\n    /**\n     * Creates a SdkJoinAckFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkJoinAckFrame} SdkJoinAckFrame\n     */\n    SdkJoinAckFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkJoinAckFrame)\n            return object;\n        var message = new $root.SdkJoinAckFrame();\n        if (object.turnCredentials != null) {\n            if (typeof object.turnCredentials !== \"object\")\n                throw TypeError(\".SdkJoinAckFrame.turnCredentials: object expected\");\n            message.turnCredentials = $root.SdkTurnCredentials.fromObject(object.turnCredentials);\n        }\n        if (object.videoSubscriptionLimit != null)\n            message.videoSubscriptionLimit = object.videoSubscriptionLimit >>> 0;\n        if (object.wantsCompressedSdp != null)\n            message.wantsCompressedSdp = Boolean(object.wantsCompressedSdp);\n        switch (object.defaultServerSideNetworkAdaption) {\n        case \"DEFAULT\":\n        case 1:\n            message.defaultServerSideNetworkAdaption = 1;\n            break;\n        case \"NONE\":\n        case 2:\n            message.defaultServerSideNetworkAdaption = 2;\n            break;\n        case \"BANDWIDTH_PROBING\":\n        case 3:\n            message.defaultServerSideNetworkAdaption = 3;\n            break;\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkJoinAckFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {SdkJoinAckFrame} message SdkJoinAckFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkJoinAckFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.turnCredentials = null;\n            object.videoSubscriptionLimit = 0;\n            object.wantsCompressedSdp = false;\n            object.defaultServerSideNetworkAdaption = options.enums === String ? \"DEFAULT\" : 1;\n        }\n        if (message.turnCredentials != null && message.hasOwnProperty(\"turnCredentials\"))\n            object.turnCredentials = $root.SdkTurnCredentials.toObject(message.turnCredentials, options);\n        if (message.videoSubscriptionLimit != null && message.hasOwnProperty(\"videoSubscriptionLimit\"))\n            object.videoSubscriptionLimit = message.videoSubscriptionLimit;\n        if (message.wantsCompressedSdp != null && message.hasOwnProperty(\"wantsCompressedSdp\"))\n            object.wantsCompressedSdp = message.wantsCompressedSdp;\n        if (message.defaultServerSideNetworkAdaption != null && message.hasOwnProperty(\"defaultServerSideNetworkAdaption\"))\n            object.defaultServerSideNetworkAdaption = options.enums === String ? $root.SdkServerSideNetworkAdaption[message.defaultServerSideNetworkAdaption] : message.defaultServerSideNetworkAdaption;\n        return object;\n    };\n\n    /**\n     * Converts this SdkJoinAckFrame to JSON.\n     * @function toJSON\n     * @memberof SdkJoinAckFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkJoinAckFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkJoinAckFrame;\n})();\n\n$root.SdkLeaveFrame = (function() {\n\n    /**\n     * Properties of a SdkLeaveFrame.\n     * @exports ISdkLeaveFrame\n     * @interface ISdkLeaveFrame\n     */\n\n    /**\n     * Constructs a new SdkLeaveFrame.\n     * @exports SdkLeaveFrame\n     * @classdesc Represents a SdkLeaveFrame.\n     * @implements ISdkLeaveFrame\n     * @constructor\n     * @param {ISdkLeaveFrame=} [properties] Properties to set\n     */\n    function SdkLeaveFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Creates a new SdkLeaveFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {ISdkLeaveFrame=} [properties] Properties to set\n     * @returns {SdkLeaveFrame} SdkLeaveFrame instance\n     */\n    SdkLeaveFrame.create = function create(properties) {\n        return new SdkLeaveFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkLeaveFrame message. Does not implicitly {@link SdkLeaveFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {ISdkLeaveFrame} message SdkLeaveFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkLeaveFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkLeaveFrame message, length delimited. Does not implicitly {@link SdkLeaveFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {ISdkLeaveFrame} message SdkLeaveFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkLeaveFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkLeaveFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkLeaveFrame} SdkLeaveFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkLeaveFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkLeaveFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkLeaveFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkLeaveFrame} SdkLeaveFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkLeaveFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkLeaveFrame message.\n     * @function verify\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkLeaveFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkLeaveFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkLeaveFrame} SdkLeaveFrame\n     */\n    SdkLeaveFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkLeaveFrame)\n            return object;\n        return new $root.SdkLeaveFrame();\n    };\n\n    /**\n     * Creates a plain object from a SdkLeaveFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {SdkLeaveFrame} message SdkLeaveFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkLeaveFrame.toObject = function toObject() {\n        return {};\n    };\n\n    /**\n     * Converts this SdkLeaveFrame to JSON.\n     * @function toJSON\n     * @memberof SdkLeaveFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkLeaveFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkLeaveFrame;\n})();\n\n$root.SdkLeaveAckFrame = (function() {\n\n    /**\n     * Properties of a SdkLeaveAckFrame.\n     * @exports ISdkLeaveAckFrame\n     * @interface ISdkLeaveAckFrame\n     */\n\n    /**\n     * Constructs a new SdkLeaveAckFrame.\n     * @exports SdkLeaveAckFrame\n     * @classdesc Represents a SdkLeaveAckFrame.\n     * @implements ISdkLeaveAckFrame\n     * @constructor\n     * @param {ISdkLeaveAckFrame=} [properties] Properties to set\n     */\n    function SdkLeaveAckFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Creates a new SdkLeaveAckFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {ISdkLeaveAckFrame=} [properties] Properties to set\n     * @returns {SdkLeaveAckFrame} SdkLeaveAckFrame instance\n     */\n    SdkLeaveAckFrame.create = function create(properties) {\n        return new SdkLeaveAckFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkLeaveAckFrame message. Does not implicitly {@link SdkLeaveAckFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {ISdkLeaveAckFrame} message SdkLeaveAckFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkLeaveAckFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkLeaveAckFrame message, length delimited. Does not implicitly {@link SdkLeaveAckFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {ISdkLeaveAckFrame} message SdkLeaveAckFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkLeaveAckFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkLeaveAckFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkLeaveAckFrame} SdkLeaveAckFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkLeaveAckFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkLeaveAckFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkLeaveAckFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkLeaveAckFrame} SdkLeaveAckFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkLeaveAckFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkLeaveAckFrame message.\n     * @function verify\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkLeaveAckFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkLeaveAckFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkLeaveAckFrame} SdkLeaveAckFrame\n     */\n    SdkLeaveAckFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkLeaveAckFrame)\n            return object;\n        return new $root.SdkLeaveAckFrame();\n    };\n\n    /**\n     * Creates a plain object from a SdkLeaveAckFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {SdkLeaveAckFrame} message SdkLeaveAckFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkLeaveAckFrame.toObject = function toObject() {\n        return {};\n    };\n\n    /**\n     * Converts this SdkLeaveAckFrame to JSON.\n     * @function toJSON\n     * @memberof SdkLeaveAckFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkLeaveAckFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkLeaveAckFrame;\n})();\n\n/**\n * SdkStreamServiceType enum.\n * @exports SdkStreamServiceType\n * @enum {number}\n * @property {number} RX=1 RX value\n * @property {number} TX=2 TX value\n * @property {number} DUPLEX=3 DUPLEX value\n */\n$root.SdkStreamServiceType = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[1] = \"RX\"] = 1;\n    values[valuesById[2] = \"TX\"] = 2;\n    values[valuesById[3] = \"DUPLEX\"] = 3;\n    return values;\n})();\n\n/**\n * SdkStreamMediaType enum.\n * @exports SdkStreamMediaType\n * @enum {number}\n * @property {number} AUDIO=1 AUDIO value\n * @property {number} VIDEO=2 VIDEO value\n */\n$root.SdkStreamMediaType = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[1] = \"AUDIO\"] = 1;\n    values[valuesById[2] = \"VIDEO\"] = 2;\n    return values;\n})();\n\n$root.SdkSubscribeFrame = (function() {\n\n    /**\n     * Properties of a SdkSubscribeFrame.\n     * @exports ISdkSubscribeFrame\n     * @interface ISdkSubscribeFrame\n     * @property {SdkStreamServiceType|null} [duplex] SdkSubscribeFrame duplex\n     * @property {Array.<ISdkStreamDescriptor>|null} [sendStreams] SdkSubscribeFrame sendStreams\n     * @property {Array.<number>|null} [receiveStreamIds] SdkSubscribeFrame receiveStreamIds\n     * @property {string|null} [sdpOffer] SdkSubscribeFrame sdpOffer\n     * @property {string|null} [audioHost] SdkSubscribeFrame audioHost\n     * @property {boolean|null} [audioCheckin] SdkSubscribeFrame audioCheckin\n     * @property {boolean|null} [audioMuted] SdkSubscribeFrame audioMuted\n     * @property {Uint8Array|null} [compressedSdpOffer] SdkSubscribeFrame compressedSdpOffer\n     * @property {Array.<ISdkVideoSubscriptionConfiguration>|null} [videoSubscriptionConfiguration] SdkSubscribeFrame videoSubscriptionConfiguration\n     */\n\n    /**\n     * Constructs a new SdkSubscribeFrame.\n     * @exports SdkSubscribeFrame\n     * @classdesc Represents a SdkSubscribeFrame.\n     * @implements ISdkSubscribeFrame\n     * @constructor\n     * @param {ISdkSubscribeFrame=} [properties] Properties to set\n     */\n    function SdkSubscribeFrame(properties) {\n        this.sendStreams = [];\n        this.receiveStreamIds = [];\n        this.videoSubscriptionConfiguration = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkSubscribeFrame duplex.\n     * @member {SdkStreamServiceType} duplex\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.duplex = 1;\n\n    /**\n     * SdkSubscribeFrame sendStreams.\n     * @member {Array.<ISdkStreamDescriptor>} sendStreams\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.sendStreams = $util.emptyArray;\n\n    /**\n     * SdkSubscribeFrame receiveStreamIds.\n     * @member {Array.<number>} receiveStreamIds\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.receiveStreamIds = $util.emptyArray;\n\n    /**\n     * SdkSubscribeFrame sdpOffer.\n     * @member {string} sdpOffer\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.sdpOffer = \"\";\n\n    /**\n     * SdkSubscribeFrame audioHost.\n     * @member {string} audioHost\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.audioHost = \"\";\n\n    /**\n     * SdkSubscribeFrame audioCheckin.\n     * @member {boolean} audioCheckin\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.audioCheckin = false;\n\n    /**\n     * SdkSubscribeFrame audioMuted.\n     * @member {boolean} audioMuted\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.audioMuted = false;\n\n    /**\n     * SdkSubscribeFrame compressedSdpOffer.\n     * @member {Uint8Array} compressedSdpOffer\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.compressedSdpOffer = $util.newBuffer([]);\n\n    /**\n     * SdkSubscribeFrame videoSubscriptionConfiguration.\n     * @member {Array.<ISdkVideoSubscriptionConfiguration>} videoSubscriptionConfiguration\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.videoSubscriptionConfiguration = $util.emptyArray;\n\n    /**\n     * Creates a new SdkSubscribeFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {ISdkSubscribeFrame=} [properties] Properties to set\n     * @returns {SdkSubscribeFrame} SdkSubscribeFrame instance\n     */\n    SdkSubscribeFrame.create = function create(properties) {\n        return new SdkSubscribeFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkSubscribeFrame message. Does not implicitly {@link SdkSubscribeFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {ISdkSubscribeFrame} message SdkSubscribeFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkSubscribeFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.duplex != null && Object.hasOwnProperty.call(message, \"duplex\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.duplex);\n        if (message.sendStreams != null && message.sendStreams.length)\n            for (var i = 0; i < message.sendStreams.length; ++i)\n                $root.SdkStreamDescriptor.encode(message.sendStreams[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        if (message.receiveStreamIds != null && message.receiveStreamIds.length)\n            for (var i = 0; i < message.receiveStreamIds.length; ++i)\n                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.receiveStreamIds[i]);\n        if (message.sdpOffer != null && Object.hasOwnProperty.call(message, \"sdpOffer\"))\n            writer.uint32(/* id 4, wireType 2 =*/34).string(message.sdpOffer);\n        if (message.audioHost != null && Object.hasOwnProperty.call(message, \"audioHost\"))\n            writer.uint32(/* id 5, wireType 2 =*/42).string(message.audioHost);\n        if (message.audioCheckin != null && Object.hasOwnProperty.call(message, \"audioCheckin\"))\n            writer.uint32(/* id 6, wireType 0 =*/48).bool(message.audioCheckin);\n        if (message.audioMuted != null && Object.hasOwnProperty.call(message, \"audioMuted\"))\n            writer.uint32(/* id 7, wireType 0 =*/56).bool(message.audioMuted);\n        if (message.compressedSdpOffer != null && Object.hasOwnProperty.call(message, \"compressedSdpOffer\"))\n            writer.uint32(/* id 8, wireType 2 =*/66).bytes(message.compressedSdpOffer);\n        if (message.videoSubscriptionConfiguration != null && message.videoSubscriptionConfiguration.length)\n            for (var i = 0; i < message.videoSubscriptionConfiguration.length; ++i)\n                $root.SdkVideoSubscriptionConfiguration.encode(message.videoSubscriptionConfiguration[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkSubscribeFrame message, length delimited. Does not implicitly {@link SdkSubscribeFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {ISdkSubscribeFrame} message SdkSubscribeFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkSubscribeFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkSubscribeFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkSubscribeFrame} SdkSubscribeFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkSubscribeFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkSubscribeFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.duplex = reader.int32();\n                break;\n            case 2:\n                if (!(message.sendStreams && message.sendStreams.length))\n                    message.sendStreams = [];\n                message.sendStreams.push($root.SdkStreamDescriptor.decode(reader, reader.uint32()));\n                break;\n            case 3:\n                if (!(message.receiveStreamIds && message.receiveStreamIds.length))\n                    message.receiveStreamIds = [];\n                if ((tag & 7) === 2) {\n                    var end2 = reader.uint32() + reader.pos;\n                    while (reader.pos < end2)\n                        message.receiveStreamIds.push(reader.uint32());\n                } else\n                    message.receiveStreamIds.push(reader.uint32());\n                break;\n            case 4:\n                message.sdpOffer = reader.string();\n                break;\n            case 5:\n                message.audioHost = reader.string();\n                break;\n            case 6:\n                message.audioCheckin = reader.bool();\n                break;\n            case 7:\n                message.audioMuted = reader.bool();\n                break;\n            case 8:\n                message.compressedSdpOffer = reader.bytes();\n                break;\n            case 9:\n                if (!(message.videoSubscriptionConfiguration && message.videoSubscriptionConfiguration.length))\n                    message.videoSubscriptionConfiguration = [];\n                message.videoSubscriptionConfiguration.push($root.SdkVideoSubscriptionConfiguration.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkSubscribeFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkSubscribeFrame} SdkSubscribeFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkSubscribeFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkSubscribeFrame message.\n     * @function verify\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkSubscribeFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.duplex != null && message.hasOwnProperty(\"duplex\"))\n            switch (message.duplex) {\n            default:\n                return \"duplex: enum value expected\";\n            case 1:\n            case 2:\n            case 3:\n                break;\n            }\n        if (message.sendStreams != null && message.hasOwnProperty(\"sendStreams\")) {\n            if (!Array.isArray(message.sendStreams))\n                return \"sendStreams: array expected\";\n            for (var i = 0; i < message.sendStreams.length; ++i) {\n                var error = $root.SdkStreamDescriptor.verify(message.sendStreams[i]);\n                if (error)\n                    return \"sendStreams.\" + error;\n            }\n        }\n        if (message.receiveStreamIds != null && message.hasOwnProperty(\"receiveStreamIds\")) {\n            if (!Array.isArray(message.receiveStreamIds))\n                return \"receiveStreamIds: array expected\";\n            for (var i = 0; i < message.receiveStreamIds.length; ++i)\n                if (!$util.isInteger(message.receiveStreamIds[i]))\n                    return \"receiveStreamIds: integer[] expected\";\n        }\n        if (message.sdpOffer != null && message.hasOwnProperty(\"sdpOffer\"))\n            if (!$util.isString(message.sdpOffer))\n                return \"sdpOffer: string expected\";\n        if (message.audioHost != null && message.hasOwnProperty(\"audioHost\"))\n            if (!$util.isString(message.audioHost))\n                return \"audioHost: string expected\";\n        if (message.audioCheckin != null && message.hasOwnProperty(\"audioCheckin\"))\n            if (typeof message.audioCheckin !== \"boolean\")\n                return \"audioCheckin: boolean expected\";\n        if (message.audioMuted != null && message.hasOwnProperty(\"audioMuted\"))\n            if (typeof message.audioMuted !== \"boolean\")\n                return \"audioMuted: boolean expected\";\n        if (message.compressedSdpOffer != null && message.hasOwnProperty(\"compressedSdpOffer\"))\n            if (!(message.compressedSdpOffer && typeof message.compressedSdpOffer.length === \"number\" || $util.isString(message.compressedSdpOffer)))\n                return \"compressedSdpOffer: buffer expected\";\n        if (message.videoSubscriptionConfiguration != null && message.hasOwnProperty(\"videoSubscriptionConfiguration\")) {\n            if (!Array.isArray(message.videoSubscriptionConfiguration))\n                return \"videoSubscriptionConfiguration: array expected\";\n            for (var i = 0; i < message.videoSubscriptionConfiguration.length; ++i) {\n                var error = $root.SdkVideoSubscriptionConfiguration.verify(message.videoSubscriptionConfiguration[i]);\n                if (error)\n                    return \"videoSubscriptionConfiguration.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkSubscribeFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkSubscribeFrame} SdkSubscribeFrame\n     */\n    SdkSubscribeFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkSubscribeFrame)\n            return object;\n        var message = new $root.SdkSubscribeFrame();\n        switch (object.duplex) {\n        case \"RX\":\n        case 1:\n            message.duplex = 1;\n            break;\n        case \"TX\":\n        case 2:\n            message.duplex = 2;\n            break;\n        case \"DUPLEX\":\n        case 3:\n            message.duplex = 3;\n            break;\n        }\n        if (object.sendStreams) {\n            if (!Array.isArray(object.sendStreams))\n                throw TypeError(\".SdkSubscribeFrame.sendStreams: array expected\");\n            message.sendStreams = [];\n            for (var i = 0; i < object.sendStreams.length; ++i) {\n                if (typeof object.sendStreams[i] !== \"object\")\n                    throw TypeError(\".SdkSubscribeFrame.sendStreams: object expected\");\n                message.sendStreams[i] = $root.SdkStreamDescriptor.fromObject(object.sendStreams[i]);\n            }\n        }\n        if (object.receiveStreamIds) {\n            if (!Array.isArray(object.receiveStreamIds))\n                throw TypeError(\".SdkSubscribeFrame.receiveStreamIds: array expected\");\n            message.receiveStreamIds = [];\n            for (var i = 0; i < object.receiveStreamIds.length; ++i)\n                message.receiveStreamIds[i] = object.receiveStreamIds[i] >>> 0;\n        }\n        if (object.sdpOffer != null)\n            message.sdpOffer = String(object.sdpOffer);\n        if (object.audioHost != null)\n            message.audioHost = String(object.audioHost);\n        if (object.audioCheckin != null)\n            message.audioCheckin = Boolean(object.audioCheckin);\n        if (object.audioMuted != null)\n            message.audioMuted = Boolean(object.audioMuted);\n        if (object.compressedSdpOffer != null)\n            if (typeof object.compressedSdpOffer === \"string\")\n                $util.base64.decode(object.compressedSdpOffer, message.compressedSdpOffer = $util.newBuffer($util.base64.length(object.compressedSdpOffer)), 0);\n            else if (object.compressedSdpOffer.length)\n                message.compressedSdpOffer = object.compressedSdpOffer;\n        if (object.videoSubscriptionConfiguration) {\n            if (!Array.isArray(object.videoSubscriptionConfiguration))\n                throw TypeError(\".SdkSubscribeFrame.videoSubscriptionConfiguration: array expected\");\n            message.videoSubscriptionConfiguration = [];\n            for (var i = 0; i < object.videoSubscriptionConfiguration.length; ++i) {\n                if (typeof object.videoSubscriptionConfiguration[i] !== \"object\")\n                    throw TypeError(\".SdkSubscribeFrame.videoSubscriptionConfiguration: object expected\");\n                message.videoSubscriptionConfiguration[i] = $root.SdkVideoSubscriptionConfiguration.fromObject(object.videoSubscriptionConfiguration[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkSubscribeFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {SdkSubscribeFrame} message SdkSubscribeFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkSubscribeFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.sendStreams = [];\n            object.receiveStreamIds = [];\n            object.videoSubscriptionConfiguration = [];\n        }\n        if (options.defaults) {\n            object.duplex = options.enums === String ? \"RX\" : 1;\n            object.sdpOffer = \"\";\n            object.audioHost = \"\";\n            object.audioCheckin = false;\n            object.audioMuted = false;\n            if (options.bytes === String)\n                object.compressedSdpOffer = \"\";\n            else {\n                object.compressedSdpOffer = [];\n                if (options.bytes !== Array)\n                    object.compressedSdpOffer = $util.newBuffer(object.compressedSdpOffer);\n            }\n        }\n        if (message.duplex != null && message.hasOwnProperty(\"duplex\"))\n            object.duplex = options.enums === String ? $root.SdkStreamServiceType[message.duplex] : message.duplex;\n        if (message.sendStreams && message.sendStreams.length) {\n            object.sendStreams = [];\n            for (var j = 0; j < message.sendStreams.length; ++j)\n                object.sendStreams[j] = $root.SdkStreamDescriptor.toObject(message.sendStreams[j], options);\n        }\n        if (message.receiveStreamIds && message.receiveStreamIds.length) {\n            object.receiveStreamIds = [];\n            for (var j = 0; j < message.receiveStreamIds.length; ++j)\n                object.receiveStreamIds[j] = message.receiveStreamIds[j];\n        }\n        if (message.sdpOffer != null && message.hasOwnProperty(\"sdpOffer\"))\n            object.sdpOffer = message.sdpOffer;\n        if (message.audioHost != null && message.hasOwnProperty(\"audioHost\"))\n            object.audioHost = message.audioHost;\n        if (message.audioCheckin != null && message.hasOwnProperty(\"audioCheckin\"))\n            object.audioCheckin = message.audioCheckin;\n        if (message.audioMuted != null && message.hasOwnProperty(\"audioMuted\"))\n            object.audioMuted = message.audioMuted;\n        if (message.compressedSdpOffer != null && message.hasOwnProperty(\"compressedSdpOffer\"))\n            object.compressedSdpOffer = options.bytes === String ? $util.base64.encode(message.compressedSdpOffer, 0, message.compressedSdpOffer.length) : options.bytes === Array ? Array.prototype.slice.call(message.compressedSdpOffer) : message.compressedSdpOffer;\n        if (message.videoSubscriptionConfiguration && message.videoSubscriptionConfiguration.length) {\n            object.videoSubscriptionConfiguration = [];\n            for (var j = 0; j < message.videoSubscriptionConfiguration.length; ++j)\n                object.videoSubscriptionConfiguration[j] = $root.SdkVideoSubscriptionConfiguration.toObject(message.videoSubscriptionConfiguration[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkSubscribeFrame to JSON.\n     * @function toJSON\n     * @memberof SdkSubscribeFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkSubscribeFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkSubscribeFrame;\n})();\n\n$root.SdkSubscribeAckFrame = (function() {\n\n    /**\n     * Properties of a SdkSubscribeAckFrame.\n     * @exports ISdkSubscribeAckFrame\n     * @interface ISdkSubscribeAckFrame\n     * @property {SdkStreamServiceType|null} [duplex] SdkSubscribeAckFrame duplex\n     * @property {Array.<ISdkStreamAllocation>|null} [allocations] SdkSubscribeAckFrame allocations\n     * @property {string|null} [sdpAnswer] SdkSubscribeAckFrame sdpAnswer\n     * @property {Array.<ISdkTrackMapping>|null} [tracks] SdkSubscribeAckFrame tracks\n     * @property {Uint8Array|null} [compressedSdpAnswer] SdkSubscribeAckFrame compressedSdpAnswer\n     */\n\n    /**\n     * Constructs a new SdkSubscribeAckFrame.\n     * @exports SdkSubscribeAckFrame\n     * @classdesc Represents a SdkSubscribeAckFrame.\n     * @implements ISdkSubscribeAckFrame\n     * @constructor\n     * @param {ISdkSubscribeAckFrame=} [properties] Properties to set\n     */\n    function SdkSubscribeAckFrame(properties) {\n        this.allocations = [];\n        this.tracks = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkSubscribeAckFrame duplex.\n     * @member {SdkStreamServiceType} duplex\n     * @memberof SdkSubscribeAckFrame\n     * @instance\n     */\n    SdkSubscribeAckFrame.prototype.duplex = 1;\n\n    /**\n     * SdkSubscribeAckFrame allocations.\n     * @member {Array.<ISdkStreamAllocation>} allocations\n     * @memberof SdkSubscribeAckFrame\n     * @instance\n     */\n    SdkSubscribeAckFrame.prototype.allocations = $util.emptyArray;\n\n    /**\n     * SdkSubscribeAckFrame sdpAnswer.\n     * @member {string} sdpAnswer\n     * @memberof SdkSubscribeAckFrame\n     * @instance\n     */\n    SdkSubscribeAckFrame.prototype.sdpAnswer = \"\";\n\n    /**\n     * SdkSubscribeAckFrame tracks.\n     * @member {Array.<ISdkTrackMapping>} tracks\n     * @memberof SdkSubscribeAckFrame\n     * @instance\n     */\n    SdkSubscribeAckFrame.prototype.tracks = $util.emptyArray;\n\n    /**\n     * SdkSubscribeAckFrame compressedSdpAnswer.\n     * @member {Uint8Array} compressedSdpAnswer\n     * @memberof SdkSubscribeAckFrame\n     * @instance\n     */\n    SdkSubscribeAckFrame.prototype.compressedSdpAnswer = $util.newBuffer([]);\n\n    /**\n     * Creates a new SdkSubscribeAckFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {ISdkSubscribeAckFrame=} [properties] Properties to set\n     * @returns {SdkSubscribeAckFrame} SdkSubscribeAckFrame instance\n     */\n    SdkSubscribeAckFrame.create = function create(properties) {\n        return new SdkSubscribeAckFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkSubscribeAckFrame message. Does not implicitly {@link SdkSubscribeAckFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {ISdkSubscribeAckFrame} message SdkSubscribeAckFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkSubscribeAckFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.duplex != null && Object.hasOwnProperty.call(message, \"duplex\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.duplex);\n        if (message.allocations != null && message.allocations.length)\n            for (var i = 0; i < message.allocations.length; ++i)\n                $root.SdkStreamAllocation.encode(message.allocations[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        if (message.sdpAnswer != null && Object.hasOwnProperty.call(message, \"sdpAnswer\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.sdpAnswer);\n        if (message.tracks != null && message.tracks.length)\n            for (var i = 0; i < message.tracks.length; ++i)\n                $root.SdkTrackMapping.encode(message.tracks[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n        if (message.compressedSdpAnswer != null && Object.hasOwnProperty.call(message, \"compressedSdpAnswer\"))\n            writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.compressedSdpAnswer);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkSubscribeAckFrame message, length delimited. Does not implicitly {@link SdkSubscribeAckFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {ISdkSubscribeAckFrame} message SdkSubscribeAckFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkSubscribeAckFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkSubscribeAckFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkSubscribeAckFrame} SdkSubscribeAckFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkSubscribeAckFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkSubscribeAckFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.duplex = reader.int32();\n                break;\n            case 2:\n                if (!(message.allocations && message.allocations.length))\n                    message.allocations = [];\n                message.allocations.push($root.SdkStreamAllocation.decode(reader, reader.uint32()));\n                break;\n            case 3:\n                message.sdpAnswer = reader.string();\n                break;\n            case 4:\n                if (!(message.tracks && message.tracks.length))\n                    message.tracks = [];\n                message.tracks.push($root.SdkTrackMapping.decode(reader, reader.uint32()));\n                break;\n            case 5:\n                message.compressedSdpAnswer = reader.bytes();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkSubscribeAckFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkSubscribeAckFrame} SdkSubscribeAckFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkSubscribeAckFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkSubscribeAckFrame message.\n     * @function verify\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkSubscribeAckFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.duplex != null && message.hasOwnProperty(\"duplex\"))\n            switch (message.duplex) {\n            default:\n                return \"duplex: enum value expected\";\n            case 1:\n            case 2:\n            case 3:\n                break;\n            }\n        if (message.allocations != null && message.hasOwnProperty(\"allocations\")) {\n            if (!Array.isArray(message.allocations))\n                return \"allocations: array expected\";\n            for (var i = 0; i < message.allocations.length; ++i) {\n                var error = $root.SdkStreamAllocation.verify(message.allocations[i]);\n                if (error)\n                    return \"allocations.\" + error;\n            }\n        }\n        if (message.sdpAnswer != null && message.hasOwnProperty(\"sdpAnswer\"))\n            if (!$util.isString(message.sdpAnswer))\n                return \"sdpAnswer: string expected\";\n        if (message.tracks != null && message.hasOwnProperty(\"tracks\")) {\n            if (!Array.isArray(message.tracks))\n                return \"tracks: array expected\";\n            for (var i = 0; i < message.tracks.length; ++i) {\n                var error = $root.SdkTrackMapping.verify(message.tracks[i]);\n                if (error)\n                    return \"tracks.\" + error;\n            }\n        }\n        if (message.compressedSdpAnswer != null && message.hasOwnProperty(\"compressedSdpAnswer\"))\n            if (!(message.compressedSdpAnswer && typeof message.compressedSdpAnswer.length === \"number\" || $util.isString(message.compressedSdpAnswer)))\n                return \"compressedSdpAnswer: buffer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkSubscribeAckFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkSubscribeAckFrame} SdkSubscribeAckFrame\n     */\n    SdkSubscribeAckFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkSubscribeAckFrame)\n            return object;\n        var message = new $root.SdkSubscribeAckFrame();\n        switch (object.duplex) {\n        case \"RX\":\n        case 1:\n            message.duplex = 1;\n            break;\n        case \"TX\":\n        case 2:\n            message.duplex = 2;\n            break;\n        case \"DUPLEX\":\n        case 3:\n            message.duplex = 3;\n            break;\n        }\n        if (object.allocations) {\n            if (!Array.isArray(object.allocations))\n                throw TypeError(\".SdkSubscribeAckFrame.allocations: array expected\");\n            message.allocations = [];\n            for (var i = 0; i < object.allocations.length; ++i) {\n                if (typeof object.allocations[i] !== \"object\")\n                    throw TypeError(\".SdkSubscribeAckFrame.allocations: object expected\");\n                message.allocations[i] = $root.SdkStreamAllocation.fromObject(object.allocations[i]);\n            }\n        }\n        if (object.sdpAnswer != null)\n            message.sdpAnswer = String(object.sdpAnswer);\n        if (object.tracks) {\n            if (!Array.isArray(object.tracks))\n                throw TypeError(\".SdkSubscribeAckFrame.tracks: array expected\");\n            message.tracks = [];\n            for (var i = 0; i < object.tracks.length; ++i) {\n                if (typeof object.tracks[i] !== \"object\")\n                    throw TypeError(\".SdkSubscribeAckFrame.tracks: object expected\");\n                message.tracks[i] = $root.SdkTrackMapping.fromObject(object.tracks[i]);\n            }\n        }\n        if (object.compressedSdpAnswer != null)\n            if (typeof object.compressedSdpAnswer === \"string\")\n                $util.base64.decode(object.compressedSdpAnswer, message.compressedSdpAnswer = $util.newBuffer($util.base64.length(object.compressedSdpAnswer)), 0);\n            else if (object.compressedSdpAnswer.length)\n                message.compressedSdpAnswer = object.compressedSdpAnswer;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkSubscribeAckFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {SdkSubscribeAckFrame} message SdkSubscribeAckFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkSubscribeAckFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.allocations = [];\n            object.tracks = [];\n        }\n        if (options.defaults) {\n            object.duplex = options.enums === String ? \"RX\" : 1;\n            object.sdpAnswer = \"\";\n            if (options.bytes === String)\n                object.compressedSdpAnswer = \"\";\n            else {\n                object.compressedSdpAnswer = [];\n                if (options.bytes !== Array)\n                    object.compressedSdpAnswer = $util.newBuffer(object.compressedSdpAnswer);\n            }\n        }\n        if (message.duplex != null && message.hasOwnProperty(\"duplex\"))\n            object.duplex = options.enums === String ? $root.SdkStreamServiceType[message.duplex] : message.duplex;\n        if (message.allocations && message.allocations.length) {\n            object.allocations = [];\n            for (var j = 0; j < message.allocations.length; ++j)\n                object.allocations[j] = $root.SdkStreamAllocation.toObject(message.allocations[j], options);\n        }\n        if (message.sdpAnswer != null && message.hasOwnProperty(\"sdpAnswer\"))\n            object.sdpAnswer = message.sdpAnswer;\n        if (message.tracks && message.tracks.length) {\n            object.tracks = [];\n            for (var j = 0; j < message.tracks.length; ++j)\n                object.tracks[j] = $root.SdkTrackMapping.toObject(message.tracks[j], options);\n        }\n        if (message.compressedSdpAnswer != null && message.hasOwnProperty(\"compressedSdpAnswer\"))\n            object.compressedSdpAnswer = options.bytes === String ? $util.base64.encode(message.compressedSdpAnswer, 0, message.compressedSdpAnswer.length) : options.bytes === Array ? Array.prototype.slice.call(message.compressedSdpAnswer) : message.compressedSdpAnswer;\n        return object;\n    };\n\n    /**\n     * Converts this SdkSubscribeAckFrame to JSON.\n     * @function toJSON\n     * @memberof SdkSubscribeAckFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkSubscribeAckFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkSubscribeAckFrame;\n})();\n\n$root.SdkIndexFrame = (function() {\n\n    /**\n     * Properties of a SdkIndexFrame.\n     * @exports ISdkIndexFrame\n     * @interface ISdkIndexFrame\n     * @property {boolean|null} [atCapacity] SdkIndexFrame atCapacity\n     * @property {Array.<ISdkStreamDescriptor>|null} [sources] SdkIndexFrame sources\n     * @property {Array.<number>|null} [pausedAtSourceIds] SdkIndexFrame pausedAtSourceIds\n     * @property {number|null} [numParticipants] SdkIndexFrame numParticipants\n     * @property {Array.<SdkVideoCodecCapability>|null} [supportedReceiveCodecIntersection] SdkIndexFrame supportedReceiveCodecIntersection\n     */\n\n    /**\n     * Constructs a new SdkIndexFrame.\n     * @exports SdkIndexFrame\n     * @classdesc Represents a SdkIndexFrame.\n     * @implements ISdkIndexFrame\n     * @constructor\n     * @param {ISdkIndexFrame=} [properties] Properties to set\n     */\n    function SdkIndexFrame(properties) {\n        this.sources = [];\n        this.pausedAtSourceIds = [];\n        this.supportedReceiveCodecIntersection = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkIndexFrame atCapacity.\n     * @member {boolean} atCapacity\n     * @memberof SdkIndexFrame\n     * @instance\n     */\n    SdkIndexFrame.prototype.atCapacity = false;\n\n    /**\n     * SdkIndexFrame sources.\n     * @member {Array.<ISdkStreamDescriptor>} sources\n     * @memberof SdkIndexFrame\n     * @instance\n     */\n    SdkIndexFrame.prototype.sources = $util.emptyArray;\n\n    /**\n     * SdkIndexFrame pausedAtSourceIds.\n     * @member {Array.<number>} pausedAtSourceIds\n     * @memberof SdkIndexFrame\n     * @instance\n     */\n    SdkIndexFrame.prototype.pausedAtSourceIds = $util.emptyArray;\n\n    /**\n     * SdkIndexFrame numParticipants.\n     * @member {number} numParticipants\n     * @memberof SdkIndexFrame\n     * @instance\n     */\n    SdkIndexFrame.prototype.numParticipants = 0;\n\n    /**\n     * SdkIndexFrame supportedReceiveCodecIntersection.\n     * @member {Array.<SdkVideoCodecCapability>} supportedReceiveCodecIntersection\n     * @memberof SdkIndexFrame\n     * @instance\n     */\n    SdkIndexFrame.prototype.supportedReceiveCodecIntersection = $util.emptyArray;\n\n    /**\n     * Creates a new SdkIndexFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {ISdkIndexFrame=} [properties] Properties to set\n     * @returns {SdkIndexFrame} SdkIndexFrame instance\n     */\n    SdkIndexFrame.create = function create(properties) {\n        return new SdkIndexFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkIndexFrame message. Does not implicitly {@link SdkIndexFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {ISdkIndexFrame} message SdkIndexFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkIndexFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.atCapacity != null && Object.hasOwnProperty.call(message, \"atCapacity\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.atCapacity);\n        if (message.sources != null && message.sources.length)\n            for (var i = 0; i < message.sources.length; ++i)\n                $root.SdkStreamDescriptor.encode(message.sources[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        if (message.pausedAtSourceIds != null && message.pausedAtSourceIds.length)\n            for (var i = 0; i < message.pausedAtSourceIds.length; ++i)\n                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.pausedAtSourceIds[i]);\n        if (message.numParticipants != null && Object.hasOwnProperty.call(message, \"numParticipants\"))\n            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.numParticipants);\n        if (message.supportedReceiveCodecIntersection != null && message.supportedReceiveCodecIntersection.length)\n            for (var i = 0; i < message.supportedReceiveCodecIntersection.length; ++i)\n                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.supportedReceiveCodecIntersection[i]);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkIndexFrame message, length delimited. Does not implicitly {@link SdkIndexFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {ISdkIndexFrame} message SdkIndexFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkIndexFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkIndexFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkIndexFrame} SdkIndexFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkIndexFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkIndexFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.atCapacity = reader.bool();\n                break;\n            case 2:\n                if (!(message.sources && message.sources.length))\n                    message.sources = [];\n                message.sources.push($root.SdkStreamDescriptor.decode(reader, reader.uint32()));\n                break;\n            case 3:\n                if (!(message.pausedAtSourceIds && message.pausedAtSourceIds.length))\n                    message.pausedAtSourceIds = [];\n                if ((tag & 7) === 2) {\n                    var end2 = reader.uint32() + reader.pos;\n                    while (reader.pos < end2)\n                        message.pausedAtSourceIds.push(reader.uint32());\n                } else\n                    message.pausedAtSourceIds.push(reader.uint32());\n                break;\n            case 4:\n                message.numParticipants = reader.uint32();\n                break;\n            case 5:\n                if (!(message.supportedReceiveCodecIntersection && message.supportedReceiveCodecIntersection.length))\n                    message.supportedReceiveCodecIntersection = [];\n                if ((tag & 7) === 2) {\n                    var end2 = reader.uint32() + reader.pos;\n                    while (reader.pos < end2)\n                        message.supportedReceiveCodecIntersection.push(reader.int32());\n                } else\n                    message.supportedReceiveCodecIntersection.push(reader.int32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkIndexFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkIndexFrame} SdkIndexFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkIndexFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkIndexFrame message.\n     * @function verify\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkIndexFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.atCapacity != null && message.hasOwnProperty(\"atCapacity\"))\n            if (typeof message.atCapacity !== \"boolean\")\n                return \"atCapacity: boolean expected\";\n        if (message.sources != null && message.hasOwnProperty(\"sources\")) {\n            if (!Array.isArray(message.sources))\n                return \"sources: array expected\";\n            for (var i = 0; i < message.sources.length; ++i) {\n                var error = $root.SdkStreamDescriptor.verify(message.sources[i]);\n                if (error)\n                    return \"sources.\" + error;\n            }\n        }\n        if (message.pausedAtSourceIds != null && message.hasOwnProperty(\"pausedAtSourceIds\")) {\n            if (!Array.isArray(message.pausedAtSourceIds))\n                return \"pausedAtSourceIds: array expected\";\n            for (var i = 0; i < message.pausedAtSourceIds.length; ++i)\n                if (!$util.isInteger(message.pausedAtSourceIds[i]))\n                    return \"pausedAtSourceIds: integer[] expected\";\n        }\n        if (message.numParticipants != null && message.hasOwnProperty(\"numParticipants\"))\n            if (!$util.isInteger(message.numParticipants))\n                return \"numParticipants: integer expected\";\n        if (message.supportedReceiveCodecIntersection != null && message.hasOwnProperty(\"supportedReceiveCodecIntersection\")) {\n            if (!Array.isArray(message.supportedReceiveCodecIntersection))\n                return \"supportedReceiveCodecIntersection: array expected\";\n            for (var i = 0; i < message.supportedReceiveCodecIntersection.length; ++i)\n                switch (message.supportedReceiveCodecIntersection[i]) {\n                default:\n                    return \"supportedReceiveCodecIntersection: enum value[] expected\";\n                case 1:\n                case 3:\n                    break;\n                }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkIndexFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkIndexFrame} SdkIndexFrame\n     */\n    SdkIndexFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkIndexFrame)\n            return object;\n        var message = new $root.SdkIndexFrame();\n        if (object.atCapacity != null)\n            message.atCapacity = Boolean(object.atCapacity);\n        if (object.sources) {\n            if (!Array.isArray(object.sources))\n                throw TypeError(\".SdkIndexFrame.sources: array expected\");\n            message.sources = [];\n            for (var i = 0; i < object.sources.length; ++i) {\n                if (typeof object.sources[i] !== \"object\")\n                    throw TypeError(\".SdkIndexFrame.sources: object expected\");\n                message.sources[i] = $root.SdkStreamDescriptor.fromObject(object.sources[i]);\n            }\n        }\n        if (object.pausedAtSourceIds) {\n            if (!Array.isArray(object.pausedAtSourceIds))\n                throw TypeError(\".SdkIndexFrame.pausedAtSourceIds: array expected\");\n            message.pausedAtSourceIds = [];\n            for (var i = 0; i < object.pausedAtSourceIds.length; ++i)\n                message.pausedAtSourceIds[i] = object.pausedAtSourceIds[i] >>> 0;\n        }\n        if (object.numParticipants != null)\n            message.numParticipants = object.numParticipants >>> 0;\n        if (object.supportedReceiveCodecIntersection) {\n            if (!Array.isArray(object.supportedReceiveCodecIntersection))\n                throw TypeError(\".SdkIndexFrame.supportedReceiveCodecIntersection: array expected\");\n            message.supportedReceiveCodecIntersection = [];\n            for (var i = 0; i < object.supportedReceiveCodecIntersection.length; ++i)\n                switch (object.supportedReceiveCodecIntersection[i]) {\n                default:\n                case \"VP8\":\n                case 1:\n                    message.supportedReceiveCodecIntersection[i] = 1;\n                    break;\n                case \"H264_CONSTRAINED_BASELINE_PROFILE\":\n                case 3:\n                    message.supportedReceiveCodecIntersection[i] = 3;\n                    break;\n                }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkIndexFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {SdkIndexFrame} message SdkIndexFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkIndexFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.sources = [];\n            object.pausedAtSourceIds = [];\n            object.supportedReceiveCodecIntersection = [];\n        }\n        if (options.defaults) {\n            object.atCapacity = false;\n            object.numParticipants = 0;\n        }\n        if (message.atCapacity != null && message.hasOwnProperty(\"atCapacity\"))\n            object.atCapacity = message.atCapacity;\n        if (message.sources && message.sources.length) {\n            object.sources = [];\n            for (var j = 0; j < message.sources.length; ++j)\n                object.sources[j] = $root.SdkStreamDescriptor.toObject(message.sources[j], options);\n        }\n        if (message.pausedAtSourceIds && message.pausedAtSourceIds.length) {\n            object.pausedAtSourceIds = [];\n            for (var j = 0; j < message.pausedAtSourceIds.length; ++j)\n                object.pausedAtSourceIds[j] = message.pausedAtSourceIds[j];\n        }\n        if (message.numParticipants != null && message.hasOwnProperty(\"numParticipants\"))\n            object.numParticipants = message.numParticipants;\n        if (message.supportedReceiveCodecIntersection && message.supportedReceiveCodecIntersection.length) {\n            object.supportedReceiveCodecIntersection = [];\n            for (var j = 0; j < message.supportedReceiveCodecIntersection.length; ++j)\n                object.supportedReceiveCodecIntersection[j] = options.enums === String ? $root.SdkVideoCodecCapability[message.supportedReceiveCodecIntersection[j]] : message.supportedReceiveCodecIntersection[j];\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkIndexFrame to JSON.\n     * @function toJSON\n     * @memberof SdkIndexFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkIndexFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkIndexFrame;\n})();\n\n$root.SdkPauseResumeFrame = (function() {\n\n    /**\n     * Properties of a SdkPauseResumeFrame.\n     * @exports ISdkPauseResumeFrame\n     * @interface ISdkPauseResumeFrame\n     * @property {Array.<number>|null} [streamIds] SdkPauseResumeFrame streamIds\n     * @property {Array.<number>|null} [groupIds] SdkPauseResumeFrame groupIds\n     */\n\n    /**\n     * Constructs a new SdkPauseResumeFrame.\n     * @exports SdkPauseResumeFrame\n     * @classdesc Represents a SdkPauseResumeFrame.\n     * @implements ISdkPauseResumeFrame\n     * @constructor\n     * @param {ISdkPauseResumeFrame=} [properties] Properties to set\n     */\n    function SdkPauseResumeFrame(properties) {\n        this.streamIds = [];\n        this.groupIds = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkPauseResumeFrame streamIds.\n     * @member {Array.<number>} streamIds\n     * @memberof SdkPauseResumeFrame\n     * @instance\n     */\n    SdkPauseResumeFrame.prototype.streamIds = $util.emptyArray;\n\n    /**\n     * SdkPauseResumeFrame groupIds.\n     * @member {Array.<number>} groupIds\n     * @memberof SdkPauseResumeFrame\n     * @instance\n     */\n    SdkPauseResumeFrame.prototype.groupIds = $util.emptyArray;\n\n    /**\n     * Creates a new SdkPauseResumeFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {ISdkPauseResumeFrame=} [properties] Properties to set\n     * @returns {SdkPauseResumeFrame} SdkPauseResumeFrame instance\n     */\n    SdkPauseResumeFrame.create = function create(properties) {\n        return new SdkPauseResumeFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkPauseResumeFrame message. Does not implicitly {@link SdkPauseResumeFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {ISdkPauseResumeFrame} message SdkPauseResumeFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkPauseResumeFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.streamIds != null && message.streamIds.length)\n            for (var i = 0; i < message.streamIds.length; ++i)\n                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.streamIds[i]);\n        if (message.groupIds != null && message.groupIds.length)\n            for (var i = 0; i < message.groupIds.length; ++i)\n                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.groupIds[i]);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkPauseResumeFrame message, length delimited. Does not implicitly {@link SdkPauseResumeFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {ISdkPauseResumeFrame} message SdkPauseResumeFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkPauseResumeFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkPauseResumeFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkPauseResumeFrame} SdkPauseResumeFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkPauseResumeFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkPauseResumeFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.streamIds && message.streamIds.length))\n                    message.streamIds = [];\n                if ((tag & 7) === 2) {\n                    var end2 = reader.uint32() + reader.pos;\n                    while (reader.pos < end2)\n                        message.streamIds.push(reader.uint32());\n                } else\n                    message.streamIds.push(reader.uint32());\n                break;\n            case 2:\n                if (!(message.groupIds && message.groupIds.length))\n                    message.groupIds = [];\n                if ((tag & 7) === 2) {\n                    var end2 = reader.uint32() + reader.pos;\n                    while (reader.pos < end2)\n                        message.groupIds.push(reader.uint32());\n                } else\n                    message.groupIds.push(reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkPauseResumeFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkPauseResumeFrame} SdkPauseResumeFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkPauseResumeFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkPauseResumeFrame message.\n     * @function verify\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkPauseResumeFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.streamIds != null && message.hasOwnProperty(\"streamIds\")) {\n            if (!Array.isArray(message.streamIds))\n                return \"streamIds: array expected\";\n            for (var i = 0; i < message.streamIds.length; ++i)\n                if (!$util.isInteger(message.streamIds[i]))\n                    return \"streamIds: integer[] expected\";\n        }\n        if (message.groupIds != null && message.hasOwnProperty(\"groupIds\")) {\n            if (!Array.isArray(message.groupIds))\n                return \"groupIds: array expected\";\n            for (var i = 0; i < message.groupIds.length; ++i)\n                if (!$util.isInteger(message.groupIds[i]))\n                    return \"groupIds: integer[] expected\";\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkPauseResumeFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkPauseResumeFrame} SdkPauseResumeFrame\n     */\n    SdkPauseResumeFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkPauseResumeFrame)\n            return object;\n        var message = new $root.SdkPauseResumeFrame();\n        if (object.streamIds) {\n            if (!Array.isArray(object.streamIds))\n                throw TypeError(\".SdkPauseResumeFrame.streamIds: array expected\");\n            message.streamIds = [];\n            for (var i = 0; i < object.streamIds.length; ++i)\n                message.streamIds[i] = object.streamIds[i] >>> 0;\n        }\n        if (object.groupIds) {\n            if (!Array.isArray(object.groupIds))\n                throw TypeError(\".SdkPauseResumeFrame.groupIds: array expected\");\n            message.groupIds = [];\n            for (var i = 0; i < object.groupIds.length; ++i)\n                message.groupIds[i] = object.groupIds[i] >>> 0;\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkPauseResumeFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {SdkPauseResumeFrame} message SdkPauseResumeFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkPauseResumeFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.streamIds = [];\n            object.groupIds = [];\n        }\n        if (message.streamIds && message.streamIds.length) {\n            object.streamIds = [];\n            for (var j = 0; j < message.streamIds.length; ++j)\n                object.streamIds[j] = message.streamIds[j];\n        }\n        if (message.groupIds && message.groupIds.length) {\n            object.groupIds = [];\n            for (var j = 0; j < message.groupIds.length; ++j)\n                object.groupIds[j] = message.groupIds[j];\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkPauseResumeFrame to JSON.\n     * @function toJSON\n     * @memberof SdkPauseResumeFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkPauseResumeFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkPauseResumeFrame;\n})();\n\n$root.SdkBitrateFrame = (function() {\n\n    /**\n     * Properties of a SdkBitrateFrame.\n     * @exports ISdkBitrateFrame\n     * @interface ISdkBitrateFrame\n     * @property {Array.<ISdkBitrate>|null} [bitrates] SdkBitrateFrame bitrates\n     */\n\n    /**\n     * Constructs a new SdkBitrateFrame.\n     * @exports SdkBitrateFrame\n     * @classdesc Represents a SdkBitrateFrame.\n     * @implements ISdkBitrateFrame\n     * @constructor\n     * @param {ISdkBitrateFrame=} [properties] Properties to set\n     */\n    function SdkBitrateFrame(properties) {\n        this.bitrates = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkBitrateFrame bitrates.\n     * @member {Array.<ISdkBitrate>} bitrates\n     * @memberof SdkBitrateFrame\n     * @instance\n     */\n    SdkBitrateFrame.prototype.bitrates = $util.emptyArray;\n\n    /**\n     * Creates a new SdkBitrateFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {ISdkBitrateFrame=} [properties] Properties to set\n     * @returns {SdkBitrateFrame} SdkBitrateFrame instance\n     */\n    SdkBitrateFrame.create = function create(properties) {\n        return new SdkBitrateFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkBitrateFrame message. Does not implicitly {@link SdkBitrateFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {ISdkBitrateFrame} message SdkBitrateFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkBitrateFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.bitrates != null && message.bitrates.length)\n            for (var i = 0; i < message.bitrates.length; ++i)\n                $root.SdkBitrate.encode(message.bitrates[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkBitrateFrame message, length delimited. Does not implicitly {@link SdkBitrateFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {ISdkBitrateFrame} message SdkBitrateFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkBitrateFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkBitrateFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkBitrateFrame} SdkBitrateFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkBitrateFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkBitrateFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.bitrates && message.bitrates.length))\n                    message.bitrates = [];\n                message.bitrates.push($root.SdkBitrate.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkBitrateFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkBitrateFrame} SdkBitrateFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkBitrateFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkBitrateFrame message.\n     * @function verify\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkBitrateFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.bitrates != null && message.hasOwnProperty(\"bitrates\")) {\n            if (!Array.isArray(message.bitrates))\n                return \"bitrates: array expected\";\n            for (var i = 0; i < message.bitrates.length; ++i) {\n                var error = $root.SdkBitrate.verify(message.bitrates[i]);\n                if (error)\n                    return \"bitrates.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkBitrateFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkBitrateFrame} SdkBitrateFrame\n     */\n    SdkBitrateFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkBitrateFrame)\n            return object;\n        var message = new $root.SdkBitrateFrame();\n        if (object.bitrates) {\n            if (!Array.isArray(object.bitrates))\n                throw TypeError(\".SdkBitrateFrame.bitrates: array expected\");\n            message.bitrates = [];\n            for (var i = 0; i < object.bitrates.length; ++i) {\n                if (typeof object.bitrates[i] !== \"object\")\n                    throw TypeError(\".SdkBitrateFrame.bitrates: object expected\");\n                message.bitrates[i] = $root.SdkBitrate.fromObject(object.bitrates[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkBitrateFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {SdkBitrateFrame} message SdkBitrateFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkBitrateFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.bitrates = [];\n        if (message.bitrates && message.bitrates.length) {\n            object.bitrates = [];\n            for (var j = 0; j < message.bitrates.length; ++j)\n                object.bitrates[j] = $root.SdkBitrate.toObject(message.bitrates[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkBitrateFrame to JSON.\n     * @function toJSON\n     * @memberof SdkBitrateFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkBitrateFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkBitrateFrame;\n})();\n\n$root.SdkStreamDescriptor = (function() {\n\n    /**\n     * Properties of a SdkStreamDescriptor.\n     * @exports ISdkStreamDescriptor\n     * @interface ISdkStreamDescriptor\n     * @property {number|null} [streamId] SdkStreamDescriptor streamId\n     * @property {number|null} [framerate] SdkStreamDescriptor framerate\n     * @property {number|null} [maxBitrateKbps] SdkStreamDescriptor maxBitrateKbps\n     * @property {string|null} [trackLabel] SdkStreamDescriptor trackLabel\n     * @property {number|null} [groupId] SdkStreamDescriptor groupId\n     * @property {number|null} [avgBitrateBps] SdkStreamDescriptor avgBitrateBps\n     * @property {string|null} [attendeeId] SdkStreamDescriptor attendeeId\n     * @property {SdkStreamMediaType|null} [mediaType] SdkStreamDescriptor mediaType\n     * @property {string|null} [externalUserId] SdkStreamDescriptor externalUserId\n     */\n\n    /**\n     * Constructs a new SdkStreamDescriptor.\n     * @exports SdkStreamDescriptor\n     * @classdesc Represents a SdkStreamDescriptor.\n     * @implements ISdkStreamDescriptor\n     * @constructor\n     * @param {ISdkStreamDescriptor=} [properties] Properties to set\n     */\n    function SdkStreamDescriptor(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkStreamDescriptor streamId.\n     * @member {number} streamId\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.streamId = 0;\n\n    /**\n     * SdkStreamDescriptor framerate.\n     * @member {number} framerate\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.framerate = 0;\n\n    /**\n     * SdkStreamDescriptor maxBitrateKbps.\n     * @member {number} maxBitrateKbps\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.maxBitrateKbps = 0;\n\n    /**\n     * SdkStreamDescriptor trackLabel.\n     * @member {string} trackLabel\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.trackLabel = \"\";\n\n    /**\n     * SdkStreamDescriptor groupId.\n     * @member {number} groupId\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.groupId = 0;\n\n    /**\n     * SdkStreamDescriptor avgBitrateBps.\n     * @member {number} avgBitrateBps\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.avgBitrateBps = 0;\n\n    /**\n     * SdkStreamDescriptor attendeeId.\n     * @member {string} attendeeId\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.attendeeId = \"\";\n\n    /**\n     * SdkStreamDescriptor mediaType.\n     * @member {SdkStreamMediaType} mediaType\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.mediaType = 1;\n\n    /**\n     * SdkStreamDescriptor externalUserId.\n     * @member {string} externalUserId\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.externalUserId = \"\";\n\n    /**\n     * Creates a new SdkStreamDescriptor instance using the specified properties.\n     * @function create\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {ISdkStreamDescriptor=} [properties] Properties to set\n     * @returns {SdkStreamDescriptor} SdkStreamDescriptor instance\n     */\n    SdkStreamDescriptor.create = function create(properties) {\n        return new SdkStreamDescriptor(properties);\n    };\n\n    /**\n     * Encodes the specified SdkStreamDescriptor message. Does not implicitly {@link SdkStreamDescriptor.verify|verify} messages.\n     * @function encode\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {ISdkStreamDescriptor} message SdkStreamDescriptor message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkStreamDescriptor.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.streamId != null && Object.hasOwnProperty.call(message, \"streamId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.streamId);\n        if (message.framerate != null && Object.hasOwnProperty.call(message, \"framerate\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.framerate);\n        if (message.maxBitrateKbps != null && Object.hasOwnProperty.call(message, \"maxBitrateKbps\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.maxBitrateKbps);\n        if (message.trackLabel != null && Object.hasOwnProperty.call(message, \"trackLabel\"))\n            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trackLabel);\n        if (message.groupId != null && Object.hasOwnProperty.call(message, \"groupId\"))\n            writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.groupId);\n        if (message.avgBitrateBps != null && Object.hasOwnProperty.call(message, \"avgBitrateBps\"))\n            writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.avgBitrateBps);\n        if (message.attendeeId != null && Object.hasOwnProperty.call(message, \"attendeeId\"))\n            writer.uint32(/* id 8, wireType 2 =*/66).string(message.attendeeId);\n        if (message.mediaType != null && Object.hasOwnProperty.call(message, \"mediaType\"))\n            writer.uint32(/* id 9, wireType 0 =*/72).int32(message.mediaType);\n        if (message.externalUserId != null && Object.hasOwnProperty.call(message, \"externalUserId\"))\n            writer.uint32(/* id 10, wireType 2 =*/82).string(message.externalUserId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkStreamDescriptor message, length delimited. Does not implicitly {@link SdkStreamDescriptor.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {ISdkStreamDescriptor} message SdkStreamDescriptor message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkStreamDescriptor.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkStreamDescriptor message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkStreamDescriptor} SdkStreamDescriptor\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkStreamDescriptor.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkStreamDescriptor();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.streamId = reader.uint32();\n                break;\n            case 2:\n                message.framerate = reader.uint32();\n                break;\n            case 3:\n                message.maxBitrateKbps = reader.uint32();\n                break;\n            case 4:\n                message.trackLabel = reader.string();\n                break;\n            case 6:\n                message.groupId = reader.uint32();\n                break;\n            case 7:\n                message.avgBitrateBps = reader.uint32();\n                break;\n            case 8:\n                message.attendeeId = reader.string();\n                break;\n            case 9:\n                message.mediaType = reader.int32();\n                break;\n            case 10:\n                message.externalUserId = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkStreamDescriptor message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkStreamDescriptor} SdkStreamDescriptor\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkStreamDescriptor.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkStreamDescriptor message.\n     * @function verify\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkStreamDescriptor.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            if (!$util.isInteger(message.streamId))\n                return \"streamId: integer expected\";\n        if (message.framerate != null && message.hasOwnProperty(\"framerate\"))\n            if (!$util.isInteger(message.framerate))\n                return \"framerate: integer expected\";\n        if (message.maxBitrateKbps != null && message.hasOwnProperty(\"maxBitrateKbps\"))\n            if (!$util.isInteger(message.maxBitrateKbps))\n                return \"maxBitrateKbps: integer expected\";\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            if (!$util.isString(message.trackLabel))\n                return \"trackLabel: string expected\";\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            if (!$util.isInteger(message.groupId))\n                return \"groupId: integer expected\";\n        if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\"))\n            if (!$util.isInteger(message.avgBitrateBps))\n                return \"avgBitrateBps: integer expected\";\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            if (!$util.isString(message.attendeeId))\n                return \"attendeeId: string expected\";\n        if (message.mediaType != null && message.hasOwnProperty(\"mediaType\"))\n            switch (message.mediaType) {\n            default:\n                return \"mediaType: enum value expected\";\n            case 1:\n            case 2:\n                break;\n            }\n        if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\"))\n            if (!$util.isString(message.externalUserId))\n                return \"externalUserId: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkStreamDescriptor message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkStreamDescriptor} SdkStreamDescriptor\n     */\n    SdkStreamDescriptor.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkStreamDescriptor)\n            return object;\n        var message = new $root.SdkStreamDescriptor();\n        if (object.streamId != null)\n            message.streamId = object.streamId >>> 0;\n        if (object.framerate != null)\n            message.framerate = object.framerate >>> 0;\n        if (object.maxBitrateKbps != null)\n            message.maxBitrateKbps = object.maxBitrateKbps >>> 0;\n        if (object.trackLabel != null)\n            message.trackLabel = String(object.trackLabel);\n        if (object.groupId != null)\n            message.groupId = object.groupId >>> 0;\n        if (object.avgBitrateBps != null)\n            message.avgBitrateBps = object.avgBitrateBps >>> 0;\n        if (object.attendeeId != null)\n            message.attendeeId = String(object.attendeeId);\n        switch (object.mediaType) {\n        case \"AUDIO\":\n        case 1:\n            message.mediaType = 1;\n            break;\n        case \"VIDEO\":\n        case 2:\n            message.mediaType = 2;\n            break;\n        }\n        if (object.externalUserId != null)\n            message.externalUserId = String(object.externalUserId);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkStreamDescriptor message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {SdkStreamDescriptor} message SdkStreamDescriptor\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkStreamDescriptor.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.streamId = 0;\n            object.framerate = 0;\n            object.maxBitrateKbps = 0;\n            object.trackLabel = \"\";\n            object.groupId = 0;\n            object.avgBitrateBps = 0;\n            object.attendeeId = \"\";\n            object.mediaType = options.enums === String ? \"AUDIO\" : 1;\n            object.externalUserId = \"\";\n        }\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            object.streamId = message.streamId;\n        if (message.framerate != null && message.hasOwnProperty(\"framerate\"))\n            object.framerate = message.framerate;\n        if (message.maxBitrateKbps != null && message.hasOwnProperty(\"maxBitrateKbps\"))\n            object.maxBitrateKbps = message.maxBitrateKbps;\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            object.trackLabel = message.trackLabel;\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            object.groupId = message.groupId;\n        if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\"))\n            object.avgBitrateBps = message.avgBitrateBps;\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            object.attendeeId = message.attendeeId;\n        if (message.mediaType != null && message.hasOwnProperty(\"mediaType\"))\n            object.mediaType = options.enums === String ? $root.SdkStreamMediaType[message.mediaType] : message.mediaType;\n        if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\"))\n            object.externalUserId = message.externalUserId;\n        return object;\n    };\n\n    /**\n     * Converts this SdkStreamDescriptor to JSON.\n     * @function toJSON\n     * @memberof SdkStreamDescriptor\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkStreamDescriptor.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkStreamDescriptor;\n})();\n\n$root.SdkStreamAllocation = (function() {\n\n    /**\n     * Properties of a SdkStreamAllocation.\n     * @exports ISdkStreamAllocation\n     * @interface ISdkStreamAllocation\n     * @property {string|null} [trackLabel] SdkStreamAllocation trackLabel\n     * @property {number|null} [streamId] SdkStreamAllocation streamId\n     * @property {number|null} [groupId] SdkStreamAllocation groupId\n     */\n\n    /**\n     * Constructs a new SdkStreamAllocation.\n     * @exports SdkStreamAllocation\n     * @classdesc Represents a SdkStreamAllocation.\n     * @implements ISdkStreamAllocation\n     * @constructor\n     * @param {ISdkStreamAllocation=} [properties] Properties to set\n     */\n    function SdkStreamAllocation(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkStreamAllocation trackLabel.\n     * @member {string} trackLabel\n     * @memberof SdkStreamAllocation\n     * @instance\n     */\n    SdkStreamAllocation.prototype.trackLabel = \"\";\n\n    /**\n     * SdkStreamAllocation streamId.\n     * @member {number} streamId\n     * @memberof SdkStreamAllocation\n     * @instance\n     */\n    SdkStreamAllocation.prototype.streamId = 0;\n\n    /**\n     * SdkStreamAllocation groupId.\n     * @member {number} groupId\n     * @memberof SdkStreamAllocation\n     * @instance\n     */\n    SdkStreamAllocation.prototype.groupId = 0;\n\n    /**\n     * Creates a new SdkStreamAllocation instance using the specified properties.\n     * @function create\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {ISdkStreamAllocation=} [properties] Properties to set\n     * @returns {SdkStreamAllocation} SdkStreamAllocation instance\n     */\n    SdkStreamAllocation.create = function create(properties) {\n        return new SdkStreamAllocation(properties);\n    };\n\n    /**\n     * Encodes the specified SdkStreamAllocation message. Does not implicitly {@link SdkStreamAllocation.verify|verify} messages.\n     * @function encode\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {ISdkStreamAllocation} message SdkStreamAllocation message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkStreamAllocation.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.trackLabel != null && Object.hasOwnProperty.call(message, \"trackLabel\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.trackLabel);\n        if (message.streamId != null && Object.hasOwnProperty.call(message, \"streamId\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.streamId);\n        if (message.groupId != null && Object.hasOwnProperty.call(message, \"groupId\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.groupId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkStreamAllocation message, length delimited. Does not implicitly {@link SdkStreamAllocation.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {ISdkStreamAllocation} message SdkStreamAllocation message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkStreamAllocation.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkStreamAllocation message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkStreamAllocation} SdkStreamAllocation\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkStreamAllocation.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkStreamAllocation();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.trackLabel = reader.string();\n                break;\n            case 2:\n                message.streamId = reader.uint32();\n                break;\n            case 3:\n                message.groupId = reader.uint32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkStreamAllocation message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkStreamAllocation} SdkStreamAllocation\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkStreamAllocation.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkStreamAllocation message.\n     * @function verify\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkStreamAllocation.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            if (!$util.isString(message.trackLabel))\n                return \"trackLabel: string expected\";\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            if (!$util.isInteger(message.streamId))\n                return \"streamId: integer expected\";\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            if (!$util.isInteger(message.groupId))\n                return \"groupId: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkStreamAllocation message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkStreamAllocation} SdkStreamAllocation\n     */\n    SdkStreamAllocation.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkStreamAllocation)\n            return object;\n        var message = new $root.SdkStreamAllocation();\n        if (object.trackLabel != null)\n            message.trackLabel = String(object.trackLabel);\n        if (object.streamId != null)\n            message.streamId = object.streamId >>> 0;\n        if (object.groupId != null)\n            message.groupId = object.groupId >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkStreamAllocation message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {SdkStreamAllocation} message SdkStreamAllocation\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkStreamAllocation.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.trackLabel = \"\";\n            object.streamId = 0;\n            object.groupId = 0;\n        }\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            object.trackLabel = message.trackLabel;\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            object.streamId = message.streamId;\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            object.groupId = message.groupId;\n        return object;\n    };\n\n    /**\n     * Converts this SdkStreamAllocation to JSON.\n     * @function toJSON\n     * @memberof SdkStreamAllocation\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkStreamAllocation.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkStreamAllocation;\n})();\n\n$root.SdkTrackMapping = (function() {\n\n    /**\n     * Properties of a SdkTrackMapping.\n     * @exports ISdkTrackMapping\n     * @interface ISdkTrackMapping\n     * @property {number|null} [streamId] SdkTrackMapping streamId\n     * @property {number|null} [ssrc] SdkTrackMapping ssrc\n     * @property {string|null} [trackLabel] SdkTrackMapping trackLabel\n     */\n\n    /**\n     * Constructs a new SdkTrackMapping.\n     * @exports SdkTrackMapping\n     * @classdesc Represents a SdkTrackMapping.\n     * @implements ISdkTrackMapping\n     * @constructor\n     * @param {ISdkTrackMapping=} [properties] Properties to set\n     */\n    function SdkTrackMapping(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkTrackMapping streamId.\n     * @member {number} streamId\n     * @memberof SdkTrackMapping\n     * @instance\n     */\n    SdkTrackMapping.prototype.streamId = 0;\n\n    /**\n     * SdkTrackMapping ssrc.\n     * @member {number} ssrc\n     * @memberof SdkTrackMapping\n     * @instance\n     */\n    SdkTrackMapping.prototype.ssrc = 0;\n\n    /**\n     * SdkTrackMapping trackLabel.\n     * @member {string} trackLabel\n     * @memberof SdkTrackMapping\n     * @instance\n     */\n    SdkTrackMapping.prototype.trackLabel = \"\";\n\n    /**\n     * Creates a new SdkTrackMapping instance using the specified properties.\n     * @function create\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {ISdkTrackMapping=} [properties] Properties to set\n     * @returns {SdkTrackMapping} SdkTrackMapping instance\n     */\n    SdkTrackMapping.create = function create(properties) {\n        return new SdkTrackMapping(properties);\n    };\n\n    /**\n     * Encodes the specified SdkTrackMapping message. Does not implicitly {@link SdkTrackMapping.verify|verify} messages.\n     * @function encode\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {ISdkTrackMapping} message SdkTrackMapping message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTrackMapping.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.streamId != null && Object.hasOwnProperty.call(message, \"streamId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.streamId);\n        if (message.ssrc != null && Object.hasOwnProperty.call(message, \"ssrc\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.ssrc);\n        if (message.trackLabel != null && Object.hasOwnProperty.call(message, \"trackLabel\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.trackLabel);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkTrackMapping message, length delimited. Does not implicitly {@link SdkTrackMapping.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {ISdkTrackMapping} message SdkTrackMapping message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTrackMapping.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkTrackMapping message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkTrackMapping} SdkTrackMapping\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTrackMapping.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkTrackMapping();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.streamId = reader.uint32();\n                break;\n            case 2:\n                message.ssrc = reader.uint32();\n                break;\n            case 3:\n                message.trackLabel = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkTrackMapping message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkTrackMapping} SdkTrackMapping\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTrackMapping.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkTrackMapping message.\n     * @function verify\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkTrackMapping.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            if (!$util.isInteger(message.streamId))\n                return \"streamId: integer expected\";\n        if (message.ssrc != null && message.hasOwnProperty(\"ssrc\"))\n            if (!$util.isInteger(message.ssrc))\n                return \"ssrc: integer expected\";\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            if (!$util.isString(message.trackLabel))\n                return \"trackLabel: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkTrackMapping message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkTrackMapping} SdkTrackMapping\n     */\n    SdkTrackMapping.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkTrackMapping)\n            return object;\n        var message = new $root.SdkTrackMapping();\n        if (object.streamId != null)\n            message.streamId = object.streamId >>> 0;\n        if (object.ssrc != null)\n            message.ssrc = object.ssrc >>> 0;\n        if (object.trackLabel != null)\n            message.trackLabel = String(object.trackLabel);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkTrackMapping message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {SdkTrackMapping} message SdkTrackMapping\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkTrackMapping.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.streamId = 0;\n            object.ssrc = 0;\n            object.trackLabel = \"\";\n        }\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            object.streamId = message.streamId;\n        if (message.ssrc != null && message.hasOwnProperty(\"ssrc\"))\n            object.ssrc = message.ssrc;\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            object.trackLabel = message.trackLabel;\n        return object;\n    };\n\n    /**\n     * Converts this SdkTrackMapping to JSON.\n     * @function toJSON\n     * @memberof SdkTrackMapping\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkTrackMapping.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkTrackMapping;\n})();\n\n$root.SdkBitrate = (function() {\n\n    /**\n     * Properties of a SdkBitrate.\n     * @exports ISdkBitrate\n     * @interface ISdkBitrate\n     * @property {number|null} [sourceStreamId] SdkBitrate sourceStreamId\n     * @property {number|null} [avgBitrateBps] SdkBitrate avgBitrateBps\n     */\n\n    /**\n     * Constructs a new SdkBitrate.\n     * @exports SdkBitrate\n     * @classdesc Represents a SdkBitrate.\n     * @implements ISdkBitrate\n     * @constructor\n     * @param {ISdkBitrate=} [properties] Properties to set\n     */\n    function SdkBitrate(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkBitrate sourceStreamId.\n     * @member {number} sourceStreamId\n     * @memberof SdkBitrate\n     * @instance\n     */\n    SdkBitrate.prototype.sourceStreamId = 0;\n\n    /**\n     * SdkBitrate avgBitrateBps.\n     * @member {number} avgBitrateBps\n     * @memberof SdkBitrate\n     * @instance\n     */\n    SdkBitrate.prototype.avgBitrateBps = 0;\n\n    /**\n     * Creates a new SdkBitrate instance using the specified properties.\n     * @function create\n     * @memberof SdkBitrate\n     * @static\n     * @param {ISdkBitrate=} [properties] Properties to set\n     * @returns {SdkBitrate} SdkBitrate instance\n     */\n    SdkBitrate.create = function create(properties) {\n        return new SdkBitrate(properties);\n    };\n\n    /**\n     * Encodes the specified SdkBitrate message. Does not implicitly {@link SdkBitrate.verify|verify} messages.\n     * @function encode\n     * @memberof SdkBitrate\n     * @static\n     * @param {ISdkBitrate} message SdkBitrate message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkBitrate.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.sourceStreamId != null && Object.hasOwnProperty.call(message, \"sourceStreamId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.sourceStreamId);\n        if (message.avgBitrateBps != null && Object.hasOwnProperty.call(message, \"avgBitrateBps\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.avgBitrateBps);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkBitrate message, length delimited. Does not implicitly {@link SdkBitrate.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkBitrate\n     * @static\n     * @param {ISdkBitrate} message SdkBitrate message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkBitrate.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkBitrate message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkBitrate\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkBitrate} SdkBitrate\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkBitrate.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkBitrate();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.sourceStreamId = reader.uint32();\n                break;\n            case 2:\n                message.avgBitrateBps = reader.uint32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkBitrate message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkBitrate\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkBitrate} SdkBitrate\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkBitrate.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkBitrate message.\n     * @function verify\n     * @memberof SdkBitrate\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkBitrate.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.sourceStreamId != null && message.hasOwnProperty(\"sourceStreamId\"))\n            if (!$util.isInteger(message.sourceStreamId))\n                return \"sourceStreamId: integer expected\";\n        if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\"))\n            if (!$util.isInteger(message.avgBitrateBps))\n                return \"avgBitrateBps: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkBitrate message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkBitrate\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkBitrate} SdkBitrate\n     */\n    SdkBitrate.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkBitrate)\n            return object;\n        var message = new $root.SdkBitrate();\n        if (object.sourceStreamId != null)\n            message.sourceStreamId = object.sourceStreamId >>> 0;\n        if (object.avgBitrateBps != null)\n            message.avgBitrateBps = object.avgBitrateBps >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkBitrate message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkBitrate\n     * @static\n     * @param {SdkBitrate} message SdkBitrate\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkBitrate.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.sourceStreamId = 0;\n            object.avgBitrateBps = 0;\n        }\n        if (message.sourceStreamId != null && message.hasOwnProperty(\"sourceStreamId\"))\n            object.sourceStreamId = message.sourceStreamId;\n        if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\"))\n            object.avgBitrateBps = message.avgBitrateBps;\n        return object;\n    };\n\n    /**\n     * Converts this SdkBitrate to JSON.\n     * @function toJSON\n     * @memberof SdkBitrate\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkBitrate.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkBitrate;\n})();\n\n$root.SdkAudioControlFrame = (function() {\n\n    /**\n     * Properties of a SdkAudioControlFrame.\n     * @exports ISdkAudioControlFrame\n     * @interface ISdkAudioControlFrame\n     * @property {boolean|null} [muted] SdkAudioControlFrame muted\n     */\n\n    /**\n     * Constructs a new SdkAudioControlFrame.\n     * @exports SdkAudioControlFrame\n     * @classdesc Represents a SdkAudioControlFrame.\n     * @implements ISdkAudioControlFrame\n     * @constructor\n     * @param {ISdkAudioControlFrame=} [properties] Properties to set\n     */\n    function SdkAudioControlFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkAudioControlFrame muted.\n     * @member {boolean} muted\n     * @memberof SdkAudioControlFrame\n     * @instance\n     */\n    SdkAudioControlFrame.prototype.muted = false;\n\n    /**\n     * Creates a new SdkAudioControlFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {ISdkAudioControlFrame=} [properties] Properties to set\n     * @returns {SdkAudioControlFrame} SdkAudioControlFrame instance\n     */\n    SdkAudioControlFrame.create = function create(properties) {\n        return new SdkAudioControlFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkAudioControlFrame message. Does not implicitly {@link SdkAudioControlFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {ISdkAudioControlFrame} message SdkAudioControlFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioControlFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.muted != null && Object.hasOwnProperty.call(message, \"muted\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.muted);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkAudioControlFrame message, length delimited. Does not implicitly {@link SdkAudioControlFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {ISdkAudioControlFrame} message SdkAudioControlFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioControlFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkAudioControlFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkAudioControlFrame} SdkAudioControlFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioControlFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkAudioControlFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.muted = reader.bool();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkAudioControlFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkAudioControlFrame} SdkAudioControlFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioControlFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkAudioControlFrame message.\n     * @function verify\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkAudioControlFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            if (typeof message.muted !== \"boolean\")\n                return \"muted: boolean expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkAudioControlFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkAudioControlFrame} SdkAudioControlFrame\n     */\n    SdkAudioControlFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkAudioControlFrame)\n            return object;\n        var message = new $root.SdkAudioControlFrame();\n        if (object.muted != null)\n            message.muted = Boolean(object.muted);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkAudioControlFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {SdkAudioControlFrame} message SdkAudioControlFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkAudioControlFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.muted = false;\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            object.muted = message.muted;\n        return object;\n    };\n\n    /**\n     * Converts this SdkAudioControlFrame to JSON.\n     * @function toJSON\n     * @memberof SdkAudioControlFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkAudioControlFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkAudioControlFrame;\n})();\n\n$root.SdkAudioMetadataFrame = (function() {\n\n    /**\n     * Properties of a SdkAudioMetadataFrame.\n     * @exports ISdkAudioMetadataFrame\n     * @interface ISdkAudioMetadataFrame\n     * @property {Array.<ISdkAudioAttendeeState>|null} [attendeeStates] SdkAudioMetadataFrame attendeeStates\n     */\n\n    /**\n     * Constructs a new SdkAudioMetadataFrame.\n     * @exports SdkAudioMetadataFrame\n     * @classdesc Represents a SdkAudioMetadataFrame.\n     * @implements ISdkAudioMetadataFrame\n     * @constructor\n     * @param {ISdkAudioMetadataFrame=} [properties] Properties to set\n     */\n    function SdkAudioMetadataFrame(properties) {\n        this.attendeeStates = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkAudioMetadataFrame attendeeStates.\n     * @member {Array.<ISdkAudioAttendeeState>} attendeeStates\n     * @memberof SdkAudioMetadataFrame\n     * @instance\n     */\n    SdkAudioMetadataFrame.prototype.attendeeStates = $util.emptyArray;\n\n    /**\n     * Creates a new SdkAudioMetadataFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {ISdkAudioMetadataFrame=} [properties] Properties to set\n     * @returns {SdkAudioMetadataFrame} SdkAudioMetadataFrame instance\n     */\n    SdkAudioMetadataFrame.create = function create(properties) {\n        return new SdkAudioMetadataFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkAudioMetadataFrame message. Does not implicitly {@link SdkAudioMetadataFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {ISdkAudioMetadataFrame} message SdkAudioMetadataFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioMetadataFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.attendeeStates != null && message.attendeeStates.length)\n            for (var i = 0; i < message.attendeeStates.length; ++i)\n                $root.SdkAudioAttendeeState.encode(message.attendeeStates[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkAudioMetadataFrame message, length delimited. Does not implicitly {@link SdkAudioMetadataFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {ISdkAudioMetadataFrame} message SdkAudioMetadataFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioMetadataFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkAudioMetadataFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkAudioMetadataFrame} SdkAudioMetadataFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioMetadataFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkAudioMetadataFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.attendeeStates && message.attendeeStates.length))\n                    message.attendeeStates = [];\n                message.attendeeStates.push($root.SdkAudioAttendeeState.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkAudioMetadataFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkAudioMetadataFrame} SdkAudioMetadataFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioMetadataFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkAudioMetadataFrame message.\n     * @function verify\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkAudioMetadataFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.attendeeStates != null && message.hasOwnProperty(\"attendeeStates\")) {\n            if (!Array.isArray(message.attendeeStates))\n                return \"attendeeStates: array expected\";\n            for (var i = 0; i < message.attendeeStates.length; ++i) {\n                var error = $root.SdkAudioAttendeeState.verify(message.attendeeStates[i]);\n                if (error)\n                    return \"attendeeStates.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkAudioMetadataFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkAudioMetadataFrame} SdkAudioMetadataFrame\n     */\n    SdkAudioMetadataFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkAudioMetadataFrame)\n            return object;\n        var message = new $root.SdkAudioMetadataFrame();\n        if (object.attendeeStates) {\n            if (!Array.isArray(object.attendeeStates))\n                throw TypeError(\".SdkAudioMetadataFrame.attendeeStates: array expected\");\n            message.attendeeStates = [];\n            for (var i = 0; i < object.attendeeStates.length; ++i) {\n                if (typeof object.attendeeStates[i] !== \"object\")\n                    throw TypeError(\".SdkAudioMetadataFrame.attendeeStates: object expected\");\n                message.attendeeStates[i] = $root.SdkAudioAttendeeState.fromObject(object.attendeeStates[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkAudioMetadataFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {SdkAudioMetadataFrame} message SdkAudioMetadataFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkAudioMetadataFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.attendeeStates = [];\n        if (message.attendeeStates && message.attendeeStates.length) {\n            object.attendeeStates = [];\n            for (var j = 0; j < message.attendeeStates.length; ++j)\n                object.attendeeStates[j] = $root.SdkAudioAttendeeState.toObject(message.attendeeStates[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkAudioMetadataFrame to JSON.\n     * @function toJSON\n     * @memberof SdkAudioMetadataFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkAudioMetadataFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkAudioMetadataFrame;\n})();\n\n$root.SdkAudioAttendeeState = (function() {\n\n    /**\n     * Properties of a SdkAudioAttendeeState.\n     * @exports ISdkAudioAttendeeState\n     * @interface ISdkAudioAttendeeState\n     * @property {number|null} [audioStreamId] SdkAudioAttendeeState audioStreamId\n     * @property {number|null} [volume] SdkAudioAttendeeState volume\n     * @property {boolean|null} [muted] SdkAudioAttendeeState muted\n     * @property {number|null} [signalStrength] SdkAudioAttendeeState signalStrength\n     */\n\n    /**\n     * Constructs a new SdkAudioAttendeeState.\n     * @exports SdkAudioAttendeeState\n     * @classdesc Represents a SdkAudioAttendeeState.\n     * @implements ISdkAudioAttendeeState\n     * @constructor\n     * @param {ISdkAudioAttendeeState=} [properties] Properties to set\n     */\n    function SdkAudioAttendeeState(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkAudioAttendeeState audioStreamId.\n     * @member {number} audioStreamId\n     * @memberof SdkAudioAttendeeState\n     * @instance\n     */\n    SdkAudioAttendeeState.prototype.audioStreamId = 0;\n\n    /**\n     * SdkAudioAttendeeState volume.\n     * @member {number} volume\n     * @memberof SdkAudioAttendeeState\n     * @instance\n     */\n    SdkAudioAttendeeState.prototype.volume = 0;\n\n    /**\n     * SdkAudioAttendeeState muted.\n     * @member {boolean} muted\n     * @memberof SdkAudioAttendeeState\n     * @instance\n     */\n    SdkAudioAttendeeState.prototype.muted = false;\n\n    /**\n     * SdkAudioAttendeeState signalStrength.\n     * @member {number} signalStrength\n     * @memberof SdkAudioAttendeeState\n     * @instance\n     */\n    SdkAudioAttendeeState.prototype.signalStrength = 0;\n\n    /**\n     * Creates a new SdkAudioAttendeeState instance using the specified properties.\n     * @function create\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {ISdkAudioAttendeeState=} [properties] Properties to set\n     * @returns {SdkAudioAttendeeState} SdkAudioAttendeeState instance\n     */\n    SdkAudioAttendeeState.create = function create(properties) {\n        return new SdkAudioAttendeeState(properties);\n    };\n\n    /**\n     * Encodes the specified SdkAudioAttendeeState message. Does not implicitly {@link SdkAudioAttendeeState.verify|verify} messages.\n     * @function encode\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {ISdkAudioAttendeeState} message SdkAudioAttendeeState message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioAttendeeState.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.audioStreamId != null && Object.hasOwnProperty.call(message, \"audioStreamId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.audioStreamId);\n        if (message.volume != null && Object.hasOwnProperty.call(message, \"volume\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.volume);\n        if (message.muted != null && Object.hasOwnProperty.call(message, \"muted\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).bool(message.muted);\n        if (message.signalStrength != null && Object.hasOwnProperty.call(message, \"signalStrength\"))\n            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.signalStrength);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkAudioAttendeeState message, length delimited. Does not implicitly {@link SdkAudioAttendeeState.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {ISdkAudioAttendeeState} message SdkAudioAttendeeState message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioAttendeeState.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkAudioAttendeeState message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkAudioAttendeeState} SdkAudioAttendeeState\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioAttendeeState.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkAudioAttendeeState();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.audioStreamId = reader.uint32();\n                break;\n            case 2:\n                message.volume = reader.uint32();\n                break;\n            case 3:\n                message.muted = reader.bool();\n                break;\n            case 4:\n                message.signalStrength = reader.uint32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkAudioAttendeeState message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkAudioAttendeeState} SdkAudioAttendeeState\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioAttendeeState.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkAudioAttendeeState message.\n     * @function verify\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkAudioAttendeeState.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\"))\n            if (!$util.isInteger(message.audioStreamId))\n                return \"audioStreamId: integer expected\";\n        if (message.volume != null && message.hasOwnProperty(\"volume\"))\n            if (!$util.isInteger(message.volume))\n                return \"volume: integer expected\";\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            if (typeof message.muted !== \"boolean\")\n                return \"muted: boolean expected\";\n        if (message.signalStrength != null && message.hasOwnProperty(\"signalStrength\"))\n            if (!$util.isInteger(message.signalStrength))\n                return \"signalStrength: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkAudioAttendeeState message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkAudioAttendeeState} SdkAudioAttendeeState\n     */\n    SdkAudioAttendeeState.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkAudioAttendeeState)\n            return object;\n        var message = new $root.SdkAudioAttendeeState();\n        if (object.audioStreamId != null)\n            message.audioStreamId = object.audioStreamId >>> 0;\n        if (object.volume != null)\n            message.volume = object.volume >>> 0;\n        if (object.muted != null)\n            message.muted = Boolean(object.muted);\n        if (object.signalStrength != null)\n            message.signalStrength = object.signalStrength >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkAudioAttendeeState message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {SdkAudioAttendeeState} message SdkAudioAttendeeState\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkAudioAttendeeState.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.audioStreamId = 0;\n            object.volume = 0;\n            object.muted = false;\n            object.signalStrength = 0;\n        }\n        if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\"))\n            object.audioStreamId = message.audioStreamId;\n        if (message.volume != null && message.hasOwnProperty(\"volume\"))\n            object.volume = message.volume;\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            object.muted = message.muted;\n        if (message.signalStrength != null && message.hasOwnProperty(\"signalStrength\"))\n            object.signalStrength = message.signalStrength;\n        return object;\n    };\n\n    /**\n     * Converts this SdkAudioAttendeeState to JSON.\n     * @function toJSON\n     * @memberof SdkAudioAttendeeState\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkAudioAttendeeState.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkAudioAttendeeState;\n})();\n\n$root.SdkAudioStreamIdInfoFrame = (function() {\n\n    /**\n     * Properties of a SdkAudioStreamIdInfoFrame.\n     * @exports ISdkAudioStreamIdInfoFrame\n     * @interface ISdkAudioStreamIdInfoFrame\n     * @property {Array.<ISdkAudioStreamIdInfo>|null} [streams] SdkAudioStreamIdInfoFrame streams\n     */\n\n    /**\n     * Constructs a new SdkAudioStreamIdInfoFrame.\n     * @exports SdkAudioStreamIdInfoFrame\n     * @classdesc Represents a SdkAudioStreamIdInfoFrame.\n     * @implements ISdkAudioStreamIdInfoFrame\n     * @constructor\n     * @param {ISdkAudioStreamIdInfoFrame=} [properties] Properties to set\n     */\n    function SdkAudioStreamIdInfoFrame(properties) {\n        this.streams = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkAudioStreamIdInfoFrame streams.\n     * @member {Array.<ISdkAudioStreamIdInfo>} streams\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @instance\n     */\n    SdkAudioStreamIdInfoFrame.prototype.streams = $util.emptyArray;\n\n    /**\n     * Creates a new SdkAudioStreamIdInfoFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {ISdkAudioStreamIdInfoFrame=} [properties] Properties to set\n     * @returns {SdkAudioStreamIdInfoFrame} SdkAudioStreamIdInfoFrame instance\n     */\n    SdkAudioStreamIdInfoFrame.create = function create(properties) {\n        return new SdkAudioStreamIdInfoFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkAudioStreamIdInfoFrame message. Does not implicitly {@link SdkAudioStreamIdInfoFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {ISdkAudioStreamIdInfoFrame} message SdkAudioStreamIdInfoFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioStreamIdInfoFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.streams != null && message.streams.length)\n            for (var i = 0; i < message.streams.length; ++i)\n                $root.SdkAudioStreamIdInfo.encode(message.streams[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkAudioStreamIdInfoFrame message, length delimited. Does not implicitly {@link SdkAudioStreamIdInfoFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {ISdkAudioStreamIdInfoFrame} message SdkAudioStreamIdInfoFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioStreamIdInfoFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkAudioStreamIdInfoFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkAudioStreamIdInfoFrame} SdkAudioStreamIdInfoFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioStreamIdInfoFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkAudioStreamIdInfoFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.streams && message.streams.length))\n                    message.streams = [];\n                message.streams.push($root.SdkAudioStreamIdInfo.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkAudioStreamIdInfoFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkAudioStreamIdInfoFrame} SdkAudioStreamIdInfoFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioStreamIdInfoFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkAudioStreamIdInfoFrame message.\n     * @function verify\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkAudioStreamIdInfoFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.streams != null && message.hasOwnProperty(\"streams\")) {\n            if (!Array.isArray(message.streams))\n                return \"streams: array expected\";\n            for (var i = 0; i < message.streams.length; ++i) {\n                var error = $root.SdkAudioStreamIdInfo.verify(message.streams[i]);\n                if (error)\n                    return \"streams.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkAudioStreamIdInfoFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkAudioStreamIdInfoFrame} SdkAudioStreamIdInfoFrame\n     */\n    SdkAudioStreamIdInfoFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkAudioStreamIdInfoFrame)\n            return object;\n        var message = new $root.SdkAudioStreamIdInfoFrame();\n        if (object.streams) {\n            if (!Array.isArray(object.streams))\n                throw TypeError(\".SdkAudioStreamIdInfoFrame.streams: array expected\");\n            message.streams = [];\n            for (var i = 0; i < object.streams.length; ++i) {\n                if (typeof object.streams[i] !== \"object\")\n                    throw TypeError(\".SdkAudioStreamIdInfoFrame.streams: object expected\");\n                message.streams[i] = $root.SdkAudioStreamIdInfo.fromObject(object.streams[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkAudioStreamIdInfoFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {SdkAudioStreamIdInfoFrame} message SdkAudioStreamIdInfoFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkAudioStreamIdInfoFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.streams = [];\n        if (message.streams && message.streams.length) {\n            object.streams = [];\n            for (var j = 0; j < message.streams.length; ++j)\n                object.streams[j] = $root.SdkAudioStreamIdInfo.toObject(message.streams[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkAudioStreamIdInfoFrame to JSON.\n     * @function toJSON\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkAudioStreamIdInfoFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkAudioStreamIdInfoFrame;\n})();\n\n$root.SdkAudioStreamIdInfo = (function() {\n\n    /**\n     * Properties of a SdkAudioStreamIdInfo.\n     * @exports ISdkAudioStreamIdInfo\n     * @interface ISdkAudioStreamIdInfo\n     * @property {number|null} [audioStreamId] SdkAudioStreamIdInfo audioStreamId\n     * @property {string|null} [attendeeId] SdkAudioStreamIdInfo attendeeId\n     * @property {boolean|null} [muted] SdkAudioStreamIdInfo muted\n     * @property {string|null} [externalUserId] SdkAudioStreamIdInfo externalUserId\n     * @property {boolean|null} [dropped] SdkAudioStreamIdInfo dropped\n     */\n\n    /**\n     * Constructs a new SdkAudioStreamIdInfo.\n     * @exports SdkAudioStreamIdInfo\n     * @classdesc Represents a SdkAudioStreamIdInfo.\n     * @implements ISdkAudioStreamIdInfo\n     * @constructor\n     * @param {ISdkAudioStreamIdInfo=} [properties] Properties to set\n     */\n    function SdkAudioStreamIdInfo(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkAudioStreamIdInfo audioStreamId.\n     * @member {number} audioStreamId\n     * @memberof SdkAudioStreamIdInfo\n     * @instance\n     */\n    SdkAudioStreamIdInfo.prototype.audioStreamId = 0;\n\n    /**\n     * SdkAudioStreamIdInfo attendeeId.\n     * @member {string} attendeeId\n     * @memberof SdkAudioStreamIdInfo\n     * @instance\n     */\n    SdkAudioStreamIdInfo.prototype.attendeeId = \"\";\n\n    /**\n     * SdkAudioStreamIdInfo muted.\n     * @member {boolean} muted\n     * @memberof SdkAudioStreamIdInfo\n     * @instance\n     */\n    SdkAudioStreamIdInfo.prototype.muted = false;\n\n    /**\n     * SdkAudioStreamIdInfo externalUserId.\n     * @member {string} externalUserId\n     * @memberof SdkAudioStreamIdInfo\n     * @instance\n     */\n    SdkAudioStreamIdInfo.prototype.externalUserId = \"\";\n\n    /**\n     * SdkAudioStreamIdInfo dropped.\n     * @member {boolean} dropped\n     * @memberof SdkAudioStreamIdInfo\n     * @instance\n     */\n    SdkAudioStreamIdInfo.prototype.dropped = false;\n\n    /**\n     * Creates a new SdkAudioStreamIdInfo instance using the specified properties.\n     * @function create\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {ISdkAudioStreamIdInfo=} [properties] Properties to set\n     * @returns {SdkAudioStreamIdInfo} SdkAudioStreamIdInfo instance\n     */\n    SdkAudioStreamIdInfo.create = function create(properties) {\n        return new SdkAudioStreamIdInfo(properties);\n    };\n\n    /**\n     * Encodes the specified SdkAudioStreamIdInfo message. Does not implicitly {@link SdkAudioStreamIdInfo.verify|verify} messages.\n     * @function encode\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {ISdkAudioStreamIdInfo} message SdkAudioStreamIdInfo message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioStreamIdInfo.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.audioStreamId != null && Object.hasOwnProperty.call(message, \"audioStreamId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.audioStreamId);\n        if (message.attendeeId != null && Object.hasOwnProperty.call(message, \"attendeeId\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.attendeeId);\n        if (message.muted != null && Object.hasOwnProperty.call(message, \"muted\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).bool(message.muted);\n        if (message.externalUserId != null && Object.hasOwnProperty.call(message, \"externalUserId\"))\n            writer.uint32(/* id 4, wireType 2 =*/34).string(message.externalUserId);\n        if (message.dropped != null && Object.hasOwnProperty.call(message, \"dropped\"))\n            writer.uint32(/* id 5, wireType 0 =*/40).bool(message.dropped);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkAudioStreamIdInfo message, length delimited. Does not implicitly {@link SdkAudioStreamIdInfo.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {ISdkAudioStreamIdInfo} message SdkAudioStreamIdInfo message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioStreamIdInfo.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkAudioStreamIdInfo message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkAudioStreamIdInfo} SdkAudioStreamIdInfo\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioStreamIdInfo.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkAudioStreamIdInfo();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.audioStreamId = reader.uint32();\n                break;\n            case 2:\n                message.attendeeId = reader.string();\n                break;\n            case 3:\n                message.muted = reader.bool();\n                break;\n            case 4:\n                message.externalUserId = reader.string();\n                break;\n            case 5:\n                message.dropped = reader.bool();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkAudioStreamIdInfo message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkAudioStreamIdInfo} SdkAudioStreamIdInfo\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioStreamIdInfo.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkAudioStreamIdInfo message.\n     * @function verify\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkAudioStreamIdInfo.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\"))\n            if (!$util.isInteger(message.audioStreamId))\n                return \"audioStreamId: integer expected\";\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            if (!$util.isString(message.attendeeId))\n                return \"attendeeId: string expected\";\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            if (typeof message.muted !== \"boolean\")\n                return \"muted: boolean expected\";\n        if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\"))\n            if (!$util.isString(message.externalUserId))\n                return \"externalUserId: string expected\";\n        if (message.dropped != null && message.hasOwnProperty(\"dropped\"))\n            if (typeof message.dropped !== \"boolean\")\n                return \"dropped: boolean expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkAudioStreamIdInfo message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkAudioStreamIdInfo} SdkAudioStreamIdInfo\n     */\n    SdkAudioStreamIdInfo.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkAudioStreamIdInfo)\n            return object;\n        var message = new $root.SdkAudioStreamIdInfo();\n        if (object.audioStreamId != null)\n            message.audioStreamId = object.audioStreamId >>> 0;\n        if (object.attendeeId != null)\n            message.attendeeId = String(object.attendeeId);\n        if (object.muted != null)\n            message.muted = Boolean(object.muted);\n        if (object.externalUserId != null)\n            message.externalUserId = String(object.externalUserId);\n        if (object.dropped != null)\n            message.dropped = Boolean(object.dropped);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkAudioStreamIdInfo message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {SdkAudioStreamIdInfo} message SdkAudioStreamIdInfo\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkAudioStreamIdInfo.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.audioStreamId = 0;\n            object.attendeeId = \"\";\n            object.muted = false;\n            object.externalUserId = \"\";\n            object.dropped = false;\n        }\n        if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\"))\n            object.audioStreamId = message.audioStreamId;\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            object.attendeeId = message.attendeeId;\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            object.muted = message.muted;\n        if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\"))\n            object.externalUserId = message.externalUserId;\n        if (message.dropped != null && message.hasOwnProperty(\"dropped\"))\n            object.dropped = message.dropped;\n        return object;\n    };\n\n    /**\n     * Converts this SdkAudioStreamIdInfo to JSON.\n     * @function toJSON\n     * @memberof SdkAudioStreamIdInfo\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkAudioStreamIdInfo.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkAudioStreamIdInfo;\n})();\n\n/**\n * SdkPingPongType enum.\n * @exports SdkPingPongType\n * @enum {number}\n * @property {number} PING=1 PING value\n * @property {number} PONG=2 PONG value\n */\n$root.SdkPingPongType = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[1] = \"PING\"] = 1;\n    values[valuesById[2] = \"PONG\"] = 2;\n    return values;\n})();\n\n$root.SdkPingPongFrame = (function() {\n\n    /**\n     * Properties of a SdkPingPongFrame.\n     * @exports ISdkPingPongFrame\n     * @interface ISdkPingPongFrame\n     * @property {SdkPingPongType} type SdkPingPongFrame type\n     * @property {number} pingId SdkPingPongFrame pingId\n     */\n\n    /**\n     * Constructs a new SdkPingPongFrame.\n     * @exports SdkPingPongFrame\n     * @classdesc Represents a SdkPingPongFrame.\n     * @implements ISdkPingPongFrame\n     * @constructor\n     * @param {ISdkPingPongFrame=} [properties] Properties to set\n     */\n    function SdkPingPongFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkPingPongFrame type.\n     * @member {SdkPingPongType} type\n     * @memberof SdkPingPongFrame\n     * @instance\n     */\n    SdkPingPongFrame.prototype.type = 1;\n\n    /**\n     * SdkPingPongFrame pingId.\n     * @member {number} pingId\n     * @memberof SdkPingPongFrame\n     * @instance\n     */\n    SdkPingPongFrame.prototype.pingId = 0;\n\n    /**\n     * Creates a new SdkPingPongFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {ISdkPingPongFrame=} [properties] Properties to set\n     * @returns {SdkPingPongFrame} SdkPingPongFrame instance\n     */\n    SdkPingPongFrame.create = function create(properties) {\n        return new SdkPingPongFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkPingPongFrame message. Does not implicitly {@link SdkPingPongFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {ISdkPingPongFrame} message SdkPingPongFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkPingPongFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);\n        writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.pingId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkPingPongFrame message, length delimited. Does not implicitly {@link SdkPingPongFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {ISdkPingPongFrame} message SdkPingPongFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkPingPongFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkPingPongFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkPingPongFrame} SdkPingPongFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkPingPongFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkPingPongFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.type = reader.int32();\n                break;\n            case 2:\n                message.pingId = reader.uint32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        if (!message.hasOwnProperty(\"type\"))\n            throw $util.ProtocolError(\"missing required 'type'\", { instance: message });\n        if (!message.hasOwnProperty(\"pingId\"))\n            throw $util.ProtocolError(\"missing required 'pingId'\", { instance: message });\n        return message;\n    };\n\n    /**\n     * Decodes a SdkPingPongFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkPingPongFrame} SdkPingPongFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkPingPongFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkPingPongFrame message.\n     * @function verify\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkPingPongFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        switch (message.type) {\n        default:\n            return \"type: enum value expected\";\n        case 1:\n        case 2:\n            break;\n        }\n        if (!$util.isInteger(message.pingId))\n            return \"pingId: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkPingPongFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkPingPongFrame} SdkPingPongFrame\n     */\n    SdkPingPongFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkPingPongFrame)\n            return object;\n        var message = new $root.SdkPingPongFrame();\n        switch (object.type) {\n        case \"PING\":\n        case 1:\n            message.type = 1;\n            break;\n        case \"PONG\":\n        case 2:\n            message.type = 2;\n            break;\n        }\n        if (object.pingId != null)\n            message.pingId = object.pingId >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkPingPongFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {SdkPingPongFrame} message SdkPingPongFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkPingPongFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.type = options.enums === String ? \"PING\" : 1;\n            object.pingId = 0;\n        }\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            object.type = options.enums === String ? $root.SdkPingPongType[message.type] : message.type;\n        if (message.pingId != null && message.hasOwnProperty(\"pingId\"))\n            object.pingId = message.pingId;\n        return object;\n    };\n\n    /**\n     * Converts this SdkPingPongFrame to JSON.\n     * @function toJSON\n     * @memberof SdkPingPongFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkPingPongFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkPingPongFrame;\n})();\n\n$root.SdkAudioStatusFrame = (function() {\n\n    /**\n     * Properties of a SdkAudioStatusFrame.\n     * @exports ISdkAudioStatusFrame\n     * @interface ISdkAudioStatusFrame\n     * @property {number|null} [audioStatus] SdkAudioStatusFrame audioStatus\n     */\n\n    /**\n     * Constructs a new SdkAudioStatusFrame.\n     * @exports SdkAudioStatusFrame\n     * @classdesc Represents a SdkAudioStatusFrame.\n     * @implements ISdkAudioStatusFrame\n     * @constructor\n     * @param {ISdkAudioStatusFrame=} [properties] Properties to set\n     */\n    function SdkAudioStatusFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkAudioStatusFrame audioStatus.\n     * @member {number} audioStatus\n     * @memberof SdkAudioStatusFrame\n     * @instance\n     */\n    SdkAudioStatusFrame.prototype.audioStatus = 0;\n\n    /**\n     * Creates a new SdkAudioStatusFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {ISdkAudioStatusFrame=} [properties] Properties to set\n     * @returns {SdkAudioStatusFrame} SdkAudioStatusFrame instance\n     */\n    SdkAudioStatusFrame.create = function create(properties) {\n        return new SdkAudioStatusFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkAudioStatusFrame message. Does not implicitly {@link SdkAudioStatusFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {ISdkAudioStatusFrame} message SdkAudioStatusFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioStatusFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.audioStatus != null && Object.hasOwnProperty.call(message, \"audioStatus\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.audioStatus);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkAudioStatusFrame message, length delimited. Does not implicitly {@link SdkAudioStatusFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {ISdkAudioStatusFrame} message SdkAudioStatusFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioStatusFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkAudioStatusFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkAudioStatusFrame} SdkAudioStatusFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioStatusFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkAudioStatusFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.audioStatus = reader.uint32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkAudioStatusFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkAudioStatusFrame} SdkAudioStatusFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioStatusFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkAudioStatusFrame message.\n     * @function verify\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkAudioStatusFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\"))\n            if (!$util.isInteger(message.audioStatus))\n                return \"audioStatus: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkAudioStatusFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkAudioStatusFrame} SdkAudioStatusFrame\n     */\n    SdkAudioStatusFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkAudioStatusFrame)\n            return object;\n        var message = new $root.SdkAudioStatusFrame();\n        if (object.audioStatus != null)\n            message.audioStatus = object.audioStatus >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkAudioStatusFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {SdkAudioStatusFrame} message SdkAudioStatusFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkAudioStatusFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.audioStatus = 0;\n        if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\"))\n            object.audioStatus = message.audioStatus;\n        return object;\n    };\n\n    /**\n     * Converts this SdkAudioStatusFrame to JSON.\n     * @function toJSON\n     * @memberof SdkAudioStatusFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkAudioStatusFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkAudioStatusFrame;\n})();\n\n$root.SdkMetric = (function() {\n\n    /**\n     * Properties of a SdkMetric.\n     * @exports ISdkMetric\n     * @interface ISdkMetric\n     * @property {SdkMetric.Type|null} [type] SdkMetric type\n     * @property {number|null} [value] SdkMetric value\n     */\n\n    /**\n     * Constructs a new SdkMetric.\n     * @exports SdkMetric\n     * @classdesc Represents a SdkMetric.\n     * @implements ISdkMetric\n     * @constructor\n     * @param {ISdkMetric=} [properties] Properties to set\n     */\n    function SdkMetric(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkMetric type.\n     * @member {SdkMetric.Type} type\n     * @memberof SdkMetric\n     * @instance\n     */\n    SdkMetric.prototype.type = 1;\n\n    /**\n     * SdkMetric value.\n     * @member {number} value\n     * @memberof SdkMetric\n     * @instance\n     */\n    SdkMetric.prototype.value = 0;\n\n    /**\n     * Creates a new SdkMetric instance using the specified properties.\n     * @function create\n     * @memberof SdkMetric\n     * @static\n     * @param {ISdkMetric=} [properties] Properties to set\n     * @returns {SdkMetric} SdkMetric instance\n     */\n    SdkMetric.create = function create(properties) {\n        return new SdkMetric(properties);\n    };\n\n    /**\n     * Encodes the specified SdkMetric message. Does not implicitly {@link SdkMetric.verify|verify} messages.\n     * @function encode\n     * @memberof SdkMetric\n     * @static\n     * @param {ISdkMetric} message SdkMetric message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkMetric.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.type != null && Object.hasOwnProperty.call(message, \"type\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);\n        if (message.value != null && Object.hasOwnProperty.call(message, \"value\"))\n            writer.uint32(/* id 2, wireType 1 =*/17).double(message.value);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkMetric message, length delimited. Does not implicitly {@link SdkMetric.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkMetric\n     * @static\n     * @param {ISdkMetric} message SdkMetric message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkMetric.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkMetric message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkMetric\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkMetric} SdkMetric\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkMetric.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkMetric();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.type = reader.int32();\n                break;\n            case 2:\n                message.value = reader.double();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkMetric message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkMetric\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkMetric} SdkMetric\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkMetric.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkMetric message.\n     * @function verify\n     * @memberof SdkMetric\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkMetric.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            switch (message.type) {\n            default:\n                return \"type: enum value expected\";\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n            case 16:\n            case 17:\n            case 18:\n            case 19:\n            case 20:\n            case 21:\n            case 22:\n            case 23:\n            case 24:\n            case 25:\n            case 26:\n            case 27:\n            case 28:\n            case 29:\n            case 30:\n            case 31:\n            case 32:\n            case 33:\n            case 34:\n            case 35:\n            case 36:\n            case 37:\n            case 38:\n            case 39:\n            case 40:\n            case 41:\n            case 42:\n            case 43:\n            case 44:\n            case 45:\n            case 46:\n            case 47:\n            case 48:\n            case 49:\n            case 64:\n            case 66:\n            case 69:\n            case 72:\n            case 86:\n            case 87:\n            case 88:\n            case 89:\n                break;\n            }\n        if (message.value != null && message.hasOwnProperty(\"value\"))\n            if (typeof message.value !== \"number\")\n                return \"value: number expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkMetric message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkMetric\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkMetric} SdkMetric\n     */\n    SdkMetric.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkMetric)\n            return object;\n        var message = new $root.SdkMetric();\n        switch (object.type) {\n        case \"VIDEO_ACTUAL_ENCODER_BITRATE\":\n        case 1:\n            message.type = 1;\n            break;\n        case \"VIDEO_AVAILABLE_SEND_BANDWIDTH\":\n        case 2:\n            message.type = 2;\n            break;\n        case \"VIDEO_RETRANSMIT_BITRATE\":\n        case 3:\n            message.type = 3;\n            break;\n        case \"VIDEO_AVAILABLE_RECEIVE_BANDWIDTH\":\n        case 4:\n            message.type = 4;\n            break;\n        case \"VIDEO_TARGET_ENCODER_BITRATE\":\n        case 5:\n            message.type = 5;\n            break;\n        case \"VIDEO_BUCKET_DELAY_MS\":\n        case 6:\n            message.type = 6;\n            break;\n        case \"STUN_RTT_MS\":\n        case 7:\n            message.type = 7;\n            break;\n        case \"SOCKET_DISCARDED_PPS\":\n        case 8:\n            message.type = 8;\n            break;\n        case \"RTC_MIC_JITTER_MS\":\n        case 9:\n            message.type = 9;\n            break;\n        case \"RTC_MIC_PPS\":\n        case 10:\n            message.type = 10;\n            break;\n        case \"RTC_MIC_FRACTION_PACKET_LOST_PERCENT\":\n        case 11:\n            message.type = 11;\n            break;\n        case \"RTC_MIC_BITRATE\":\n        case 12:\n            message.type = 12;\n            break;\n        case \"RTC_MIC_RTT_MS\":\n        case 13:\n            message.type = 13;\n            break;\n        case \"RTC_SPK_PPS\":\n        case 14:\n            message.type = 14;\n            break;\n        case \"RTC_SPK_FRACTION_PACKET_LOST_PERCENT\":\n        case 15:\n            message.type = 15;\n            break;\n        case \"RTC_SPK_JITTER_MS\":\n        case 16:\n            message.type = 16;\n            break;\n        case \"RTC_SPK_FRACTION_DECODER_LOSS_PERCENT\":\n        case 17:\n            message.type = 17;\n            break;\n        case \"RTC_SPK_BITRATE\":\n        case 18:\n            message.type = 18;\n            break;\n        case \"RTC_SPK_CURRENT_DELAY_MS\":\n        case 19:\n            message.type = 19;\n            break;\n        case \"RTC_SPK_JITTER_BUFFER_MS\":\n        case 20:\n            message.type = 20;\n            break;\n        case \"VIDEO_SENT_RTT_MS\":\n        case 21:\n            message.type = 21;\n            break;\n        case \"VIDEO_ENCODE_USAGE_PERCENT\":\n        case 22:\n            message.type = 22;\n            break;\n        case \"VIDEO_NACKS_RECEIVED\":\n        case 23:\n            message.type = 23;\n            break;\n        case \"VIDEO_PLIS_RECEIVED\":\n        case 24:\n            message.type = 24;\n            break;\n        case \"VIDEO_ENCODE_MS\":\n        case 25:\n            message.type = 25;\n            break;\n        case \"VIDEO_INPUT_FPS\":\n        case 26:\n            message.type = 26;\n            break;\n        case \"VIDEO_ENCODE_FPS\":\n        case 27:\n            message.type = 27;\n            break;\n        case \"VIDEO_SENT_FPS\":\n        case 28:\n            message.type = 28;\n            break;\n        case \"VIDEO_FIRS_RECEIVED\":\n        case 29:\n            message.type = 29;\n            break;\n        case \"VIDEO_SENT_PPS\":\n        case 30:\n            message.type = 30;\n            break;\n        case \"VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT\":\n        case 31:\n            message.type = 31;\n            break;\n        case \"VIDEO_SENT_BITRATE\":\n        case 32:\n            message.type = 32;\n            break;\n        case \"VIDEO_DROPPED_FPS\":\n        case 33:\n            message.type = 33;\n            break;\n        case \"VIDEO_TARGET_DELAY_MS\":\n        case 34:\n            message.type = 34;\n            break;\n        case \"VIDEO_DECODE_MS\":\n        case 35:\n            message.type = 35;\n            break;\n        case \"VIDEO_OUTPUT_FPS\":\n        case 36:\n            message.type = 36;\n            break;\n        case \"VIDEO_RECEIVED_PPS\":\n        case 37:\n            message.type = 37;\n            break;\n        case \"VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT\":\n        case 38:\n            message.type = 38;\n            break;\n        case \"VIDEO_RENDER_DELAY_MS\":\n        case 39:\n            message.type = 39;\n            break;\n        case \"VIDEO_RECEIVED_FPS\":\n        case 40:\n            message.type = 40;\n            break;\n        case \"VIDEO_DECODE_FPS\":\n        case 41:\n            message.type = 41;\n            break;\n        case \"VIDEO_NACKS_SENT\":\n        case 42:\n            message.type = 42;\n            break;\n        case \"VIDEO_FIRS_SENT\":\n        case 43:\n            message.type = 43;\n            break;\n        case \"VIDEO_RECEIVED_BITRATE\":\n        case 44:\n            message.type = 44;\n            break;\n        case \"VIDEO_CURRENT_DELAY_MS\":\n        case 45:\n            message.type = 45;\n            break;\n        case \"VIDEO_JITTER_BUFFER_MS\":\n        case 46:\n            message.type = 46;\n            break;\n        case \"VIDEO_DISCARDED_PPS\":\n        case 47:\n            message.type = 47;\n            break;\n        case \"VIDEO_PLIS_SENT\":\n        case 48:\n            message.type = 48;\n            break;\n        case \"VIDEO_RECEIVED_JITTER_MS\":\n        case 49:\n            message.type = 49;\n            break;\n        case \"VIDEO_ENCODE_HEIGHT\":\n        case 64:\n            message.type = 64;\n            break;\n        case \"VIDEO_SENT_QP_SUM\":\n        case 66:\n            message.type = 66;\n            break;\n        case \"VIDEO_DECODE_HEIGHT\":\n        case 69:\n            message.type = 69;\n            break;\n        case \"VIDEO_RECEIVED_QP_SUM\":\n        case 72:\n            message.type = 72;\n            break;\n        case \"VIDEO_ENCODE_WIDTH\":\n        case 86:\n            message.type = 86;\n            break;\n        case \"VIDEO_DECODE_WIDTH\":\n        case 87:\n            message.type = 87;\n            break;\n        case \"VIDEO_ENCODER_IS_HARDWARE\":\n        case 88:\n            message.type = 88;\n            break;\n        case \"VIDEO_DECODER_IS_HARDWARE\":\n        case 89:\n            message.type = 89;\n            break;\n        }\n        if (object.value != null)\n            message.value = Number(object.value);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkMetric message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkMetric\n     * @static\n     * @param {SdkMetric} message SdkMetric\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkMetric.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.type = options.enums === String ? \"VIDEO_ACTUAL_ENCODER_BITRATE\" : 1;\n            object.value = 0;\n        }\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            object.type = options.enums === String ? $root.SdkMetric.Type[message.type] : message.type;\n        if (message.value != null && message.hasOwnProperty(\"value\"))\n            object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;\n        return object;\n    };\n\n    /**\n     * Converts this SdkMetric to JSON.\n     * @function toJSON\n     * @memberof SdkMetric\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkMetric.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * Type enum.\n     * @name SdkMetric.Type\n     * @enum {number}\n     * @property {number} VIDEO_ACTUAL_ENCODER_BITRATE=1 VIDEO_ACTUAL_ENCODER_BITRATE value\n     * @property {number} VIDEO_AVAILABLE_SEND_BANDWIDTH=2 VIDEO_AVAILABLE_SEND_BANDWIDTH value\n     * @property {number} VIDEO_RETRANSMIT_BITRATE=3 VIDEO_RETRANSMIT_BITRATE value\n     * @property {number} VIDEO_AVAILABLE_RECEIVE_BANDWIDTH=4 VIDEO_AVAILABLE_RECEIVE_BANDWIDTH value\n     * @property {number} VIDEO_TARGET_ENCODER_BITRATE=5 VIDEO_TARGET_ENCODER_BITRATE value\n     * @property {number} VIDEO_BUCKET_DELAY_MS=6 VIDEO_BUCKET_DELAY_MS value\n     * @property {number} STUN_RTT_MS=7 STUN_RTT_MS value\n     * @property {number} SOCKET_DISCARDED_PPS=8 SOCKET_DISCARDED_PPS value\n     * @property {number} RTC_MIC_JITTER_MS=9 RTC_MIC_JITTER_MS value\n     * @property {number} RTC_MIC_PPS=10 RTC_MIC_PPS value\n     * @property {number} RTC_MIC_FRACTION_PACKET_LOST_PERCENT=11 RTC_MIC_FRACTION_PACKET_LOST_PERCENT value\n     * @property {number} RTC_MIC_BITRATE=12 RTC_MIC_BITRATE value\n     * @property {number} RTC_MIC_RTT_MS=13 RTC_MIC_RTT_MS value\n     * @property {number} RTC_SPK_PPS=14 RTC_SPK_PPS value\n     * @property {number} RTC_SPK_FRACTION_PACKET_LOST_PERCENT=15 RTC_SPK_FRACTION_PACKET_LOST_PERCENT value\n     * @property {number} RTC_SPK_JITTER_MS=16 RTC_SPK_JITTER_MS value\n     * @property {number} RTC_SPK_FRACTION_DECODER_LOSS_PERCENT=17 RTC_SPK_FRACTION_DECODER_LOSS_PERCENT value\n     * @property {number} RTC_SPK_BITRATE=18 RTC_SPK_BITRATE value\n     * @property {number} RTC_SPK_CURRENT_DELAY_MS=19 RTC_SPK_CURRENT_DELAY_MS value\n     * @property {number} RTC_SPK_JITTER_BUFFER_MS=20 RTC_SPK_JITTER_BUFFER_MS value\n     * @property {number} VIDEO_SENT_RTT_MS=21 VIDEO_SENT_RTT_MS value\n     * @property {number} VIDEO_ENCODE_USAGE_PERCENT=22 VIDEO_ENCODE_USAGE_PERCENT value\n     * @property {number} VIDEO_NACKS_RECEIVED=23 VIDEO_NACKS_RECEIVED value\n     * @property {number} VIDEO_PLIS_RECEIVED=24 VIDEO_PLIS_RECEIVED value\n     * @property {number} VIDEO_ENCODE_MS=25 VIDEO_ENCODE_MS value\n     * @property {number} VIDEO_INPUT_FPS=26 VIDEO_INPUT_FPS value\n     * @property {number} VIDEO_ENCODE_FPS=27 VIDEO_ENCODE_FPS value\n     * @property {number} VIDEO_SENT_FPS=28 VIDEO_SENT_FPS value\n     * @property {number} VIDEO_FIRS_RECEIVED=29 VIDEO_FIRS_RECEIVED value\n     * @property {number} VIDEO_SENT_PPS=30 VIDEO_SENT_PPS value\n     * @property {number} VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT=31 VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT value\n     * @property {number} VIDEO_SENT_BITRATE=32 VIDEO_SENT_BITRATE value\n     * @property {number} VIDEO_DROPPED_FPS=33 VIDEO_DROPPED_FPS value\n     * @property {number} VIDEO_TARGET_DELAY_MS=34 VIDEO_TARGET_DELAY_MS value\n     * @property {number} VIDEO_DECODE_MS=35 VIDEO_DECODE_MS value\n     * @property {number} VIDEO_OUTPUT_FPS=36 VIDEO_OUTPUT_FPS value\n     * @property {number} VIDEO_RECEIVED_PPS=37 VIDEO_RECEIVED_PPS value\n     * @property {number} VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT=38 VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT value\n     * @property {number} VIDEO_RENDER_DELAY_MS=39 VIDEO_RENDER_DELAY_MS value\n     * @property {number} VIDEO_RECEIVED_FPS=40 VIDEO_RECEIVED_FPS value\n     * @property {number} VIDEO_DECODE_FPS=41 VIDEO_DECODE_FPS value\n     * @property {number} VIDEO_NACKS_SENT=42 VIDEO_NACKS_SENT value\n     * @property {number} VIDEO_FIRS_SENT=43 VIDEO_FIRS_SENT value\n     * @property {number} VIDEO_RECEIVED_BITRATE=44 VIDEO_RECEIVED_BITRATE value\n     * @property {number} VIDEO_CURRENT_DELAY_MS=45 VIDEO_CURRENT_DELAY_MS value\n     * @property {number} VIDEO_JITTER_BUFFER_MS=46 VIDEO_JITTER_BUFFER_MS value\n     * @property {number} VIDEO_DISCARDED_PPS=47 VIDEO_DISCARDED_PPS value\n     * @property {number} VIDEO_PLIS_SENT=48 VIDEO_PLIS_SENT value\n     * @property {number} VIDEO_RECEIVED_JITTER_MS=49 VIDEO_RECEIVED_JITTER_MS value\n     * @property {number} VIDEO_ENCODE_HEIGHT=64 VIDEO_ENCODE_HEIGHT value\n     * @property {number} VIDEO_SENT_QP_SUM=66 VIDEO_SENT_QP_SUM value\n     * @property {number} VIDEO_DECODE_HEIGHT=69 VIDEO_DECODE_HEIGHT value\n     * @property {number} VIDEO_RECEIVED_QP_SUM=72 VIDEO_RECEIVED_QP_SUM value\n     * @property {number} VIDEO_ENCODE_WIDTH=86 VIDEO_ENCODE_WIDTH value\n     * @property {number} VIDEO_DECODE_WIDTH=87 VIDEO_DECODE_WIDTH value\n     * @property {number} VIDEO_ENCODER_IS_HARDWARE=88 VIDEO_ENCODER_IS_HARDWARE value\n     * @property {number} VIDEO_DECODER_IS_HARDWARE=89 VIDEO_DECODER_IS_HARDWARE value\n     */\n    SdkMetric.Type = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[1] = \"VIDEO_ACTUAL_ENCODER_BITRATE\"] = 1;\n        values[valuesById[2] = \"VIDEO_AVAILABLE_SEND_BANDWIDTH\"] = 2;\n        values[valuesById[3] = \"VIDEO_RETRANSMIT_BITRATE\"] = 3;\n        values[valuesById[4] = \"VIDEO_AVAILABLE_RECEIVE_BANDWIDTH\"] = 4;\n        values[valuesById[5] = \"VIDEO_TARGET_ENCODER_BITRATE\"] = 5;\n        values[valuesById[6] = \"VIDEO_BUCKET_DELAY_MS\"] = 6;\n        values[valuesById[7] = \"STUN_RTT_MS\"] = 7;\n        values[valuesById[8] = \"SOCKET_DISCARDED_PPS\"] = 8;\n        values[valuesById[9] = \"RTC_MIC_JITTER_MS\"] = 9;\n        values[valuesById[10] = \"RTC_MIC_PPS\"] = 10;\n        values[valuesById[11] = \"RTC_MIC_FRACTION_PACKET_LOST_PERCENT\"] = 11;\n        values[valuesById[12] = \"RTC_MIC_BITRATE\"] = 12;\n        values[valuesById[13] = \"RTC_MIC_RTT_MS\"] = 13;\n        values[valuesById[14] = \"RTC_SPK_PPS\"] = 14;\n        values[valuesById[15] = \"RTC_SPK_FRACTION_PACKET_LOST_PERCENT\"] = 15;\n        values[valuesById[16] = \"RTC_SPK_JITTER_MS\"] = 16;\n        values[valuesById[17] = \"RTC_SPK_FRACTION_DECODER_LOSS_PERCENT\"] = 17;\n        values[valuesById[18] = \"RTC_SPK_BITRATE\"] = 18;\n        values[valuesById[19] = \"RTC_SPK_CURRENT_DELAY_MS\"] = 19;\n        values[valuesById[20] = \"RTC_SPK_JITTER_BUFFER_MS\"] = 20;\n        values[valuesById[21] = \"VIDEO_SENT_RTT_MS\"] = 21;\n        values[valuesById[22] = \"VIDEO_ENCODE_USAGE_PERCENT\"] = 22;\n        values[valuesById[23] = \"VIDEO_NACKS_RECEIVED\"] = 23;\n        values[valuesById[24] = \"VIDEO_PLIS_RECEIVED\"] = 24;\n        values[valuesById[25] = \"VIDEO_ENCODE_MS\"] = 25;\n        values[valuesById[26] = \"VIDEO_INPUT_FPS\"] = 26;\n        values[valuesById[27] = \"VIDEO_ENCODE_FPS\"] = 27;\n        values[valuesById[28] = \"VIDEO_SENT_FPS\"] = 28;\n        values[valuesById[29] = \"VIDEO_FIRS_RECEIVED\"] = 29;\n        values[valuesById[30] = \"VIDEO_SENT_PPS\"] = 30;\n        values[valuesById[31] = \"VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT\"] = 31;\n        values[valuesById[32] = \"VIDEO_SENT_BITRATE\"] = 32;\n        values[valuesById[33] = \"VIDEO_DROPPED_FPS\"] = 33;\n        values[valuesById[34] = \"VIDEO_TARGET_DELAY_MS\"] = 34;\n        values[valuesById[35] = \"VIDEO_DECODE_MS\"] = 35;\n        values[valuesById[36] = \"VIDEO_OUTPUT_FPS\"] = 36;\n        values[valuesById[37] = \"VIDEO_RECEIVED_PPS\"] = 37;\n        values[valuesById[38] = \"VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT\"] = 38;\n        values[valuesById[39] = \"VIDEO_RENDER_DELAY_MS\"] = 39;\n        values[valuesById[40] = \"VIDEO_RECEIVED_FPS\"] = 40;\n        values[valuesById[41] = \"VIDEO_DECODE_FPS\"] = 41;\n        values[valuesById[42] = \"VIDEO_NACKS_SENT\"] = 42;\n        values[valuesById[43] = \"VIDEO_FIRS_SENT\"] = 43;\n        values[valuesById[44] = \"VIDEO_RECEIVED_BITRATE\"] = 44;\n        values[valuesById[45] = \"VIDEO_CURRENT_DELAY_MS\"] = 45;\n        values[valuesById[46] = \"VIDEO_JITTER_BUFFER_MS\"] = 46;\n        values[valuesById[47] = \"VIDEO_DISCARDED_PPS\"] = 47;\n        values[valuesById[48] = \"VIDEO_PLIS_SENT\"] = 48;\n        values[valuesById[49] = \"VIDEO_RECEIVED_JITTER_MS\"] = 49;\n        values[valuesById[64] = \"VIDEO_ENCODE_HEIGHT\"] = 64;\n        values[valuesById[66] = \"VIDEO_SENT_QP_SUM\"] = 66;\n        values[valuesById[69] = \"VIDEO_DECODE_HEIGHT\"] = 69;\n        values[valuesById[72] = \"VIDEO_RECEIVED_QP_SUM\"] = 72;\n        values[valuesById[86] = \"VIDEO_ENCODE_WIDTH\"] = 86;\n        values[valuesById[87] = \"VIDEO_DECODE_WIDTH\"] = 87;\n        values[valuesById[88] = \"VIDEO_ENCODER_IS_HARDWARE\"] = 88;\n        values[valuesById[89] = \"VIDEO_DECODER_IS_HARDWARE\"] = 89;\n        return values;\n    })();\n\n    return SdkMetric;\n})();\n\n$root.SdkStreamMetricFrame = (function() {\n\n    /**\n     * Properties of a SdkStreamMetricFrame.\n     * @exports ISdkStreamMetricFrame\n     * @interface ISdkStreamMetricFrame\n     * @property {number|null} [streamId] SdkStreamMetricFrame streamId\n     * @property {number|null} [groupId] SdkStreamMetricFrame groupId\n     * @property {Array.<ISdkMetric>|null} [metrics] SdkStreamMetricFrame metrics\n     * @property {Array.<ISdkStreamDimension>|null} [dimensions] SdkStreamMetricFrame dimensions\n     */\n\n    /**\n     * Constructs a new SdkStreamMetricFrame.\n     * @exports SdkStreamMetricFrame\n     * @classdesc Represents a SdkStreamMetricFrame.\n     * @implements ISdkStreamMetricFrame\n     * @constructor\n     * @param {ISdkStreamMetricFrame=} [properties] Properties to set\n     */\n    function SdkStreamMetricFrame(properties) {\n        this.metrics = [];\n        this.dimensions = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkStreamMetricFrame streamId.\n     * @member {number} streamId\n     * @memberof SdkStreamMetricFrame\n     * @instance\n     */\n    SdkStreamMetricFrame.prototype.streamId = 0;\n\n    /**\n     * SdkStreamMetricFrame groupId.\n     * @member {number} groupId\n     * @memberof SdkStreamMetricFrame\n     * @instance\n     */\n    SdkStreamMetricFrame.prototype.groupId = 0;\n\n    /**\n     * SdkStreamMetricFrame metrics.\n     * @member {Array.<ISdkMetric>} metrics\n     * @memberof SdkStreamMetricFrame\n     * @instance\n     */\n    SdkStreamMetricFrame.prototype.metrics = $util.emptyArray;\n\n    /**\n     * SdkStreamMetricFrame dimensions.\n     * @member {Array.<ISdkStreamDimension>} dimensions\n     * @memberof SdkStreamMetricFrame\n     * @instance\n     */\n    SdkStreamMetricFrame.prototype.dimensions = $util.emptyArray;\n\n    /**\n     * Creates a new SdkStreamMetricFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {ISdkStreamMetricFrame=} [properties] Properties to set\n     * @returns {SdkStreamMetricFrame} SdkStreamMetricFrame instance\n     */\n    SdkStreamMetricFrame.create = function create(properties) {\n        return new SdkStreamMetricFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkStreamMetricFrame message. Does not implicitly {@link SdkStreamMetricFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {ISdkStreamMetricFrame} message SdkStreamMetricFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkStreamMetricFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.streamId != null && Object.hasOwnProperty.call(message, \"streamId\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.streamId);\n        if (message.groupId != null && Object.hasOwnProperty.call(message, \"groupId\"))\n            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.groupId);\n        if (message.metrics != null && message.metrics.length)\n            for (var i = 0; i < message.metrics.length; ++i)\n                $root.SdkMetric.encode(message.metrics[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n        if (message.dimensions != null && message.dimensions.length)\n            for (var i = 0; i < message.dimensions.length; ++i)\n                $root.SdkStreamDimension.encode(message.dimensions[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkStreamMetricFrame message, length delimited. Does not implicitly {@link SdkStreamMetricFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {ISdkStreamMetricFrame} message SdkStreamMetricFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkStreamMetricFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkStreamMetricFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkStreamMetricFrame} SdkStreamMetricFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkStreamMetricFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkStreamMetricFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 3:\n                message.streamId = reader.uint32();\n                break;\n            case 4:\n                message.groupId = reader.uint32();\n                break;\n            case 5:\n                if (!(message.metrics && message.metrics.length))\n                    message.metrics = [];\n                message.metrics.push($root.SdkMetric.decode(reader, reader.uint32()));\n                break;\n            case 6:\n                if (!(message.dimensions && message.dimensions.length))\n                    message.dimensions = [];\n                message.dimensions.push($root.SdkStreamDimension.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkStreamMetricFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkStreamMetricFrame} SdkStreamMetricFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkStreamMetricFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkStreamMetricFrame message.\n     * @function verify\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkStreamMetricFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            if (!$util.isInteger(message.streamId))\n                return \"streamId: integer expected\";\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            if (!$util.isInteger(message.groupId))\n                return \"groupId: integer expected\";\n        if (message.metrics != null && message.hasOwnProperty(\"metrics\")) {\n            if (!Array.isArray(message.metrics))\n                return \"metrics: array expected\";\n            for (var i = 0; i < message.metrics.length; ++i) {\n                var error = $root.SdkMetric.verify(message.metrics[i]);\n                if (error)\n                    return \"metrics.\" + error;\n            }\n        }\n        if (message.dimensions != null && message.hasOwnProperty(\"dimensions\")) {\n            if (!Array.isArray(message.dimensions))\n                return \"dimensions: array expected\";\n            for (var i = 0; i < message.dimensions.length; ++i) {\n                var error = $root.SdkStreamDimension.verify(message.dimensions[i]);\n                if (error)\n                    return \"dimensions.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkStreamMetricFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkStreamMetricFrame} SdkStreamMetricFrame\n     */\n    SdkStreamMetricFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkStreamMetricFrame)\n            return object;\n        var message = new $root.SdkStreamMetricFrame();\n        if (object.streamId != null)\n            message.streamId = object.streamId >>> 0;\n        if (object.groupId != null)\n            message.groupId = object.groupId >>> 0;\n        if (object.metrics) {\n            if (!Array.isArray(object.metrics))\n                throw TypeError(\".SdkStreamMetricFrame.metrics: array expected\");\n            message.metrics = [];\n            for (var i = 0; i < object.metrics.length; ++i) {\n                if (typeof object.metrics[i] !== \"object\")\n                    throw TypeError(\".SdkStreamMetricFrame.metrics: object expected\");\n                message.metrics[i] = $root.SdkMetric.fromObject(object.metrics[i]);\n            }\n        }\n        if (object.dimensions) {\n            if (!Array.isArray(object.dimensions))\n                throw TypeError(\".SdkStreamMetricFrame.dimensions: array expected\");\n            message.dimensions = [];\n            for (var i = 0; i < object.dimensions.length; ++i) {\n                if (typeof object.dimensions[i] !== \"object\")\n                    throw TypeError(\".SdkStreamMetricFrame.dimensions: object expected\");\n                message.dimensions[i] = $root.SdkStreamDimension.fromObject(object.dimensions[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkStreamMetricFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {SdkStreamMetricFrame} message SdkStreamMetricFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkStreamMetricFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.metrics = [];\n            object.dimensions = [];\n        }\n        if (options.defaults) {\n            object.streamId = 0;\n            object.groupId = 0;\n        }\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            object.streamId = message.streamId;\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            object.groupId = message.groupId;\n        if (message.metrics && message.metrics.length) {\n            object.metrics = [];\n            for (var j = 0; j < message.metrics.length; ++j)\n                object.metrics[j] = $root.SdkMetric.toObject(message.metrics[j], options);\n        }\n        if (message.dimensions && message.dimensions.length) {\n            object.dimensions = [];\n            for (var j = 0; j < message.dimensions.length; ++j)\n                object.dimensions[j] = $root.SdkStreamDimension.toObject(message.dimensions[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkStreamMetricFrame to JSON.\n     * @function toJSON\n     * @memberof SdkStreamMetricFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkStreamMetricFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkStreamMetricFrame;\n})();\n\n$root.SdkClientMetricFrame = (function() {\n\n    /**\n     * Properties of a SdkClientMetricFrame.\n     * @exports ISdkClientMetricFrame\n     * @interface ISdkClientMetricFrame\n     * @property {Array.<ISdkMetric>|null} [globalMetrics] SdkClientMetricFrame globalMetrics\n     * @property {Array.<ISdkStreamMetricFrame>|null} [streamMetricFrames] SdkClientMetricFrame streamMetricFrames\n     */\n\n    /**\n     * Constructs a new SdkClientMetricFrame.\n     * @exports SdkClientMetricFrame\n     * @classdesc Represents a SdkClientMetricFrame.\n     * @implements ISdkClientMetricFrame\n     * @constructor\n     * @param {ISdkClientMetricFrame=} [properties] Properties to set\n     */\n    function SdkClientMetricFrame(properties) {\n        this.globalMetrics = [];\n        this.streamMetricFrames = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkClientMetricFrame globalMetrics.\n     * @member {Array.<ISdkMetric>} globalMetrics\n     * @memberof SdkClientMetricFrame\n     * @instance\n     */\n    SdkClientMetricFrame.prototype.globalMetrics = $util.emptyArray;\n\n    /**\n     * SdkClientMetricFrame streamMetricFrames.\n     * @member {Array.<ISdkStreamMetricFrame>} streamMetricFrames\n     * @memberof SdkClientMetricFrame\n     * @instance\n     */\n    SdkClientMetricFrame.prototype.streamMetricFrames = $util.emptyArray;\n\n    /**\n     * Creates a new SdkClientMetricFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {ISdkClientMetricFrame=} [properties] Properties to set\n     * @returns {SdkClientMetricFrame} SdkClientMetricFrame instance\n     */\n    SdkClientMetricFrame.create = function create(properties) {\n        return new SdkClientMetricFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkClientMetricFrame message. Does not implicitly {@link SdkClientMetricFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {ISdkClientMetricFrame} message SdkClientMetricFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkClientMetricFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.globalMetrics != null && message.globalMetrics.length)\n            for (var i = 0; i < message.globalMetrics.length; ++i)\n                $root.SdkMetric.encode(message.globalMetrics[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        if (message.streamMetricFrames != null && message.streamMetricFrames.length)\n            for (var i = 0; i < message.streamMetricFrames.length; ++i)\n                $root.SdkStreamMetricFrame.encode(message.streamMetricFrames[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkClientMetricFrame message, length delimited. Does not implicitly {@link SdkClientMetricFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {ISdkClientMetricFrame} message SdkClientMetricFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkClientMetricFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkClientMetricFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkClientMetricFrame} SdkClientMetricFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkClientMetricFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkClientMetricFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.globalMetrics && message.globalMetrics.length))\n                    message.globalMetrics = [];\n                message.globalMetrics.push($root.SdkMetric.decode(reader, reader.uint32()));\n                break;\n            case 2:\n                if (!(message.streamMetricFrames && message.streamMetricFrames.length))\n                    message.streamMetricFrames = [];\n                message.streamMetricFrames.push($root.SdkStreamMetricFrame.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkClientMetricFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkClientMetricFrame} SdkClientMetricFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkClientMetricFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkClientMetricFrame message.\n     * @function verify\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkClientMetricFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.globalMetrics != null && message.hasOwnProperty(\"globalMetrics\")) {\n            if (!Array.isArray(message.globalMetrics))\n                return \"globalMetrics: array expected\";\n            for (var i = 0; i < message.globalMetrics.length; ++i) {\n                var error = $root.SdkMetric.verify(message.globalMetrics[i]);\n                if (error)\n                    return \"globalMetrics.\" + error;\n            }\n        }\n        if (message.streamMetricFrames != null && message.hasOwnProperty(\"streamMetricFrames\")) {\n            if (!Array.isArray(message.streamMetricFrames))\n                return \"streamMetricFrames: array expected\";\n            for (var i = 0; i < message.streamMetricFrames.length; ++i) {\n                var error = $root.SdkStreamMetricFrame.verify(message.streamMetricFrames[i]);\n                if (error)\n                    return \"streamMetricFrames.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkClientMetricFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkClientMetricFrame} SdkClientMetricFrame\n     */\n    SdkClientMetricFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkClientMetricFrame)\n            return object;\n        var message = new $root.SdkClientMetricFrame();\n        if (object.globalMetrics) {\n            if (!Array.isArray(object.globalMetrics))\n                throw TypeError(\".SdkClientMetricFrame.globalMetrics: array expected\");\n            message.globalMetrics = [];\n            for (var i = 0; i < object.globalMetrics.length; ++i) {\n                if (typeof object.globalMetrics[i] !== \"object\")\n                    throw TypeError(\".SdkClientMetricFrame.globalMetrics: object expected\");\n                message.globalMetrics[i] = $root.SdkMetric.fromObject(object.globalMetrics[i]);\n            }\n        }\n        if (object.streamMetricFrames) {\n            if (!Array.isArray(object.streamMetricFrames))\n                throw TypeError(\".SdkClientMetricFrame.streamMetricFrames: array expected\");\n            message.streamMetricFrames = [];\n            for (var i = 0; i < object.streamMetricFrames.length; ++i) {\n                if (typeof object.streamMetricFrames[i] !== \"object\")\n                    throw TypeError(\".SdkClientMetricFrame.streamMetricFrames: object expected\");\n                message.streamMetricFrames[i] = $root.SdkStreamMetricFrame.fromObject(object.streamMetricFrames[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkClientMetricFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {SdkClientMetricFrame} message SdkClientMetricFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkClientMetricFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.globalMetrics = [];\n            object.streamMetricFrames = [];\n        }\n        if (message.globalMetrics && message.globalMetrics.length) {\n            object.globalMetrics = [];\n            for (var j = 0; j < message.globalMetrics.length; ++j)\n                object.globalMetrics[j] = $root.SdkMetric.toObject(message.globalMetrics[j], options);\n        }\n        if (message.streamMetricFrames && message.streamMetricFrames.length) {\n            object.streamMetricFrames = [];\n            for (var j = 0; j < message.streamMetricFrames.length; ++j)\n                object.streamMetricFrames[j] = $root.SdkStreamMetricFrame.toObject(message.streamMetricFrames[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkClientMetricFrame to JSON.\n     * @function toJSON\n     * @memberof SdkClientMetricFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkClientMetricFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkClientMetricFrame;\n})();\n\n$root.SdkStreamDimension = (function() {\n\n    /**\n     * Properties of a SdkStreamDimension.\n     * @exports ISdkStreamDimension\n     * @interface ISdkStreamDimension\n     * @property {SdkStreamDimension.Type|null} [type] SdkStreamDimension type\n     * @property {ISdkDimensionValue|null} [value] SdkStreamDimension value\n     */\n\n    /**\n     * Constructs a new SdkStreamDimension.\n     * @exports SdkStreamDimension\n     * @classdesc Represents a SdkStreamDimension.\n     * @implements ISdkStreamDimension\n     * @constructor\n     * @param {ISdkStreamDimension=} [properties] Properties to set\n     */\n    function SdkStreamDimension(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkStreamDimension type.\n     * @member {SdkStreamDimension.Type} type\n     * @memberof SdkStreamDimension\n     * @instance\n     */\n    SdkStreamDimension.prototype.type = 1;\n\n    /**\n     * SdkStreamDimension value.\n     * @member {ISdkDimensionValue|null|undefined} value\n     * @memberof SdkStreamDimension\n     * @instance\n     */\n    SdkStreamDimension.prototype.value = null;\n\n    /**\n     * Creates a new SdkStreamDimension instance using the specified properties.\n     * @function create\n     * @memberof SdkStreamDimension\n     * @static\n     * @param {ISdkStreamDimension=} [properties] Properties to set\n     * @returns {SdkStreamDimension} SdkStreamDimension instance\n     */\n    SdkStreamDimension.create = function create(properties) {\n        return new SdkStreamDimension(properties);\n    };\n\n    /**\n     * Encodes the specified SdkStreamDimension message. Does not implicitly {@link SdkStreamDimension.verify|verify} messages.\n     * @function encode\n     * @memberof SdkStreamDimension\n     * @static\n     * @param {ISdkStreamDimension} message SdkStreamDimension message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkStreamDimension.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.type != null && Object.hasOwnProperty.call(message, \"type\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);\n        if (message.value != null && Object.hasOwnProperty.call(message, \"value\"))\n            $root.SdkDimensionValue.encode(message.value, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkStreamDimension message, length delimited. Does not implicitly {@link SdkStreamDimension.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkStreamDimension\n     * @static\n     * @param {ISdkStreamDimension} message SdkStreamDimension message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkStreamDimension.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkStreamDimension message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkStreamDimension\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkStreamDimension} SdkStreamDimension\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkStreamDimension.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkStreamDimension();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.type = reader.int32();\n                break;\n            case 2:\n                message.value = $root.SdkDimensionValue.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkStreamDimension message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkStreamDimension\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkStreamDimension} SdkStreamDimension\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkStreamDimension.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkStreamDimension message.\n     * @function verify\n     * @memberof SdkStreamDimension\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkStreamDimension.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            switch (message.type) {\n            default:\n                return \"type: enum value expected\";\n            case 1:\n            case 2:\n                break;\n            }\n        if (message.value != null && message.hasOwnProperty(\"value\")) {\n            var error = $root.SdkDimensionValue.verify(message.value);\n            if (error)\n                return \"value.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkStreamDimension message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkStreamDimension\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkStreamDimension} SdkStreamDimension\n     */\n    SdkStreamDimension.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkStreamDimension)\n            return object;\n        var message = new $root.SdkStreamDimension();\n        switch (object.type) {\n        case \"VIDEO_ENCODER_NAME\":\n        case 1:\n            message.type = 1;\n            break;\n        case \"VIDEO_DECODER_NAME\":\n        case 2:\n            message.type = 2;\n            break;\n        }\n        if (object.value != null) {\n            if (typeof object.value !== \"object\")\n                throw TypeError(\".SdkStreamDimension.value: object expected\");\n            message.value = $root.SdkDimensionValue.fromObject(object.value);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkStreamDimension message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkStreamDimension\n     * @static\n     * @param {SdkStreamDimension} message SdkStreamDimension\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkStreamDimension.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.type = options.enums === String ? \"VIDEO_ENCODER_NAME\" : 1;\n            object.value = null;\n        }\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            object.type = options.enums === String ? $root.SdkStreamDimension.Type[message.type] : message.type;\n        if (message.value != null && message.hasOwnProperty(\"value\"))\n            object.value = $root.SdkDimensionValue.toObject(message.value, options);\n        return object;\n    };\n\n    /**\n     * Converts this SdkStreamDimension to JSON.\n     * @function toJSON\n     * @memberof SdkStreamDimension\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkStreamDimension.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * Type enum.\n     * @name SdkStreamDimension.Type\n     * @enum {number}\n     * @property {number} VIDEO_ENCODER_NAME=1 VIDEO_ENCODER_NAME value\n     * @property {number} VIDEO_DECODER_NAME=2 VIDEO_DECODER_NAME value\n     */\n    SdkStreamDimension.Type = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[1] = \"VIDEO_ENCODER_NAME\"] = 1;\n        values[valuesById[2] = \"VIDEO_DECODER_NAME\"] = 2;\n        return values;\n    })();\n\n    return SdkStreamDimension;\n})();\n\n$root.SdkDimensionValue = (function() {\n\n    /**\n     * Properties of a SdkDimensionValue.\n     * @exports ISdkDimensionValue\n     * @interface ISdkDimensionValue\n     * @property {string|null} [stringValue] SdkDimensionValue stringValue\n     * @property {boolean|null} [boolValue] SdkDimensionValue boolValue\n     * @property {number|Long|null} [uintValue] SdkDimensionValue uintValue\n     */\n\n    /**\n     * Constructs a new SdkDimensionValue.\n     * @exports SdkDimensionValue\n     * @classdesc Represents a SdkDimensionValue.\n     * @implements ISdkDimensionValue\n     * @constructor\n     * @param {ISdkDimensionValue=} [properties] Properties to set\n     */\n    function SdkDimensionValue(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkDimensionValue stringValue.\n     * @member {string} stringValue\n     * @memberof SdkDimensionValue\n     * @instance\n     */\n    SdkDimensionValue.prototype.stringValue = \"\";\n\n    /**\n     * SdkDimensionValue boolValue.\n     * @member {boolean} boolValue\n     * @memberof SdkDimensionValue\n     * @instance\n     */\n    SdkDimensionValue.prototype.boolValue = false;\n\n    /**\n     * SdkDimensionValue uintValue.\n     * @member {number|Long} uintValue\n     * @memberof SdkDimensionValue\n     * @instance\n     */\n    SdkDimensionValue.prototype.uintValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Creates a new SdkDimensionValue instance using the specified properties.\n     * @function create\n     * @memberof SdkDimensionValue\n     * @static\n     * @param {ISdkDimensionValue=} [properties] Properties to set\n     * @returns {SdkDimensionValue} SdkDimensionValue instance\n     */\n    SdkDimensionValue.create = function create(properties) {\n        return new SdkDimensionValue(properties);\n    };\n\n    /**\n     * Encodes the specified SdkDimensionValue message. Does not implicitly {@link SdkDimensionValue.verify|verify} messages.\n     * @function encode\n     * @memberof SdkDimensionValue\n     * @static\n     * @param {ISdkDimensionValue} message SdkDimensionValue message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkDimensionValue.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.stringValue != null && Object.hasOwnProperty.call(message, \"stringValue\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.stringValue);\n        if (message.boolValue != null && Object.hasOwnProperty.call(message, \"boolValue\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.boolValue);\n        if (message.uintValue != null && Object.hasOwnProperty.call(message, \"uintValue\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).uint64(message.uintValue);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkDimensionValue message, length delimited. Does not implicitly {@link SdkDimensionValue.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkDimensionValue\n     * @static\n     * @param {ISdkDimensionValue} message SdkDimensionValue message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkDimensionValue.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkDimensionValue message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkDimensionValue\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkDimensionValue} SdkDimensionValue\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkDimensionValue.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkDimensionValue();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.stringValue = reader.string();\n                break;\n            case 2:\n                message.boolValue = reader.bool();\n                break;\n            case 3:\n                message.uintValue = reader.uint64();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkDimensionValue message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkDimensionValue\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkDimensionValue} SdkDimensionValue\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkDimensionValue.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkDimensionValue message.\n     * @function verify\n     * @memberof SdkDimensionValue\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkDimensionValue.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.stringValue != null && message.hasOwnProperty(\"stringValue\"))\n            if (!$util.isString(message.stringValue))\n                return \"stringValue: string expected\";\n        if (message.boolValue != null && message.hasOwnProperty(\"boolValue\"))\n            if (typeof message.boolValue !== \"boolean\")\n                return \"boolValue: boolean expected\";\n        if (message.uintValue != null && message.hasOwnProperty(\"uintValue\"))\n            if (!$util.isInteger(message.uintValue) && !(message.uintValue && $util.isInteger(message.uintValue.low) && $util.isInteger(message.uintValue.high)))\n                return \"uintValue: integer|Long expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkDimensionValue message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkDimensionValue\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkDimensionValue} SdkDimensionValue\n     */\n    SdkDimensionValue.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkDimensionValue)\n            return object;\n        var message = new $root.SdkDimensionValue();\n        if (object.stringValue != null)\n            message.stringValue = String(object.stringValue);\n        if (object.boolValue != null)\n            message.boolValue = Boolean(object.boolValue);\n        if (object.uintValue != null)\n            if ($util.Long)\n                (message.uintValue = $util.Long.fromValue(object.uintValue)).unsigned = true;\n            else if (typeof object.uintValue === \"string\")\n                message.uintValue = parseInt(object.uintValue, 10);\n            else if (typeof object.uintValue === \"number\")\n                message.uintValue = object.uintValue;\n            else if (typeof object.uintValue === \"object\")\n                message.uintValue = new $util.LongBits(object.uintValue.low >>> 0, object.uintValue.high >>> 0).toNumber(true);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkDimensionValue message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkDimensionValue\n     * @static\n     * @param {SdkDimensionValue} message SdkDimensionValue\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkDimensionValue.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.stringValue = \"\";\n            object.boolValue = false;\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.uintValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.uintValue = options.longs === String ? \"0\" : 0;\n        }\n        if (message.stringValue != null && message.hasOwnProperty(\"stringValue\"))\n            object.stringValue = message.stringValue;\n        if (message.boolValue != null && message.hasOwnProperty(\"boolValue\"))\n            object.boolValue = message.boolValue;\n        if (message.uintValue != null && message.hasOwnProperty(\"uintValue\"))\n            if (typeof message.uintValue === \"number\")\n                object.uintValue = options.longs === String ? String(message.uintValue) : message.uintValue;\n            else\n                object.uintValue = options.longs === String ? $util.Long.prototype.toString.call(message.uintValue) : options.longs === Number ? new $util.LongBits(message.uintValue.low >>> 0, message.uintValue.high >>> 0).toNumber(true) : message.uintValue;\n        return object;\n    };\n\n    /**\n     * Converts this SdkDimensionValue to JSON.\n     * @function toJSON\n     * @memberof SdkDimensionValue\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkDimensionValue.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkDimensionValue;\n})();\n\n$root.SdkDataMessageFrame = (function() {\n\n    /**\n     * Properties of a SdkDataMessageFrame.\n     * @exports ISdkDataMessageFrame\n     * @interface ISdkDataMessageFrame\n     * @property {Array.<ISdkDataMessagePayload>|null} [messages] SdkDataMessageFrame messages\n     */\n\n    /**\n     * Constructs a new SdkDataMessageFrame.\n     * @exports SdkDataMessageFrame\n     * @classdesc Represents a SdkDataMessageFrame.\n     * @implements ISdkDataMessageFrame\n     * @constructor\n     * @param {ISdkDataMessageFrame=} [properties] Properties to set\n     */\n    function SdkDataMessageFrame(properties) {\n        this.messages = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkDataMessageFrame messages.\n     * @member {Array.<ISdkDataMessagePayload>} messages\n     * @memberof SdkDataMessageFrame\n     * @instance\n     */\n    SdkDataMessageFrame.prototype.messages = $util.emptyArray;\n\n    /**\n     * Creates a new SdkDataMessageFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {ISdkDataMessageFrame=} [properties] Properties to set\n     * @returns {SdkDataMessageFrame} SdkDataMessageFrame instance\n     */\n    SdkDataMessageFrame.create = function create(properties) {\n        return new SdkDataMessageFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkDataMessageFrame message. Does not implicitly {@link SdkDataMessageFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {ISdkDataMessageFrame} message SdkDataMessageFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkDataMessageFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.messages != null && message.messages.length)\n            for (var i = 0; i < message.messages.length; ++i)\n                $root.SdkDataMessagePayload.encode(message.messages[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkDataMessageFrame message, length delimited. Does not implicitly {@link SdkDataMessageFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {ISdkDataMessageFrame} message SdkDataMessageFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkDataMessageFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkDataMessageFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkDataMessageFrame} SdkDataMessageFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkDataMessageFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkDataMessageFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.messages && message.messages.length))\n                    message.messages = [];\n                message.messages.push($root.SdkDataMessagePayload.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkDataMessageFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkDataMessageFrame} SdkDataMessageFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkDataMessageFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkDataMessageFrame message.\n     * @function verify\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkDataMessageFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.messages != null && message.hasOwnProperty(\"messages\")) {\n            if (!Array.isArray(message.messages))\n                return \"messages: array expected\";\n            for (var i = 0; i < message.messages.length; ++i) {\n                var error = $root.SdkDataMessagePayload.verify(message.messages[i]);\n                if (error)\n                    return \"messages.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkDataMessageFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkDataMessageFrame} SdkDataMessageFrame\n     */\n    SdkDataMessageFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkDataMessageFrame)\n            return object;\n        var message = new $root.SdkDataMessageFrame();\n        if (object.messages) {\n            if (!Array.isArray(object.messages))\n                throw TypeError(\".SdkDataMessageFrame.messages: array expected\");\n            message.messages = [];\n            for (var i = 0; i < object.messages.length; ++i) {\n                if (typeof object.messages[i] !== \"object\")\n                    throw TypeError(\".SdkDataMessageFrame.messages: object expected\");\n                message.messages[i] = $root.SdkDataMessagePayload.fromObject(object.messages[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkDataMessageFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {SdkDataMessageFrame} message SdkDataMessageFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkDataMessageFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.messages = [];\n        if (message.messages && message.messages.length) {\n            object.messages = [];\n            for (var j = 0; j < message.messages.length; ++j)\n                object.messages[j] = $root.SdkDataMessagePayload.toObject(message.messages[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkDataMessageFrame to JSON.\n     * @function toJSON\n     * @memberof SdkDataMessageFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkDataMessageFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkDataMessageFrame;\n})();\n\n$root.SdkDataMessagePayload = (function() {\n\n    /**\n     * Properties of a SdkDataMessagePayload.\n     * @exports ISdkDataMessagePayload\n     * @interface ISdkDataMessagePayload\n     * @property {string|null} [topic] SdkDataMessagePayload topic\n     * @property {Uint8Array|null} [data] SdkDataMessagePayload data\n     * @property {number|null} [lifetimeMs] SdkDataMessagePayload lifetimeMs\n     * @property {string|null} [senderAttendeeId] SdkDataMessagePayload senderAttendeeId\n     * @property {number|Long|null} [ingestTimeNs] SdkDataMessagePayload ingestTimeNs\n     * @property {string|null} [senderExternalUserId] SdkDataMessagePayload senderExternalUserId\n     */\n\n    /**\n     * Constructs a new SdkDataMessagePayload.\n     * @exports SdkDataMessagePayload\n     * @classdesc Represents a SdkDataMessagePayload.\n     * @implements ISdkDataMessagePayload\n     * @constructor\n     * @param {ISdkDataMessagePayload=} [properties] Properties to set\n     */\n    function SdkDataMessagePayload(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkDataMessagePayload topic.\n     * @member {string} topic\n     * @memberof SdkDataMessagePayload\n     * @instance\n     */\n    SdkDataMessagePayload.prototype.topic = \"\";\n\n    /**\n     * SdkDataMessagePayload data.\n     * @member {Uint8Array} data\n     * @memberof SdkDataMessagePayload\n     * @instance\n     */\n    SdkDataMessagePayload.prototype.data = $util.newBuffer([]);\n\n    /**\n     * SdkDataMessagePayload lifetimeMs.\n     * @member {number} lifetimeMs\n     * @memberof SdkDataMessagePayload\n     * @instance\n     */\n    SdkDataMessagePayload.prototype.lifetimeMs = 0;\n\n    /**\n     * SdkDataMessagePayload senderAttendeeId.\n     * @member {string} senderAttendeeId\n     * @memberof SdkDataMessagePayload\n     * @instance\n     */\n    SdkDataMessagePayload.prototype.senderAttendeeId = \"\";\n\n    /**\n     * SdkDataMessagePayload ingestTimeNs.\n     * @member {number|Long} ingestTimeNs\n     * @memberof SdkDataMessagePayload\n     * @instance\n     */\n    SdkDataMessagePayload.prototype.ingestTimeNs = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * SdkDataMessagePayload senderExternalUserId.\n     * @member {string} senderExternalUserId\n     * @memberof SdkDataMessagePayload\n     * @instance\n     */\n    SdkDataMessagePayload.prototype.senderExternalUserId = \"\";\n\n    /**\n     * Creates a new SdkDataMessagePayload instance using the specified properties.\n     * @function create\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {ISdkDataMessagePayload=} [properties] Properties to set\n     * @returns {SdkDataMessagePayload} SdkDataMessagePayload instance\n     */\n    SdkDataMessagePayload.create = function create(properties) {\n        return new SdkDataMessagePayload(properties);\n    };\n\n    /**\n     * Encodes the specified SdkDataMessagePayload message. Does not implicitly {@link SdkDataMessagePayload.verify|verify} messages.\n     * @function encode\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {ISdkDataMessagePayload} message SdkDataMessagePayload message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkDataMessagePayload.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.topic != null && Object.hasOwnProperty.call(message, \"topic\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.topic);\n        if (message.data != null && Object.hasOwnProperty.call(message, \"data\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.data);\n        if (message.lifetimeMs != null && Object.hasOwnProperty.call(message, \"lifetimeMs\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.lifetimeMs);\n        if (message.senderAttendeeId != null && Object.hasOwnProperty.call(message, \"senderAttendeeId\"))\n            writer.uint32(/* id 4, wireType 2 =*/34).string(message.senderAttendeeId);\n        if (message.ingestTimeNs != null && Object.hasOwnProperty.call(message, \"ingestTimeNs\"))\n            writer.uint32(/* id 5, wireType 0 =*/40).int64(message.ingestTimeNs);\n        if (message.senderExternalUserId != null && Object.hasOwnProperty.call(message, \"senderExternalUserId\"))\n            writer.uint32(/* id 6, wireType 2 =*/50).string(message.senderExternalUserId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkDataMessagePayload message, length delimited. Does not implicitly {@link SdkDataMessagePayload.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {ISdkDataMessagePayload} message SdkDataMessagePayload message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkDataMessagePayload.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkDataMessagePayload message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkDataMessagePayload} SdkDataMessagePayload\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkDataMessagePayload.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkDataMessagePayload();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.topic = reader.string();\n                break;\n            case 2:\n                message.data = reader.bytes();\n                break;\n            case 3:\n                message.lifetimeMs = reader.uint32();\n                break;\n            case 4:\n                message.senderAttendeeId = reader.string();\n                break;\n            case 5:\n                message.ingestTimeNs = reader.int64();\n                break;\n            case 6:\n                message.senderExternalUserId = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkDataMessagePayload message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkDataMessagePayload} SdkDataMessagePayload\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkDataMessagePayload.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkDataMessagePayload message.\n     * @function verify\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkDataMessagePayload.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.topic != null && message.hasOwnProperty(\"topic\"))\n            if (!$util.isString(message.topic))\n                return \"topic: string expected\";\n        if (message.data != null && message.hasOwnProperty(\"data\"))\n            if (!(message.data && typeof message.data.length === \"number\" || $util.isString(message.data)))\n                return \"data: buffer expected\";\n        if (message.lifetimeMs != null && message.hasOwnProperty(\"lifetimeMs\"))\n            if (!$util.isInteger(message.lifetimeMs))\n                return \"lifetimeMs: integer expected\";\n        if (message.senderAttendeeId != null && message.hasOwnProperty(\"senderAttendeeId\"))\n            if (!$util.isString(message.senderAttendeeId))\n                return \"senderAttendeeId: string expected\";\n        if (message.ingestTimeNs != null && message.hasOwnProperty(\"ingestTimeNs\"))\n            if (!$util.isInteger(message.ingestTimeNs) && !(message.ingestTimeNs && $util.isInteger(message.ingestTimeNs.low) && $util.isInteger(message.ingestTimeNs.high)))\n                return \"ingestTimeNs: integer|Long expected\";\n        if (message.senderExternalUserId != null && message.hasOwnProperty(\"senderExternalUserId\"))\n            if (!$util.isString(message.senderExternalUserId))\n                return \"senderExternalUserId: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkDataMessagePayload message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkDataMessagePayload} SdkDataMessagePayload\n     */\n    SdkDataMessagePayload.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkDataMessagePayload)\n            return object;\n        var message = new $root.SdkDataMessagePayload();\n        if (object.topic != null)\n            message.topic = String(object.topic);\n        if (object.data != null)\n            if (typeof object.data === \"string\")\n                $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);\n            else if (object.data.length)\n                message.data = object.data;\n        if (object.lifetimeMs != null)\n            message.lifetimeMs = object.lifetimeMs >>> 0;\n        if (object.senderAttendeeId != null)\n            message.senderAttendeeId = String(object.senderAttendeeId);\n        if (object.ingestTimeNs != null)\n            if ($util.Long)\n                (message.ingestTimeNs = $util.Long.fromValue(object.ingestTimeNs)).unsigned = false;\n            else if (typeof object.ingestTimeNs === \"string\")\n                message.ingestTimeNs = parseInt(object.ingestTimeNs, 10);\n            else if (typeof object.ingestTimeNs === \"number\")\n                message.ingestTimeNs = object.ingestTimeNs;\n            else if (typeof object.ingestTimeNs === \"object\")\n                message.ingestTimeNs = new $util.LongBits(object.ingestTimeNs.low >>> 0, object.ingestTimeNs.high >>> 0).toNumber();\n        if (object.senderExternalUserId != null)\n            message.senderExternalUserId = String(object.senderExternalUserId);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkDataMessagePayload message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {SdkDataMessagePayload} message SdkDataMessagePayload\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkDataMessagePayload.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.topic = \"\";\n            if (options.bytes === String)\n                object.data = \"\";\n            else {\n                object.data = [];\n                if (options.bytes !== Array)\n                    object.data = $util.newBuffer(object.data);\n            }\n            object.lifetimeMs = 0;\n            object.senderAttendeeId = \"\";\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.ingestTimeNs = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.ingestTimeNs = options.longs === String ? \"0\" : 0;\n            object.senderExternalUserId = \"\";\n        }\n        if (message.topic != null && message.hasOwnProperty(\"topic\"))\n            object.topic = message.topic;\n        if (message.data != null && message.hasOwnProperty(\"data\"))\n            object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;\n        if (message.lifetimeMs != null && message.hasOwnProperty(\"lifetimeMs\"))\n            object.lifetimeMs = message.lifetimeMs;\n        if (message.senderAttendeeId != null && message.hasOwnProperty(\"senderAttendeeId\"))\n            object.senderAttendeeId = message.senderAttendeeId;\n        if (message.ingestTimeNs != null && message.hasOwnProperty(\"ingestTimeNs\"))\n            if (typeof message.ingestTimeNs === \"number\")\n                object.ingestTimeNs = options.longs === String ? String(message.ingestTimeNs) : message.ingestTimeNs;\n            else\n                object.ingestTimeNs = options.longs === String ? $util.Long.prototype.toString.call(message.ingestTimeNs) : options.longs === Number ? new $util.LongBits(message.ingestTimeNs.low >>> 0, message.ingestTimeNs.high >>> 0).toNumber() : message.ingestTimeNs;\n        if (message.senderExternalUserId != null && message.hasOwnProperty(\"senderExternalUserId\"))\n            object.senderExternalUserId = message.senderExternalUserId;\n        return object;\n    };\n\n    /**\n     * Converts this SdkDataMessagePayload to JSON.\n     * @function toJSON\n     * @memberof SdkDataMessagePayload\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkDataMessagePayload.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkDataMessagePayload;\n})();\n\n$root.SdkTurnCredentials = (function() {\n\n    /**\n     * Properties of a SdkTurnCredentials.\n     * @exports ISdkTurnCredentials\n     * @interface ISdkTurnCredentials\n     * @property {string|null} [username] SdkTurnCredentials username\n     * @property {string|null} [password] SdkTurnCredentials password\n     * @property {number|null} [ttl] SdkTurnCredentials ttl\n     * @property {Array.<string>|null} [uris] SdkTurnCredentials uris\n     */\n\n    /**\n     * Constructs a new SdkTurnCredentials.\n     * @exports SdkTurnCredentials\n     * @classdesc Represents a SdkTurnCredentials.\n     * @implements ISdkTurnCredentials\n     * @constructor\n     * @param {ISdkTurnCredentials=} [properties] Properties to set\n     */\n    function SdkTurnCredentials(properties) {\n        this.uris = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkTurnCredentials username.\n     * @member {string} username\n     * @memberof SdkTurnCredentials\n     * @instance\n     */\n    SdkTurnCredentials.prototype.username = \"\";\n\n    /**\n     * SdkTurnCredentials password.\n     * @member {string} password\n     * @memberof SdkTurnCredentials\n     * @instance\n     */\n    SdkTurnCredentials.prototype.password = \"\";\n\n    /**\n     * SdkTurnCredentials ttl.\n     * @member {number} ttl\n     * @memberof SdkTurnCredentials\n     * @instance\n     */\n    SdkTurnCredentials.prototype.ttl = 0;\n\n    /**\n     * SdkTurnCredentials uris.\n     * @member {Array.<string>} uris\n     * @memberof SdkTurnCredentials\n     * @instance\n     */\n    SdkTurnCredentials.prototype.uris = $util.emptyArray;\n\n    /**\n     * Creates a new SdkTurnCredentials instance using the specified properties.\n     * @function create\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {ISdkTurnCredentials=} [properties] Properties to set\n     * @returns {SdkTurnCredentials} SdkTurnCredentials instance\n     */\n    SdkTurnCredentials.create = function create(properties) {\n        return new SdkTurnCredentials(properties);\n    };\n\n    /**\n     * Encodes the specified SdkTurnCredentials message. Does not implicitly {@link SdkTurnCredentials.verify|verify} messages.\n     * @function encode\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {ISdkTurnCredentials} message SdkTurnCredentials message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTurnCredentials.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.username != null && Object.hasOwnProperty.call(message, \"username\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.username);\n        if (message.password != null && Object.hasOwnProperty.call(message, \"password\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.password);\n        if (message.ttl != null && Object.hasOwnProperty.call(message, \"ttl\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.ttl);\n        if (message.uris != null && message.uris.length)\n            for (var i = 0; i < message.uris.length; ++i)\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.uris[i]);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkTurnCredentials message, length delimited. Does not implicitly {@link SdkTurnCredentials.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {ISdkTurnCredentials} message SdkTurnCredentials message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTurnCredentials.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkTurnCredentials message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkTurnCredentials} SdkTurnCredentials\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTurnCredentials.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkTurnCredentials();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.username = reader.string();\n                break;\n            case 2:\n                message.password = reader.string();\n                break;\n            case 3:\n                message.ttl = reader.uint32();\n                break;\n            case 4:\n                if (!(message.uris && message.uris.length))\n                    message.uris = [];\n                message.uris.push(reader.string());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkTurnCredentials message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkTurnCredentials} SdkTurnCredentials\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTurnCredentials.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkTurnCredentials message.\n     * @function verify\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkTurnCredentials.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.username != null && message.hasOwnProperty(\"username\"))\n            if (!$util.isString(message.username))\n                return \"username: string expected\";\n        if (message.password != null && message.hasOwnProperty(\"password\"))\n            if (!$util.isString(message.password))\n                return \"password: string expected\";\n        if (message.ttl != null && message.hasOwnProperty(\"ttl\"))\n            if (!$util.isInteger(message.ttl))\n                return \"ttl: integer expected\";\n        if (message.uris != null && message.hasOwnProperty(\"uris\")) {\n            if (!Array.isArray(message.uris))\n                return \"uris: array expected\";\n            for (var i = 0; i < message.uris.length; ++i)\n                if (!$util.isString(message.uris[i]))\n                    return \"uris: string[] expected\";\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkTurnCredentials message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkTurnCredentials} SdkTurnCredentials\n     */\n    SdkTurnCredentials.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkTurnCredentials)\n            return object;\n        var message = new $root.SdkTurnCredentials();\n        if (object.username != null)\n            message.username = String(object.username);\n        if (object.password != null)\n            message.password = String(object.password);\n        if (object.ttl != null)\n            message.ttl = object.ttl >>> 0;\n        if (object.uris) {\n            if (!Array.isArray(object.uris))\n                throw TypeError(\".SdkTurnCredentials.uris: array expected\");\n            message.uris = [];\n            for (var i = 0; i < object.uris.length; ++i)\n                message.uris[i] = String(object.uris[i]);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkTurnCredentials message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {SdkTurnCredentials} message SdkTurnCredentials\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkTurnCredentials.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.uris = [];\n        if (options.defaults) {\n            object.username = \"\";\n            object.password = \"\";\n            object.ttl = 0;\n        }\n        if (message.username != null && message.hasOwnProperty(\"username\"))\n            object.username = message.username;\n        if (message.password != null && message.hasOwnProperty(\"password\"))\n            object.password = message.password;\n        if (message.ttl != null && message.hasOwnProperty(\"ttl\"))\n            object.ttl = message.ttl;\n        if (message.uris && message.uris.length) {\n            object.uris = [];\n            for (var j = 0; j < message.uris.length; ++j)\n                object.uris[j] = message.uris[j];\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkTurnCredentials to JSON.\n     * @function toJSON\n     * @memberof SdkTurnCredentials\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkTurnCredentials.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkTurnCredentials;\n})();\n\n$root.SdkTranscriptItem = (function() {\n\n    /**\n     * Properties of a SdkTranscriptItem.\n     * @exports ISdkTranscriptItem\n     * @interface ISdkTranscriptItem\n     * @property {string|null} [content] SdkTranscriptItem content\n     * @property {number|Long|null} [endTime] SdkTranscriptItem endTime\n     * @property {string|null} [speakerAttendeeId] SdkTranscriptItem speakerAttendeeId\n     * @property {string|null} [speakerExternalUserId] SdkTranscriptItem speakerExternalUserId\n     * @property {number|Long|null} [startTime] SdkTranscriptItem startTime\n     * @property {SdkTranscriptItem.Type|null} [type] SdkTranscriptItem type\n     * @property {boolean|null} [vocabularyFilterMatch] SdkTranscriptItem vocabularyFilterMatch\n     * @property {number|null} [confidence] SdkTranscriptItem confidence\n     * @property {boolean|null} [stable] SdkTranscriptItem stable\n     */\n\n    /**\n     * Constructs a new SdkTranscriptItem.\n     * @exports SdkTranscriptItem\n     * @classdesc Represents a SdkTranscriptItem.\n     * @implements ISdkTranscriptItem\n     * @constructor\n     * @param {ISdkTranscriptItem=} [properties] Properties to set\n     */\n    function SdkTranscriptItem(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkTranscriptItem content.\n     * @member {string} content\n     * @memberof SdkTranscriptItem\n     * @instance\n     */\n    SdkTranscriptItem.prototype.content = \"\";\n\n    /**\n     * SdkTranscriptItem endTime.\n     * @member {number|Long} endTime\n     * @memberof SdkTranscriptItem\n     * @instance\n     */\n    SdkTranscriptItem.prototype.endTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * SdkTranscriptItem speakerAttendeeId.\n     * @member {string} speakerAttendeeId\n     * @memberof SdkTranscriptItem\n     * @instance\n     */\n    SdkTranscriptItem.prototype.speakerAttendeeId = \"\";\n\n    /**\n     * SdkTranscriptItem speakerExternalUserId.\n     * @member {string} speakerExternalUserId\n     * @memberof SdkTranscriptItem\n     * @instance\n     */\n    SdkTranscriptItem.prototype.speakerExternalUserId = \"\";\n\n    /**\n     * SdkTranscriptItem startTime.\n     * @member {number|Long} startTime\n     * @memberof SdkTranscriptItem\n     * @instance\n     */\n    SdkTranscriptItem.prototype.startTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * SdkTranscriptItem type.\n     * @member {SdkTranscriptItem.Type} type\n     * @memberof SdkTranscriptItem\n     * @instance\n     */\n    SdkTranscriptItem.prototype.type = 1;\n\n    /**\n     * SdkTranscriptItem vocabularyFilterMatch.\n     * @member {boolean} vocabularyFilterMatch\n     * @memberof SdkTranscriptItem\n     * @instance\n     */\n    SdkTranscriptItem.prototype.vocabularyFilterMatch = false;\n\n    /**\n     * SdkTranscriptItem confidence.\n     * @member {number} confidence\n     * @memberof SdkTranscriptItem\n     * @instance\n     */\n    SdkTranscriptItem.prototype.confidence = 0;\n\n    /**\n     * SdkTranscriptItem stable.\n     * @member {boolean} stable\n     * @memberof SdkTranscriptItem\n     * @instance\n     */\n    SdkTranscriptItem.prototype.stable = false;\n\n    /**\n     * Creates a new SdkTranscriptItem instance using the specified properties.\n     * @function create\n     * @memberof SdkTranscriptItem\n     * @static\n     * @param {ISdkTranscriptItem=} [properties] Properties to set\n     * @returns {SdkTranscriptItem} SdkTranscriptItem instance\n     */\n    SdkTranscriptItem.create = function create(properties) {\n        return new SdkTranscriptItem(properties);\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptItem message. Does not implicitly {@link SdkTranscriptItem.verify|verify} messages.\n     * @function encode\n     * @memberof SdkTranscriptItem\n     * @static\n     * @param {ISdkTranscriptItem} message SdkTranscriptItem message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptItem.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.content != null && Object.hasOwnProperty.call(message, \"content\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.content);\n        if (message.endTime != null && Object.hasOwnProperty.call(message, \"endTime\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).int64(message.endTime);\n        if (message.speakerAttendeeId != null && Object.hasOwnProperty.call(message, \"speakerAttendeeId\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.speakerAttendeeId);\n        if (message.speakerExternalUserId != null && Object.hasOwnProperty.call(message, \"speakerExternalUserId\"))\n            writer.uint32(/* id 4, wireType 2 =*/34).string(message.speakerExternalUserId);\n        if (message.startTime != null && Object.hasOwnProperty.call(message, \"startTime\"))\n            writer.uint32(/* id 5, wireType 0 =*/40).int64(message.startTime);\n        if (message.type != null && Object.hasOwnProperty.call(message, \"type\"))\n            writer.uint32(/* id 6, wireType 0 =*/48).int32(message.type);\n        if (message.vocabularyFilterMatch != null && Object.hasOwnProperty.call(message, \"vocabularyFilterMatch\"))\n            writer.uint32(/* id 7, wireType 0 =*/56).bool(message.vocabularyFilterMatch);\n        if (message.confidence != null && Object.hasOwnProperty.call(message, \"confidence\"))\n            writer.uint32(/* id 8, wireType 1 =*/65).double(message.confidence);\n        if (message.stable != null && Object.hasOwnProperty.call(message, \"stable\"))\n            writer.uint32(/* id 9, wireType 0 =*/72).bool(message.stable);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptItem message, length delimited. Does not implicitly {@link SdkTranscriptItem.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkTranscriptItem\n     * @static\n     * @param {ISdkTranscriptItem} message SdkTranscriptItem message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptItem.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkTranscriptItem message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkTranscriptItem\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkTranscriptItem} SdkTranscriptItem\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptItem.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkTranscriptItem();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.content = reader.string();\n                break;\n            case 2:\n                message.endTime = reader.int64();\n                break;\n            case 3:\n                message.speakerAttendeeId = reader.string();\n                break;\n            case 4:\n                message.speakerExternalUserId = reader.string();\n                break;\n            case 5:\n                message.startTime = reader.int64();\n                break;\n            case 6:\n                message.type = reader.int32();\n                break;\n            case 7:\n                message.vocabularyFilterMatch = reader.bool();\n                break;\n            case 8:\n                message.confidence = reader.double();\n                break;\n            case 9:\n                message.stable = reader.bool();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkTranscriptItem message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkTranscriptItem\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkTranscriptItem} SdkTranscriptItem\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptItem.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkTranscriptItem message.\n     * @function verify\n     * @memberof SdkTranscriptItem\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkTranscriptItem.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.content != null && message.hasOwnProperty(\"content\"))\n            if (!$util.isString(message.content))\n                return \"content: string expected\";\n        if (message.endTime != null && message.hasOwnProperty(\"endTime\"))\n            if (!$util.isInteger(message.endTime) && !(message.endTime && $util.isInteger(message.endTime.low) && $util.isInteger(message.endTime.high)))\n                return \"endTime: integer|Long expected\";\n        if (message.speakerAttendeeId != null && message.hasOwnProperty(\"speakerAttendeeId\"))\n            if (!$util.isString(message.speakerAttendeeId))\n                return \"speakerAttendeeId: string expected\";\n        if (message.speakerExternalUserId != null && message.hasOwnProperty(\"speakerExternalUserId\"))\n            if (!$util.isString(message.speakerExternalUserId))\n                return \"speakerExternalUserId: string expected\";\n        if (message.startTime != null && message.hasOwnProperty(\"startTime\"))\n            if (!$util.isInteger(message.startTime) && !(message.startTime && $util.isInteger(message.startTime.low) && $util.isInteger(message.startTime.high)))\n                return \"startTime: integer|Long expected\";\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            switch (message.type) {\n            default:\n                return \"type: enum value expected\";\n            case 1:\n            case 2:\n                break;\n            }\n        if (message.vocabularyFilterMatch != null && message.hasOwnProperty(\"vocabularyFilterMatch\"))\n            if (typeof message.vocabularyFilterMatch !== \"boolean\")\n                return \"vocabularyFilterMatch: boolean expected\";\n        if (message.confidence != null && message.hasOwnProperty(\"confidence\"))\n            if (typeof message.confidence !== \"number\")\n                return \"confidence: number expected\";\n        if (message.stable != null && message.hasOwnProperty(\"stable\"))\n            if (typeof message.stable !== \"boolean\")\n                return \"stable: boolean expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkTranscriptItem message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkTranscriptItem\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkTranscriptItem} SdkTranscriptItem\n     */\n    SdkTranscriptItem.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkTranscriptItem)\n            return object;\n        var message = new $root.SdkTranscriptItem();\n        if (object.content != null)\n            message.content = String(object.content);\n        if (object.endTime != null)\n            if ($util.Long)\n                (message.endTime = $util.Long.fromValue(object.endTime)).unsigned = false;\n            else if (typeof object.endTime === \"string\")\n                message.endTime = parseInt(object.endTime, 10);\n            else if (typeof object.endTime === \"number\")\n                message.endTime = object.endTime;\n            else if (typeof object.endTime === \"object\")\n                message.endTime = new $util.LongBits(object.endTime.low >>> 0, object.endTime.high >>> 0).toNumber();\n        if (object.speakerAttendeeId != null)\n            message.speakerAttendeeId = String(object.speakerAttendeeId);\n        if (object.speakerExternalUserId != null)\n            message.speakerExternalUserId = String(object.speakerExternalUserId);\n        if (object.startTime != null)\n            if ($util.Long)\n                (message.startTime = $util.Long.fromValue(object.startTime)).unsigned = false;\n            else if (typeof object.startTime === \"string\")\n                message.startTime = parseInt(object.startTime, 10);\n            else if (typeof object.startTime === \"number\")\n                message.startTime = object.startTime;\n            else if (typeof object.startTime === \"object\")\n                message.startTime = new $util.LongBits(object.startTime.low >>> 0, object.startTime.high >>> 0).toNumber();\n        switch (object.type) {\n        case \"PRONUNCIATION\":\n        case 1:\n            message.type = 1;\n            break;\n        case \"PUNCTUATION\":\n        case 2:\n            message.type = 2;\n            break;\n        }\n        if (object.vocabularyFilterMatch != null)\n            message.vocabularyFilterMatch = Boolean(object.vocabularyFilterMatch);\n        if (object.confidence != null)\n            message.confidence = Number(object.confidence);\n        if (object.stable != null)\n            message.stable = Boolean(object.stable);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkTranscriptItem message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkTranscriptItem\n     * @static\n     * @param {SdkTranscriptItem} message SdkTranscriptItem\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkTranscriptItem.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.content = \"\";\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.endTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.endTime = options.longs === String ? \"0\" : 0;\n            object.speakerAttendeeId = \"\";\n            object.speakerExternalUserId = \"\";\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.startTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.startTime = options.longs === String ? \"0\" : 0;\n            object.type = options.enums === String ? \"PRONUNCIATION\" : 1;\n            object.vocabularyFilterMatch = false;\n            object.confidence = 0;\n            object.stable = false;\n        }\n        if (message.content != null && message.hasOwnProperty(\"content\"))\n            object.content = message.content;\n        if (message.endTime != null && message.hasOwnProperty(\"endTime\"))\n            if (typeof message.endTime === \"number\")\n                object.endTime = options.longs === String ? String(message.endTime) : message.endTime;\n            else\n                object.endTime = options.longs === String ? $util.Long.prototype.toString.call(message.endTime) : options.longs === Number ? new $util.LongBits(message.endTime.low >>> 0, message.endTime.high >>> 0).toNumber() : message.endTime;\n        if (message.speakerAttendeeId != null && message.hasOwnProperty(\"speakerAttendeeId\"))\n            object.speakerAttendeeId = message.speakerAttendeeId;\n        if (message.speakerExternalUserId != null && message.hasOwnProperty(\"speakerExternalUserId\"))\n            object.speakerExternalUserId = message.speakerExternalUserId;\n        if (message.startTime != null && message.hasOwnProperty(\"startTime\"))\n            if (typeof message.startTime === \"number\")\n                object.startTime = options.longs === String ? String(message.startTime) : message.startTime;\n            else\n                object.startTime = options.longs === String ? $util.Long.prototype.toString.call(message.startTime) : options.longs === Number ? new $util.LongBits(message.startTime.low >>> 0, message.startTime.high >>> 0).toNumber() : message.startTime;\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            object.type = options.enums === String ? $root.SdkTranscriptItem.Type[message.type] : message.type;\n        if (message.vocabularyFilterMatch != null && message.hasOwnProperty(\"vocabularyFilterMatch\"))\n            object.vocabularyFilterMatch = message.vocabularyFilterMatch;\n        if (message.confidence != null && message.hasOwnProperty(\"confidence\"))\n            object.confidence = options.json && !isFinite(message.confidence) ? String(message.confidence) : message.confidence;\n        if (message.stable != null && message.hasOwnProperty(\"stable\"))\n            object.stable = message.stable;\n        return object;\n    };\n\n    /**\n     * Converts this SdkTranscriptItem to JSON.\n     * @function toJSON\n     * @memberof SdkTranscriptItem\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkTranscriptItem.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * Type enum.\n     * @name SdkTranscriptItem.Type\n     * @enum {number}\n     * @property {number} PRONUNCIATION=1 PRONUNCIATION value\n     * @property {number} PUNCTUATION=2 PUNCTUATION value\n     */\n    SdkTranscriptItem.Type = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[1] = \"PRONUNCIATION\"] = 1;\n        values[valuesById[2] = \"PUNCTUATION\"] = 2;\n        return values;\n    })();\n\n    return SdkTranscriptItem;\n})();\n\n$root.SdkTranscriptEntity = (function() {\n\n    /**\n     * Properties of a SdkTranscriptEntity.\n     * @exports ISdkTranscriptEntity\n     * @interface ISdkTranscriptEntity\n     * @property {string|null} [category] SdkTranscriptEntity category\n     * @property {number|null} [confidence] SdkTranscriptEntity confidence\n     * @property {string|null} [content] SdkTranscriptEntity content\n     * @property {number|Long|null} [endTime] SdkTranscriptEntity endTime\n     * @property {number|Long|null} [startTime] SdkTranscriptEntity startTime\n     * @property {string|null} [type] SdkTranscriptEntity type\n     */\n\n    /**\n     * Constructs a new SdkTranscriptEntity.\n     * @exports SdkTranscriptEntity\n     * @classdesc Represents a SdkTranscriptEntity.\n     * @implements ISdkTranscriptEntity\n     * @constructor\n     * @param {ISdkTranscriptEntity=} [properties] Properties to set\n     */\n    function SdkTranscriptEntity(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkTranscriptEntity category.\n     * @member {string} category\n     * @memberof SdkTranscriptEntity\n     * @instance\n     */\n    SdkTranscriptEntity.prototype.category = \"\";\n\n    /**\n     * SdkTranscriptEntity confidence.\n     * @member {number} confidence\n     * @memberof SdkTranscriptEntity\n     * @instance\n     */\n    SdkTranscriptEntity.prototype.confidence = 0;\n\n    /**\n     * SdkTranscriptEntity content.\n     * @member {string} content\n     * @memberof SdkTranscriptEntity\n     * @instance\n     */\n    SdkTranscriptEntity.prototype.content = \"\";\n\n    /**\n     * SdkTranscriptEntity endTime.\n     * @member {number|Long} endTime\n     * @memberof SdkTranscriptEntity\n     * @instance\n     */\n    SdkTranscriptEntity.prototype.endTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * SdkTranscriptEntity startTime.\n     * @member {number|Long} startTime\n     * @memberof SdkTranscriptEntity\n     * @instance\n     */\n    SdkTranscriptEntity.prototype.startTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * SdkTranscriptEntity type.\n     * @member {string} type\n     * @memberof SdkTranscriptEntity\n     * @instance\n     */\n    SdkTranscriptEntity.prototype.type = \"\";\n\n    /**\n     * Creates a new SdkTranscriptEntity instance using the specified properties.\n     * @function create\n     * @memberof SdkTranscriptEntity\n     * @static\n     * @param {ISdkTranscriptEntity=} [properties] Properties to set\n     * @returns {SdkTranscriptEntity} SdkTranscriptEntity instance\n     */\n    SdkTranscriptEntity.create = function create(properties) {\n        return new SdkTranscriptEntity(properties);\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptEntity message. Does not implicitly {@link SdkTranscriptEntity.verify|verify} messages.\n     * @function encode\n     * @memberof SdkTranscriptEntity\n     * @static\n     * @param {ISdkTranscriptEntity} message SdkTranscriptEntity message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptEntity.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.category != null && Object.hasOwnProperty.call(message, \"category\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.category);\n        if (message.confidence != null && Object.hasOwnProperty.call(message, \"confidence\"))\n            writer.uint32(/* id 2, wireType 1 =*/17).double(message.confidence);\n        if (message.content != null && Object.hasOwnProperty.call(message, \"content\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.content);\n        if (message.endTime != null && Object.hasOwnProperty.call(message, \"endTime\"))\n            writer.uint32(/* id 4, wireType 0 =*/32).int64(message.endTime);\n        if (message.startTime != null && Object.hasOwnProperty.call(message, \"startTime\"))\n            writer.uint32(/* id 5, wireType 0 =*/40).int64(message.startTime);\n        if (message.type != null && Object.hasOwnProperty.call(message, \"type\"))\n            writer.uint32(/* id 6, wireType 2 =*/50).string(message.type);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptEntity message, length delimited. Does not implicitly {@link SdkTranscriptEntity.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkTranscriptEntity\n     * @static\n     * @param {ISdkTranscriptEntity} message SdkTranscriptEntity message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptEntity.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkTranscriptEntity message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkTranscriptEntity\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkTranscriptEntity} SdkTranscriptEntity\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptEntity.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkTranscriptEntity();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.category = reader.string();\n                break;\n            case 2:\n                message.confidence = reader.double();\n                break;\n            case 3:\n                message.content = reader.string();\n                break;\n            case 4:\n                message.endTime = reader.int64();\n                break;\n            case 5:\n                message.startTime = reader.int64();\n                break;\n            case 6:\n                message.type = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkTranscriptEntity message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkTranscriptEntity\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkTranscriptEntity} SdkTranscriptEntity\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptEntity.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkTranscriptEntity message.\n     * @function verify\n     * @memberof SdkTranscriptEntity\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkTranscriptEntity.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.category != null && message.hasOwnProperty(\"category\"))\n            if (!$util.isString(message.category))\n                return \"category: string expected\";\n        if (message.confidence != null && message.hasOwnProperty(\"confidence\"))\n            if (typeof message.confidence !== \"number\")\n                return \"confidence: number expected\";\n        if (message.content != null && message.hasOwnProperty(\"content\"))\n            if (!$util.isString(message.content))\n                return \"content: string expected\";\n        if (message.endTime != null && message.hasOwnProperty(\"endTime\"))\n            if (!$util.isInteger(message.endTime) && !(message.endTime && $util.isInteger(message.endTime.low) && $util.isInteger(message.endTime.high)))\n                return \"endTime: integer|Long expected\";\n        if (message.startTime != null && message.hasOwnProperty(\"startTime\"))\n            if (!$util.isInteger(message.startTime) && !(message.startTime && $util.isInteger(message.startTime.low) && $util.isInteger(message.startTime.high)))\n                return \"startTime: integer|Long expected\";\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            if (!$util.isString(message.type))\n                return \"type: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkTranscriptEntity message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkTranscriptEntity\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkTranscriptEntity} SdkTranscriptEntity\n     */\n    SdkTranscriptEntity.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkTranscriptEntity)\n            return object;\n        var message = new $root.SdkTranscriptEntity();\n        if (object.category != null)\n            message.category = String(object.category);\n        if (object.confidence != null)\n            message.confidence = Number(object.confidence);\n        if (object.content != null)\n            message.content = String(object.content);\n        if (object.endTime != null)\n            if ($util.Long)\n                (message.endTime = $util.Long.fromValue(object.endTime)).unsigned = false;\n            else if (typeof object.endTime === \"string\")\n                message.endTime = parseInt(object.endTime, 10);\n            else if (typeof object.endTime === \"number\")\n                message.endTime = object.endTime;\n            else if (typeof object.endTime === \"object\")\n                message.endTime = new $util.LongBits(object.endTime.low >>> 0, object.endTime.high >>> 0).toNumber();\n        if (object.startTime != null)\n            if ($util.Long)\n                (message.startTime = $util.Long.fromValue(object.startTime)).unsigned = false;\n            else if (typeof object.startTime === \"string\")\n                message.startTime = parseInt(object.startTime, 10);\n            else if (typeof object.startTime === \"number\")\n                message.startTime = object.startTime;\n            else if (typeof object.startTime === \"object\")\n                message.startTime = new $util.LongBits(object.startTime.low >>> 0, object.startTime.high >>> 0).toNumber();\n        if (object.type != null)\n            message.type = String(object.type);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkTranscriptEntity message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkTranscriptEntity\n     * @static\n     * @param {SdkTranscriptEntity} message SdkTranscriptEntity\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkTranscriptEntity.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.category = \"\";\n            object.confidence = 0;\n            object.content = \"\";\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.endTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.endTime = options.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.startTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.startTime = options.longs === String ? \"0\" : 0;\n            object.type = \"\";\n        }\n        if (message.category != null && message.hasOwnProperty(\"category\"))\n            object.category = message.category;\n        if (message.confidence != null && message.hasOwnProperty(\"confidence\"))\n            object.confidence = options.json && !isFinite(message.confidence) ? String(message.confidence) : message.confidence;\n        if (message.content != null && message.hasOwnProperty(\"content\"))\n            object.content = message.content;\n        if (message.endTime != null && message.hasOwnProperty(\"endTime\"))\n            if (typeof message.endTime === \"number\")\n                object.endTime = options.longs === String ? String(message.endTime) : message.endTime;\n            else\n                object.endTime = options.longs === String ? $util.Long.prototype.toString.call(message.endTime) : options.longs === Number ? new $util.LongBits(message.endTime.low >>> 0, message.endTime.high >>> 0).toNumber() : message.endTime;\n        if (message.startTime != null && message.hasOwnProperty(\"startTime\"))\n            if (typeof message.startTime === \"number\")\n                object.startTime = options.longs === String ? String(message.startTime) : message.startTime;\n            else\n                object.startTime = options.longs === String ? $util.Long.prototype.toString.call(message.startTime) : options.longs === Number ? new $util.LongBits(message.startTime.low >>> 0, message.startTime.high >>> 0).toNumber() : message.startTime;\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            object.type = message.type;\n        return object;\n    };\n\n    /**\n     * Converts this SdkTranscriptEntity to JSON.\n     * @function toJSON\n     * @memberof SdkTranscriptEntity\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkTranscriptEntity.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkTranscriptEntity;\n})();\n\n$root.SdkTranscriptAlternative = (function() {\n\n    /**\n     * Properties of a SdkTranscriptAlternative.\n     * @exports ISdkTranscriptAlternative\n     * @interface ISdkTranscriptAlternative\n     * @property {Array.<ISdkTranscriptItem>|null} [items] SdkTranscriptAlternative items\n     * @property {string|null} [transcript] SdkTranscriptAlternative transcript\n     * @property {Array.<ISdkTranscriptEntity>|null} [entities] SdkTranscriptAlternative entities\n     */\n\n    /**\n     * Constructs a new SdkTranscriptAlternative.\n     * @exports SdkTranscriptAlternative\n     * @classdesc Represents a SdkTranscriptAlternative.\n     * @implements ISdkTranscriptAlternative\n     * @constructor\n     * @param {ISdkTranscriptAlternative=} [properties] Properties to set\n     */\n    function SdkTranscriptAlternative(properties) {\n        this.items = [];\n        this.entities = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkTranscriptAlternative items.\n     * @member {Array.<ISdkTranscriptItem>} items\n     * @memberof SdkTranscriptAlternative\n     * @instance\n     */\n    SdkTranscriptAlternative.prototype.items = $util.emptyArray;\n\n    /**\n     * SdkTranscriptAlternative transcript.\n     * @member {string} transcript\n     * @memberof SdkTranscriptAlternative\n     * @instance\n     */\n    SdkTranscriptAlternative.prototype.transcript = \"\";\n\n    /**\n     * SdkTranscriptAlternative entities.\n     * @member {Array.<ISdkTranscriptEntity>} entities\n     * @memberof SdkTranscriptAlternative\n     * @instance\n     */\n    SdkTranscriptAlternative.prototype.entities = $util.emptyArray;\n\n    /**\n     * Creates a new SdkTranscriptAlternative instance using the specified properties.\n     * @function create\n     * @memberof SdkTranscriptAlternative\n     * @static\n     * @param {ISdkTranscriptAlternative=} [properties] Properties to set\n     * @returns {SdkTranscriptAlternative} SdkTranscriptAlternative instance\n     */\n    SdkTranscriptAlternative.create = function create(properties) {\n        return new SdkTranscriptAlternative(properties);\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptAlternative message. Does not implicitly {@link SdkTranscriptAlternative.verify|verify} messages.\n     * @function encode\n     * @memberof SdkTranscriptAlternative\n     * @static\n     * @param {ISdkTranscriptAlternative} message SdkTranscriptAlternative message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptAlternative.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.items != null && message.items.length)\n            for (var i = 0; i < message.items.length; ++i)\n                $root.SdkTranscriptItem.encode(message.items[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        if (message.transcript != null && Object.hasOwnProperty.call(message, \"transcript\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.transcript);\n        if (message.entities != null && message.entities.length)\n            for (var i = 0; i < message.entities.length; ++i)\n                $root.SdkTranscriptEntity.encode(message.entities[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptAlternative message, length delimited. Does not implicitly {@link SdkTranscriptAlternative.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkTranscriptAlternative\n     * @static\n     * @param {ISdkTranscriptAlternative} message SdkTranscriptAlternative message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptAlternative.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkTranscriptAlternative message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkTranscriptAlternative\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkTranscriptAlternative} SdkTranscriptAlternative\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptAlternative.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkTranscriptAlternative();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.items && message.items.length))\n                    message.items = [];\n                message.items.push($root.SdkTranscriptItem.decode(reader, reader.uint32()));\n                break;\n            case 2:\n                message.transcript = reader.string();\n                break;\n            case 3:\n                if (!(message.entities && message.entities.length))\n                    message.entities = [];\n                message.entities.push($root.SdkTranscriptEntity.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkTranscriptAlternative message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkTranscriptAlternative\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkTranscriptAlternative} SdkTranscriptAlternative\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptAlternative.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkTranscriptAlternative message.\n     * @function verify\n     * @memberof SdkTranscriptAlternative\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkTranscriptAlternative.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.items != null && message.hasOwnProperty(\"items\")) {\n            if (!Array.isArray(message.items))\n                return \"items: array expected\";\n            for (var i = 0; i < message.items.length; ++i) {\n                var error = $root.SdkTranscriptItem.verify(message.items[i]);\n                if (error)\n                    return \"items.\" + error;\n            }\n        }\n        if (message.transcript != null && message.hasOwnProperty(\"transcript\"))\n            if (!$util.isString(message.transcript))\n                return \"transcript: string expected\";\n        if (message.entities != null && message.hasOwnProperty(\"entities\")) {\n            if (!Array.isArray(message.entities))\n                return \"entities: array expected\";\n            for (var i = 0; i < message.entities.length; ++i) {\n                var error = $root.SdkTranscriptEntity.verify(message.entities[i]);\n                if (error)\n                    return \"entities.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkTranscriptAlternative message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkTranscriptAlternative\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkTranscriptAlternative} SdkTranscriptAlternative\n     */\n    SdkTranscriptAlternative.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkTranscriptAlternative)\n            return object;\n        var message = new $root.SdkTranscriptAlternative();\n        if (object.items) {\n            if (!Array.isArray(object.items))\n                throw TypeError(\".SdkTranscriptAlternative.items: array expected\");\n            message.items = [];\n            for (var i = 0; i < object.items.length; ++i) {\n                if (typeof object.items[i] !== \"object\")\n                    throw TypeError(\".SdkTranscriptAlternative.items: object expected\");\n                message.items[i] = $root.SdkTranscriptItem.fromObject(object.items[i]);\n            }\n        }\n        if (object.transcript != null)\n            message.transcript = String(object.transcript);\n        if (object.entities) {\n            if (!Array.isArray(object.entities))\n                throw TypeError(\".SdkTranscriptAlternative.entities: array expected\");\n            message.entities = [];\n            for (var i = 0; i < object.entities.length; ++i) {\n                if (typeof object.entities[i] !== \"object\")\n                    throw TypeError(\".SdkTranscriptAlternative.entities: object expected\");\n                message.entities[i] = $root.SdkTranscriptEntity.fromObject(object.entities[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkTranscriptAlternative message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkTranscriptAlternative\n     * @static\n     * @param {SdkTranscriptAlternative} message SdkTranscriptAlternative\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkTranscriptAlternative.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.items = [];\n            object.entities = [];\n        }\n        if (options.defaults)\n            object.transcript = \"\";\n        if (message.items && message.items.length) {\n            object.items = [];\n            for (var j = 0; j < message.items.length; ++j)\n                object.items[j] = $root.SdkTranscriptItem.toObject(message.items[j], options);\n        }\n        if (message.transcript != null && message.hasOwnProperty(\"transcript\"))\n            object.transcript = message.transcript;\n        if (message.entities && message.entities.length) {\n            object.entities = [];\n            for (var j = 0; j < message.entities.length; ++j)\n                object.entities[j] = $root.SdkTranscriptEntity.toObject(message.entities[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkTranscriptAlternative to JSON.\n     * @function toJSON\n     * @memberof SdkTranscriptAlternative\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkTranscriptAlternative.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkTranscriptAlternative;\n})();\n\n$root.SdkTranscriptLanguageWithScore = (function() {\n\n    /**\n     * Properties of a SdkTranscriptLanguageWithScore.\n     * @exports ISdkTranscriptLanguageWithScore\n     * @interface ISdkTranscriptLanguageWithScore\n     * @property {string|null} [languageCode] SdkTranscriptLanguageWithScore languageCode\n     * @property {number|null} [score] SdkTranscriptLanguageWithScore score\n     */\n\n    /**\n     * Constructs a new SdkTranscriptLanguageWithScore.\n     * @exports SdkTranscriptLanguageWithScore\n     * @classdesc Represents a SdkTranscriptLanguageWithScore.\n     * @implements ISdkTranscriptLanguageWithScore\n     * @constructor\n     * @param {ISdkTranscriptLanguageWithScore=} [properties] Properties to set\n     */\n    function SdkTranscriptLanguageWithScore(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkTranscriptLanguageWithScore languageCode.\n     * @member {string} languageCode\n     * @memberof SdkTranscriptLanguageWithScore\n     * @instance\n     */\n    SdkTranscriptLanguageWithScore.prototype.languageCode = \"\";\n\n    /**\n     * SdkTranscriptLanguageWithScore score.\n     * @member {number} score\n     * @memberof SdkTranscriptLanguageWithScore\n     * @instance\n     */\n    SdkTranscriptLanguageWithScore.prototype.score = 0;\n\n    /**\n     * Creates a new SdkTranscriptLanguageWithScore instance using the specified properties.\n     * @function create\n     * @memberof SdkTranscriptLanguageWithScore\n     * @static\n     * @param {ISdkTranscriptLanguageWithScore=} [properties] Properties to set\n     * @returns {SdkTranscriptLanguageWithScore} SdkTranscriptLanguageWithScore instance\n     */\n    SdkTranscriptLanguageWithScore.create = function create(properties) {\n        return new SdkTranscriptLanguageWithScore(properties);\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptLanguageWithScore message. Does not implicitly {@link SdkTranscriptLanguageWithScore.verify|verify} messages.\n     * @function encode\n     * @memberof SdkTranscriptLanguageWithScore\n     * @static\n     * @param {ISdkTranscriptLanguageWithScore} message SdkTranscriptLanguageWithScore message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptLanguageWithScore.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.languageCode != null && Object.hasOwnProperty.call(message, \"languageCode\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.languageCode);\n        if (message.score != null && Object.hasOwnProperty.call(message, \"score\"))\n            writer.uint32(/* id 2, wireType 1 =*/17).double(message.score);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptLanguageWithScore message, length delimited. Does not implicitly {@link SdkTranscriptLanguageWithScore.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkTranscriptLanguageWithScore\n     * @static\n     * @param {ISdkTranscriptLanguageWithScore} message SdkTranscriptLanguageWithScore message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptLanguageWithScore.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkTranscriptLanguageWithScore message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkTranscriptLanguageWithScore\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkTranscriptLanguageWithScore} SdkTranscriptLanguageWithScore\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptLanguageWithScore.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkTranscriptLanguageWithScore();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.languageCode = reader.string();\n                break;\n            case 2:\n                message.score = reader.double();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkTranscriptLanguageWithScore message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkTranscriptLanguageWithScore\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkTranscriptLanguageWithScore} SdkTranscriptLanguageWithScore\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptLanguageWithScore.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkTranscriptLanguageWithScore message.\n     * @function verify\n     * @memberof SdkTranscriptLanguageWithScore\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkTranscriptLanguageWithScore.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.languageCode != null && message.hasOwnProperty(\"languageCode\"))\n            if (!$util.isString(message.languageCode))\n                return \"languageCode: string expected\";\n        if (message.score != null && message.hasOwnProperty(\"score\"))\n            if (typeof message.score !== \"number\")\n                return \"score: number expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkTranscriptLanguageWithScore message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkTranscriptLanguageWithScore\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkTranscriptLanguageWithScore} SdkTranscriptLanguageWithScore\n     */\n    SdkTranscriptLanguageWithScore.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkTranscriptLanguageWithScore)\n            return object;\n        var message = new $root.SdkTranscriptLanguageWithScore();\n        if (object.languageCode != null)\n            message.languageCode = String(object.languageCode);\n        if (object.score != null)\n            message.score = Number(object.score);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkTranscriptLanguageWithScore message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkTranscriptLanguageWithScore\n     * @static\n     * @param {SdkTranscriptLanguageWithScore} message SdkTranscriptLanguageWithScore\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkTranscriptLanguageWithScore.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.languageCode = \"\";\n            object.score = 0;\n        }\n        if (message.languageCode != null && message.hasOwnProperty(\"languageCode\"))\n            object.languageCode = message.languageCode;\n        if (message.score != null && message.hasOwnProperty(\"score\"))\n            object.score = options.json && !isFinite(message.score) ? String(message.score) : message.score;\n        return object;\n    };\n\n    /**\n     * Converts this SdkTranscriptLanguageWithScore to JSON.\n     * @function toJSON\n     * @memberof SdkTranscriptLanguageWithScore\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkTranscriptLanguageWithScore.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkTranscriptLanguageWithScore;\n})();\n\n$root.SdkTranscriptResult = (function() {\n\n    /**\n     * Properties of a SdkTranscriptResult.\n     * @exports ISdkTranscriptResult\n     * @interface ISdkTranscriptResult\n     * @property {Array.<ISdkTranscriptAlternative>|null} [alternatives] SdkTranscriptResult alternatives\n     * @property {string|null} [channelId] SdkTranscriptResult channelId\n     * @property {number|Long|null} [endTime] SdkTranscriptResult endTime\n     * @property {boolean|null} [isPartial] SdkTranscriptResult isPartial\n     * @property {string|null} [resultId] SdkTranscriptResult resultId\n     * @property {number|Long|null} [startTime] SdkTranscriptResult startTime\n     * @property {string|null} [languageCode] SdkTranscriptResult languageCode\n     * @property {Array.<ISdkTranscriptLanguageWithScore>|null} [languageIdentification] SdkTranscriptResult languageIdentification\n     */\n\n    /**\n     * Constructs a new SdkTranscriptResult.\n     * @exports SdkTranscriptResult\n     * @classdesc Represents a SdkTranscriptResult.\n     * @implements ISdkTranscriptResult\n     * @constructor\n     * @param {ISdkTranscriptResult=} [properties] Properties to set\n     */\n    function SdkTranscriptResult(properties) {\n        this.alternatives = [];\n        this.languageIdentification = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkTranscriptResult alternatives.\n     * @member {Array.<ISdkTranscriptAlternative>} alternatives\n     * @memberof SdkTranscriptResult\n     * @instance\n     */\n    SdkTranscriptResult.prototype.alternatives = $util.emptyArray;\n\n    /**\n     * SdkTranscriptResult channelId.\n     * @member {string} channelId\n     * @memberof SdkTranscriptResult\n     * @instance\n     */\n    SdkTranscriptResult.prototype.channelId = \"\";\n\n    /**\n     * SdkTranscriptResult endTime.\n     * @member {number|Long} endTime\n     * @memberof SdkTranscriptResult\n     * @instance\n     */\n    SdkTranscriptResult.prototype.endTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * SdkTranscriptResult isPartial.\n     * @member {boolean} isPartial\n     * @memberof SdkTranscriptResult\n     * @instance\n     */\n    SdkTranscriptResult.prototype.isPartial = false;\n\n    /**\n     * SdkTranscriptResult resultId.\n     * @member {string} resultId\n     * @memberof SdkTranscriptResult\n     * @instance\n     */\n    SdkTranscriptResult.prototype.resultId = \"\";\n\n    /**\n     * SdkTranscriptResult startTime.\n     * @member {number|Long} startTime\n     * @memberof SdkTranscriptResult\n     * @instance\n     */\n    SdkTranscriptResult.prototype.startTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * SdkTranscriptResult languageCode.\n     * @member {string} languageCode\n     * @memberof SdkTranscriptResult\n     * @instance\n     */\n    SdkTranscriptResult.prototype.languageCode = \"\";\n\n    /**\n     * SdkTranscriptResult languageIdentification.\n     * @member {Array.<ISdkTranscriptLanguageWithScore>} languageIdentification\n     * @memberof SdkTranscriptResult\n     * @instance\n     */\n    SdkTranscriptResult.prototype.languageIdentification = $util.emptyArray;\n\n    /**\n     * Creates a new SdkTranscriptResult instance using the specified properties.\n     * @function create\n     * @memberof SdkTranscriptResult\n     * @static\n     * @param {ISdkTranscriptResult=} [properties] Properties to set\n     * @returns {SdkTranscriptResult} SdkTranscriptResult instance\n     */\n    SdkTranscriptResult.create = function create(properties) {\n        return new SdkTranscriptResult(properties);\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptResult message. Does not implicitly {@link SdkTranscriptResult.verify|verify} messages.\n     * @function encode\n     * @memberof SdkTranscriptResult\n     * @static\n     * @param {ISdkTranscriptResult} message SdkTranscriptResult message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptResult.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.alternatives != null && message.alternatives.length)\n            for (var i = 0; i < message.alternatives.length; ++i)\n                $root.SdkTranscriptAlternative.encode(message.alternatives[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        if (message.channelId != null && Object.hasOwnProperty.call(message, \"channelId\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.channelId);\n        if (message.endTime != null && Object.hasOwnProperty.call(message, \"endTime\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).int64(message.endTime);\n        if (message.isPartial != null && Object.hasOwnProperty.call(message, \"isPartial\"))\n            writer.uint32(/* id 4, wireType 0 =*/32).bool(message.isPartial);\n        if (message.resultId != null && Object.hasOwnProperty.call(message, \"resultId\"))\n            writer.uint32(/* id 5, wireType 2 =*/42).string(message.resultId);\n        if (message.startTime != null && Object.hasOwnProperty.call(message, \"startTime\"))\n            writer.uint32(/* id 6, wireType 0 =*/48).int64(message.startTime);\n        if (message.languageCode != null && Object.hasOwnProperty.call(message, \"languageCode\"))\n            writer.uint32(/* id 7, wireType 2 =*/58).string(message.languageCode);\n        if (message.languageIdentification != null && message.languageIdentification.length)\n            for (var i = 0; i < message.languageIdentification.length; ++i)\n                $root.SdkTranscriptLanguageWithScore.encode(message.languageIdentification[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptResult message, length delimited. Does not implicitly {@link SdkTranscriptResult.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkTranscriptResult\n     * @static\n     * @param {ISdkTranscriptResult} message SdkTranscriptResult message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptResult.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkTranscriptResult message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkTranscriptResult\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkTranscriptResult} SdkTranscriptResult\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptResult.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkTranscriptResult();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.alternatives && message.alternatives.length))\n                    message.alternatives = [];\n                message.alternatives.push($root.SdkTranscriptAlternative.decode(reader, reader.uint32()));\n                break;\n            case 2:\n                message.channelId = reader.string();\n                break;\n            case 3:\n                message.endTime = reader.int64();\n                break;\n            case 4:\n                message.isPartial = reader.bool();\n                break;\n            case 5:\n                message.resultId = reader.string();\n                break;\n            case 6:\n                message.startTime = reader.int64();\n                break;\n            case 7:\n                message.languageCode = reader.string();\n                break;\n            case 8:\n                if (!(message.languageIdentification && message.languageIdentification.length))\n                    message.languageIdentification = [];\n                message.languageIdentification.push($root.SdkTranscriptLanguageWithScore.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkTranscriptResult message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkTranscriptResult\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkTranscriptResult} SdkTranscriptResult\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptResult.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkTranscriptResult message.\n     * @function verify\n     * @memberof SdkTranscriptResult\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkTranscriptResult.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.alternatives != null && message.hasOwnProperty(\"alternatives\")) {\n            if (!Array.isArray(message.alternatives))\n                return \"alternatives: array expected\";\n            for (var i = 0; i < message.alternatives.length; ++i) {\n                var error = $root.SdkTranscriptAlternative.verify(message.alternatives[i]);\n                if (error)\n                    return \"alternatives.\" + error;\n            }\n        }\n        if (message.channelId != null && message.hasOwnProperty(\"channelId\"))\n            if (!$util.isString(message.channelId))\n                return \"channelId: string expected\";\n        if (message.endTime != null && message.hasOwnProperty(\"endTime\"))\n            if (!$util.isInteger(message.endTime) && !(message.endTime && $util.isInteger(message.endTime.low) && $util.isInteger(message.endTime.high)))\n                return \"endTime: integer|Long expected\";\n        if (message.isPartial != null && message.hasOwnProperty(\"isPartial\"))\n            if (typeof message.isPartial !== \"boolean\")\n                return \"isPartial: boolean expected\";\n        if (message.resultId != null && message.hasOwnProperty(\"resultId\"))\n            if (!$util.isString(message.resultId))\n                return \"resultId: string expected\";\n        if (message.startTime != null && message.hasOwnProperty(\"startTime\"))\n            if (!$util.isInteger(message.startTime) && !(message.startTime && $util.isInteger(message.startTime.low) && $util.isInteger(message.startTime.high)))\n                return \"startTime: integer|Long expected\";\n        if (message.languageCode != null && message.hasOwnProperty(\"languageCode\"))\n            if (!$util.isString(message.languageCode))\n                return \"languageCode: string expected\";\n        if (message.languageIdentification != null && message.hasOwnProperty(\"languageIdentification\")) {\n            if (!Array.isArray(message.languageIdentification))\n                return \"languageIdentification: array expected\";\n            for (var i = 0; i < message.languageIdentification.length; ++i) {\n                var error = $root.SdkTranscriptLanguageWithScore.verify(message.languageIdentification[i]);\n                if (error)\n                    return \"languageIdentification.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkTranscriptResult message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkTranscriptResult\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkTranscriptResult} SdkTranscriptResult\n     */\n    SdkTranscriptResult.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkTranscriptResult)\n            return object;\n        var message = new $root.SdkTranscriptResult();\n        if (object.alternatives) {\n            if (!Array.isArray(object.alternatives))\n                throw TypeError(\".SdkTranscriptResult.alternatives: array expected\");\n            message.alternatives = [];\n            for (var i = 0; i < object.alternatives.length; ++i) {\n                if (typeof object.alternatives[i] !== \"object\")\n                    throw TypeError(\".SdkTranscriptResult.alternatives: object expected\");\n                message.alternatives[i] = $root.SdkTranscriptAlternative.fromObject(object.alternatives[i]);\n            }\n        }\n        if (object.channelId != null)\n            message.channelId = String(object.channelId);\n        if (object.endTime != null)\n            if ($util.Long)\n                (message.endTime = $util.Long.fromValue(object.endTime)).unsigned = false;\n            else if (typeof object.endTime === \"string\")\n                message.endTime = parseInt(object.endTime, 10);\n            else if (typeof object.endTime === \"number\")\n                message.endTime = object.endTime;\n            else if (typeof object.endTime === \"object\")\n                message.endTime = new $util.LongBits(object.endTime.low >>> 0, object.endTime.high >>> 0).toNumber();\n        if (object.isPartial != null)\n            message.isPartial = Boolean(object.isPartial);\n        if (object.resultId != null)\n            message.resultId = String(object.resultId);\n        if (object.startTime != null)\n            if ($util.Long)\n                (message.startTime = $util.Long.fromValue(object.startTime)).unsigned = false;\n            else if (typeof object.startTime === \"string\")\n                message.startTime = parseInt(object.startTime, 10);\n            else if (typeof object.startTime === \"number\")\n                message.startTime = object.startTime;\n            else if (typeof object.startTime === \"object\")\n                message.startTime = new $util.LongBits(object.startTime.low >>> 0, object.startTime.high >>> 0).toNumber();\n        if (object.languageCode != null)\n            message.languageCode = String(object.languageCode);\n        if (object.languageIdentification) {\n            if (!Array.isArray(object.languageIdentification))\n                throw TypeError(\".SdkTranscriptResult.languageIdentification: array expected\");\n            message.languageIdentification = [];\n            for (var i = 0; i < object.languageIdentification.length; ++i) {\n                if (typeof object.languageIdentification[i] !== \"object\")\n                    throw TypeError(\".SdkTranscriptResult.languageIdentification: object expected\");\n                message.languageIdentification[i] = $root.SdkTranscriptLanguageWithScore.fromObject(object.languageIdentification[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkTranscriptResult message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkTranscriptResult\n     * @static\n     * @param {SdkTranscriptResult} message SdkTranscriptResult\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkTranscriptResult.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.alternatives = [];\n            object.languageIdentification = [];\n        }\n        if (options.defaults) {\n            object.channelId = \"\";\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.endTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.endTime = options.longs === String ? \"0\" : 0;\n            object.isPartial = false;\n            object.resultId = \"\";\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.startTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.startTime = options.longs === String ? \"0\" : 0;\n            object.languageCode = \"\";\n        }\n        if (message.alternatives && message.alternatives.length) {\n            object.alternatives = [];\n            for (var j = 0; j < message.alternatives.length; ++j)\n                object.alternatives[j] = $root.SdkTranscriptAlternative.toObject(message.alternatives[j], options);\n        }\n        if (message.channelId != null && message.hasOwnProperty(\"channelId\"))\n            object.channelId = message.channelId;\n        if (message.endTime != null && message.hasOwnProperty(\"endTime\"))\n            if (typeof message.endTime === \"number\")\n                object.endTime = options.longs === String ? String(message.endTime) : message.endTime;\n            else\n                object.endTime = options.longs === String ? $util.Long.prototype.toString.call(message.endTime) : options.longs === Number ? new $util.LongBits(message.endTime.low >>> 0, message.endTime.high >>> 0).toNumber() : message.endTime;\n        if (message.isPartial != null && message.hasOwnProperty(\"isPartial\"))\n            object.isPartial = message.isPartial;\n        if (message.resultId != null && message.hasOwnProperty(\"resultId\"))\n            object.resultId = message.resultId;\n        if (message.startTime != null && message.hasOwnProperty(\"startTime\"))\n            if (typeof message.startTime === \"number\")\n                object.startTime = options.longs === String ? String(message.startTime) : message.startTime;\n            else\n                object.startTime = options.longs === String ? $util.Long.prototype.toString.call(message.startTime) : options.longs === Number ? new $util.LongBits(message.startTime.low >>> 0, message.startTime.high >>> 0).toNumber() : message.startTime;\n        if (message.languageCode != null && message.hasOwnProperty(\"languageCode\"))\n            object.languageCode = message.languageCode;\n        if (message.languageIdentification && message.languageIdentification.length) {\n            object.languageIdentification = [];\n            for (var j = 0; j < message.languageIdentification.length; ++j)\n                object.languageIdentification[j] = $root.SdkTranscriptLanguageWithScore.toObject(message.languageIdentification[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkTranscriptResult to JSON.\n     * @function toJSON\n     * @memberof SdkTranscriptResult\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkTranscriptResult.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkTranscriptResult;\n})();\n\n$root.SdkTranscript = (function() {\n\n    /**\n     * Properties of a SdkTranscript.\n     * @exports ISdkTranscript\n     * @interface ISdkTranscript\n     * @property {Array.<ISdkTranscriptResult>|null} [results] SdkTranscript results\n     */\n\n    /**\n     * Constructs a new SdkTranscript.\n     * @exports SdkTranscript\n     * @classdesc Represents a SdkTranscript.\n     * @implements ISdkTranscript\n     * @constructor\n     * @param {ISdkTranscript=} [properties] Properties to set\n     */\n    function SdkTranscript(properties) {\n        this.results = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkTranscript results.\n     * @member {Array.<ISdkTranscriptResult>} results\n     * @memberof SdkTranscript\n     * @instance\n     */\n    SdkTranscript.prototype.results = $util.emptyArray;\n\n    /**\n     * Creates a new SdkTranscript instance using the specified properties.\n     * @function create\n     * @memberof SdkTranscript\n     * @static\n     * @param {ISdkTranscript=} [properties] Properties to set\n     * @returns {SdkTranscript} SdkTranscript instance\n     */\n    SdkTranscript.create = function create(properties) {\n        return new SdkTranscript(properties);\n    };\n\n    /**\n     * Encodes the specified SdkTranscript message. Does not implicitly {@link SdkTranscript.verify|verify} messages.\n     * @function encode\n     * @memberof SdkTranscript\n     * @static\n     * @param {ISdkTranscript} message SdkTranscript message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscript.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.results != null && message.results.length)\n            for (var i = 0; i < message.results.length; ++i)\n                $root.SdkTranscriptResult.encode(message.results[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkTranscript message, length delimited. Does not implicitly {@link SdkTranscript.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkTranscript\n     * @static\n     * @param {ISdkTranscript} message SdkTranscript message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscript.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkTranscript message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkTranscript\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkTranscript} SdkTranscript\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscript.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkTranscript();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.results && message.results.length))\n                    message.results = [];\n                message.results.push($root.SdkTranscriptResult.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkTranscript message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkTranscript\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkTranscript} SdkTranscript\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscript.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkTranscript message.\n     * @function verify\n     * @memberof SdkTranscript\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkTranscript.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.results != null && message.hasOwnProperty(\"results\")) {\n            if (!Array.isArray(message.results))\n                return \"results: array expected\";\n            for (var i = 0; i < message.results.length; ++i) {\n                var error = $root.SdkTranscriptResult.verify(message.results[i]);\n                if (error)\n                    return \"results.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkTranscript message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkTranscript\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkTranscript} SdkTranscript\n     */\n    SdkTranscript.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkTranscript)\n            return object;\n        var message = new $root.SdkTranscript();\n        if (object.results) {\n            if (!Array.isArray(object.results))\n                throw TypeError(\".SdkTranscript.results: array expected\");\n            message.results = [];\n            for (var i = 0; i < object.results.length; ++i) {\n                if (typeof object.results[i] !== \"object\")\n                    throw TypeError(\".SdkTranscript.results: object expected\");\n                message.results[i] = $root.SdkTranscriptResult.fromObject(object.results[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkTranscript message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkTranscript\n     * @static\n     * @param {SdkTranscript} message SdkTranscript\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkTranscript.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.results = [];\n        if (message.results && message.results.length) {\n            object.results = [];\n            for (var j = 0; j < message.results.length; ++j)\n                object.results[j] = $root.SdkTranscriptResult.toObject(message.results[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkTranscript to JSON.\n     * @function toJSON\n     * @memberof SdkTranscript\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkTranscript.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkTranscript;\n})();\n\n$root.SdkTranscriptionStatus = (function() {\n\n    /**\n     * Properties of a SdkTranscriptionStatus.\n     * @exports ISdkTranscriptionStatus\n     * @interface ISdkTranscriptionStatus\n     * @property {SdkTranscriptionStatus.Type|null} [type] SdkTranscriptionStatus type\n     * @property {number|Long|null} [eventTime] SdkTranscriptionStatus eventTime\n     * @property {string|null} [transcriptionRegion] SdkTranscriptionStatus transcriptionRegion\n     * @property {string|null} [transcriptionConfiguration] SdkTranscriptionStatus transcriptionConfiguration\n     * @property {string|null} [message] SdkTranscriptionStatus message\n     */\n\n    /**\n     * Constructs a new SdkTranscriptionStatus.\n     * @exports SdkTranscriptionStatus\n     * @classdesc Represents a SdkTranscriptionStatus.\n     * @implements ISdkTranscriptionStatus\n     * @constructor\n     * @param {ISdkTranscriptionStatus=} [properties] Properties to set\n     */\n    function SdkTranscriptionStatus(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkTranscriptionStatus type.\n     * @member {SdkTranscriptionStatus.Type} type\n     * @memberof SdkTranscriptionStatus\n     * @instance\n     */\n    SdkTranscriptionStatus.prototype.type = 1;\n\n    /**\n     * SdkTranscriptionStatus eventTime.\n     * @member {number|Long} eventTime\n     * @memberof SdkTranscriptionStatus\n     * @instance\n     */\n    SdkTranscriptionStatus.prototype.eventTime = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * SdkTranscriptionStatus transcriptionRegion.\n     * @member {string} transcriptionRegion\n     * @memberof SdkTranscriptionStatus\n     * @instance\n     */\n    SdkTranscriptionStatus.prototype.transcriptionRegion = \"\";\n\n    /**\n     * SdkTranscriptionStatus transcriptionConfiguration.\n     * @member {string} transcriptionConfiguration\n     * @memberof SdkTranscriptionStatus\n     * @instance\n     */\n    SdkTranscriptionStatus.prototype.transcriptionConfiguration = \"\";\n\n    /**\n     * SdkTranscriptionStatus message.\n     * @member {string} message\n     * @memberof SdkTranscriptionStatus\n     * @instance\n     */\n    SdkTranscriptionStatus.prototype.message = \"\";\n\n    /**\n     * Creates a new SdkTranscriptionStatus instance using the specified properties.\n     * @function create\n     * @memberof SdkTranscriptionStatus\n     * @static\n     * @param {ISdkTranscriptionStatus=} [properties] Properties to set\n     * @returns {SdkTranscriptionStatus} SdkTranscriptionStatus instance\n     */\n    SdkTranscriptionStatus.create = function create(properties) {\n        return new SdkTranscriptionStatus(properties);\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptionStatus message. Does not implicitly {@link SdkTranscriptionStatus.verify|verify} messages.\n     * @function encode\n     * @memberof SdkTranscriptionStatus\n     * @static\n     * @param {ISdkTranscriptionStatus} message SdkTranscriptionStatus message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptionStatus.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.type != null && Object.hasOwnProperty.call(message, \"type\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);\n        if (message.eventTime != null && Object.hasOwnProperty.call(message, \"eventTime\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).int64(message.eventTime);\n        if (message.transcriptionRegion != null && Object.hasOwnProperty.call(message, \"transcriptionRegion\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.transcriptionRegion);\n        if (message.transcriptionConfiguration != null && Object.hasOwnProperty.call(message, \"transcriptionConfiguration\"))\n            writer.uint32(/* id 4, wireType 2 =*/34).string(message.transcriptionConfiguration);\n        if (message.message != null && Object.hasOwnProperty.call(message, \"message\"))\n            writer.uint32(/* id 5, wireType 2 =*/42).string(message.message);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptionStatus message, length delimited. Does not implicitly {@link SdkTranscriptionStatus.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkTranscriptionStatus\n     * @static\n     * @param {ISdkTranscriptionStatus} message SdkTranscriptionStatus message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptionStatus.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkTranscriptionStatus message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkTranscriptionStatus\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkTranscriptionStatus} SdkTranscriptionStatus\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptionStatus.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkTranscriptionStatus();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.type = reader.int32();\n                break;\n            case 2:\n                message.eventTime = reader.int64();\n                break;\n            case 3:\n                message.transcriptionRegion = reader.string();\n                break;\n            case 4:\n                message.transcriptionConfiguration = reader.string();\n                break;\n            case 5:\n                message.message = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkTranscriptionStatus message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkTranscriptionStatus\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkTranscriptionStatus} SdkTranscriptionStatus\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptionStatus.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkTranscriptionStatus message.\n     * @function verify\n     * @memberof SdkTranscriptionStatus\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkTranscriptionStatus.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            switch (message.type) {\n            default:\n                return \"type: enum value expected\";\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n                break;\n            }\n        if (message.eventTime != null && message.hasOwnProperty(\"eventTime\"))\n            if (!$util.isInteger(message.eventTime) && !(message.eventTime && $util.isInteger(message.eventTime.low) && $util.isInteger(message.eventTime.high)))\n                return \"eventTime: integer|Long expected\";\n        if (message.transcriptionRegion != null && message.hasOwnProperty(\"transcriptionRegion\"))\n            if (!$util.isString(message.transcriptionRegion))\n                return \"transcriptionRegion: string expected\";\n        if (message.transcriptionConfiguration != null && message.hasOwnProperty(\"transcriptionConfiguration\"))\n            if (!$util.isString(message.transcriptionConfiguration))\n                return \"transcriptionConfiguration: string expected\";\n        if (message.message != null && message.hasOwnProperty(\"message\"))\n            if (!$util.isString(message.message))\n                return \"message: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkTranscriptionStatus message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkTranscriptionStatus\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkTranscriptionStatus} SdkTranscriptionStatus\n     */\n    SdkTranscriptionStatus.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkTranscriptionStatus)\n            return object;\n        var message = new $root.SdkTranscriptionStatus();\n        switch (object.type) {\n        case \"STARTED\":\n        case 1:\n            message.type = 1;\n            break;\n        case \"INTERRUPTED\":\n        case 2:\n            message.type = 2;\n            break;\n        case \"RESUMED\":\n        case 3:\n            message.type = 3;\n            break;\n        case \"STOPPED\":\n        case 4:\n            message.type = 4;\n            break;\n        case \"FAILED\":\n        case 5:\n            message.type = 5;\n            break;\n        }\n        if (object.eventTime != null)\n            if ($util.Long)\n                (message.eventTime = $util.Long.fromValue(object.eventTime)).unsigned = false;\n            else if (typeof object.eventTime === \"string\")\n                message.eventTime = parseInt(object.eventTime, 10);\n            else if (typeof object.eventTime === \"number\")\n                message.eventTime = object.eventTime;\n            else if (typeof object.eventTime === \"object\")\n                message.eventTime = new $util.LongBits(object.eventTime.low >>> 0, object.eventTime.high >>> 0).toNumber();\n        if (object.transcriptionRegion != null)\n            message.transcriptionRegion = String(object.transcriptionRegion);\n        if (object.transcriptionConfiguration != null)\n            message.transcriptionConfiguration = String(object.transcriptionConfiguration);\n        if (object.message != null)\n            message.message = String(object.message);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkTranscriptionStatus message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkTranscriptionStatus\n     * @static\n     * @param {SdkTranscriptionStatus} message SdkTranscriptionStatus\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkTranscriptionStatus.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.type = options.enums === String ? \"STARTED\" : 1;\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.eventTime = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.eventTime = options.longs === String ? \"0\" : 0;\n            object.transcriptionRegion = \"\";\n            object.transcriptionConfiguration = \"\";\n            object.message = \"\";\n        }\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            object.type = options.enums === String ? $root.SdkTranscriptionStatus.Type[message.type] : message.type;\n        if (message.eventTime != null && message.hasOwnProperty(\"eventTime\"))\n            if (typeof message.eventTime === \"number\")\n                object.eventTime = options.longs === String ? String(message.eventTime) : message.eventTime;\n            else\n                object.eventTime = options.longs === String ? $util.Long.prototype.toString.call(message.eventTime) : options.longs === Number ? new $util.LongBits(message.eventTime.low >>> 0, message.eventTime.high >>> 0).toNumber() : message.eventTime;\n        if (message.transcriptionRegion != null && message.hasOwnProperty(\"transcriptionRegion\"))\n            object.transcriptionRegion = message.transcriptionRegion;\n        if (message.transcriptionConfiguration != null && message.hasOwnProperty(\"transcriptionConfiguration\"))\n            object.transcriptionConfiguration = message.transcriptionConfiguration;\n        if (message.message != null && message.hasOwnProperty(\"message\"))\n            object.message = message.message;\n        return object;\n    };\n\n    /**\n     * Converts this SdkTranscriptionStatus to JSON.\n     * @function toJSON\n     * @memberof SdkTranscriptionStatus\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkTranscriptionStatus.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * Type enum.\n     * @name SdkTranscriptionStatus.Type\n     * @enum {number}\n     * @property {number} STARTED=1 STARTED value\n     * @property {number} INTERRUPTED=2 INTERRUPTED value\n     * @property {number} RESUMED=3 RESUMED value\n     * @property {number} STOPPED=4 STOPPED value\n     * @property {number} FAILED=5 FAILED value\n     */\n    SdkTranscriptionStatus.Type = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[1] = \"STARTED\"] = 1;\n        values[valuesById[2] = \"INTERRUPTED\"] = 2;\n        values[valuesById[3] = \"RESUMED\"] = 3;\n        values[valuesById[4] = \"STOPPED\"] = 4;\n        values[valuesById[5] = \"FAILED\"] = 5;\n        return values;\n    })();\n\n    return SdkTranscriptionStatus;\n})();\n\n$root.SdkTranscriptEvent = (function() {\n\n    /**\n     * Properties of a SdkTranscriptEvent.\n     * @exports ISdkTranscriptEvent\n     * @interface ISdkTranscriptEvent\n     * @property {ISdkTranscriptionStatus|null} [status] SdkTranscriptEvent status\n     * @property {ISdkTranscript|null} [transcript] SdkTranscriptEvent transcript\n     */\n\n    /**\n     * Constructs a new SdkTranscriptEvent.\n     * @exports SdkTranscriptEvent\n     * @classdesc Represents a SdkTranscriptEvent.\n     * @implements ISdkTranscriptEvent\n     * @constructor\n     * @param {ISdkTranscriptEvent=} [properties] Properties to set\n     */\n    function SdkTranscriptEvent(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkTranscriptEvent status.\n     * @member {ISdkTranscriptionStatus|null|undefined} status\n     * @memberof SdkTranscriptEvent\n     * @instance\n     */\n    SdkTranscriptEvent.prototype.status = null;\n\n    /**\n     * SdkTranscriptEvent transcript.\n     * @member {ISdkTranscript|null|undefined} transcript\n     * @memberof SdkTranscriptEvent\n     * @instance\n     */\n    SdkTranscriptEvent.prototype.transcript = null;\n\n    // OneOf field names bound to virtual getters and setters\n    var $oneOfFields;\n\n    /**\n     * SdkTranscriptEvent Event.\n     * @member {\"status\"|\"transcript\"|undefined} Event\n     * @memberof SdkTranscriptEvent\n     * @instance\n     */\n    Object.defineProperty(SdkTranscriptEvent.prototype, \"Event\", {\n        get: $util.oneOfGetter($oneOfFields = [\"status\", \"transcript\"]),\n        set: $util.oneOfSetter($oneOfFields)\n    });\n\n    /**\n     * Creates a new SdkTranscriptEvent instance using the specified properties.\n     * @function create\n     * @memberof SdkTranscriptEvent\n     * @static\n     * @param {ISdkTranscriptEvent=} [properties] Properties to set\n     * @returns {SdkTranscriptEvent} SdkTranscriptEvent instance\n     */\n    SdkTranscriptEvent.create = function create(properties) {\n        return new SdkTranscriptEvent(properties);\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptEvent message. Does not implicitly {@link SdkTranscriptEvent.verify|verify} messages.\n     * @function encode\n     * @memberof SdkTranscriptEvent\n     * @static\n     * @param {ISdkTranscriptEvent} message SdkTranscriptEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptEvent.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.status != null && Object.hasOwnProperty.call(message, \"status\"))\n            $root.SdkTranscriptionStatus.encode(message.status, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        if (message.transcript != null && Object.hasOwnProperty.call(message, \"transcript\"))\n            $root.SdkTranscript.encode(message.transcript, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptEvent message, length delimited. Does not implicitly {@link SdkTranscriptEvent.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkTranscriptEvent\n     * @static\n     * @param {ISdkTranscriptEvent} message SdkTranscriptEvent message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptEvent.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkTranscriptEvent message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkTranscriptEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkTranscriptEvent} SdkTranscriptEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptEvent.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkTranscriptEvent();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.status = $root.SdkTranscriptionStatus.decode(reader, reader.uint32());\n                break;\n            case 2:\n                message.transcript = $root.SdkTranscript.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkTranscriptEvent message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkTranscriptEvent\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkTranscriptEvent} SdkTranscriptEvent\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptEvent.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkTranscriptEvent message.\n     * @function verify\n     * @memberof SdkTranscriptEvent\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkTranscriptEvent.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        var properties = {};\n        if (message.status != null && message.hasOwnProperty(\"status\")) {\n            properties.Event = 1;\n            {\n                var error = $root.SdkTranscriptionStatus.verify(message.status);\n                if (error)\n                    return \"status.\" + error;\n            }\n        }\n        if (message.transcript != null && message.hasOwnProperty(\"transcript\")) {\n            if (properties.Event === 1)\n                return \"Event: multiple values\";\n            properties.Event = 1;\n            {\n                var error = $root.SdkTranscript.verify(message.transcript);\n                if (error)\n                    return \"transcript.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkTranscriptEvent message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkTranscriptEvent\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkTranscriptEvent} SdkTranscriptEvent\n     */\n    SdkTranscriptEvent.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkTranscriptEvent)\n            return object;\n        var message = new $root.SdkTranscriptEvent();\n        if (object.status != null) {\n            if (typeof object.status !== \"object\")\n                throw TypeError(\".SdkTranscriptEvent.status: object expected\");\n            message.status = $root.SdkTranscriptionStatus.fromObject(object.status);\n        }\n        if (object.transcript != null) {\n            if (typeof object.transcript !== \"object\")\n                throw TypeError(\".SdkTranscriptEvent.transcript: object expected\");\n            message.transcript = $root.SdkTranscript.fromObject(object.transcript);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkTranscriptEvent message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkTranscriptEvent\n     * @static\n     * @param {SdkTranscriptEvent} message SdkTranscriptEvent\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkTranscriptEvent.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (message.status != null && message.hasOwnProperty(\"status\")) {\n            object.status = $root.SdkTranscriptionStatus.toObject(message.status, options);\n            if (options.oneofs)\n                object.Event = \"status\";\n        }\n        if (message.transcript != null && message.hasOwnProperty(\"transcript\")) {\n            object.transcript = $root.SdkTranscript.toObject(message.transcript, options);\n            if (options.oneofs)\n                object.Event = \"transcript\";\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkTranscriptEvent to JSON.\n     * @function toJSON\n     * @memberof SdkTranscriptEvent\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkTranscriptEvent.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkTranscriptEvent;\n})();\n\n$root.SdkTranscriptFrame = (function() {\n\n    /**\n     * Properties of a SdkTranscriptFrame.\n     * @exports ISdkTranscriptFrame\n     * @interface ISdkTranscriptFrame\n     * @property {Array.<ISdkTranscriptEvent>|null} [events] SdkTranscriptFrame events\n     */\n\n    /**\n     * Constructs a new SdkTranscriptFrame.\n     * @exports SdkTranscriptFrame\n     * @classdesc Represents a SdkTranscriptFrame.\n     * @implements ISdkTranscriptFrame\n     * @constructor\n     * @param {ISdkTranscriptFrame=} [properties] Properties to set\n     */\n    function SdkTranscriptFrame(properties) {\n        this.events = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkTranscriptFrame events.\n     * @member {Array.<ISdkTranscriptEvent>} events\n     * @memberof SdkTranscriptFrame\n     * @instance\n     */\n    SdkTranscriptFrame.prototype.events = $util.emptyArray;\n\n    /**\n     * Creates a new SdkTranscriptFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkTranscriptFrame\n     * @static\n     * @param {ISdkTranscriptFrame=} [properties] Properties to set\n     * @returns {SdkTranscriptFrame} SdkTranscriptFrame instance\n     */\n    SdkTranscriptFrame.create = function create(properties) {\n        return new SdkTranscriptFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptFrame message. Does not implicitly {@link SdkTranscriptFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkTranscriptFrame\n     * @static\n     * @param {ISdkTranscriptFrame} message SdkTranscriptFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.events != null && message.events.length)\n            for (var i = 0; i < message.events.length; ++i)\n                $root.SdkTranscriptEvent.encode(message.events[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkTranscriptFrame message, length delimited. Does not implicitly {@link SdkTranscriptFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkTranscriptFrame\n     * @static\n     * @param {ISdkTranscriptFrame} message SdkTranscriptFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTranscriptFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkTranscriptFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkTranscriptFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkTranscriptFrame} SdkTranscriptFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkTranscriptFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.events && message.events.length))\n                    message.events = [];\n                message.events.push($root.SdkTranscriptEvent.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkTranscriptFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkTranscriptFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkTranscriptFrame} SdkTranscriptFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTranscriptFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkTranscriptFrame message.\n     * @function verify\n     * @memberof SdkTranscriptFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkTranscriptFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.events != null && message.hasOwnProperty(\"events\")) {\n            if (!Array.isArray(message.events))\n                return \"events: array expected\";\n            for (var i = 0; i < message.events.length; ++i) {\n                var error = $root.SdkTranscriptEvent.verify(message.events[i]);\n                if (error)\n                    return \"events.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkTranscriptFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkTranscriptFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkTranscriptFrame} SdkTranscriptFrame\n     */\n    SdkTranscriptFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkTranscriptFrame)\n            return object;\n        var message = new $root.SdkTranscriptFrame();\n        if (object.events) {\n            if (!Array.isArray(object.events))\n                throw TypeError(\".SdkTranscriptFrame.events: array expected\");\n            message.events = [];\n            for (var i = 0; i < object.events.length; ++i) {\n                if (typeof object.events[i] !== \"object\")\n                    throw TypeError(\".SdkTranscriptFrame.events: object expected\");\n                message.events[i] = $root.SdkTranscriptEvent.fromObject(object.events[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkTranscriptFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkTranscriptFrame\n     * @static\n     * @param {SdkTranscriptFrame} message SdkTranscriptFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkTranscriptFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.events = [];\n        if (message.events && message.events.length) {\n            object.events = [];\n            for (var j = 0; j < message.events.length; ++j)\n                object.events[j] = $root.SdkTranscriptEvent.toObject(message.events[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkTranscriptFrame to JSON.\n     * @function toJSON\n     * @memberof SdkTranscriptFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkTranscriptFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkTranscriptFrame;\n})();\n\n$root.SdkRemoteVideoUpdateFrame = (function() {\n\n    /**\n     * Properties of a SdkRemoteVideoUpdateFrame.\n     * @exports ISdkRemoteVideoUpdateFrame\n     * @interface ISdkRemoteVideoUpdateFrame\n     * @property {Array.<ISdkVideoSubscriptionConfiguration>|null} [addedOrUpdatedVideoSubscriptions] SdkRemoteVideoUpdateFrame addedOrUpdatedVideoSubscriptions\n     * @property {Array.<string>|null} [removedVideoSubscriptionMids] SdkRemoteVideoUpdateFrame removedVideoSubscriptionMids\n     */\n\n    /**\n     * Constructs a new SdkRemoteVideoUpdateFrame.\n     * @exports SdkRemoteVideoUpdateFrame\n     * @classdesc Represents a SdkRemoteVideoUpdateFrame.\n     * @implements ISdkRemoteVideoUpdateFrame\n     * @constructor\n     * @param {ISdkRemoteVideoUpdateFrame=} [properties] Properties to set\n     */\n    function SdkRemoteVideoUpdateFrame(properties) {\n        this.addedOrUpdatedVideoSubscriptions = [];\n        this.removedVideoSubscriptionMids = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkRemoteVideoUpdateFrame addedOrUpdatedVideoSubscriptions.\n     * @member {Array.<ISdkVideoSubscriptionConfiguration>} addedOrUpdatedVideoSubscriptions\n     * @memberof SdkRemoteVideoUpdateFrame\n     * @instance\n     */\n    SdkRemoteVideoUpdateFrame.prototype.addedOrUpdatedVideoSubscriptions = $util.emptyArray;\n\n    /**\n     * SdkRemoteVideoUpdateFrame removedVideoSubscriptionMids.\n     * @member {Array.<string>} removedVideoSubscriptionMids\n     * @memberof SdkRemoteVideoUpdateFrame\n     * @instance\n     */\n    SdkRemoteVideoUpdateFrame.prototype.removedVideoSubscriptionMids = $util.emptyArray;\n\n    /**\n     * Creates a new SdkRemoteVideoUpdateFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkRemoteVideoUpdateFrame\n     * @static\n     * @param {ISdkRemoteVideoUpdateFrame=} [properties] Properties to set\n     * @returns {SdkRemoteVideoUpdateFrame} SdkRemoteVideoUpdateFrame instance\n     */\n    SdkRemoteVideoUpdateFrame.create = function create(properties) {\n        return new SdkRemoteVideoUpdateFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkRemoteVideoUpdateFrame message. Does not implicitly {@link SdkRemoteVideoUpdateFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkRemoteVideoUpdateFrame\n     * @static\n     * @param {ISdkRemoteVideoUpdateFrame} message SdkRemoteVideoUpdateFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkRemoteVideoUpdateFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.addedOrUpdatedVideoSubscriptions != null && message.addedOrUpdatedVideoSubscriptions.length)\n            for (var i = 0; i < message.addedOrUpdatedVideoSubscriptions.length; ++i)\n                $root.SdkVideoSubscriptionConfiguration.encode(message.addedOrUpdatedVideoSubscriptions[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        if (message.removedVideoSubscriptionMids != null && message.removedVideoSubscriptionMids.length)\n            for (var i = 0; i < message.removedVideoSubscriptionMids.length; ++i)\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.removedVideoSubscriptionMids[i]);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkRemoteVideoUpdateFrame message, length delimited. Does not implicitly {@link SdkRemoteVideoUpdateFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkRemoteVideoUpdateFrame\n     * @static\n     * @param {ISdkRemoteVideoUpdateFrame} message SdkRemoteVideoUpdateFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkRemoteVideoUpdateFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkRemoteVideoUpdateFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkRemoteVideoUpdateFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkRemoteVideoUpdateFrame} SdkRemoteVideoUpdateFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkRemoteVideoUpdateFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkRemoteVideoUpdateFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.addedOrUpdatedVideoSubscriptions && message.addedOrUpdatedVideoSubscriptions.length))\n                    message.addedOrUpdatedVideoSubscriptions = [];\n                message.addedOrUpdatedVideoSubscriptions.push($root.SdkVideoSubscriptionConfiguration.decode(reader, reader.uint32()));\n                break;\n            case 2:\n                if (!(message.removedVideoSubscriptionMids && message.removedVideoSubscriptionMids.length))\n                    message.removedVideoSubscriptionMids = [];\n                message.removedVideoSubscriptionMids.push(reader.string());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkRemoteVideoUpdateFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkRemoteVideoUpdateFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkRemoteVideoUpdateFrame} SdkRemoteVideoUpdateFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkRemoteVideoUpdateFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkRemoteVideoUpdateFrame message.\n     * @function verify\n     * @memberof SdkRemoteVideoUpdateFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkRemoteVideoUpdateFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.addedOrUpdatedVideoSubscriptions != null && message.hasOwnProperty(\"addedOrUpdatedVideoSubscriptions\")) {\n            if (!Array.isArray(message.addedOrUpdatedVideoSubscriptions))\n                return \"addedOrUpdatedVideoSubscriptions: array expected\";\n            for (var i = 0; i < message.addedOrUpdatedVideoSubscriptions.length; ++i) {\n                var error = $root.SdkVideoSubscriptionConfiguration.verify(message.addedOrUpdatedVideoSubscriptions[i]);\n                if (error)\n                    return \"addedOrUpdatedVideoSubscriptions.\" + error;\n            }\n        }\n        if (message.removedVideoSubscriptionMids != null && message.hasOwnProperty(\"removedVideoSubscriptionMids\")) {\n            if (!Array.isArray(message.removedVideoSubscriptionMids))\n                return \"removedVideoSubscriptionMids: array expected\";\n            for (var i = 0; i < message.removedVideoSubscriptionMids.length; ++i)\n                if (!$util.isString(message.removedVideoSubscriptionMids[i]))\n                    return \"removedVideoSubscriptionMids: string[] expected\";\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkRemoteVideoUpdateFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkRemoteVideoUpdateFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkRemoteVideoUpdateFrame} SdkRemoteVideoUpdateFrame\n     */\n    SdkRemoteVideoUpdateFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkRemoteVideoUpdateFrame)\n            return object;\n        var message = new $root.SdkRemoteVideoUpdateFrame();\n        if (object.addedOrUpdatedVideoSubscriptions) {\n            if (!Array.isArray(object.addedOrUpdatedVideoSubscriptions))\n                throw TypeError(\".SdkRemoteVideoUpdateFrame.addedOrUpdatedVideoSubscriptions: array expected\");\n            message.addedOrUpdatedVideoSubscriptions = [];\n            for (var i = 0; i < object.addedOrUpdatedVideoSubscriptions.length; ++i) {\n                if (typeof object.addedOrUpdatedVideoSubscriptions[i] !== \"object\")\n                    throw TypeError(\".SdkRemoteVideoUpdateFrame.addedOrUpdatedVideoSubscriptions: object expected\");\n                message.addedOrUpdatedVideoSubscriptions[i] = $root.SdkVideoSubscriptionConfiguration.fromObject(object.addedOrUpdatedVideoSubscriptions[i]);\n            }\n        }\n        if (object.removedVideoSubscriptionMids) {\n            if (!Array.isArray(object.removedVideoSubscriptionMids))\n                throw TypeError(\".SdkRemoteVideoUpdateFrame.removedVideoSubscriptionMids: array expected\");\n            message.removedVideoSubscriptionMids = [];\n            for (var i = 0; i < object.removedVideoSubscriptionMids.length; ++i)\n                message.removedVideoSubscriptionMids[i] = String(object.removedVideoSubscriptionMids[i]);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkRemoteVideoUpdateFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkRemoteVideoUpdateFrame\n     * @static\n     * @param {SdkRemoteVideoUpdateFrame} message SdkRemoteVideoUpdateFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkRemoteVideoUpdateFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.addedOrUpdatedVideoSubscriptions = [];\n            object.removedVideoSubscriptionMids = [];\n        }\n        if (message.addedOrUpdatedVideoSubscriptions && message.addedOrUpdatedVideoSubscriptions.length) {\n            object.addedOrUpdatedVideoSubscriptions = [];\n            for (var j = 0; j < message.addedOrUpdatedVideoSubscriptions.length; ++j)\n                object.addedOrUpdatedVideoSubscriptions[j] = $root.SdkVideoSubscriptionConfiguration.toObject(message.addedOrUpdatedVideoSubscriptions[j], options);\n        }\n        if (message.removedVideoSubscriptionMids && message.removedVideoSubscriptionMids.length) {\n            object.removedVideoSubscriptionMids = [];\n            for (var j = 0; j < message.removedVideoSubscriptionMids.length; ++j)\n                object.removedVideoSubscriptionMids[j] = message.removedVideoSubscriptionMids[j];\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkRemoteVideoUpdateFrame to JSON.\n     * @function toJSON\n     * @memberof SdkRemoteVideoUpdateFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkRemoteVideoUpdateFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkRemoteVideoUpdateFrame;\n})();\n\n$root.SdkVideoSubscriptionConfiguration = (function() {\n\n    /**\n     * Properties of a SdkVideoSubscriptionConfiguration.\n     * @exports ISdkVideoSubscriptionConfiguration\n     * @interface ISdkVideoSubscriptionConfiguration\n     * @property {string} mid SdkVideoSubscriptionConfiguration mid\n     * @property {string|null} [attendeeId] SdkVideoSubscriptionConfiguration attendeeId\n     * @property {number|null} [streamId] SdkVideoSubscriptionConfiguration streamId\n     * @property {number|null} [priority] SdkVideoSubscriptionConfiguration priority\n     * @property {number|null} [targetBitrateKbps] SdkVideoSubscriptionConfiguration targetBitrateKbps\n     * @property {number|null} [groupId] SdkVideoSubscriptionConfiguration groupId\n     */\n\n    /**\n     * Constructs a new SdkVideoSubscriptionConfiguration.\n     * @exports SdkVideoSubscriptionConfiguration\n     * @classdesc Represents a SdkVideoSubscriptionConfiguration.\n     * @implements ISdkVideoSubscriptionConfiguration\n     * @constructor\n     * @param {ISdkVideoSubscriptionConfiguration=} [properties] Properties to set\n     */\n    function SdkVideoSubscriptionConfiguration(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkVideoSubscriptionConfiguration mid.\n     * @member {string} mid\n     * @memberof SdkVideoSubscriptionConfiguration\n     * @instance\n     */\n    SdkVideoSubscriptionConfiguration.prototype.mid = \"\";\n\n    /**\n     * SdkVideoSubscriptionConfiguration attendeeId.\n     * @member {string} attendeeId\n     * @memberof SdkVideoSubscriptionConfiguration\n     * @instance\n     */\n    SdkVideoSubscriptionConfiguration.prototype.attendeeId = \"\";\n\n    /**\n     * SdkVideoSubscriptionConfiguration streamId.\n     * @member {number} streamId\n     * @memberof SdkVideoSubscriptionConfiguration\n     * @instance\n     */\n    SdkVideoSubscriptionConfiguration.prototype.streamId = 0;\n\n    /**\n     * SdkVideoSubscriptionConfiguration priority.\n     * @member {number} priority\n     * @memberof SdkVideoSubscriptionConfiguration\n     * @instance\n     */\n    SdkVideoSubscriptionConfiguration.prototype.priority = 0;\n\n    /**\n     * SdkVideoSubscriptionConfiguration targetBitrateKbps.\n     * @member {number} targetBitrateKbps\n     * @memberof SdkVideoSubscriptionConfiguration\n     * @instance\n     */\n    SdkVideoSubscriptionConfiguration.prototype.targetBitrateKbps = 0;\n\n    /**\n     * SdkVideoSubscriptionConfiguration groupId.\n     * @member {number} groupId\n     * @memberof SdkVideoSubscriptionConfiguration\n     * @instance\n     */\n    SdkVideoSubscriptionConfiguration.prototype.groupId = 0;\n\n    /**\n     * Creates a new SdkVideoSubscriptionConfiguration instance using the specified properties.\n     * @function create\n     * @memberof SdkVideoSubscriptionConfiguration\n     * @static\n     * @param {ISdkVideoSubscriptionConfiguration=} [properties] Properties to set\n     * @returns {SdkVideoSubscriptionConfiguration} SdkVideoSubscriptionConfiguration instance\n     */\n    SdkVideoSubscriptionConfiguration.create = function create(properties) {\n        return new SdkVideoSubscriptionConfiguration(properties);\n    };\n\n    /**\n     * Encodes the specified SdkVideoSubscriptionConfiguration message. Does not implicitly {@link SdkVideoSubscriptionConfiguration.verify|verify} messages.\n     * @function encode\n     * @memberof SdkVideoSubscriptionConfiguration\n     * @static\n     * @param {ISdkVideoSubscriptionConfiguration} message SdkVideoSubscriptionConfiguration message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkVideoSubscriptionConfiguration.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        writer.uint32(/* id 1, wireType 2 =*/10).string(message.mid);\n        if (message.attendeeId != null && Object.hasOwnProperty.call(message, \"attendeeId\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.attendeeId);\n        if (message.streamId != null && Object.hasOwnProperty.call(message, \"streamId\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.streamId);\n        if (message.priority != null && Object.hasOwnProperty.call(message, \"priority\"))\n            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.priority);\n        if (message.targetBitrateKbps != null && Object.hasOwnProperty.call(message, \"targetBitrateKbps\"))\n            writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.targetBitrateKbps);\n        if (message.groupId != null && Object.hasOwnProperty.call(message, \"groupId\"))\n            writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.groupId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkVideoSubscriptionConfiguration message, length delimited. Does not implicitly {@link SdkVideoSubscriptionConfiguration.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkVideoSubscriptionConfiguration\n     * @static\n     * @param {ISdkVideoSubscriptionConfiguration} message SdkVideoSubscriptionConfiguration message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkVideoSubscriptionConfiguration.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkVideoSubscriptionConfiguration message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkVideoSubscriptionConfiguration\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkVideoSubscriptionConfiguration} SdkVideoSubscriptionConfiguration\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkVideoSubscriptionConfiguration.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkVideoSubscriptionConfiguration();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.mid = reader.string();\n                break;\n            case 2:\n                message.attendeeId = reader.string();\n                break;\n            case 3:\n                message.streamId = reader.uint32();\n                break;\n            case 4:\n                message.priority = reader.uint32();\n                break;\n            case 5:\n                message.targetBitrateKbps = reader.uint32();\n                break;\n            case 6:\n                message.groupId = reader.uint32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        if (!message.hasOwnProperty(\"mid\"))\n            throw $util.ProtocolError(\"missing required 'mid'\", { instance: message });\n        return message;\n    };\n\n    /**\n     * Decodes a SdkVideoSubscriptionConfiguration message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkVideoSubscriptionConfiguration\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkVideoSubscriptionConfiguration} SdkVideoSubscriptionConfiguration\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkVideoSubscriptionConfiguration.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkVideoSubscriptionConfiguration message.\n     * @function verify\n     * @memberof SdkVideoSubscriptionConfiguration\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkVideoSubscriptionConfiguration.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (!$util.isString(message.mid))\n            return \"mid: string expected\";\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            if (!$util.isString(message.attendeeId))\n                return \"attendeeId: string expected\";\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            if (!$util.isInteger(message.streamId))\n                return \"streamId: integer expected\";\n        if (message.priority != null && message.hasOwnProperty(\"priority\"))\n            if (!$util.isInteger(message.priority))\n                return \"priority: integer expected\";\n        if (message.targetBitrateKbps != null && message.hasOwnProperty(\"targetBitrateKbps\"))\n            if (!$util.isInteger(message.targetBitrateKbps))\n                return \"targetBitrateKbps: integer expected\";\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            if (!$util.isInteger(message.groupId))\n                return \"groupId: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkVideoSubscriptionConfiguration message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkVideoSubscriptionConfiguration\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkVideoSubscriptionConfiguration} SdkVideoSubscriptionConfiguration\n     */\n    SdkVideoSubscriptionConfiguration.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkVideoSubscriptionConfiguration)\n            return object;\n        var message = new $root.SdkVideoSubscriptionConfiguration();\n        if (object.mid != null)\n            message.mid = String(object.mid);\n        if (object.attendeeId != null)\n            message.attendeeId = String(object.attendeeId);\n        if (object.streamId != null)\n            message.streamId = object.streamId >>> 0;\n        if (object.priority != null)\n            message.priority = object.priority >>> 0;\n        if (object.targetBitrateKbps != null)\n            message.targetBitrateKbps = object.targetBitrateKbps >>> 0;\n        if (object.groupId != null)\n            message.groupId = object.groupId >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkVideoSubscriptionConfiguration message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkVideoSubscriptionConfiguration\n     * @static\n     * @param {SdkVideoSubscriptionConfiguration} message SdkVideoSubscriptionConfiguration\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkVideoSubscriptionConfiguration.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.mid = \"\";\n            object.attendeeId = \"\";\n            object.streamId = 0;\n            object.priority = 0;\n            object.targetBitrateKbps = 0;\n            object.groupId = 0;\n        }\n        if (message.mid != null && message.hasOwnProperty(\"mid\"))\n            object.mid = message.mid;\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            object.attendeeId = message.attendeeId;\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            object.streamId = message.streamId;\n        if (message.priority != null && message.hasOwnProperty(\"priority\"))\n            object.priority = message.priority;\n        if (message.targetBitrateKbps != null && message.hasOwnProperty(\"targetBitrateKbps\"))\n            object.targetBitrateKbps = message.targetBitrateKbps;\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            object.groupId = message.groupId;\n        return object;\n    };\n\n    /**\n     * Converts this SdkVideoSubscriptionConfiguration to JSON.\n     * @function toJSON\n     * @memberof SdkVideoSubscriptionConfiguration\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkVideoSubscriptionConfiguration.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkVideoSubscriptionConfiguration;\n})();\n\n$root.SdkPrimaryMeetingJoinFrame = (function() {\n\n    /**\n     * Properties of a SdkPrimaryMeetingJoinFrame.\n     * @exports ISdkPrimaryMeetingJoinFrame\n     * @interface ISdkPrimaryMeetingJoinFrame\n     * @property {ISdkMeetingSessionCredentials|null} [credentials] SdkPrimaryMeetingJoinFrame credentials\n     */\n\n    /**\n     * Constructs a new SdkPrimaryMeetingJoinFrame.\n     * @exports SdkPrimaryMeetingJoinFrame\n     * @classdesc Represents a SdkPrimaryMeetingJoinFrame.\n     * @implements ISdkPrimaryMeetingJoinFrame\n     * @constructor\n     * @param {ISdkPrimaryMeetingJoinFrame=} [properties] Properties to set\n     */\n    function SdkPrimaryMeetingJoinFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkPrimaryMeetingJoinFrame credentials.\n     * @member {ISdkMeetingSessionCredentials|null|undefined} credentials\n     * @memberof SdkPrimaryMeetingJoinFrame\n     * @instance\n     */\n    SdkPrimaryMeetingJoinFrame.prototype.credentials = null;\n\n    /**\n     * Creates a new SdkPrimaryMeetingJoinFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkPrimaryMeetingJoinFrame\n     * @static\n     * @param {ISdkPrimaryMeetingJoinFrame=} [properties] Properties to set\n     * @returns {SdkPrimaryMeetingJoinFrame} SdkPrimaryMeetingJoinFrame instance\n     */\n    SdkPrimaryMeetingJoinFrame.create = function create(properties) {\n        return new SdkPrimaryMeetingJoinFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkPrimaryMeetingJoinFrame message. Does not implicitly {@link SdkPrimaryMeetingJoinFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkPrimaryMeetingJoinFrame\n     * @static\n     * @param {ISdkPrimaryMeetingJoinFrame} message SdkPrimaryMeetingJoinFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkPrimaryMeetingJoinFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.credentials != null && Object.hasOwnProperty.call(message, \"credentials\"))\n            $root.SdkMeetingSessionCredentials.encode(message.credentials, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkPrimaryMeetingJoinFrame message, length delimited. Does not implicitly {@link SdkPrimaryMeetingJoinFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkPrimaryMeetingJoinFrame\n     * @static\n     * @param {ISdkPrimaryMeetingJoinFrame} message SdkPrimaryMeetingJoinFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkPrimaryMeetingJoinFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkPrimaryMeetingJoinFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkPrimaryMeetingJoinFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkPrimaryMeetingJoinFrame} SdkPrimaryMeetingJoinFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkPrimaryMeetingJoinFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkPrimaryMeetingJoinFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.credentials = $root.SdkMeetingSessionCredentials.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkPrimaryMeetingJoinFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkPrimaryMeetingJoinFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkPrimaryMeetingJoinFrame} SdkPrimaryMeetingJoinFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkPrimaryMeetingJoinFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkPrimaryMeetingJoinFrame message.\n     * @function verify\n     * @memberof SdkPrimaryMeetingJoinFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkPrimaryMeetingJoinFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.credentials != null && message.hasOwnProperty(\"credentials\")) {\n            var error = $root.SdkMeetingSessionCredentials.verify(message.credentials);\n            if (error)\n                return \"credentials.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkPrimaryMeetingJoinFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkPrimaryMeetingJoinFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkPrimaryMeetingJoinFrame} SdkPrimaryMeetingJoinFrame\n     */\n    SdkPrimaryMeetingJoinFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkPrimaryMeetingJoinFrame)\n            return object;\n        var message = new $root.SdkPrimaryMeetingJoinFrame();\n        if (object.credentials != null) {\n            if (typeof object.credentials !== \"object\")\n                throw TypeError(\".SdkPrimaryMeetingJoinFrame.credentials: object expected\");\n            message.credentials = $root.SdkMeetingSessionCredentials.fromObject(object.credentials);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkPrimaryMeetingJoinFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkPrimaryMeetingJoinFrame\n     * @static\n     * @param {SdkPrimaryMeetingJoinFrame} message SdkPrimaryMeetingJoinFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkPrimaryMeetingJoinFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.credentials = null;\n        if (message.credentials != null && message.hasOwnProperty(\"credentials\"))\n            object.credentials = $root.SdkMeetingSessionCredentials.toObject(message.credentials, options);\n        return object;\n    };\n\n    /**\n     * Converts this SdkPrimaryMeetingJoinFrame to JSON.\n     * @function toJSON\n     * @memberof SdkPrimaryMeetingJoinFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkPrimaryMeetingJoinFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkPrimaryMeetingJoinFrame;\n})();\n\n$root.SdkPrimaryMeetingJoinAckFrame = (function() {\n\n    /**\n     * Properties of a SdkPrimaryMeetingJoinAckFrame.\n     * @exports ISdkPrimaryMeetingJoinAckFrame\n     * @interface ISdkPrimaryMeetingJoinAckFrame\n     */\n\n    /**\n     * Constructs a new SdkPrimaryMeetingJoinAckFrame.\n     * @exports SdkPrimaryMeetingJoinAckFrame\n     * @classdesc Represents a SdkPrimaryMeetingJoinAckFrame.\n     * @implements ISdkPrimaryMeetingJoinAckFrame\n     * @constructor\n     * @param {ISdkPrimaryMeetingJoinAckFrame=} [properties] Properties to set\n     */\n    function SdkPrimaryMeetingJoinAckFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Creates a new SdkPrimaryMeetingJoinAckFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkPrimaryMeetingJoinAckFrame\n     * @static\n     * @param {ISdkPrimaryMeetingJoinAckFrame=} [properties] Properties to set\n     * @returns {SdkPrimaryMeetingJoinAckFrame} SdkPrimaryMeetingJoinAckFrame instance\n     */\n    SdkPrimaryMeetingJoinAckFrame.create = function create(properties) {\n        return new SdkPrimaryMeetingJoinAckFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkPrimaryMeetingJoinAckFrame message. Does not implicitly {@link SdkPrimaryMeetingJoinAckFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkPrimaryMeetingJoinAckFrame\n     * @static\n     * @param {ISdkPrimaryMeetingJoinAckFrame} message SdkPrimaryMeetingJoinAckFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkPrimaryMeetingJoinAckFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkPrimaryMeetingJoinAckFrame message, length delimited. Does not implicitly {@link SdkPrimaryMeetingJoinAckFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkPrimaryMeetingJoinAckFrame\n     * @static\n     * @param {ISdkPrimaryMeetingJoinAckFrame} message SdkPrimaryMeetingJoinAckFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkPrimaryMeetingJoinAckFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkPrimaryMeetingJoinAckFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkPrimaryMeetingJoinAckFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkPrimaryMeetingJoinAckFrame} SdkPrimaryMeetingJoinAckFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkPrimaryMeetingJoinAckFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkPrimaryMeetingJoinAckFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkPrimaryMeetingJoinAckFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkPrimaryMeetingJoinAckFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkPrimaryMeetingJoinAckFrame} SdkPrimaryMeetingJoinAckFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkPrimaryMeetingJoinAckFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkPrimaryMeetingJoinAckFrame message.\n     * @function verify\n     * @memberof SdkPrimaryMeetingJoinAckFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkPrimaryMeetingJoinAckFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkPrimaryMeetingJoinAckFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkPrimaryMeetingJoinAckFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkPrimaryMeetingJoinAckFrame} SdkPrimaryMeetingJoinAckFrame\n     */\n    SdkPrimaryMeetingJoinAckFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkPrimaryMeetingJoinAckFrame)\n            return object;\n        return new $root.SdkPrimaryMeetingJoinAckFrame();\n    };\n\n    /**\n     * Creates a plain object from a SdkPrimaryMeetingJoinAckFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkPrimaryMeetingJoinAckFrame\n     * @static\n     * @param {SdkPrimaryMeetingJoinAckFrame} message SdkPrimaryMeetingJoinAckFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkPrimaryMeetingJoinAckFrame.toObject = function toObject() {\n        return {};\n    };\n\n    /**\n     * Converts this SdkPrimaryMeetingJoinAckFrame to JSON.\n     * @function toJSON\n     * @memberof SdkPrimaryMeetingJoinAckFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkPrimaryMeetingJoinAckFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkPrimaryMeetingJoinAckFrame;\n})();\n\n$root.SdkPrimaryMeetingLeaveFrame = (function() {\n\n    /**\n     * Properties of a SdkPrimaryMeetingLeaveFrame.\n     * @exports ISdkPrimaryMeetingLeaveFrame\n     * @interface ISdkPrimaryMeetingLeaveFrame\n     */\n\n    /**\n     * Constructs a new SdkPrimaryMeetingLeaveFrame.\n     * @exports SdkPrimaryMeetingLeaveFrame\n     * @classdesc Represents a SdkPrimaryMeetingLeaveFrame.\n     * @implements ISdkPrimaryMeetingLeaveFrame\n     * @constructor\n     * @param {ISdkPrimaryMeetingLeaveFrame=} [properties] Properties to set\n     */\n    function SdkPrimaryMeetingLeaveFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Creates a new SdkPrimaryMeetingLeaveFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkPrimaryMeetingLeaveFrame\n     * @static\n     * @param {ISdkPrimaryMeetingLeaveFrame=} [properties] Properties to set\n     * @returns {SdkPrimaryMeetingLeaveFrame} SdkPrimaryMeetingLeaveFrame instance\n     */\n    SdkPrimaryMeetingLeaveFrame.create = function create(properties) {\n        return new SdkPrimaryMeetingLeaveFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkPrimaryMeetingLeaveFrame message. Does not implicitly {@link SdkPrimaryMeetingLeaveFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkPrimaryMeetingLeaveFrame\n     * @static\n     * @param {ISdkPrimaryMeetingLeaveFrame} message SdkPrimaryMeetingLeaveFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkPrimaryMeetingLeaveFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkPrimaryMeetingLeaveFrame message, length delimited. Does not implicitly {@link SdkPrimaryMeetingLeaveFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkPrimaryMeetingLeaveFrame\n     * @static\n     * @param {ISdkPrimaryMeetingLeaveFrame} message SdkPrimaryMeetingLeaveFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkPrimaryMeetingLeaveFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkPrimaryMeetingLeaveFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkPrimaryMeetingLeaveFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkPrimaryMeetingLeaveFrame} SdkPrimaryMeetingLeaveFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkPrimaryMeetingLeaveFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkPrimaryMeetingLeaveFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkPrimaryMeetingLeaveFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkPrimaryMeetingLeaveFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkPrimaryMeetingLeaveFrame} SdkPrimaryMeetingLeaveFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkPrimaryMeetingLeaveFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkPrimaryMeetingLeaveFrame message.\n     * @function verify\n     * @memberof SdkPrimaryMeetingLeaveFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkPrimaryMeetingLeaveFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkPrimaryMeetingLeaveFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkPrimaryMeetingLeaveFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkPrimaryMeetingLeaveFrame} SdkPrimaryMeetingLeaveFrame\n     */\n    SdkPrimaryMeetingLeaveFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkPrimaryMeetingLeaveFrame)\n            return object;\n        return new $root.SdkPrimaryMeetingLeaveFrame();\n    };\n\n    /**\n     * Creates a plain object from a SdkPrimaryMeetingLeaveFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkPrimaryMeetingLeaveFrame\n     * @static\n     * @param {SdkPrimaryMeetingLeaveFrame} message SdkPrimaryMeetingLeaveFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkPrimaryMeetingLeaveFrame.toObject = function toObject() {\n        return {};\n    };\n\n    /**\n     * Converts this SdkPrimaryMeetingLeaveFrame to JSON.\n     * @function toJSON\n     * @memberof SdkPrimaryMeetingLeaveFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkPrimaryMeetingLeaveFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkPrimaryMeetingLeaveFrame;\n})();\n\n$root.SdkMeetingSessionCredentials = (function() {\n\n    /**\n     * Properties of a SdkMeetingSessionCredentials.\n     * @exports ISdkMeetingSessionCredentials\n     * @interface ISdkMeetingSessionCredentials\n     * @property {string|null} [attendeeId] SdkMeetingSessionCredentials attendeeId\n     * @property {string|null} [externalUserId] SdkMeetingSessionCredentials externalUserId\n     * @property {string|null} [joinToken] SdkMeetingSessionCredentials joinToken\n     */\n\n    /**\n     * Constructs a new SdkMeetingSessionCredentials.\n     * @exports SdkMeetingSessionCredentials\n     * @classdesc Represents a SdkMeetingSessionCredentials.\n     * @implements ISdkMeetingSessionCredentials\n     * @constructor\n     * @param {ISdkMeetingSessionCredentials=} [properties] Properties to set\n     */\n    function SdkMeetingSessionCredentials(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkMeetingSessionCredentials attendeeId.\n     * @member {string} attendeeId\n     * @memberof SdkMeetingSessionCredentials\n     * @instance\n     */\n    SdkMeetingSessionCredentials.prototype.attendeeId = \"\";\n\n    /**\n     * SdkMeetingSessionCredentials externalUserId.\n     * @member {string} externalUserId\n     * @memberof SdkMeetingSessionCredentials\n     * @instance\n     */\n    SdkMeetingSessionCredentials.prototype.externalUserId = \"\";\n\n    /**\n     * SdkMeetingSessionCredentials joinToken.\n     * @member {string} joinToken\n     * @memberof SdkMeetingSessionCredentials\n     * @instance\n     */\n    SdkMeetingSessionCredentials.prototype.joinToken = \"\";\n\n    /**\n     * Creates a new SdkMeetingSessionCredentials instance using the specified properties.\n     * @function create\n     * @memberof SdkMeetingSessionCredentials\n     * @static\n     * @param {ISdkMeetingSessionCredentials=} [properties] Properties to set\n     * @returns {SdkMeetingSessionCredentials} SdkMeetingSessionCredentials instance\n     */\n    SdkMeetingSessionCredentials.create = function create(properties) {\n        return new SdkMeetingSessionCredentials(properties);\n    };\n\n    /**\n     * Encodes the specified SdkMeetingSessionCredentials message. Does not implicitly {@link SdkMeetingSessionCredentials.verify|verify} messages.\n     * @function encode\n     * @memberof SdkMeetingSessionCredentials\n     * @static\n     * @param {ISdkMeetingSessionCredentials} message SdkMeetingSessionCredentials message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkMeetingSessionCredentials.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.attendeeId != null && Object.hasOwnProperty.call(message, \"attendeeId\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.attendeeId);\n        if (message.externalUserId != null && Object.hasOwnProperty.call(message, \"externalUserId\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.externalUserId);\n        if (message.joinToken != null && Object.hasOwnProperty.call(message, \"joinToken\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.joinToken);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkMeetingSessionCredentials message, length delimited. Does not implicitly {@link SdkMeetingSessionCredentials.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkMeetingSessionCredentials\n     * @static\n     * @param {ISdkMeetingSessionCredentials} message SdkMeetingSessionCredentials message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkMeetingSessionCredentials.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkMeetingSessionCredentials message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkMeetingSessionCredentials\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkMeetingSessionCredentials} SdkMeetingSessionCredentials\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkMeetingSessionCredentials.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkMeetingSessionCredentials();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.attendeeId = reader.string();\n                break;\n            case 2:\n                message.externalUserId = reader.string();\n                break;\n            case 3:\n                message.joinToken = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkMeetingSessionCredentials message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkMeetingSessionCredentials\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkMeetingSessionCredentials} SdkMeetingSessionCredentials\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkMeetingSessionCredentials.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkMeetingSessionCredentials message.\n     * @function verify\n     * @memberof SdkMeetingSessionCredentials\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkMeetingSessionCredentials.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            if (!$util.isString(message.attendeeId))\n                return \"attendeeId: string expected\";\n        if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\"))\n            if (!$util.isString(message.externalUserId))\n                return \"externalUserId: string expected\";\n        if (message.joinToken != null && message.hasOwnProperty(\"joinToken\"))\n            if (!$util.isString(message.joinToken))\n                return \"joinToken: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkMeetingSessionCredentials message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkMeetingSessionCredentials\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkMeetingSessionCredentials} SdkMeetingSessionCredentials\n     */\n    SdkMeetingSessionCredentials.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkMeetingSessionCredentials)\n            return object;\n        var message = new $root.SdkMeetingSessionCredentials();\n        if (object.attendeeId != null)\n            message.attendeeId = String(object.attendeeId);\n        if (object.externalUserId != null)\n            message.externalUserId = String(object.externalUserId);\n        if (object.joinToken != null)\n            message.joinToken = String(object.joinToken);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkMeetingSessionCredentials message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkMeetingSessionCredentials\n     * @static\n     * @param {SdkMeetingSessionCredentials} message SdkMeetingSessionCredentials\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkMeetingSessionCredentials.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.attendeeId = \"\";\n            object.externalUserId = \"\";\n            object.joinToken = \"\";\n        }\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            object.attendeeId = message.attendeeId;\n        if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\"))\n            object.externalUserId = message.externalUserId;\n        if (message.joinToken != null && message.hasOwnProperty(\"joinToken\"))\n            object.joinToken = message.joinToken;\n        return object;\n    };\n\n    /**\n     * Converts this SdkMeetingSessionCredentials to JSON.\n     * @function toJSON\n     * @memberof SdkMeetingSessionCredentials\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkMeetingSessionCredentials.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkMeetingSessionCredentials;\n})();\n\n/**\n * SdkVideoCodecCapability enum.\n * @exports SdkVideoCodecCapability\n * @enum {number}\n * @property {number} VP8=1 VP8 value\n * @property {number} H264_CONSTRAINED_BASELINE_PROFILE=3 H264_CONSTRAINED_BASELINE_PROFILE value\n */\n$root.SdkVideoCodecCapability = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[1] = \"VP8\"] = 1;\n    values[valuesById[3] = \"H264_CONSTRAINED_BASELINE_PROFILE\"] = 3;\n    return values;\n})();\n\nmodule.exports = $root;\n$util.Long = undefined;\n$protobuf.configure();","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClientMetricReportDirection = void 0;\nvar ClientMetricReportDirection;\n(function (ClientMetricReportDirection) {\n    ClientMetricReportDirection[ClientMetricReportDirection[\"UPSTREAM\"] = 0] = \"UPSTREAM\";\n    ClientMetricReportDirection[ClientMetricReportDirection[\"DOWNSTREAM\"] = 1] = \"DOWNSTREAM\";\n})(ClientMetricReportDirection = exports.ClientMetricReportDirection || (exports.ClientMetricReportDirection = {}));\nexports.default = ClientMetricReportDirection;\n//# sourceMappingURL=ClientMetricReportDirection.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClientMetricReportMediaType = void 0;\nvar ClientMetricReportMediaType;\n(function (ClientMetricReportMediaType) {\n    ClientMetricReportMediaType[ClientMetricReportMediaType[\"AUDIO\"] = 0] = \"AUDIO\";\n    ClientMetricReportMediaType[ClientMetricReportMediaType[\"VIDEO\"] = 1] = \"VIDEO\";\n})(ClientMetricReportMediaType = exports.ClientMetricReportMediaType || (exports.ClientMetricReportMediaType = {}));\nexports.default = ClientMetricReportMediaType;\n//# sourceMappingURL=ClientMetricReportMediaType.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass GlobalMetricReport {\n    constructor() {\n        this.previousMetrics = {};\n        this.currentMetrics = {};\n        // As metric values do not necessarily be number, this is a workaround in case metric value is string\n        this.currentStringMetrics = {};\n    }\n}\nexports.default = GlobalMetricReport;\n//# sourceMappingURL=GlobalMetricReport.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nconst ClientMetricReportDirection_1 = require(\"./ClientMetricReportDirection\");\nconst ClientMetricReportMediaType_1 = require(\"./ClientMetricReportMediaType\");\nconst GlobalMetricReport_1 = require(\"./GlobalMetricReport\");\n/**\n * [[ClientMetricReport]] gets the media metrics used by ConnectionMonitor to\n * update connection health data.\n */\nclass ClientMetricReport {\n    constructor(logger, videoStreamIndex, selfAttendeeId) {\n        this.logger = logger;\n        this.videoStreamIndex = videoStreamIndex;\n        this.selfAttendeeId = selfAttendeeId;\n        this.globalMetricReport = new GlobalMetricReport_1.default();\n        this.streamMetricReports = {};\n        this.rtcStatsReport = {};\n        this.currentTimestampMs = 0;\n        this.previousTimestampMs = 0;\n        this.currentSsrcs = {};\n        /**\n         *  Metric transform functions\n         */\n        this.identityValue = (metricName, ssrc) => {\n            const metricReport = ssrc ? this.streamMetricReports[ssrc] : this.globalMetricReport;\n            return Number(metricReport.currentMetrics[metricName]);\n        };\n        this.decoderLossPercent = (metricName, ssrc) => {\n            const metricReport = this.streamMetricReports[ssrc];\n            const concealedSamples = metricReport.currentMetrics['concealedSamples'] -\n                (metricReport.previousMetrics['concealedSamples'] || 0);\n            const totalSamplesReceived = metricReport.currentMetrics['totalSamplesReceived'] -\n                (metricReport.previousMetrics['totalSamplesReceived'] || 0);\n            if (totalSamplesReceived <= 0) {\n                return 0;\n            }\n            const decoderAbnormal = totalSamplesReceived - concealedSamples;\n            if (decoderAbnormal <= 0) {\n                return 0;\n            }\n            return (concealedSamples / totalSamplesReceived) * 100;\n        };\n        this.packetLossPercent = (sourceMetricName, ssrc) => {\n            const metricReport = this.streamMetricReports[ssrc];\n            const sentOrReceived = metricReport.currentMetrics[sourceMetricName] -\n                (metricReport.previousMetrics[sourceMetricName] || 0);\n            const lost = metricReport.currentMetrics['packetsLost'] -\n                (metricReport.previousMetrics['packetsLost'] || 0);\n            const total = sentOrReceived + lost;\n            if (total <= 0 || lost <= 0) {\n                return 0;\n            }\n            return (lost * 100) / total;\n        };\n        this.jitterBufferMs = (metricName, ssrc) => {\n            const metricReport = this.streamMetricReports[ssrc];\n            const jitterBufferDelay = metricReport.currentMetrics['jitterBufferDelay'] -\n                (metricReport.previousMetrics['jitterBufferDelay'] || 0);\n            const jitterBufferEmittedCount = metricReport.currentMetrics['jitterBufferEmittedCount'] -\n                (metricReport.previousMetrics['jitterBufferEmittedCount'] || 0);\n            if (jitterBufferDelay <= 0) {\n                return 0;\n            }\n            if (jitterBufferEmittedCount <= 0) {\n                return 0;\n            }\n            return (jitterBufferDelay / jitterBufferEmittedCount) * 1000;\n        };\n        this.countPerSecond = (metricName, ssrc) => {\n            const metricReport = ssrc ? this.streamMetricReports[ssrc] : this.globalMetricReport;\n            let intervalSeconds = (this.currentTimestampMs - this.previousTimestampMs) / 1000;\n            if (intervalSeconds <= 0) {\n                return 0;\n            }\n            if (this.previousTimestampMs <= 0) {\n                intervalSeconds = 1;\n            }\n            const diff = metricReport.currentMetrics[metricName] - (metricReport.previousMetrics[metricName] || 0);\n            if (diff <= 0) {\n                return 0;\n            }\n            return Math.trunc(diff / intervalSeconds);\n        };\n        this.bitsPerSecond = (metricName, ssrc) => {\n            const metricReport = ssrc ? this.streamMetricReports[ssrc] : this.globalMetricReport;\n            let intervalSeconds = (this.currentTimestampMs - this.previousTimestampMs) / 1000;\n            if (intervalSeconds <= 0) {\n                return 0;\n            }\n            if (this.previousTimestampMs <= 0) {\n                intervalSeconds = 1;\n            }\n            const diff = (metricReport.currentMetrics[metricName] - (metricReport.previousMetrics[metricName] || 0)) *\n                8;\n            if (diff <= 0) {\n                return 0;\n            }\n            return Math.trunc(diff / intervalSeconds);\n        };\n        this.secondsToMilliseconds = (metricName, ssrc) => {\n            const metricReport = ssrc ? this.streamMetricReports[ssrc] : this.globalMetricReport;\n            return Number(metricReport.currentMetrics[metricName] * 1000);\n        };\n        this.averageTimeSpentPerSecondInMilliseconds = (metricName, ssrc) => {\n            const metricReport = ssrc ? this.streamMetricReports[ssrc] : this.globalMetricReport;\n            let intervalSeconds = (this.currentTimestampMs - this.previousTimestampMs) / 1000;\n            if (intervalSeconds <= 0) {\n                return 0;\n            }\n            if (this.previousTimestampMs <= 0) {\n                intervalSeconds = 1;\n            }\n            const diff = metricReport.currentMetrics[metricName] - (metricReport.previousMetrics[metricName] || 0);\n            if (diff <= 0) {\n                return 0;\n            }\n            return (diff * 1000) / intervalSeconds;\n        };\n        this.isHardwareImplementation = (metricName, ssrc) => {\n            const metricReport = this.streamMetricReports[ssrc];\n            const implName = String(metricReport.currentStringMetrics[metricName]);\n            const hasHwName = implName.includes('ExternalDecoder') ||\n                implName.includes('ExternalEncoder') ||\n                implName.includes('EncodeAccelerator') ||\n                implName.includes('DecodeAccelerator');\n            const isFallback = implName.includes('fallback from');\n            return hasHwName && !isFallback ? 1 : 0;\n        };\n        /**\n         *  Canonical and derived metric maps\n         */\n        this.globalMetricMap = {\n            retransmittedBytesSent: {\n                transform: this.identityValue,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_RETRANSMIT_BITRATE,\n            },\n            totalEncodedBytesTarget: {\n                transform: this.identityValue,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_TARGET_ENCODER_BITRATE,\n            },\n            totalPacketSendDelay: {\n                transform: this.identityValue,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_BUCKET_DELAY_MS,\n            },\n            packetsDiscardedOnSend: {\n                transform: this.countPerSecond,\n                type: SignalingProtocol_js_1.SdkMetric.Type.SOCKET_DISCARDED_PPS,\n            },\n            availableIncomingBitrate: {\n                transform: this.identityValue,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_AVAILABLE_RECEIVE_BANDWIDTH,\n            },\n            availableOutgoingBitrate: {\n                transform: this.identityValue,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_AVAILABLE_SEND_BANDWIDTH,\n            },\n            currentRoundTripTime: {\n                transform: this.secondsToMilliseconds,\n                type: SignalingProtocol_js_1.SdkMetric.Type.STUN_RTT_MS,\n            },\n        };\n        this.audioUpstreamMetricMap = {\n            jitter: { transform: this.secondsToMilliseconds, type: SignalingProtocol_js_1.SdkMetric.Type.RTC_MIC_JITTER_MS },\n            packetsSent: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.RTC_MIC_PPS },\n            bytesSent: { transform: this.bitsPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.RTC_MIC_BITRATE },\n            roundTripTime: { transform: this.secondsToMilliseconds, type: SignalingProtocol_js_1.SdkMetric.Type.RTC_MIC_RTT_MS },\n            packetsLost: {\n                transform: this.packetLossPercent,\n                type: SignalingProtocol_js_1.SdkMetric.Type.RTC_MIC_FRACTION_PACKET_LOST_PERCENT,\n                source: 'packetsSent',\n            },\n        };\n        this.audioDownstreamMetricMap = {\n            concealedSamples: {\n                transform: this.countPerSecond,\n            },\n            totalSamplesReceived: {\n                transform: this.countPerSecond,\n            },\n            decoderLoss: {\n                transform: this.decoderLossPercent,\n                type: SignalingProtocol_js_1.SdkMetric.Type.RTC_SPK_FRACTION_DECODER_LOSS_PERCENT,\n            },\n            packetsReceived: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.RTC_SPK_PPS },\n            packetsLost: {\n                transform: this.packetLossPercent,\n                type: SignalingProtocol_js_1.SdkMetric.Type.RTC_SPK_FRACTION_PACKET_LOST_PERCENT,\n                source: 'packetsReceived',\n            },\n            jitter: { transform: this.secondsToMilliseconds, type: SignalingProtocol_js_1.SdkMetric.Type.RTC_SPK_JITTER_MS },\n            jitterBufferDelay: {\n                transform: this.countPerSecond,\n            },\n            jitterBufferEmittedCount: {\n                transform: this.countPerSecond,\n            },\n            jitterBufferMs: {\n                transform: this.jitterBufferMs,\n                type: SignalingProtocol_js_1.SdkMetric.Type.RTC_SPK_JITTER_BUFFER_MS,\n            },\n            bytesReceived: { transform: this.bitsPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.RTC_SPK_BITRATE },\n        };\n        this.videoUpstreamMetricMap = {\n            roundTripTime: {\n                transform: this.secondsToMilliseconds,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_SENT_RTT_MS,\n            },\n            nackCount: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_NACKS_RECEIVED },\n            pliCount: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_PLIS_RECEIVED },\n            firCount: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_FIRS_RECEIVED },\n            framesPerSecond: { transform: this.identityValue, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_INPUT_FPS },\n            framesEncoded: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_ENCODE_FPS },\n            packetsSent: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_SENT_PPS },\n            packetsLost: {\n                transform: this.packetLossPercent,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT,\n                source: 'packetsSent',\n            },\n            bytesSent: { transform: this.bitsPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_SENT_BITRATE },\n            qpSum: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_SENT_QP_SUM },\n            frameHeight: { transform: this.identityValue, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_ENCODE_HEIGHT },\n            frameWidth: { transform: this.identityValue, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_ENCODE_WIDTH },\n            jitter: {\n                transform: this.secondsToMilliseconds,\n            },\n            totalEncodeTime: {\n                transform: this.averageTimeSpentPerSecondInMilliseconds,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_ENCODE_MS,\n            },\n            encoderImplementation: {\n                transform: this.isHardwareImplementation,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_ENCODER_IS_HARDWARE,\n            },\n        };\n        this.videoDownstreamMetricMap = {\n            packetsReceived: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_RECEIVED_PPS },\n            packetsLost: {\n                transform: this.packetLossPercent,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT,\n                source: 'packetsReceived',\n            },\n            framesReceived: {\n                transform: this.identityValue,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_RECEIVED_FPS,\n            },\n            framesDecoded: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_DECODE_FPS },\n            nackCount: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_NACKS_SENT },\n            firCount: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_FIRS_SENT },\n            pliCount: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_PLIS_SENT },\n            bytesReceived: { transform: this.bitsPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_RECEIVED_BITRATE },\n            jitter: {\n                transform: this.secondsToMilliseconds,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_RECEIVED_JITTER_MS,\n            },\n            jitterBufferDelay: {\n                transform: this.countPerSecond,\n            },\n            jitterBufferEmittedCount: {\n                transform: this.countPerSecond,\n            },\n            jitterBufferMs: {\n                transform: this.jitterBufferMs,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_JITTER_BUFFER_MS,\n            },\n            qpSum: {\n                transform: this.countPerSecond,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_RECEIVED_QP_SUM,\n            },\n            frameHeight: { transform: this.identityValue, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_DECODE_HEIGHT },\n            frameWidth: { transform: this.identityValue, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_DECODE_WIDTH },\n            totalDecodeTime: {\n                transform: this.averageTimeSpentPerSecondInMilliseconds,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_DECODE_MS,\n            },\n            decoderImplementation: {\n                transform: this.isHardwareImplementation,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_DECODER_IS_HARDWARE,\n            },\n        };\n        /**\n         *  Dimensions derived from metric\n         */\n        this.streamDimensionMap = {\n            encoderImplementation: SignalingProtocol_js_1.SdkStreamDimension.Type.VIDEO_ENCODER_NAME,\n            decoderImplementation: SignalingProtocol_js_1.SdkStreamDimension.Type.VIDEO_DECODER_NAME,\n        };\n        /**\n         *  media Stream metrics\n         */\n        this.observableVideoMetricSpec = {\n            videoUpstreamBitrate: {\n                source: 'bytesSent',\n                media: ClientMetricReportMediaType_1.default.VIDEO,\n                dir: ClientMetricReportDirection_1.default.UPSTREAM,\n            },\n            videoUpstreamPacketsSent: {\n                source: 'packetsSent',\n                media: ClientMetricReportMediaType_1.default.VIDEO,\n                dir: ClientMetricReportDirection_1.default.UPSTREAM,\n            },\n            videoUpstreamPacketLossPercent: {\n                source: 'packetsLost',\n                media: ClientMetricReportMediaType_1.default.VIDEO,\n                dir: ClientMetricReportDirection_1.default.UPSTREAM,\n            },\n            videoUpstreamFramesEncodedPerSecond: {\n                source: 'framesEncoded',\n                media: ClientMetricReportMediaType_1.default.VIDEO,\n                dir: ClientMetricReportDirection_1.default.UPSTREAM,\n            },\n            videoUpstreamFrameHeight: {\n                source: 'frameHeight',\n                media: ClientMetricReportMediaType_1.default.VIDEO,\n                dir: ClientMetricReportDirection_1.default.UPSTREAM,\n            },\n            videoUpstreamFrameWidth: {\n                source: 'frameWidth',\n                media: ClientMetricReportMediaType_1.default.VIDEO,\n                dir: ClientMetricReportDirection_1.default.UPSTREAM,\n            },\n            videoUpstreamJitterMs: {\n                source: 'jitter',\n                media: ClientMetricReportMediaType_1.default.VIDEO,\n                dir: ClientMetricReportDirection_1.default.UPSTREAM,\n            },\n            videoUpstreamRoundTripTimeMs: {\n                source: 'roundTripTime',\n                media: ClientMetricReportMediaType_1.default.VIDEO,\n                dir: ClientMetricReportDirection_1.default.UPSTREAM,\n            },\n            videoDownstreamBitrate: {\n                source: 'bytesReceived',\n                media: ClientMetricReportMediaType_1.default.VIDEO,\n                dir: ClientMetricReportDirection_1.default.DOWNSTREAM,\n            },\n            videoDownstreamPacketLossPercent: {\n                source: 'packetsLost',\n                media: ClientMetricReportMediaType_1.default.VIDEO,\n                dir: ClientMetricReportDirection_1.default.DOWNSTREAM,\n            },\n            videoDownstreamPacketsReceived: {\n                source: 'packetsReceived',\n                media: ClientMetricReportMediaType_1.default.VIDEO,\n                dir: ClientMetricReportDirection_1.default.DOWNSTREAM,\n            },\n            videoDownstreamFramesDecodedPerSecond: {\n                source: 'framesDecoded',\n                media: ClientMetricReportMediaType_1.default.VIDEO,\n                dir: ClientMetricReportDirection_1.default.DOWNSTREAM,\n            },\n            videoDownstreamFrameHeight: {\n                source: 'frameHeight',\n                media: ClientMetricReportMediaType_1.default.VIDEO,\n                dir: ClientMetricReportDirection_1.default.DOWNSTREAM,\n            },\n            videoDownstreamFrameWidth: {\n                source: 'frameWidth',\n                media: ClientMetricReportMediaType_1.default.VIDEO,\n                dir: ClientMetricReportDirection_1.default.DOWNSTREAM,\n            },\n            videoDownstreamJitterMs: {\n                source: 'jitter',\n                media: ClientMetricReportMediaType_1.default.VIDEO,\n                dir: ClientMetricReportDirection_1.default.DOWNSTREAM,\n            },\n            videoDownstreamDelayMs: {\n                source: 'jitterBufferMs',\n                media: ClientMetricReportMediaType_1.default.VIDEO,\n                dir: ClientMetricReportDirection_1.default.DOWNSTREAM,\n            },\n        };\n        /**\n         * Observable metrics and related APIs\n         */\n        this.observableMetricSpec = {\n            audioPacketsReceived: {\n                source: 'packetsReceived',\n                media: ClientMetricReportMediaType_1.default.AUDIO,\n                dir: ClientMetricReportDirection_1.default.DOWNSTREAM,\n            },\n            audioPacketsReceivedFractionLoss: {\n                source: 'packetsLost',\n                media: ClientMetricReportMediaType_1.default.AUDIO,\n                dir: ClientMetricReportDirection_1.default.DOWNSTREAM,\n            },\n            audioDecoderLoss: {\n                source: 'decoderLoss',\n                media: ClientMetricReportMediaType_1.default.AUDIO,\n                dir: ClientMetricReportDirection_1.default.DOWNSTREAM,\n            },\n            audioPacketsSent: {\n                source: 'packetsSent',\n                media: ClientMetricReportMediaType_1.default.AUDIO,\n                dir: ClientMetricReportDirection_1.default.UPSTREAM,\n            },\n            audioPacketLossPercent: {\n                source: 'packetsLost',\n                media: ClientMetricReportMediaType_1.default.AUDIO,\n                dir: ClientMetricReportDirection_1.default.UPSTREAM,\n            },\n            audioUpstreamRoundTripTimeMs: {\n                source: 'roundTripTime',\n                media: ClientMetricReportMediaType_1.default.AUDIO,\n                dir: ClientMetricReportDirection_1.default.UPSTREAM,\n            },\n            videoUpstreamBitrate: { source: 'bytesSent', media: ClientMetricReportMediaType_1.default.VIDEO, dir: ClientMetricReportDirection_1.default.UPSTREAM },\n            videoPacketSentPerSecond: {\n                source: 'packetsSent',\n                media: ClientMetricReportMediaType_1.default.VIDEO,\n                dir: ClientMetricReportDirection_1.default.UPSTREAM,\n            },\n            audioSpeakerDelayMs: {\n                source: 'jitterBufferMs',\n                media: ClientMetricReportMediaType_1.default.AUDIO,\n                dir: ClientMetricReportDirection_1.default.DOWNSTREAM,\n            },\n            audioUpstreamJitterMs: {\n                source: 'jitter',\n                media: ClientMetricReportMediaType_1.default.AUDIO,\n                dir: ClientMetricReportDirection_1.default.UPSTREAM,\n            },\n            audioDownstreamJitterMs: {\n                source: 'jitter',\n                media: ClientMetricReportMediaType_1.default.AUDIO,\n                dir: ClientMetricReportDirection_1.default.DOWNSTREAM,\n            },\n            nackCountReceivedPerSecond: {\n                source: 'nackCount',\n                media: ClientMetricReportMediaType_1.default.VIDEO,\n                dir: ClientMetricReportDirection_1.default.UPSTREAM,\n            },\n            availableOutgoingBitrate: { source: 'availableOutgoingBitrate' },\n            availableIncomingBitrate: { source: 'availableIncomingBitrate' },\n            currentRoundTripTimeMs: { source: 'currentRoundTripTime' },\n        };\n    }\n    getMetricMap(mediaType, direction) {\n        switch (mediaType) {\n            case ClientMetricReportMediaType_1.default.AUDIO:\n                switch (direction) {\n                    case ClientMetricReportDirection_1.default.UPSTREAM:\n                        return this.audioUpstreamMetricMap;\n                    case ClientMetricReportDirection_1.default.DOWNSTREAM:\n                        return this.audioDownstreamMetricMap;\n                }\n            case ClientMetricReportMediaType_1.default.VIDEO:\n                switch (direction) {\n                    case ClientMetricReportDirection_1.default.UPSTREAM:\n                        return this.videoUpstreamMetricMap;\n                    case ClientMetricReportDirection_1.default.DOWNSTREAM:\n                        return this.videoDownstreamMetricMap;\n                }\n            default:\n                return this.globalMetricMap;\n        }\n    }\n    getStreamDimensionMap() {\n        return this.streamDimensionMap;\n    }\n    /**\n     * Returns the value of the specific metric in observableMetricSpec.\n     */\n    getObservableMetricValue(metricName) {\n        const observableMetricSpec = this.observableMetricSpec[metricName];\n        const metricMap = this.getMetricMap(observableMetricSpec.media, observableMetricSpec.dir);\n        const metricSpec = metricMap[observableMetricSpec.source];\n        const { transform, source } = metricSpec;\n        if (observableMetricSpec.hasOwnProperty('media')) {\n            for (const ssrc in this.streamMetricReports) {\n                const streamMetricReport = this.streamMetricReports[ssrc];\n                if (streamMetricReport.direction === observableMetricSpec.dir &&\n                    streamMetricReport.mediaType === observableMetricSpec.media) {\n                    return source\n                        ? transform(source, Number(ssrc))\n                        : transform(observableMetricSpec.source, Number(ssrc));\n                }\n            }\n        }\n        else {\n            return source ? transform(source) : transform(observableMetricSpec.source);\n        }\n        return 0;\n    }\n    /**\n     * Returns the value of the specific metric in observableVideoMetricSpec.\n     */\n    getObservableVideoMetricValue(metricName, ssrcNum) {\n        const observableVideoMetricSpec = this.observableVideoMetricSpec[metricName];\n        const metricMap = this.getMetricMap(observableVideoMetricSpec.media, observableVideoMetricSpec.dir);\n        const metricSpec = metricMap[observableVideoMetricSpec.source];\n        const { transform, source } = metricSpec;\n        return source\n            ? transform(source, ssrcNum)\n            : transform(observableVideoMetricSpec.source, ssrcNum);\n    }\n    /**\n     * Returns the value of metrics in observableMetricSpec.\n     */\n    getObservableMetrics() {\n        const metric = {};\n        for (const metricName in this.observableMetricSpec) {\n            metric[metricName] = this.getObservableMetricValue(metricName);\n        }\n        return metric;\n    }\n    /**\n     * Returns the value of metrics in observableVideoMetricSpec for each SSRC.\n     */\n    getObservableVideoMetrics() {\n        const videoStreamMetrics = {};\n        if (!this.videoStreamIndex || !this.selfAttendeeId) {\n            this.logger.error('Need to define VideoStreamIndex and selfAttendeeId if using getObservableVideoMetrics API');\n            return videoStreamMetrics;\n        }\n        for (const ssrc in this.streamMetricReports) {\n            if (this.streamMetricReports[ssrc].mediaType === ClientMetricReportMediaType_1.default.VIDEO) {\n                const metric = {};\n                for (const metricName in this.observableVideoMetricSpec) {\n                    if (this.observableVideoMetricSpec[metricName].dir ===\n                        this.streamMetricReports[ssrc].direction) {\n                        const metricValue = this.getObservableVideoMetricValue(metricName, Number(ssrc));\n                        if (!isNaN(metricValue)) {\n                            metric[metricName] = metricValue;\n                        }\n                    }\n                }\n                const streamId = this.streamMetricReports[ssrc].streamId;\n                const attendeeId = streamId\n                    ? this.videoStreamIndex.attendeeIdForStreamId(streamId)\n                    : this.selfAttendeeId;\n                videoStreamMetrics[attendeeId] = videoStreamMetrics[attendeeId]\n                    ? videoStreamMetrics[attendeeId]\n                    : {};\n                videoStreamMetrics[attendeeId][ssrc] = metric;\n            }\n        }\n        return videoStreamMetrics;\n    }\n    /**\n     * Returns the raw RTCStatsReport from RTCPeerConnection.getStats() API.\n     */\n    getRTCStatsReport() {\n        return this.rtcStatsReport;\n    }\n    /**\n     * Clones the ClientMetricReport and returns it.\n     */\n    clone() {\n        const cloned = new ClientMetricReport(this.logger, this.videoStreamIndex, this.selfAttendeeId);\n        cloned.globalMetricReport = this.globalMetricReport;\n        cloned.streamMetricReports = this.streamMetricReports;\n        cloned.rtcStatsReport = this.rtcStatsReport;\n        cloned.currentTimestampMs = this.currentTimestampMs;\n        cloned.previousTimestampMs = this.previousTimestampMs;\n        return cloned;\n    }\n    /**\n     * Prints out the globalMetricReport, streamMetricReports and the corresponding timestamps from the current ClientMetricReport.\n     */\n    print() {\n        const clientMetricReport = {\n            globalMetricReport: this.globalMetricReport,\n            streamMetricReports: this.streamMetricReports,\n            currentTimestampMs: this.currentTimestampMs,\n            previousTimestampMs: this.previousTimestampMs,\n        };\n        this.logger.debug(() => {\n            return `Client Metric Report: ${JSON.stringify(clientMetricReport)}`;\n        });\n    }\n    /**\n     * Removes the SSRCs that are no longer valid.\n     */\n    removeDestroyedSsrcs() {\n        for (const ssrc in this.streamMetricReports) {\n            if (!this.currentSsrcs[ssrc]) {\n                delete this.streamMetricReports[ssrc];\n            }\n        }\n    }\n}\nexports.default = ClientMetricReport;\n//# sourceMappingURL=ClientMetricReport.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ClientVideoStreamReceivingReport {\n}\nexports.default = ClientVideoStreamReceivingReport;\n//# sourceMappingURL=ClientVideoStreamReceivingReport.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ConnectionHealthData {\n    constructor() {\n        this.connectionStartTimestampMs = 0;\n        this.consecutiveStatsWithNoPackets = 0;\n        this.consecutiveStatsWithNoAudioPacketsSent = 0;\n        this.lastPacketLossInboundTimestampMs = 0;\n        this.lastGoodSignalTimestampMs = 0;\n        this.lastWeakSignalTimestampMs = 0;\n        this.lastNoSignalTimestampMs = 0;\n        this.consecutiveMissedPongs = 0;\n        this.packetsReceivedInLastMinute = [];\n        this.fractionPacketsLostInboundInLastMinute = [];\n        this.audioSpeakerDelayMs = 0;\n        this.connectionStartTimestampMs = Date.now();\n        this.lastGoodSignalTimestampMs = Date.now();\n    }\n    static isTimestampRecent(timestampMs, recentDurationMs) {\n        return Date.now() < timestampMs + recentDurationMs;\n    }\n    setConnectionStartTime() {\n        this.connectionStartTimestampMs = Date.now();\n        this.lastGoodSignalTimestampMs = Date.now();\n    }\n    reset() {\n        this.connectionStartTimestampMs = 0;\n        this.consecutiveStatsWithNoPackets = 0;\n        this.consecutiveStatsWithNoAudioPacketsSent = 0;\n        this.lastPacketLossInboundTimestampMs = 0;\n        this.lastGoodSignalTimestampMs = 0;\n        this.lastWeakSignalTimestampMs = 0;\n        this.lastNoSignalTimestampMs = 0;\n        this.consecutiveMissedPongs = 0;\n        this.packetsReceivedInLastMinute = [];\n        this.fractionPacketsLostInboundInLastMinute = [];\n        this.audioSpeakerDelayMs = 0;\n        this.connectionStartTimestampMs = Date.now();\n        this.lastGoodSignalTimestampMs = Date.now();\n    }\n    isConnectionStartRecent(recentDurationMs) {\n        return ConnectionHealthData.isTimestampRecent(this.connectionStartTimestampMs, recentDurationMs);\n    }\n    isLastPacketLossRecent(recentDurationMs) {\n        return ConnectionHealthData.isTimestampRecent(this.lastPacketLossInboundTimestampMs, recentDurationMs);\n    }\n    isGoodSignalRecent(recentDurationMs) {\n        return ConnectionHealthData.isTimestampRecent(this.lastGoodSignalTimestampMs, recentDurationMs);\n    }\n    isWeakSignalRecent(recentDurationMs) {\n        return ConnectionHealthData.isTimestampRecent(this.lastWeakSignalTimestampMs, recentDurationMs);\n    }\n    isNoSignalRecent(recentDurationMs) {\n        return ConnectionHealthData.isTimestampRecent(this.lastNoSignalTimestampMs, recentDurationMs);\n    }\n    clone() {\n        const cloned = new ConnectionHealthData();\n        cloned.connectionStartTimestampMs = this.connectionStartTimestampMs;\n        cloned.consecutiveStatsWithNoPackets = this.consecutiveStatsWithNoPackets;\n        cloned.consecutiveStatsWithNoAudioPacketsSent = this.consecutiveStatsWithNoAudioPacketsSent;\n        cloned.lastPacketLossInboundTimestampMs = this.lastPacketLossInboundTimestampMs;\n        cloned.lastGoodSignalTimestampMs = this.lastGoodSignalTimestampMs;\n        cloned.lastWeakSignalTimestampMs = this.lastWeakSignalTimestampMs;\n        cloned.lastNoSignalTimestampMs = this.lastNoSignalTimestampMs;\n        cloned.consecutiveMissedPongs = this.consecutiveMissedPongs;\n        cloned.packetsReceivedInLastMinute = this.packetsReceivedInLastMinute.slice(0);\n        cloned.fractionPacketsLostInboundInLastMinute = this.fractionPacketsLostInboundInLastMinute.slice(0);\n        cloned.audioSpeakerDelayMs = this.audioSpeakerDelayMs;\n        return cloned;\n    }\n    setConsecutiveMissedPongs(pongs) {\n        this.consecutiveMissedPongs = pongs;\n    }\n    setConsecutiveStatsWithNoPackets(stats) {\n        this.consecutiveStatsWithNoPackets = stats;\n    }\n    setConsecutiveStatsWithNoAudioPacketsSent(stats) {\n        this.consecutiveStatsWithNoAudioPacketsSent = stats;\n    }\n    setLastPacketLossInboundTimestampMs(timeStamp) {\n        this.lastPacketLossInboundTimestampMs = timeStamp;\n    }\n    setLastNoSignalTimestampMs(timeStamp) {\n        this.lastNoSignalTimestampMs = timeStamp;\n    }\n    setLastWeakSignalTimestampMs(timeStamp) {\n        this.lastWeakSignalTimestampMs = timeStamp;\n    }\n    setLastGoodSignalTimestampMs(timeStamp) {\n        this.lastGoodSignalTimestampMs = timeStamp;\n    }\n    setAudioSpeakerDelayMs(delayMs) {\n        this.audioSpeakerDelayMs = delayMs;\n    }\n}\nexports.default = ConnectionHealthData;\n//# sourceMappingURL=ConnectionHealthData.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ConnectionHealthPolicyConfiguration {\n    constructor() {\n        this.minHealth = 0;\n        this.maxHealth = 1;\n        this.initialHealth = 1;\n        this.connectionUnhealthyThreshold = 25;\n        this.noSignalThresholdTimeMs = 10000;\n        this.connectionWaitTimeMs = 10000;\n        this.zeroBarsNoSignalTimeMs = 5000;\n        this.oneBarWeakSignalTimeMs = 5000;\n        this.twoBarsTimeMs = 5000;\n        this.threeBarsTimeMs = 10000;\n        this.fourBarsTimeMs = 20000;\n        this.fiveBarsTimeMs = 60000;\n        this.cooldownTimeMs = 60000;\n        this.pastSamplesToConsider = 15;\n        this.goodSignalTimeMs = 15000;\n        this.fractionalLoss = 0.5;\n        this.packetsExpected = 50;\n        this.maximumTimesToWarn = 2;\n        this.missedPongsLowerThreshold = 1;\n        this.missedPongsUpperThreshold = 4;\n        this.maximumAudioDelayMs = 60000;\n        this.maximumAudioDelayDataPoints = 10;\n        /**\n         * The number of samples required to consider sending-audio to be unhealthy\n         *\n         * The default value is derived from the median for time taken for receiving an attendee presence message from the\n         * server after joining. Attendee presence is only received when the client sends audio packets to the server, so\n         * this metric is used as a proxy.\n         */\n        this.sendingAudioFailureSamplesToConsider = 2;\n        /**\n         * The purpose of this field is to add a wait time/delay to our evaluation of sending audio health\n         * as the microphone may sometimes cause a delay in sending audio packets during the initial stages of a connection.\n         */\n        this.sendingAudioFailureInitialWaitTimeMs = 3000;\n    }\n}\nexports.default = ConnectionHealthPolicyConfiguration;\n//# sourceMappingURL=ConnectionHealthPolicyConfiguration.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ContentShareConstants;\n(function (ContentShareConstants) {\n    ContentShareConstants[\"Modality\"] = \"#content\";\n})(ContentShareConstants || (ContentShareConstants = {}));\nexports.default = ContentShareConstants;\n//# sourceMappingURL=ContentShareConstants.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[IntervalScheduler]] calls the callback every intervalMs milliseconds.\n */\nclass IntervalScheduler {\n    constructor(intervalMs) {\n        this.intervalMs = intervalMs;\n    }\n    start(callback) {\n        this.stop();\n        this.timer = setInterval(callback, this.intervalMs);\n    }\n    stop() {\n        if (this.timer === undefined) {\n            return;\n        }\n        clearInterval(this.timer);\n        this.timer = undefined;\n    }\n    running() {\n        return this.timer !== undefined;\n    }\n}\nexports.default = IntervalScheduler;\n//# sourceMappingURL=IntervalScheduler.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AsyncScheduler_1 = require(\"../scheduler/AsyncScheduler\");\nconst IntervalScheduler_1 = require(\"../scheduler/IntervalScheduler\");\nclass MediaDeviceProxyHandler {\n    constructor() {\n        this.scheduler = null;\n        this.devices = null;\n        this.deviceChangeListeners = new Set();\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/explicit-module-boundary-types\n        this.get = (target, property, receiver) => {\n            if (!Reflect.has(target, property)) {\n                return undefined;\n            }\n            if (!('ondevicechange' in navigator.mediaDevices)) {\n                if (property === 'addEventListener') {\n                    return this.patchAddEventListener(target, property, receiver);\n                }\n                else if (property === 'removeEventListener') {\n                    return this.patchRemoveEventListener(target, property, receiver);\n                }\n            }\n            const value = Reflect.get(target, property, receiver);\n            return typeof value === 'function' ? value.bind(target) : value;\n        };\n        this.patchAddEventListener = (target, property, \n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        receiver) => {\n            const value = Reflect.get(target, property, receiver);\n            return (type, listener, options) => {\n                if (type === 'devicechange') {\n                    this.deviceChangeListeners.add(listener);\n                    if (!this.scheduler) {\n                        this.scheduler = new IntervalScheduler_1.default(MediaDeviceProxyHandler.INTERVAL_MS);\n                        this.scheduler.start(this.pollDeviceLists);\n                    }\n                }\n                else {\n                    return Reflect.apply(value, target, [type, listener, options]);\n                }\n            };\n        };\n        this.patchRemoveEventListener = (target, property, \n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        receiver) => {\n            const value = Reflect.get(target, property, receiver);\n            return (type, listener, options) => {\n                if (type === 'devicechange') {\n                    this.deviceChangeListeners.delete(listener);\n                    if (this.deviceChangeListeners.size === 0 && this.scheduler) {\n                        this.scheduler.stop();\n                        this.scheduler = null;\n                    }\n                }\n                else {\n                    return Reflect.apply(value, target, [type, listener, options]);\n                }\n            };\n        };\n        this.pollDeviceLists = () => __awaiter(this, void 0, void 0, function* () {\n            const newDevices = yield this.sortedDeviceList();\n            if (this.devices) {\n                const changed = newDevices.length !== this.devices.length ||\n                    newDevices.some((device, index) => {\n                        return device.deviceId !== this.devices[index].deviceId;\n                    });\n                if (changed) {\n                    this.handleDeviceChangeEvent();\n                }\n            }\n            this.devices = newDevices;\n        });\n    }\n    sortedDeviceList() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // @ts-ignore\n            const newDevices = yield navigator.mediaDevices.enumerateDevices();\n            return newDevices.sort((device1, device2) => {\n                if (device1.deviceId < device2.deviceId) {\n                    return 1;\n                }\n                if (device1.deviceId > device2.deviceId) {\n                    return -1;\n                }\n                return 0;\n            });\n        });\n    }\n    handleDeviceChangeEvent() {\n        for (const listener of this.deviceChangeListeners) {\n            AsyncScheduler_1.default.nextTick(() => {\n                /* istanbul ignore else */\n                if (this.deviceChangeListeners.has(listener)) {\n                    const event = new Event('devicechange');\n                    if (typeof listener === 'function') {\n                        listener(event);\n                    }\n                    else {\n                        listener.handleEvent(event);\n                    }\n                }\n            });\n        }\n    }\n}\nexports.default = MediaDeviceProxyHandler;\nMediaDeviceProxyHandler.INTERVAL_MS = 1000;\n//# sourceMappingURL=MediaDeviceProxyHandler.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MediaDeviceProxyHandler_1 = require(\"./MediaDeviceProxyHandler\");\nclass DefaultMediaDeviceFactory {\n    constructor() {\n        this.isMediaDevicesSupported = typeof navigator !== 'undefined' && !!navigator.mediaDevices;\n    }\n    create() {\n        if (!this.isMediaDevicesSupported) {\n            throw new Error(`navigator.mediaDevices is not supported`);\n        }\n        else {\n            return new Proxy(navigator.mediaDevices, new MediaDeviceProxyHandler_1.default());\n        }\n    }\n}\nexports.default = DefaultMediaDeviceFactory;\n//# sourceMappingURL=DefaultMediaDeviceFactory.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A simple promise queue to enforce the order of async APIs for example, start/stop video/audio input.\n */\nclass PromiseQueue {\n    constructor() {\n        this.queue = Promise.resolve();\n    }\n    // eslint-disable-next-line\n    add(func) {\n        return new Promise((resolve, reject) => {\n            this.queue = this.queue.then(func).then(resolve).catch(reject);\n        });\n    }\n}\nexports.default = PromiseQueue;\n//# sourceMappingURL=PromiseQueue.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.None = exports.Some = exports.Maybe = void 0;\nclass Maybe {\n    static of(value) {\n        return value === undefined || value === null ? None.of() : Some.of(value);\n    }\n}\nexports.Maybe = Maybe;\nclass Some {\n    constructor(value) {\n        this.value = value;\n        this.isSome = true;\n        this.isNone = false;\n    }\n    map(f) {\n        return Maybe.of(f(this.value));\n    }\n    flatMap(f) {\n        return f(this.value);\n    }\n    get() {\n        return this.value;\n    }\n    getOrElse(_value) {\n        return this.value;\n    }\n    defaulting(value) {\n        return Maybe.of(this.getOrElse(value));\n    }\n    static of(value) {\n        if (value === null || value === undefined) {\n            throw new Error('value is ${value}');\n        }\n        return new Some(value);\n    }\n}\nexports.Some = Some;\nclass None {\n    constructor() {\n        this.isSome = false;\n        this.isNone = true;\n    }\n    get() {\n        throw new Error('value is null');\n    }\n    getOrElse(value) {\n        return value;\n    }\n    map(_f) {\n        return new None();\n    }\n    flatMap(_f) {\n        return new None();\n    }\n    defaulting(value) {\n        return Maybe.of(this.getOrElse(value));\n    }\n    static of() {\n        return new None();\n    }\n}\nexports.None = None;\n//# sourceMappingURL=Types.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ContentShareConstants_1 = require(\"../contentsharecontroller/ContentShareConstants\");\nclass DefaultModality {\n    constructor(_id) {\n        this._id = _id;\n    }\n    id() {\n        return this._id;\n    }\n    base() {\n        if (!this._id) {\n            return '';\n        }\n        return this._id.split(DefaultModality.MODALITY_SEPARATOR)[0];\n    }\n    modality() {\n        if (!this._id) {\n            return '';\n        }\n        const components = this._id.split(DefaultModality.MODALITY_SEPARATOR);\n        if (components.length === 2) {\n            return components[1];\n        }\n        return '';\n    }\n    hasModality(modality) {\n        return modality !== '' && this.modality() === modality;\n    }\n    withModality(modality) {\n        const m = new DefaultModality(this.base() + DefaultModality.MODALITY_SEPARATOR + modality);\n        if (modality === '' ||\n            this.base() === '' ||\n            new DefaultModality(m._id).modality() !== modality) {\n            return new DefaultModality(this.base());\n        }\n        return m;\n    }\n}\nexports.default = DefaultModality;\nDefaultModality.MODALITY_SEPARATOR = ContentShareConstants_1.default.Modality[0];\nDefaultModality.MODALITY_CONTENT = ContentShareConstants_1.default.Modality.substr(1);\n//# sourceMappingURL=DefaultModality.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[VideoTileState]] encapsulates the state of a [[VideoTile]]\n */\nclass VideoTileState {\n    constructor() {\n        /**\n         * The unique identifier for the [[VideoTile]] managed by [[VideoTileController]]. Each attendee can have at most one tileId.\n         */\n        this.tileId = null;\n        /**\n         * Indication of whether tile is associated with local video.\n         */\n        this.localTile = false;\n        /**\n         * Indication of whether the tile associated with the local attendee has started to play.\n         */\n        this.localTileStarted = false;\n        /**\n         * Indication of whether the tile has content-sharing video.\n         */\n        this.isContent = false;\n        /**\n         * Indication of whether the tile has active video stream. This value may be somewhat arbitrary in how it is calculated,\n         * it is recommended to use the more specific values (e.g. `paused`, `boundVideoElement`, and `boundVideoStream`) to\n         * determine activity as appropriate for your application.\n         */\n        this.active = false;\n        /**\n         * Indication of whether the tile has paused video stream.\n         */\n        this.paused = false;\n        /**\n         * Indication of whether the remote video is paused at publishing attendee. This field is not supported.\n         */\n        this.poorConnection = false;\n        /**\n         * The attendee id associated with the [[VideoTile]].\n         */\n        this.boundAttendeeId = null;\n        /**\n         * The user id associated with the [[VideoTile]].\n         */\n        this.boundExternalUserId = null;\n        /**\n         * The video stream bound with the [[VideoTile]].\n         */\n        this.boundVideoStream = null;\n        /**\n         * The HTMLVideoElement bound with the [[VideoTile]].\n         */\n        this.boundVideoElement = null;\n        /**\n         * The nameplate for the [[VideoTile]]. SDK users should use boundExternalUserId for user id instead of this field.\n         */\n        this.nameplate = null;\n        /**\n         * The intrinsic width of the video stream upon binding with the [[VideoTile]].\n         * Video stream intrinsic width could change and developers should use HTMLVideoElement listener for actual intrinsic width.\n         */\n        this.videoStreamContentWidth = null;\n        /**\n         * The intrinsic height of the video stream upon binding with the [[VideoTile]]\n         * Video stream intrinsic height could change and developers should use HTMLVideoElement listener for actual intrinsic height.\n         */\n        this.videoStreamContentHeight = null;\n        /**\n         * The CSS width in pixel of the HTMLVideoElement upon binding with the [[VideoTile]].\n         */\n        this.videoElementCSSWidthPixels = null;\n        /**\n         * The CSS height in pixel of the HTMLVideoElement upon binding with the [[VideoTile]].\n         */\n        this.videoElementCSSHeightPixels = null;\n        /**\n         * The device pixel ratio of the current display monitor.\n         */\n        this.devicePixelRatio = 0;\n        /**\n         * The physical width in pixel of the HTMLVideoElement upon binding with the [[VideoTile]].\n         */\n        this.videoElementPhysicalWidthPixels = null;\n        /**\n         * The physical height in pixel of the HTMLVideoElement upon binding with the [[VideoTile]].\n         */\n        this.videoElementPhysicalHeightPixels = null;\n        /**\n         * The unique identifier published by server to associate with bound video stream. It is defined in [[SignalingProtocol.proto]].\n         * Developers should avoid using this field directly.\n         */\n        this.streamId = null;\n    }\n    clone() {\n        const cloned = new VideoTileState();\n        cloned.tileId = this.tileId;\n        cloned.localTile = this.localTile;\n        cloned.isContent = this.isContent;\n        cloned.active = this.active;\n        cloned.paused = this.paused;\n        cloned.poorConnection = this.poorConnection;\n        cloned.boundAttendeeId = this.boundAttendeeId;\n        cloned.boundExternalUserId = this.boundExternalUserId;\n        cloned.boundVideoStream = this.boundVideoStream;\n        cloned.boundVideoElement = this.boundVideoElement;\n        cloned.nameplate = this.nameplate;\n        cloned.videoStreamContentWidth = this.videoStreamContentWidth;\n        cloned.videoStreamContentHeight = this.videoStreamContentHeight;\n        cloned.videoElementCSSWidthPixels = this.videoElementCSSWidthPixels;\n        cloned.videoElementCSSHeightPixels = this.videoElementCSSHeightPixels;\n        cloned.devicePixelRatio = this.devicePixelRatio;\n        cloned.videoElementPhysicalWidthPixels = this.videoElementPhysicalWidthPixels;\n        cloned.videoElementPhysicalHeightPixels = this.videoElementPhysicalHeightPixels;\n        cloned.streamId = this.streamId;\n        return cloned;\n    }\n}\nexports.default = VideoTileState;\n//# sourceMappingURL=VideoTileState.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\nconst DefaultModality_1 = require(\"../modality/DefaultModality\");\nconst VideoTileState_1 = require(\"./VideoTileState\");\nclass DefaultVideoTile {\n    constructor(tileId, localTile, tileController, devicePixelRatioMonitor) {\n        this.tileController = tileController;\n        this.devicePixelRatioMonitor = devicePixelRatioMonitor;\n        this.tileState = new VideoTileState_1.default();\n        this.tileState.tileId = tileId;\n        this.tileState.localTile = localTile;\n        this.devicePixelRatioMonitor.registerObserver(this);\n    }\n    /**\n     * Connect a video stream to a video element by setting the srcObject of the video element to the video stream.\n     * @param videoStream The video stream input.\n     * @param videoElement The video element input.\n     * @param localTile Flag to indicate whether this is a local video.\n     */\n    static connectVideoStreamToVideoElement(videoStream, videoElement, localTile) {\n        const transform = localTile && videoStream.getVideoTracks()[0].getSettings().facingMode !== 'environment'\n            ? 'rotateY(180deg)'\n            : '';\n        DefaultVideoTile.setVideoElementFlag(videoElement, 'disablePictureInPicture', localTile);\n        DefaultVideoTile.setVideoElementFlag(videoElement, 'disableRemotePlayback', localTile);\n        if (videoElement.style.transform !== transform) {\n            videoElement.style.transform = transform;\n        }\n        if (videoElement.hasAttribute('controls')) {\n            videoElement.removeAttribute('controls');\n        }\n        if (!videoElement.hasAttribute('autoplay')) {\n            videoElement.setAttribute('autoplay', 'true');\n        }\n        // playsinline is needed for video to play in iPhone in non-fullscreen mode.\n        // See https://developer.apple.com/documentation/webkit/safari_tools_and_features/delivering_video_content_for_safari#3030250\n        if (!videoElement.hasAttribute('playsinline')) {\n            videoElement.setAttribute('playsinline', 'true');\n        }\n        // Note that setting the *attribute* 'muted' affects whether the element\n        // is muted *by default* (`.defaultMuted`), not whether it is currently muted (`.muted`).\n        // https://html.spec.whatwg.org/#dom-media-defaultmuted\n        if (!videoElement.hasAttribute('muted')) {\n            // The default value…\n            videoElement.setAttribute('muted', 'true');\n            // … and the value right now.\n            videoElement.muted = true;\n        }\n        if (videoElement.srcObject !== videoStream) {\n            videoElement.srcObject = videoStream;\n            // In Safari, a hidden video element can show a black screen.\n            // See https://bugs.webkit.org/show_bug.cgi?id=241152 for more information.\n            if (new DefaultBrowserBehavior_1.default().requiresVideoPlayWorkaround() && videoElement.paused) {\n                const promise = videoElement.play();\n                // See https://bugs.webkit.org/show_bug.cgi?id=243519 for more information.\n                // https://webkit.org/blog/7734/auto-play-policy-changes-for-macos/\n                /* istanbul ignore else */\n                if (promise !== undefined) {\n                    promise\n                        .catch(error => {\n                        console.warn('Error playing video in Safari', error);\n                    })\n                        .then(() => {\n                        // `then` block is needed, without it we run into black tile issue even though we catch the error.\n                        console.debug('Video played successfully in Safari');\n                    });\n                }\n            }\n        }\n    }\n    /**\n     * Disconnect a video stream from a video element by setting `HTMLVideoElement.srcObject` to `null`.\n     * @param videoElement The video element input.\n     * @param dueToPause A flag to indicate whether this function is called due to pausing video tile.\n     * Based on `keepLastFrameWhenPaused`, it sets `HTMLVideoElement.srcObject` to `null`.\n     * @param keepLastFrameWhenPaused If `true` and `dueToPause` is also `true`, then we will not set `HTMLVideoElement.srcObject` of the\n     * video element to `null` when it is paused and therefore, the last frame of the stream will be shown.\n     */\n    static disconnectVideoStreamFromVideoElement(videoElement, dueToPause, keepLastFrameWhenPaused = false) {\n        if (!videoElement) {\n            return;\n        }\n        if (dueToPause) {\n            if (!keepLastFrameWhenPaused) {\n                videoElement.srcObject = null;\n                videoElement.style.transform = '';\n            }\n        }\n        else {\n            if (!videoElement.srcObject) {\n                return;\n            }\n            videoElement.pause();\n            videoElement.style.transform = '';\n            DefaultVideoTile.setVideoElementFlag(videoElement, 'disablePictureInPicture', false);\n            DefaultVideoTile.setVideoElementFlag(videoElement, 'disableRemotePlayback', false);\n            videoElement.srcObject = null;\n        }\n    }\n    destroy() {\n        this.devicePixelRatioMonitor.removeObserver(this);\n        if (this.tileState.boundVideoElement &&\n            this.tileState.boundVideoElement.srcObject === this.tileState.boundVideoStream) {\n            DefaultVideoTile.disconnectVideoStreamFromVideoElement(this.tileState.boundVideoElement, false);\n        }\n        this.tileState = new VideoTileState_1.default();\n    }\n    devicePixelRatioChanged(newDevicePixelRatio) {\n        this.tileState.devicePixelRatio = newDevicePixelRatio;\n        this.sendTileStateUpdate();\n    }\n    id() {\n        return this.tileState.tileId;\n    }\n    state() {\n        return this.tileState.clone();\n    }\n    stateRef() {\n        return this.tileState;\n    }\n    bindVideoStream(attendeeId, localTile, mediaStream, contentWidth, contentHeight, streamId, externalUserId) {\n        let tileUpdated = false;\n        if (this.tileState.boundAttendeeId !== attendeeId) {\n            this.tileState.boundAttendeeId = attendeeId;\n            if (new DefaultModality_1.default(attendeeId).hasModality(DefaultModality_1.default.MODALITY_CONTENT)) {\n                this.tileState.isContent = true;\n            }\n            tileUpdated = true;\n        }\n        if (this.tileState.boundExternalUserId !== externalUserId) {\n            this.tileState.boundExternalUserId = externalUserId;\n            tileUpdated = true;\n        }\n        if (this.tileState.localTile !== localTile) {\n            this.tileState.localTile = localTile;\n            tileUpdated = true;\n        }\n        if (this.tileState.boundVideoStream !== mediaStream) {\n            this.tileState.boundVideoStream = mediaStream;\n            tileUpdated = true;\n        }\n        if (this.tileState.videoStreamContentWidth !== contentWidth) {\n            this.tileState.videoStreamContentWidth = contentWidth;\n            tileUpdated = true;\n        }\n        if (this.tileState.videoStreamContentHeight !== contentHeight) {\n            this.tileState.videoStreamContentHeight = contentHeight;\n            tileUpdated = true;\n        }\n        if (this.tileState.streamId !== streamId) {\n            this.tileState.streamId = streamId;\n            tileUpdated = true;\n        }\n        if (tileUpdated) {\n            this.sendTileStateUpdate();\n        }\n    }\n    bindVideoElement(videoElement) {\n        let tileUpdated = false;\n        if (this.tileState.boundVideoElement !== videoElement) {\n            this.tileState.boundVideoElement = videoElement;\n            tileUpdated = true;\n        }\n        if (this.tileState.boundVideoElement !== null) {\n            if (this.tileState.videoElementCSSWidthPixels !== videoElement.clientWidth) {\n                this.tileState.videoElementCSSWidthPixels = videoElement.clientWidth;\n                tileUpdated = true;\n            }\n            if (this.tileState.videoElementCSSHeightPixels !== videoElement.clientHeight) {\n                this.tileState.videoElementCSSHeightPixels = videoElement.clientHeight;\n                tileUpdated = true;\n            }\n        }\n        else {\n            this.tileState.videoElementCSSWidthPixels = null;\n            this.tileState.videoElementCSSHeightPixels = null;\n        }\n        if (tileUpdated) {\n            this.sendTileStateUpdate();\n        }\n    }\n    pause() {\n        if (!this.tileState.paused) {\n            this.tileState.paused = true;\n            this.sendTileStateUpdate();\n        }\n    }\n    unpause() {\n        if (this.tileState.paused) {\n            this.tileState.paused = false;\n            this.sendTileStateUpdate();\n        }\n    }\n    markPoorConnection() {\n        if (this.tileState.poorConnection) {\n            return false;\n        }\n        this.tileState.poorConnection = true;\n        this.sendTileStateUpdate();\n        return true;\n    }\n    unmarkPoorConnection() {\n        if (!this.tileState.poorConnection) {\n            return false;\n        }\n        this.tileState.poorConnection = false;\n        this.sendTileStateUpdate();\n        return true;\n    }\n    capture() {\n        if (!this.tileState.active) {\n            return null;\n        }\n        const canvas = document.createElement('canvas');\n        const video = this.tileState.boundVideoElement;\n        canvas.width = video.videoWidth || video.width;\n        canvas.height = video.videoHeight || video.height;\n        const ctx = canvas.getContext('2d');\n        ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n        return ctx.getImageData(0, 0, canvas.width, canvas.height);\n    }\n    setStreamId(id) {\n        this.tileState.streamId = id;\n        // `streamId` is not likely used by builders but we can't\n        // be sure so send a tile state update just in case.\n        this.tileController.sendTileStateUpdate(this.state());\n    }\n    sendTileStateUpdate() {\n        this.updateActiveState();\n        this.updateVideoStreamOnVideoElement();\n        this.updateVideoElementPhysicalPixels();\n        this.tileController.sendTileStateUpdate(this.state());\n    }\n    updateActiveState() {\n        this.tileState.active = !!(!this.tileState.paused &&\n            !this.tileState.poorConnection &&\n            this.tileState.boundAttendeeId &&\n            this.tileState.boundVideoElement &&\n            this.tileState.boundVideoStream);\n    }\n    updateVideoElementPhysicalPixels() {\n        if (typeof this.tileState.videoElementCSSWidthPixels === 'number' &&\n            typeof this.tileState.videoElementCSSHeightPixels === 'number') {\n            this.tileState.videoElementPhysicalWidthPixels =\n                this.tileState.devicePixelRatio * this.tileState.videoElementCSSWidthPixels;\n            this.tileState.videoElementPhysicalHeightPixels =\n                this.tileState.devicePixelRatio * this.tileState.videoElementCSSHeightPixels;\n        }\n        else {\n            this.tileState.videoElementPhysicalWidthPixels = null;\n            this.tileState.videoElementPhysicalHeightPixels = null;\n        }\n    }\n    updateVideoStreamOnVideoElement() {\n        if (this.tileState.active) {\n            DefaultVideoTile.connectVideoStreamToVideoElement(this.tileState.boundVideoStream, this.tileState.boundVideoElement, this.tileState.localTile);\n        }\n        else {\n            DefaultVideoTile.disconnectVideoStreamFromVideoElement(this.tileState.boundVideoElement, this.tileState.paused, this.tileController.keepLastFrameWhenPaused);\n        }\n    }\n    static setVideoElementFlag(videoElement, flag, value) {\n        if (flag in videoElement) {\n            // @ts-ignore\n            videoElement[flag] = value;\n        }\n    }\n}\nexports.default = DefaultVideoTile;\n//# sourceMappingURL=DefaultVideoTile.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isAudioTransformDevice = void 0;\n/**\n * `isAudioTransformDevice` is a type guard for {@link AudioTransformDevice}.\n *\n * @param device the value to check.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/explicit-module-boundary-types\nfunction isAudioTransformDevice(device) {\n    return (!!device &&\n        typeof device === 'object' &&\n        'mute' in device &&\n        'stop' in device &&\n        'intrinsicDevice' in device);\n}\nexports.isAudioTransformDevice = isAudioTransformDevice;\n//# sourceMappingURL=AudioTransformDevice.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass DeviceSelection {\n    constructor() {\n        this.groupId = '';\n    }\n    matchesConstraints(constraints) {\n        return JSON.stringify(this.constraints) === JSON.stringify(constraints);\n    }\n}\nexports.default = DeviceSelection;\n//# sourceMappingURL=DeviceSelection.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass GetUserMediaError extends Error {\n    constructor(cause, message) {\n        super(message || 'Error fetching device.');\n        this.cause = cause;\n        this.name = 'GetUserMediaError';\n    }\n}\nexports.default = GetUserMediaError;\n//# sourceMappingURL=GetUserMediaError.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst GetUserMediaError_1 = require(\"./GetUserMediaError\");\nclass NotFoundError extends GetUserMediaError_1.default {\n    constructor(cause) {\n        super(cause);\n        this.name = 'NotFoundError';\n    }\n}\nexports.default = NotFoundError;\n//# sourceMappingURL=NotFoundError.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst GetUserMediaError_1 = require(\"./GetUserMediaError\");\nclass NotReadableError extends GetUserMediaError_1.default {\n    constructor(cause) {\n        super(cause);\n        this.name = 'NotReadableError';\n    }\n}\nexports.default = NotReadableError;\n//# sourceMappingURL=NotReadableError.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst GetUserMediaError_1 = require(\"./GetUserMediaError\");\nclass OverconstrainedError extends GetUserMediaError_1.default {\n    constructor(cause, constraint) {\n        super(cause);\n        this.constraint = constraint;\n        this.name = 'OverconstrainedError';\n    }\n}\nexports.default = OverconstrainedError;\n//# sourceMappingURL=OverconstrainedError.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst GetUserMediaError_1 = require(\"./GetUserMediaError\");\nclass PermissionDeniedError extends GetUserMediaError_1.default {\n    constructor(cause, message) {\n        super(cause, message);\n        this.name = 'PermissionDeniedError';\n    }\n}\nexports.default = PermissionDeniedError;\n//# sourceMappingURL=PermissionDeniedError.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst GetUserMediaError_1 = require(\"./GetUserMediaError\");\nclass TypeError extends GetUserMediaError_1.default {\n    constructor(cause) {\n        super(cause);\n        this.name = 'TypeError';\n    }\n}\nexports.default = TypeError;\n//# sourceMappingURL=TypeError.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass VideoQualitySettings {\n    constructor(videoWidth, videoHeight, videoFrameRate) {\n        this.videoWidth = videoWidth;\n        this.videoHeight = videoHeight;\n        this.videoFrameRate = videoFrameRate;\n    }\n}\nexports.default = VideoQualitySettings;\n//# sourceMappingURL=VideoQualitySettings.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isVideoTransformDevice = void 0;\n/**\n * `isVideoTransformDevice` is a type guard for {@link VideoTransformDevice}.\n *\n * @param device the value to check.\n */\nfunction isVideoTransformDevice(device) {\n    return (!!device &&\n        typeof device === 'object' &&\n        'transformStream' in device &&\n        'stop' in device &&\n        'intrinsicDevice' in device);\n}\nexports.isVideoTransformDevice = isVideoTransformDevice;\n//# sourceMappingURL=VideoTransformDevice.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\nconst DefaultMediaDeviceFactory_1 = require(\"../mediadevicefactory/DefaultMediaDeviceFactory\");\nconst AsyncScheduler_1 = require(\"../scheduler/AsyncScheduler\");\nconst PromiseQueue_1 = require(\"../utils/PromiseQueue\");\nconst Types_1 = require(\"../utils/Types\");\nconst DefaultVideoTile_1 = require(\"../videotile/DefaultVideoTile\");\nconst AudioTransformDevice_1 = require(\"./AudioTransformDevice\");\nconst DeviceSelection_1 = require(\"./DeviceSelection\");\nconst GetUserMediaError_1 = require(\"./GetUserMediaError\");\nconst NotFoundError_1 = require(\"./NotFoundError\");\nconst NotReadableError_1 = require(\"./NotReadableError\");\nconst OverconstrainedError_1 = require(\"./OverconstrainedError\");\nconst PermissionDeniedError_1 = require(\"./PermissionDeniedError\");\nconst TypeError_1 = require(\"./TypeError\");\nconst VideoQualitySettings_1 = require(\"./VideoQualitySettings\");\nconst VideoTransformDevice_1 = require(\"./VideoTransformDevice\");\nclass DefaultDeviceController {\n    constructor(logger, options, browserBehavior = new DefaultBrowserBehavior_1.default(), eventController) {\n        this.logger = logger;\n        this.browserBehavior = browserBehavior;\n        this.eventController = eventController;\n        this.deviceInfoCache = null;\n        this.activeDevices = { audio: null, video: null };\n        // `chosenVideoTransformDevice` is tracked and owned by device controller.\n        // It is saved when `chooseVideoInputDevice` is called with VideoTransformDevice object.\n        this.chosenVideoTransformDevice = null;\n        this.audioOutputDeviceId = undefined;\n        this.deviceChangeObservers = new Set();\n        this.mediaStreamBrokerObservers = new Set();\n        this.deviceLabelTrigger = () => {\n            return navigator.mediaDevices.getUserMedia({ audio: true, video: true });\n        };\n        this.audioInputDestinationNode = null;\n        this.audioInputSourceNode = null;\n        this.videoInputQualitySettings = null;\n        this.useWebAudio = false;\n        this.useMediaConstraintsFallback = true;\n        this.audioInputTaskQueue = new PromiseQueue_1.default();\n        this.videoInputTaskQueue = new PromiseQueue_1.default();\n        this.muted = false;\n        // This handles the dispatch of `mute` and `unmute` events from audio tracks.\n        // There's a bit of a semantic mismatch here if input streams allow individual component tracks to be muted,\n        // but addressing that gap is not feasible in our stream-oriented world.\n        this.mediaStreamMuteObserver = (id, muted) => {\n            for (const observer of this.deviceChangeObservers) {\n                AsyncScheduler_1.default.nextTick(() => {\n                    /* istanbul ignore else */\n                    if (this.deviceChangeObservers.has(observer) && observer.audioInputMuteStateChanged) {\n                        observer.audioInputMuteStateChanged(id, muted);\n                    }\n                });\n            }\n        };\n        this.alreadyHandlingDeviceChange = false;\n        const { enableWebAudio = false, useMediaConstraintsFallback = true } = options || {};\n        this.useWebAudio = enableWebAudio;\n        this.useMediaConstraintsFallback = useMediaConstraintsFallback;\n        this.videoInputQualitySettings = new VideoQualitySettings_1.default(DefaultDeviceController.defaultVideoWidth, DefaultDeviceController.defaultVideoHeight, DefaultDeviceController.defaultVideoFrameRate);\n        const dimension = this.browserBehavior.requiresResolutionAlignment(this.videoInputQualitySettings.videoWidth, this.videoInputQualitySettings.videoHeight);\n        this.videoInputQualitySettings.videoWidth = dimension[0];\n        this.videoInputQualitySettings.videoHeight = dimension[1];\n        this.logger.info(`DefaultDeviceController video dimension ${this.videoInputQualitySettings.videoWidth} x ${this.videoInputQualitySettings.videoHeight}`);\n        try {\n            this.mediaDeviceWrapper = new DefaultMediaDeviceFactory_1.default().create();\n            const supportedConstraints = navigator.mediaDevices.getSupportedConstraints();\n            this.logger.info(`Supported Constraints in this browser ${JSON.stringify(supportedConstraints)}`);\n        }\n        catch (error) {\n            logger.error(error.message);\n        }\n    }\n    isWatchingForDeviceChanges() {\n        return !!this.onDeviceChangeCallback;\n    }\n    ensureWatchingDeviceChanges() {\n        var _a;\n        if (this.isWatchingForDeviceChanges()) {\n            return;\n        }\n        this.logger.info('Starting devicechange listener.');\n        this.onDeviceChangeCallback = () => {\n            this.logger.info('Device change event callback is triggered');\n            this.handleDeviceChange();\n        };\n        (_a = this.mediaDeviceWrapper) === null || _a === void 0 ? void 0 : _a.addEventListener('devicechange', this.onDeviceChangeCallback);\n    }\n    /**\n     * Unsubscribe from the `devicechange` event, which allows the device controller to\n     * update its device cache.\n     */\n    stopWatchingDeviceChanges() {\n        var _a;\n        if (!this.isWatchingForDeviceChanges()) {\n            return;\n        }\n        this.logger.info('Stopping devicechange listener.');\n        (_a = this.mediaDeviceWrapper) === null || _a === void 0 ? void 0 : _a.removeEventListener('devicechange', this.onDeviceChangeCallback);\n        this.onDeviceChangeCallback = undefined;\n    }\n    shouldObserveDeviceChanges() {\n        if (this.deviceChangeObservers.size) {\n            return true;\n        }\n        const hasActiveDevices = (this.activeDevices['audio'] && this.activeDevices['audio'].constraints !== null) ||\n            (this.activeDevices['video'] && this.activeDevices['video'].constraints !== null) ||\n            !!this.audioOutputDeviceId;\n        return hasActiveDevices;\n    }\n    watchForDeviceChangesIfNecessary() {\n        if (this.shouldObserveDeviceChanges()) {\n            this.ensureWatchingDeviceChanges();\n        }\n        else {\n            this.stopWatchingDeviceChanges();\n        }\n    }\n    destroy() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Remove device change callbacks.\n            this.stopWatchingDeviceChanges();\n            // Deselect any audio input devices and throw away the streams.\n            // Discard the current video device, if there is one.\n            // Discard any audio or video transforms.\n            yield this.stopAudioInput();\n            yield this.stopVideoInput();\n        });\n    }\n    listAudioInputDevices(forceUpdate = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.listDevicesOfKind('audioinput', forceUpdate);\n            this.trace('listAudioInputDevices', forceUpdate, result);\n            return result;\n        });\n    }\n    listVideoInputDevices(forceUpdate = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.listDevicesOfKind('videoinput', forceUpdate);\n            this.trace('listVideoInputDevices', forceUpdate, result);\n            return result;\n        });\n    }\n    listAudioOutputDevices(forceUpdate = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.listDevicesOfKind('audiooutput', forceUpdate);\n            this.trace('listAudioOutputDevices', forceUpdate, result);\n            return result;\n        });\n    }\n    pushAudioMeetingStateForPermissions(audioStream) {\n        var _a;\n        (_a = this.eventController) === null || _a === void 0 ? void 0 : _a.publishEvent(audioStream === undefined ? 'audioInputUnselected' : 'audioInputSelected');\n    }\n    pushVideoMeetingStateForPermissions(videoStream) {\n        var _a;\n        (_a = this.eventController) === null || _a === void 0 ? void 0 : _a.publishEvent(videoStream === undefined ? 'videoInputUnselected' : 'videoInputSelected');\n    }\n    startAudioInput(device) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.audioInputTaskQueue.add(() => this.startAudioInputTask(device));\n        });\n    }\n    startAudioInputTask(device) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (device === undefined) {\n                this.logger.error('Audio input device cannot be undefined');\n                return undefined;\n            }\n            try {\n                if (AudioTransformDevice_1.isAudioTransformDevice(device)) {\n                    // N.B., do not JSON.stringify here — for some kinds of devices this\n                    // will cause a cyclic object reference error.\n                    this.logger.info(`Choosing transform input device ${device}`);\n                    yield this.chooseAudioTransformInputDevice(device);\n                }\n                else {\n                    this.logger.info(`Choosing intrinsic audio input device ${device}`);\n                    this.removeTransform();\n                    yield this.chooseInputIntrinsicDevice('audio', device);\n                }\n                this.trace('startAudioInputDevice', device, `success`);\n                // For web audio, the audio destination stream stays the same so audio input did not change\n                if (this.useWebAudio) {\n                    this.attachAudioInputStreamToAudioContext(this.activeDevices['audio'].stream);\n                    this.pushAudioMeetingStateForPermissions(this.getMediaStreamDestinationNode().stream);\n                    yield ((_a = this.transform) === null || _a === void 0 ? void 0 : _a.device.mute(this.muted));\n                    return this.getMediaStreamDestinationNode().stream;\n                }\n                else {\n                    this.publishAudioInputDidChangeEvent(this.activeDevices['audio'].stream);\n                    return this.activeDevices['audio'].stream;\n                }\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    stopAudioInput() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.audioInputTaskQueue.add(() => this.stopAudioInputTask());\n        });\n    }\n    stopAudioInputTask() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (this.useWebAudio) {\n                    this.releaseAudioTransformStream();\n                    return;\n                }\n                this.stopTracksAndRemoveCallbacks('audio');\n            }\n            finally {\n                this.watchForDeviceChangesIfNecessary();\n                this.publishAudioInputDidChangeEvent(undefined);\n            }\n        });\n    }\n    chooseAudioTransformInputDevice(device) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (((_a = this.transform) === null || _a === void 0 ? void 0 : _a.device) === device) {\n                return;\n            }\n            if (!this.useWebAudio) {\n                throw new Error('Cannot apply transform device without enabling Web Audio.');\n            }\n            const context = DefaultDeviceController.getAudioContext();\n            if (context instanceof OfflineAudioContext) {\n                // Nothing to do.\n            }\n            else {\n                switch (context.state) {\n                    case 'running':\n                        // Nothing to do.\n                        break;\n                    case 'closed':\n                        // A closed context cannot be used for creating nodes, so the correct\n                        // thing to do is to raise a descriptive error sooner.\n                        throw new Error('Cannot choose a transform device with a closed audio context.');\n                    case 'suspended':\n                        // A context might be suspended after page load. We try to resume it\n                        // here, otherwise audio won't work.\n                        yield context.resume();\n                }\n            }\n            let nodes;\n            try {\n                nodes = yield device.createAudioNode(context);\n            }\n            catch (e) {\n                this.logger.error(`Unable to create transform device node: ${e}.`);\n                throw e;\n            }\n            // Pick the plain ol' inner device as the source. It will be\n            // connected to the node.\n            const inner = yield device.intrinsicDevice();\n            yield this.chooseInputIntrinsicDevice('audio', inner);\n            this.logger.debug(`Got inner stream: ${inner}.`);\n            // Otherwise, continue: hook up the new node.\n            this.setTransform(device, nodes);\n        });\n    }\n    chooseVideoTransformInputDevice(device) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (device === this.chosenVideoTransformDevice) {\n                this.logger.info('Reselecting same VideoTransformDevice');\n                return;\n            }\n            const prevVideoTransformDevice = this.chosenVideoTransformDevice;\n            if (prevVideoTransformDevice) {\n                this.logger.info('Switched from previous VideoTransformDevice');\n            }\n            const wasUsingTransformDevice = !!prevVideoTransformDevice;\n            const inner = yield device.intrinsicDevice();\n            const canReuseMediaStream = this.isMediaStreamReusableByDeviceId((_a = this.activeDevices['video']) === null || _a === void 0 ? void 0 : _a.stream, inner);\n            if (!canReuseMediaStream) {\n                this.logger.info('video transform device needs new intrinsic device');\n                if (wasUsingTransformDevice) {\n                    // detach input media stream - turn off the camera or leave it be if inner is media stream\n                    prevVideoTransformDevice.onOutputStreamDisconnect();\n                }\n                this.chosenVideoTransformDevice = device;\n                // VideoTransformDevice owns input MediaStream\n                this.activeDevices['video'] = null;\n                yield this.chooseInputIntrinsicDevice('video', inner);\n                this.logger.info('apply processors to transform');\n                yield this.chosenVideoTransformDevice.transformStream(this.activeDevices['video'].stream);\n                return;\n            }\n            // When saved stream is reusable, only switch the saved stream to filtered stream for sending\n            // but keep the saved stream intact.\n            // Note: to keep the chosen media stream intact, it is important to avoid a full stop\n            // because videoTileUpdate can be called when video is stopped and user might call `bindVideoElement` to disconnect the element.\n            // In current implementation, disconnecting the element will `hard` stop the media stream.\n            // Update device and stream\n            this.chosenVideoTransformDevice = device;\n            this.logger.info('video transform device uses previous stream');\n            // `transformStream` will start processing.\n            this.logger.info('apply processors to transform');\n            yield device.transformStream(this.activeDevices['video'].stream);\n        });\n    }\n    startVideoInput(device) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.videoInputTaskQueue.add(() => this.startVideoInputTask(device));\n        });\n    }\n    startVideoInputTask(device) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!device) {\n                this.logger.error('Invalid video input device');\n                return undefined;\n            }\n            try {\n                if (VideoTransformDevice_1.isVideoTransformDevice(device)) {\n                    this.logger.info(`Choosing video transform device ${device}`);\n                    yield this.chooseVideoTransformInputDevice(device);\n                    this.publishVideoInputDidChangeEvent(this.chosenVideoTransformDevice.outputMediaStream);\n                    return this.chosenVideoTransformDevice.outputMediaStream;\n                }\n                // handle direct switching from VideoTransformDevice to Device\n                // From WebRTC point, it is a device switching.\n                if (this.chosenVideoInputIsTransformDevice()) {\n                    // disconnect old stream\n                    this.chosenVideoTransformDevice.onOutputStreamDisconnect();\n                    this.chosenVideoTransformDevice = null;\n                }\n                yield this.chooseInputIntrinsicDevice('video', device);\n                this.trace('startVideoInputDevice', device);\n                this.publishVideoInputDidChangeEvent(this.activeDevices['video'].stream);\n                return this.activeDevices['video'].stream;\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    stopVideoInput() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.videoInputTaskQueue.add(() => this.stopVideoInputTask());\n        });\n    }\n    stopVideoInputTask() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (this.chosenVideoInputIsTransformDevice()) {\n                    this.releaseVideoTransformStream();\n                    return;\n                }\n                this.stopTracksAndRemoveCallbacks('video');\n            }\n            finally {\n                this.watchForDeviceChangesIfNecessary();\n                this.publishVideoInputDidChangeEvent(undefined);\n            }\n        });\n    }\n    chooseAudioOutput(deviceId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.audioOutputDeviceId = deviceId;\n            this.watchForDeviceChangesIfNecessary();\n            const deviceInfo = this.deviceInfoFromDeviceId('audiooutput', this.audioOutputDeviceId);\n            this.publishAudioOutputDidChangeEvent(deviceInfo);\n            this.trace('chooseAudioOutput', deviceId, null);\n            return;\n        });\n    }\n    addDeviceChangeObserver(observer) {\n        this.logger.info('adding device change observer');\n        this.deviceChangeObservers.add(observer);\n        this.watchForDeviceChangesIfNecessary();\n        this.trace('addDeviceChangeObserver');\n    }\n    removeDeviceChangeObserver(observer) {\n        this.logger.info('removing device change observer');\n        this.deviceChangeObservers.delete(observer);\n        this.watchForDeviceChangesIfNecessary();\n        this.trace('removeDeviceChangeObserver');\n    }\n    createAnalyserNodeForAudioInput() {\n        var _a, _b;\n        if (!this.activeDevices['audio']) {\n            return null;\n        }\n        // If there is a WebAudio node in the graph, we use that as the source instead of the stream.\n        const node = (_b = (_a = this.transform) === null || _a === void 0 ? void 0 : _a.nodes) === null || _b === void 0 ? void 0 : _b.end;\n        if (node) {\n            const analyser = node.context.createAnalyser();\n            analyser.removeOriginalInputs = () => {\n                try {\n                    node.disconnect(analyser);\n                }\n                catch (e) {\n                    // This can fail in some unusual cases, but this is best-effort.\n                }\n            };\n            node.connect(analyser);\n            return analyser;\n        }\n        return this.createAnalyserNodeForRawAudioInput();\n    }\n    //\n    // N.B., this bypasses any applied transform node.\n    //\n    createAnalyserNodeForRawAudioInput() {\n        if (!this.activeDevices['audio']) {\n            return null;\n        }\n        return this.createAnalyserNodeForStream(this.activeDevices['audio'].stream);\n    }\n    createAnalyserNodeForStream(stream) {\n        const audioContext = DefaultDeviceController.getAudioContext();\n        const analyser = audioContext.createAnalyser();\n        const source = audioContext.createMediaStreamSource(stream);\n        source.connect(analyser);\n        this.trace('createAnalyserNodeForAudioInput');\n        analyser.removeOriginalInputs = () => {\n            try {\n                source.disconnect(analyser);\n            }\n            catch (e) {\n                // This can fail in some unusual cases, but this is best-effort.\n            }\n        };\n        return analyser;\n    }\n    startVideoPreviewForVideoInput(element) {\n        if (!this.activeDevices['video']) {\n            this.logger.warn('cannot bind video preview since video input device has not been chosen');\n            this.trace('startVideoPreviewForVideoInput', element.id);\n            return;\n        }\n        DefaultVideoTile_1.default.connectVideoStreamToVideoElement(this.chosenVideoTransformDevice\n            ? this.chosenVideoTransformDevice.outputMediaStream\n            : this.activeDevices['video'].stream, element, true);\n        this.trace('startVideoPreviewForVideoInput', element.id);\n    }\n    stopVideoPreviewForVideoInput(element) {\n        DefaultVideoTile_1.default.disconnectVideoStreamFromVideoElement(element, false);\n        this.trace('stopVideoPreviewForVideoInput', element.id);\n    }\n    setDeviceLabelTrigger(trigger) {\n        // Discard the cache if it was populated with unlabeled devices.\n        if (this.deviceInfoCache) {\n            for (const device of this.deviceInfoCache) {\n                if (!device.label) {\n                    this.deviceInfoCache = null;\n                    break;\n                }\n            }\n        }\n        this.deviceLabelTrigger = trigger;\n        this.trace('setDeviceLabelTrigger');\n    }\n    mixIntoAudioInput(stream) {\n        let node = null;\n        if (this.useWebAudio) {\n            node = DefaultDeviceController.getAudioContext().createMediaStreamSource(stream);\n            node.connect(this.getMediaStreamOutputNode());\n        }\n        else {\n            this.logger.warn('WebAudio is not enabled, mixIntoAudioInput will not work');\n        }\n        this.trace('mixIntoAudioInput', stream.id);\n        return node;\n    }\n    chooseVideoInputQuality(width, height, frameRate) {\n        const dimension = this.browserBehavior.requiresResolutionAlignment(width, height);\n        this.videoInputQualitySettings = new VideoQualitySettings_1.default(dimension[0], dimension[1], frameRate);\n    }\n    getVideoInputQualitySettings() {\n        return this.videoInputQualitySettings;\n    }\n    acquireAudioInputStream() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.activeDevices['audio']) {\n                this.logger.info(`No audio device chosen, creating empty audio device`);\n                yield this.startAudioInput(null);\n            }\n            if (this.useWebAudio) {\n                const dest = this.getMediaStreamDestinationNode();\n                return dest.stream;\n            }\n            return this.activeDevices['audio'].stream;\n        });\n    }\n    acquireVideoInputStream() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.activeDevices['video']) {\n                throw new Error(`No video device chosen`);\n            }\n            if (this.chosenVideoInputIsTransformDevice()) {\n                return this.chosenVideoTransformDevice.outputMediaStream;\n            }\n            return this.activeDevices['video'].stream;\n        });\n    }\n    acquireDisplayInputStream(_streamConstraints) {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new Error('unsupported');\n        });\n    }\n    /**\n     *\n     * We need to do three things to clean up audio input\n     *\n     * * Close the tracks of the source stream.\n     * * Remove the transform.\n     * * Clean up the intrinsic stream's callback -- that's the stream that's tracked in\n     *   `activeDevices` and needs to have its callbacks removed.\n     */\n    releaseAudioTransformStream() {\n        this.logger.info('Stopping audio track for Web Audio graph');\n        this.stopTracksAndRemoveCallbacks('audio');\n        this.logger.info('Removing audio transform, if there is one.');\n        this.removeTransform();\n        // Remove the input and output nodes. They will be recreated later if\n        // needed.\n        /* istanbul ignore else */\n        if (this.audioInputSourceNode) {\n            this.audioInputSourceNode.disconnect();\n            this.audioInputSourceNode = undefined;\n        }\n        /* istanbul ignore else */\n        if (this.audioInputDestinationNode) {\n            this.audioInputDestinationNode.disconnect();\n            this.audioInputDestinationNode = undefined;\n        }\n    }\n    /**\n     *\n     * We need to do three things to clean up video input\n     *\n     * * Close the tracks of the source stream.\n     * * Remove the transform.\n     * * Clean up the intrinsic stream's callback -- that's the stream that's tracked in\n     *   `activeDevices` and needs to have its callbacks removed.\n     */\n    releaseVideoTransformStream() {\n        this.logger.info('Stopping video track for transform');\n        this.stopTracksAndRemoveCallbacks('video');\n        this.logger.info('Disconnecting video transform');\n        this.chosenVideoTransformDevice.onOutputStreamDisconnect();\n        this.chosenVideoTransformDevice = null;\n    }\n    stopTracksAndRemoveCallbacks(kind) {\n        const activeDevice = this.activeDevices[kind];\n        // Just-in-case error handling.\n        /* istanbul ignore if */\n        if (!activeDevice) {\n            return;\n        }\n        /* istanbul ignore next */\n        const endedCallback = activeDevice.endedCallback;\n        const trackMuteCallback = activeDevice.trackMuteCallback;\n        const trackUnmuteCallback = activeDevice.trackUnmuteCallback;\n        for (const track of activeDevice.stream.getTracks()) {\n            track.stop();\n            /* istanbul ignore else */\n            if (endedCallback) {\n                track.removeEventListener('ended', endedCallback);\n            }\n            /* istanbul ignore else */\n            if (trackMuteCallback) {\n                track.removeEventListener('mute', trackMuteCallback);\n            }\n            /* istanbul ignore else */\n            if (trackUnmuteCallback) {\n                track.removeEventListener('unmute', trackUnmuteCallback);\n            }\n            delete activeDevice.endedCallback;\n            delete activeDevice.trackMuteCallback;\n            delete activeDevice.trackUnmuteCallback;\n            delete this.activeDevices[kind];\n        }\n    }\n    chosenVideoInputIsTransformDevice() {\n        return !!this.chosenVideoTransformDevice;\n    }\n    muteLocalAudioInputStream() {\n        this.toggleLocalAudioInputStream(false);\n    }\n    unmuteLocalAudioInputStream() {\n        this.toggleLocalAudioInputStream(true);\n    }\n    toggleLocalAudioInputStream(enabled) {\n        var _a;\n        let audioDevice = this.activeDevices['audio'];\n        if (this.useWebAudio) {\n            audioDevice = this.getMediaStreamDestinationNode();\n        }\n        if (!audioDevice) {\n            return;\n        }\n        for (const track of audioDevice.stream.getTracks()) {\n            if (track.enabled === enabled) {\n                continue;\n            }\n            track.enabled = enabled;\n        }\n        if (this.muted !== !enabled) {\n            this.muted = !enabled;\n            (_a = this.transform) === null || _a === void 0 ? void 0 : _a.device.mute(this.muted);\n        }\n    }\n    static getIntrinsicDeviceId(device) {\n        if (!device) {\n            return undefined;\n        }\n        if (typeof device === 'string') {\n            return device;\n        }\n        if (device.id) {\n            return device.id;\n        }\n        const constraints = device;\n        const deviceIdConstraints = constraints.deviceId;\n        if (!deviceIdConstraints) {\n            return undefined;\n        }\n        if (typeof deviceIdConstraints === 'string' || Array.isArray(deviceIdConstraints)) {\n            return deviceIdConstraints;\n        }\n        const constraintStringParams = deviceIdConstraints;\n        if (typeof constraintStringParams.exact === 'string' ||\n            Array.isArray(constraintStringParams.exact)) {\n            return constraintStringParams.exact;\n        }\n        return undefined;\n    }\n    static createEmptyAudioDevice() {\n        return DefaultDeviceController.synthesizeAudioDevice(0);\n    }\n    static synthesizeAudioDevice(toneHz) {\n        const audioContext = DefaultDeviceController.getAudioContext();\n        const outputNode = audioContext.createMediaStreamDestination();\n        if (!toneHz) {\n            const source = audioContext.createBufferSource();\n            // The AudioContext object uses the sample rate of the default output device\n            // if not specified. Creating an AudioBuffer object with the output device's\n            // sample rate fails in some browsers, e.g. Safari with a Bluetooth headphone.\n            try {\n                source.buffer = audioContext.createBuffer(1, audioContext.sampleRate * 5, audioContext.sampleRate);\n            }\n            catch (error) {\n                if (error && error.name === 'NotSupportedError') {\n                    source.buffer = audioContext.createBuffer(1, DefaultDeviceController.defaultSampleRate * 5, DefaultDeviceController.defaultSampleRate);\n                }\n                else {\n                    throw error;\n                }\n            }\n            // Some browsers will not play audio out the MediaStreamDestination\n            // unless there is actually audio to play, so we add a small amount of\n            // noise here to ensure that audio is played out.\n            source.buffer.getChannelData(0)[0] = 0.0003;\n            source.loop = true;\n            source.connect(outputNode);\n            source.start();\n        }\n        else {\n            const gainNode = audioContext.createGain();\n            gainNode.gain.value = 0.1;\n            gainNode.connect(outputNode);\n            const oscillatorNode = audioContext.createOscillator();\n            oscillatorNode.frequency.value = toneHz;\n            oscillatorNode.connect(gainNode);\n            oscillatorNode.start();\n        }\n        return outputNode.stream;\n    }\n    listDevicesOfKind(deviceKind, forceUpdate) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (forceUpdate || this.deviceInfoCache === null || !this.isWatchingForDeviceChanges()) {\n                yield this.updateDeviceInfoCacheFromBrowser();\n            }\n            return this.listCachedDevicesOfKind(deviceKind);\n        });\n    }\n    updateDeviceInfoCacheFromBrowser() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const doesNotHaveAccessToMediaDevices = typeof MediaDeviceInfo === 'undefined';\n            if (doesNotHaveAccessToMediaDevices) {\n                this.deviceInfoCache = [];\n                return;\n            }\n            let devices = yield navigator.mediaDevices.enumerateDevices();\n            let hasDeviceLabels = true;\n            for (const device of devices) {\n                if (!device.label) {\n                    hasDeviceLabels = false;\n                    break;\n                }\n            }\n            if (!hasDeviceLabels) {\n                try {\n                    this.logger.info('attempting to trigger media device labels since they are hidden');\n                    const triggerStream = yield this.deviceLabelTrigger();\n                    devices = yield navigator.mediaDevices.enumerateDevices();\n                    for (const track of triggerStream.getTracks()) {\n                        track.stop();\n                    }\n                }\n                catch (err) {\n                    this.logger.info('unable to get media device labels');\n                    (_a = this.eventController) === null || _a === void 0 ? void 0 : _a.publishEvent('audioInputFailed', {\n                        audioInputErrorMessage: this.getErrorMessage(err),\n                    });\n                    (_b = this.eventController) === null || _b === void 0 ? void 0 : _b.publishEvent('videoInputFailed', {\n                        videoInputErrorMessage: this.getErrorMessage(err),\n                    });\n                }\n            }\n            this.logger.debug(`Update device info cache with devices: ${JSON.stringify(devices)}`);\n            this.deviceInfoCache = devices;\n        });\n    }\n    listCachedDevicesOfKind(deviceKind) {\n        const devicesOfKind = [];\n        if (this.deviceInfoCache) {\n            for (const device of this.deviceInfoCache) {\n                if (device.kind === deviceKind) {\n                    devicesOfKind.push(device);\n                }\n            }\n        }\n        return devicesOfKind;\n    }\n    handleDeviceChange() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.deviceInfoCache === null) {\n                return;\n            }\n            if (this.alreadyHandlingDeviceChange) {\n                AsyncScheduler_1.default.nextTick(() => {\n                    this.handleDeviceChange();\n                });\n                return;\n            }\n            this.alreadyHandlingDeviceChange = true;\n            const oldAudioInputDevices = this.listCachedDevicesOfKind('audioinput');\n            const oldVideoInputDevices = this.listCachedDevicesOfKind('videoinput');\n            const oldAudioOutputDevices = this.listCachedDevicesOfKind('audiooutput');\n            yield this.updateDeviceInfoCacheFromBrowser();\n            const newAudioInputDevices = this.listCachedDevicesOfKind('audioinput');\n            const newVideoInputDevices = this.listCachedDevicesOfKind('videoinput');\n            const newAudioOutputDevices = this.listCachedDevicesOfKind('audiooutput');\n            this.forEachObserver((observer) => {\n                if (!this.areDeviceListsEqual(oldAudioInputDevices, newAudioInputDevices)) {\n                    Types_1.Maybe.of(observer.audioInputsChanged).map(f => f.bind(observer)(newAudioInputDevices));\n                }\n                if (!this.areDeviceListsEqual(oldVideoInputDevices, newVideoInputDevices)) {\n                    Types_1.Maybe.of(observer.videoInputsChanged).map(f => f.bind(observer)(newVideoInputDevices));\n                }\n                if (!this.areDeviceListsEqual(oldAudioOutputDevices, newAudioOutputDevices)) {\n                    Types_1.Maybe.of(observer.audioOutputsChanged).map(f => f.bind(observer)(newAudioOutputDevices));\n                }\n            });\n            this.alreadyHandlingDeviceChange = false;\n        });\n    }\n    handleDeviceStreamEnded(kind, deviceId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (kind === 'audio') {\n                    this.logger.warn(`Audio input device which was active is no longer available, resetting to null device`);\n                    yield this.startAudioInput(null); //Need to switch to empty audio device\n                }\n                else {\n                    this.logger.warn(`Video input device which was active is no longer available, stopping video`);\n                    yield this.stopVideoInput();\n                }\n            }\n            catch (e) {\n                /* istanbul ignore next */\n                this.logger.error('Failed to choose null device after stream ended.');\n            }\n            if (kind === 'audio') {\n                this.forEachObserver((observer) => {\n                    Types_1.Maybe.of(observer.audioInputStreamEnded).map(f => f.bind(observer)(deviceId));\n                });\n            }\n            else {\n                this.forEachObserver((observer) => {\n                    Types_1.Maybe.of(observer.videoInputStreamEnded).map(f => f.bind(observer)(deviceId));\n                });\n            }\n        });\n    }\n    forEachObserver(observerFunc) {\n        for (const observer of this.deviceChangeObservers) {\n            AsyncScheduler_1.default.nextTick(() => {\n                /* istanbul ignore else */\n                if (this.deviceChangeObservers.has(observer)) {\n                    observerFunc(observer);\n                }\n            });\n        }\n    }\n    forEachMediaStreamBrokerObserver(observerFunc) {\n        for (const observer of this.mediaStreamBrokerObservers) {\n            observerFunc(observer);\n        }\n    }\n    areDeviceListsEqual(a, b) {\n        return (JSON.stringify(a.map(device => JSON.stringify(device)).sort()) ===\n            JSON.stringify(b.map(device => JSON.stringify(device)).sort()));\n    }\n    intrinsicDeviceAsMediaStream(device) {\n        // @ts-ignore\n        return device && device.id ? device : null;\n    }\n    hasSameMediaStreamId(kind, selection, proposedConstraints) {\n        var _a, _b, _c, _d;\n        // Checking for stream using the fake constraint created in getMediaStreamConstraints\n        let streamId;\n        if (kind === 'audio') {\n            // @ts-ignore\n            streamId = proposedConstraints === null || proposedConstraints === void 0 ? void 0 : proposedConstraints.audio.streamId;\n            /* istanbul ignore next */\n            // @ts-ignore\n            return !!streamId && streamId === ((_b = (_a = selection.constraints) === null || _a === void 0 ? void 0 : _a.audio) === null || _b === void 0 ? void 0 : _b.streamId);\n        }\n        /* istanbul ignore next */\n        // @ts-ignore\n        streamId = proposedConstraints === null || proposedConstraints === void 0 ? void 0 : proposedConstraints.video.streamId;\n        /* istanbul ignore next */\n        // @ts-ignore\n        return !!streamId && streamId === ((_d = (_c = selection === null || selection === void 0 ? void 0 : selection.constraints) === null || _c === void 0 ? void 0 : _c.video) === null || _d === void 0 ? void 0 : _d.streamId);\n    }\n    hasSameGroupId(groupId, kind, device) {\n        if (groupId === '') {\n            return true;\n        }\n        const deviceIds = DefaultDeviceController.getIntrinsicDeviceId(device);\n        this.logger.debug(`Checking deviceIds ${deviceIds} of type ${typeof deviceIds} with groupId ${groupId}`);\n        if (typeof deviceIds === 'string' && groupId === this.getGroupIdFromDeviceId(kind, deviceIds)) {\n            return true;\n        }\n        return false;\n    }\n    getGroupIdFromDeviceId(kind, deviceId) {\n        if (this.deviceInfoCache !== null) {\n            const cachedDeviceInfo = this.listCachedDevicesOfKind(`${kind}input`).find((cachedDevice) => cachedDevice.deviceId === deviceId);\n            if (cachedDeviceInfo && cachedDeviceInfo.groupId) {\n                this.logger.debug(`GroupId of deviceId ${deviceId} found in cache is ${cachedDeviceInfo.groupId}`);\n                return cachedDeviceInfo.groupId;\n            }\n        }\n        this.logger.debug(`GroupId of deviceId ${deviceId} found in cache is empty`);\n        return '';\n    }\n    handleGetUserMediaError(error, errorTimeMs) {\n        if (!error) {\n            throw new GetUserMediaError_1.default(error);\n        }\n        switch (error.name) {\n            case 'NotReadableError':\n            case 'TrackStartError':\n                throw new NotReadableError_1.default(error);\n            case 'NotFoundError':\n            case 'DevicesNotFoundError':\n                throw new NotFoundError_1.default(error);\n            case 'NotAllowedError':\n            case 'PermissionDeniedError':\n            case 'SecurityError':\n                if (errorTimeMs &&\n                    errorTimeMs < DefaultDeviceController.permissionDeniedOriginDetectionThresholdMs) {\n                    throw new PermissionDeniedError_1.default(error, 'Permission denied by browser');\n                }\n                else {\n                    throw new PermissionDeniedError_1.default(error, 'Permission denied by user');\n                }\n            case 'OverconstrainedError':\n            case 'ConstraintNotSatisfiedError':\n                throw new OverconstrainedError_1.default(error);\n            case 'TypeError':\n                throw new TypeError_1.default(error);\n            case 'AbortError':\n            default:\n                throw new GetUserMediaError_1.default(error);\n        }\n    }\n    /**\n     * Check whether a device is already selected.\n     *\n     * @param kind typically 'audio' or 'video'.\n     * @param device the device about to be selected.\n     * @param selection the existing device selection of this kind.\n     * @param proposedConstraints the constraints that will be used when this device is selected.\n     * @returns whether `device` matches `selection` — that is, whether this device is already selected.\n     */\n    matchesDeviceSelection(kind, device, selection, proposedConstraints) {\n        if (selection &&\n            selection.stream.active &&\n            (this.hasSameMediaStreamId(kind, selection, proposedConstraints) ||\n                (selection.groupId !== null && this.hasSameGroupId(selection.groupId, kind, device)))) {\n            // TODO: this should be computed within this function.\n            this.logger.debug(`Compare current device constraint ${JSON.stringify(selection.constraints)} to proposed constraints ${JSON.stringify(proposedConstraints)}`);\n            return selection.matchesConstraints(proposedConstraints);\n        }\n        return false;\n    }\n    chooseInputIntrinsicDevice(kind, device) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            // N.B.,: the input device might already have augmented constraints supplied\n            // by an `AudioTransformDevice`. `getMediaStreamConstraints` will respect\n            // settings supplied by the device.\n            const proposedConstraints = this.getMediaStreamConstraints(kind, device);\n            // TODO: `matchesConstraints` should really return compatible/incompatible/exact --\n            // `applyConstraints` can be used to reuse the active device while changing the\n            // requested constraints.\n            if (this.matchesDeviceSelection(kind, device, this.activeDevices[kind], proposedConstraints)) {\n                this.logger.info(`reusing existing ${kind} input device`);\n                return;\n            }\n            if (this.activeDevices[kind] && this.activeDevices[kind].stream) {\n                this.stopTracksAndRemoveCallbacks(kind);\n            }\n            const startTimeMs = Date.now();\n            const newDevice = new DeviceSelection_1.default();\n            try {\n                this.logger.info(`requesting new ${kind} device with constraint ${JSON.stringify(proposedConstraints)}`);\n                const stream = this.intrinsicDeviceAsMediaStream(device);\n                if (kind === 'audio' && device === null) {\n                    newDevice.stream = DefaultDeviceController.createEmptyAudioDevice();\n                    newDevice.constraints = null;\n                }\n                else if (stream) {\n                    this.logger.info(`using media stream ${stream.id} for ${kind} device`);\n                    newDevice.stream = stream;\n                    newDevice.constraints = proposedConstraints;\n                }\n                else {\n                    newDevice.stream = yield navigator.mediaDevices.getUserMedia(proposedConstraints);\n                    newDevice.constraints = proposedConstraints;\n                }\n                yield this.handleNewInputDevice(kind, newDevice);\n            }\n            catch (error) {\n                const errorMessage = this.getErrorMessage(error);\n                if (kind === 'audio') {\n                    (_a = this.eventController) === null || _a === void 0 ? void 0 : _a.publishEvent('audioInputFailed', {\n                        audioInputErrorMessage: errorMessage,\n                    });\n                }\n                else {\n                    (_b = this.eventController) === null || _b === void 0 ? void 0 : _b.publishEvent('videoInputFailed', {\n                        videoInputErrorMessage: errorMessage,\n                    });\n                }\n                this.logger.error(`failed to get ${kind} device for constraints ${JSON.stringify(proposedConstraints)}: ${errorMessage}`);\n                let hasError = true;\n                // This is effectively `error instanceof OverconstrainedError` but works in Node.\n                if (error && 'constraint' in error) {\n                    this.logger.error(`Over-constrained by constraint: ${error.constraint}`);\n                    // Try to reduce the constraints if over-constraints\n                    if (this.useMediaConstraintsFallback) {\n                        const fallbackConstraints = this.getMediaStreamConstraints(kind, device, true);\n                        const fallbackConstraintsJSON = JSON.stringify(fallbackConstraints);\n                        if (fallbackConstraintsJSON !== JSON.stringify(proposedConstraints)) {\n                            this.logger.info(`retry requesting new ${kind} device with minimal constraint ${fallbackConstraintsJSON}`);\n                            try {\n                                newDevice.stream = yield navigator.mediaDevices.getUserMedia(fallbackConstraints);\n                                newDevice.constraints = fallbackConstraints;\n                                yield this.handleNewInputDevice(kind, newDevice);\n                                hasError = false;\n                            }\n                            catch (e) {\n                                this.logger.error(`failed to get ${kind} device for constraints ${fallbackConstraintsJSON}: ${this.getErrorMessage(e)}`);\n                            }\n                        }\n                    }\n                }\n                if (hasError) {\n                    /*\n                     * If there is any error while acquiring the audio device, we fall back to null device.\n                     * Reason: If device selection fails (e.g. NotReadableError), the peer connection is left hanging\n                     * with no active audio track since we release the previously attached track.\n                     * If no audio packet has yet been sent to the server, the server will not emit the joined event.\n                     */\n                    if (kind === 'audio') {\n                        this.logger.info(`choosing null ${kind} device instead`);\n                        try {\n                            newDevice.stream = DefaultDeviceController.createEmptyAudioDevice();\n                            newDevice.constraints = null;\n                            yield this.handleNewInputDevice(kind, newDevice);\n                        }\n                        catch (error) {\n                            this.logger.error(`failed to choose null ${kind} device. ${error.name}: ${error.message}`);\n                        }\n                    }\n                    this.handleGetUserMediaError(error, Date.now() - startTimeMs);\n                }\n            }\n            finally {\n                this.watchForDeviceChangesIfNecessary();\n            }\n        });\n    }\n    getErrorMessage(error) {\n        if (!error) {\n            return 'UnknownError';\n        }\n        if (error.name && error.message) {\n            return `${error.name}: ${error.message}`;\n        }\n        if (error.name) {\n            return error.name;\n        }\n        if (error.message) {\n            return error.message;\n        }\n        return 'UnknownError';\n    }\n    handleNewInputDevice(kind, newDevice) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            this.logger.info(`got ${kind} device for constraints ${JSON.stringify(newDevice.constraints)}`);\n            const newDeviceId = (_a = this.getMediaTrackSettings(newDevice.stream)) === null || _a === void 0 ? void 0 : _a.deviceId;\n            newDevice.groupId = newDeviceId ? this.getGroupIdFromDeviceId(kind, newDeviceId) : '';\n            this.activeDevices[kind] = newDevice;\n            this.logger.debug(`Set activeDevice to ${JSON.stringify(newDevice)}`);\n            this.watchForDeviceChangesIfNecessary();\n            // Add event listener to detect ended event of media track\n            // We only monitor the first track, and use its device ID for observer notifications.\n            const track = newDevice.stream.getTracks()[0];\n            if (track) {\n                newDevice.endedCallback = () => {\n                    // Hard to test, but the safety check is worthwhile.\n                    /* istanbul ignore else */\n                    if (this.activeDevices[kind] && this.activeDevices[kind].stream === newDevice.stream) {\n                        this.handleDeviceStreamEnded(kind, newDeviceId);\n                        delete newDevice.endedCallback;\n                    }\n                };\n                track.addEventListener('ended', newDevice.endedCallback, { once: true });\n            }\n            // Add event listener to mute/unmute event for audio\n            if (kind === 'audio') {\n                // We only monitor the first track, and use its device ID for observer notifications.\n                const track = newDevice.stream.getAudioTracks()[0];\n                if (track) {\n                    const id = track.getSettings().deviceId || newDevice.stream;\n                    newDevice.trackMuteCallback = () => {\n                        this.mediaStreamMuteObserver(id, true);\n                    };\n                    newDevice.trackUnmuteCallback = () => {\n                        this.mediaStreamMuteObserver(id, false);\n                    };\n                    track.addEventListener('mute', newDevice.trackMuteCallback, { once: false });\n                    track.addEventListener('unmute', newDevice.trackUnmuteCallback, { once: false });\n                    this.logger.debug('Notifying mute state after selection');\n                    if (track.muted) {\n                        newDevice.trackMuteCallback();\n                    }\n                    else {\n                        newDevice.trackUnmuteCallback();\n                    }\n                }\n            }\n        });\n    }\n    calculateMediaStreamConstraints(kind, deviceId, groupId, minimal) {\n        // No need for any constraints if we want minimal constraint and there is only one device\n        if (minimal && this.listCachedDevicesOfKind(`${kind}input`).length === 1) {\n            return true;\n        }\n        const trackConstraints = {};\n        // In Samsung Internet browser, navigator.mediaDevices.enumerateDevices()\n        // returns same deviceId but different groupdId for some audioinput and videoinput devices.\n        // To handle this, we select appropriate device using deviceId + groupId.\n        if (this.browserBehavior.requiresNoExactMediaStreamConstraints()) {\n            trackConstraints.deviceId = deviceId;\n        }\n        else {\n            trackConstraints.deviceId = { exact: deviceId };\n        }\n        if (groupId) {\n            trackConstraints.groupId = groupId;\n        }\n        if (minimal) {\n            return trackConstraints;\n        }\n        // Video additional constraints\n        if (kind === 'video') {\n            trackConstraints.width = {\n                ideal: this.videoInputQualitySettings.videoWidth,\n            };\n            trackConstraints.height = {\n                ideal: this.videoInputQualitySettings.videoHeight,\n            };\n            trackConstraints.frameRate = {\n                ideal: this.videoInputQualitySettings.videoFrameRate,\n            };\n            return trackConstraints;\n        }\n        // Audio additional constraints\n        if (this.supportSampleRateConstraint()) {\n            trackConstraints.sampleRate = { ideal: DefaultDeviceController.defaultSampleRate };\n        }\n        if (this.supportSampleSizeConstraint()) {\n            trackConstraints.sampleSize = { ideal: DefaultDeviceController.defaultSampleSize };\n        }\n        if (this.supportChannelCountConstraint()) {\n            trackConstraints.channelCount = { ideal: DefaultDeviceController.defaultChannelCount };\n        }\n        const augmented = Object.assign({ echoCancellation: true, googEchoCancellation: true, googEchoCancellation2: true, googAutoGainControl: true, googAutoGainControl2: true, googNoiseSuppression: true, googNoiseSuppression2: true, googHighpassFilter: true }, trackConstraints);\n        return augmented;\n    }\n    getMediaStreamConstraintsFromTrackConstraints(kind, trackConstraints) {\n        return kind === 'audio' ? { audio: trackConstraints } : { video: trackConstraints };\n    }\n    getMediaStreamConstraints(kind, device, minimal = false) {\n        let trackConstraints = {};\n        if (!device) {\n            return null;\n        }\n        const stream = this.intrinsicDeviceAsMediaStream(device);\n        if (stream) {\n            // @ts-ignore - create a fake track constraint using the stream id\n            trackConstraints.streamId = stream.id;\n            return this.getMediaStreamConstraintsFromTrackConstraints(kind, trackConstraints);\n        }\n        if (typeof device === 'string') {\n            let groupId = '';\n            if (this.browserBehavior.requiresGroupIdMediaStreamConstraints()) {\n                if (this.deviceInfoCache !== null) {\n                    groupId = this.getGroupIdFromDeviceId(kind, device);\n                }\n                else {\n                    this.logger.error('Device cache is not populated. Please make sure to call list devices first');\n                }\n            }\n            trackConstraints = this.calculateMediaStreamConstraints(kind, device, groupId, minimal);\n            return this.getMediaStreamConstraintsFromTrackConstraints(kind, trackConstraints);\n        }\n        if (isMediaDeviceInfo(device)) {\n            trackConstraints = this.calculateMediaStreamConstraints(kind, device.deviceId, device.groupId, minimal);\n            return this.getMediaStreamConstraintsFromTrackConstraints(kind, trackConstraints);\n        }\n        // Take the input set of constraints.\n        // In this case, we just use the constraints as-is.\n        // @ts-ignore - device is a MediaTrackConstraints\n        trackConstraints = device;\n        return this.getMediaStreamConstraintsFromTrackConstraints(kind, trackConstraints);\n    }\n    deviceInfoFromDeviceId(deviceKind, deviceId) {\n        if (this.deviceInfoCache === null) {\n            return null;\n        }\n        for (const device of this.deviceInfoCache) {\n            if (device.kind === deviceKind && device.deviceId === deviceId) {\n                return device;\n            }\n        }\n        return null;\n    }\n    hasAppliedTransform() {\n        return !!this.transform;\n    }\n    isMediaStreamReusableByDeviceId(stream, device) {\n        // for null device, assume the stream is not reusable\n        if (!stream || !stream.active || !device) {\n            return false;\n        }\n        if (device.id) {\n            return stream.id === device.id;\n        }\n        const settings = this.getMediaTrackSettings(stream);\n        // If a device does not specify deviceId, we have to assume the stream is not reusable.\n        if (!settings.deviceId) {\n            return false;\n        }\n        const deviceIds = DefaultDeviceController.getIntrinsicDeviceId(device);\n        if (typeof deviceIds === 'string') {\n            return settings.deviceId === deviceIds;\n        }\n        return false;\n    }\n    getMediaTrackSettings(stream) {\n        var _a;\n        return (_a = stream.getTracks()[0]) === null || _a === void 0 ? void 0 : _a.getSettings();\n    }\n    reconnectAudioInputs() {\n        if (!this.audioInputSourceNode) {\n            return;\n        }\n        this.audioInputSourceNode.disconnect();\n        const output = this.getMediaStreamOutputNode();\n        this.audioInputSourceNode.connect(output);\n    }\n    setTransform(device, nodes) {\n        var _a, _b;\n        (_b = (_a = this.transform) === null || _a === void 0 ? void 0 : _a.nodes) === null || _b === void 0 ? void 0 : _b.end.disconnect();\n        this.transform = { nodes, device };\n        const proc = nodes === null || nodes === void 0 ? void 0 : nodes.end;\n        const dest = this.getMediaStreamDestinationNode();\n        this.logger.debug(`Connecting transform node ${proc} to destination ${dest}.`);\n        proc === null || proc === void 0 ? void 0 : proc.connect(dest);\n        this.reconnectAudioInputs();\n    }\n    removeTransform() {\n        var _a;\n        const previous = this.transform;\n        if (!previous) {\n            return undefined;\n        }\n        (_a = this.transform.nodes) === null || _a === void 0 ? void 0 : _a.end.disconnect();\n        this.transform = undefined;\n        this.reconnectAudioInputs();\n        return previous;\n    }\n    attachAudioInputStreamToAudioContext(stream) {\n        var _a;\n        (_a = this.audioInputSourceNode) === null || _a === void 0 ? void 0 : _a.disconnect();\n        this.audioInputSourceNode = DefaultDeviceController.getAudioContext().createMediaStreamSource(stream);\n        const output = this.getMediaStreamOutputNode();\n        this.audioInputSourceNode.connect(output);\n    }\n    /**\n     * Return the end of the Web Audio graph: post-transform audio.\n     */\n    getMediaStreamDestinationNode() {\n        if (!this.audioInputDestinationNode) {\n            this.audioInputDestinationNode = DefaultDeviceController.getAudioContext().createMediaStreamDestination();\n        }\n        return this.audioInputDestinationNode;\n    }\n    /**\n     * Return the start of the Web Audio graph: pre-transform audio.\n     * If there's no transform node, this is the destination node.\n     */\n    getMediaStreamOutputNode() {\n        var _a, _b;\n        return ((_b = (_a = this.transform) === null || _a === void 0 ? void 0 : _a.nodes) === null || _b === void 0 ? void 0 : _b.start) || this.getMediaStreamDestinationNode();\n    }\n    /**\n     * Overrides the default latency hint used by the user agent when creating the `AudioContext`. By default,\n     * user agents will choose \"interactive\" which opts for the smallest possible audio buffer. This can\n     * cause choppy audio in some cases on Windows. Therefore, \"playback\" will be chosen on Windows unless\n     * this value is overridden with this function.\n     * @param latencyHint The latency hint to be used when creating the Web Audio `AudioContext`\n     */\n    static setDefaultLatencyHint(latencyHint) {\n        DefaultDeviceController.defaultLatencyHint = latencyHint;\n    }\n    /**\n     * Returns the Web Audio `AudioContext` used by the {@link DefaultDeviceController}. The `AudioContext`\n     * is created lazily the first time this function is called.\n     * @returns a Web Audio `AudioContext`\n     */\n    static getAudioContext() {\n        if (!DefaultDeviceController.audioContext) {\n            const options = {};\n            if (navigator.mediaDevices.getSupportedConstraints().sampleRate) {\n                options.sampleRate = DefaultDeviceController.defaultSampleRate;\n            }\n            const browserBehavior = new DefaultBrowserBehavior_1.default();\n            if (browserBehavior.requiresPlaybackLatencyHintForAudioContext()) {\n                options.latencyHint = 'playback'; // 'playback' is equivalent to 0.02s (20ms) on Windows\n            }\n            if (DefaultDeviceController.defaultLatencyHint) {\n                options.latencyHint = DefaultDeviceController.defaultLatencyHint;\n            }\n            DefaultDeviceController.audioContext = new (window.AudioContext ||\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                window.webkitAudioContext)(options);\n        }\n        return DefaultDeviceController.audioContext;\n    }\n    static closeAudioContext() {\n        if (DefaultDeviceController.audioContext) {\n            try {\n                DefaultDeviceController.audioContext.close();\n            }\n            catch (e) {\n                // Nothing we can do.\n            }\n        }\n        DefaultDeviceController.audioContext = null;\n    }\n    addMediaStreamBrokerObserver(observer) {\n        this.mediaStreamBrokerObservers.add(observer);\n    }\n    removeMediaStreamBrokerObserver(observer) {\n        this.mediaStreamBrokerObservers.delete(observer);\n    }\n    publishVideoInputDidChangeEvent(videoStream) {\n        this.forEachMediaStreamBrokerObserver((observer) => {\n            if (observer.videoInputDidChange) {\n                observer.videoInputDidChange(videoStream);\n            }\n        });\n        this.pushVideoMeetingStateForPermissions(videoStream);\n    }\n    publishAudioInputDidChangeEvent(audioStream) {\n        this.forEachMediaStreamBrokerObserver((observer) => {\n            if (observer.audioInputDidChange) {\n                observer.audioInputDidChange(audioStream);\n            }\n        });\n        this.pushAudioMeetingStateForPermissions(audioStream);\n    }\n    publishAudioOutputDidChangeEvent(device) {\n        this.forEachMediaStreamBrokerObserver((observer) => {\n            if (observer.audioOutputDidChange) {\n                observer.audioOutputDidChange(device);\n            }\n        });\n    }\n    supportSampleRateConstraint() {\n        return this.useWebAudio && !!navigator.mediaDevices.getSupportedConstraints().sampleRate;\n    }\n    supportSampleSizeConstraint() {\n        return this.useWebAudio && !!navigator.mediaDevices.getSupportedConstraints().sampleSize;\n    }\n    supportChannelCountConstraint() {\n        return this.useWebAudio && !!navigator.mediaDevices.getSupportedConstraints().channelCount;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    trace(name, input, output) {\n        let s = `API/DefaultDeviceController/${name}`;\n        if (typeof input !== 'undefined') {\n            s += ` ${JSON.stringify(input)}`;\n        }\n        if (typeof output !== 'undefined') {\n            s += ` -> ${JSON.stringify(output)}`;\n        }\n        this.logger.info(s);\n    }\n}\nexports.default = DefaultDeviceController;\nDefaultDeviceController.permissionDeniedOriginDetectionThresholdMs = 500;\nDefaultDeviceController.defaultVideoWidth = 960;\nDefaultDeviceController.defaultVideoHeight = 540;\nDefaultDeviceController.defaultVideoFrameRate = 15;\nDefaultDeviceController.defaultSampleRate = 48000;\nDefaultDeviceController.defaultSampleSize = 16;\nDefaultDeviceController.defaultChannelCount = 1;\nDefaultDeviceController.audioContext = null;\nfunction isMediaDeviceInfo(device) {\n    return (typeof device === 'object' &&\n        'deviceId' in device &&\n        'groupId' in device &&\n        'kind' in device &&\n        'label' in device);\n}\n//# sourceMappingURL=DefaultDeviceController.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\nconst DefaultDeviceController_1 = require(\"../devicecontroller/DefaultDeviceController\");\nclass ContentShareMediaStreamBroker {\n    constructor(logger) {\n        this.logger = logger;\n    }\n    get mediaStream() {\n        return this._mediaStream;\n    }\n    set mediaStream(mediaStream) {\n        this._mediaStream = mediaStream;\n    }\n    acquireAudioInputStream() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._mediaStream.getAudioTracks().length === 0) {\n                this.logger.info('No audio stream available. Synthesizing an audio stream.');\n                return DefaultDeviceController_1.default.synthesizeAudioDevice(0);\n            }\n            return this._mediaStream;\n        });\n    }\n    acquireVideoInputStream() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._mediaStream;\n        });\n    }\n    acquireDisplayInputStream(streamConstraints) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (streamConstraints &&\n                streamConstraints.video &&\n                // @ts-ignore\n                streamConstraints.video.mandatory &&\n                // @ts-ignore\n                streamConstraints.video.mandatory.chromeMediaSource &&\n                // @ts-ignore\n                streamConstraints.video.mandatory.chromeMediaSourceId) {\n                return navigator.mediaDevices.getUserMedia(streamConstraints);\n            }\n            // @ts-ignore https://github.com/microsoft/TypeScript/issues/31821\n            return navigator.mediaDevices.getDisplayMedia(streamConstraints);\n        });\n    }\n    acquireScreenCaptureDisplayInputStream(sourceId, frameRate) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.acquireDisplayInputStream(this.screenCaptureDisplayMediaConstraints(sourceId, frameRate));\n        });\n    }\n    screenCaptureDisplayMediaConstraints(sourceId, frameRate) {\n        return {\n            audio: !sourceId && new DefaultBrowserBehavior_1.default().getDisplayMediaAudioCaptureSupport()\n                ? true\n                : false,\n            video: Object.assign(Object.assign({}, (!sourceId && {\n                frameRate: {\n                    max: frameRate ? frameRate : ContentShareMediaStreamBroker.defaultFrameRate,\n                },\n            })), (sourceId && {\n                mandatory: {\n                    chromeMediaSource: 'desktop',\n                    chromeMediaSourceId: sourceId,\n                    maxFrameRate: frameRate ? frameRate : ContentShareMediaStreamBroker.defaultFrameRate,\n                },\n            })),\n        };\n    }\n    toggleMediaStream(enable) {\n        let changed = false;\n        if (this.mediaStream) {\n            for (let i = 0; i < this.mediaStream.getTracks().length; i++) {\n                if (this.mediaStream.getTracks()[i].enabled !== enable) {\n                    this.mediaStream.getTracks()[i].enabled = enable;\n                    changed = true;\n                }\n            }\n        }\n        return changed;\n    }\n    cleanup() {\n        if (this.mediaStream) {\n            for (let i = 0; i < this.mediaStream.getTracks().length; i++) {\n                const track = this.mediaStream.getTracks()[i];\n                track.stop();\n            }\n        }\n        this.mediaStream = null;\n    }\n    muteLocalAudioInputStream() {\n        throw new Error('unsupported');\n    }\n    unmuteLocalAudioInputStream() {\n        throw new Error('unsupported');\n    }\n    addMediaStreamBrokerObserver(_observer) { }\n    removeMediaStreamBrokerObserver(_observer) { }\n}\nexports.default = ContentShareMediaStreamBroker;\nContentShareMediaStreamBroker.defaultFrameRate = 15;\n//# sourceMappingURL=ContentShareMediaStreamBroker.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BaseTask_1 = require(\"./BaseTask\");\n/*\n * [[CreatePeerConnectionTask]] sets up the peer connection object.\n */\nclass CreatePeerConnectionTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'CreatePeerConnectionTask';\n        this.removeTrackAddedEventListener = null;\n        this.removeTrackRemovedEventListeners = {};\n        this.trackEvents = [\n            'ended',\n            'mute',\n            'unmute',\n            'isolationchange',\n            'overconstrained',\n        ];\n        this.removeVideoTrackEventListeners = {};\n        this.trackAddedHandler = (event) => {\n            const track = event.track;\n            this.context.logger.info(`received track event: kind=${track.kind} id=${track.id} label=${track.label}`);\n            if (event.transceiver && event.transceiver.currentDirection === 'inactive') {\n                return;\n            }\n            if (event.streams.length === 0) {\n                this.context.logger.warn(`Track event but no stream`);\n                return;\n            }\n            const stream = event.streams[0];\n            if (track.kind === 'audio') {\n                this.context.audioMixController.bindAudioStream(stream);\n            }\n            else if (track.kind === 'video' && !this.trackIsVideoInput(track)) {\n                this.addRemoteVideoTrack(track, stream);\n            }\n        };\n    }\n    removeObserver() {\n        this.removeTrackAddedEventListener && this.removeTrackAddedEventListener();\n        for (const trackId in this.removeTrackRemovedEventListeners) {\n            this.removeTrackRemovedEventListeners[trackId]();\n        }\n    }\n    addPeerConnectionEventLogger() {\n        const peer = this.context.peer;\n        peer.addEventListener('connectionstatechange', () => {\n            this.context.logger.info(`peer connection state changed: ${peer.connectionState}`);\n        });\n        peer.addEventListener('negotiationneeded', () => {\n            this.context.logger.info('peer connection negotiation is needed');\n        });\n        peer.addEventListener('icegatheringstatechange', () => {\n            this.context.logger.info(`peer connection ice gathering state changed: ${peer.iceGatheringState}`);\n        });\n        peer.addEventListener('icecandidate', (event) => {\n            this.context.logger.info(`peer connection ice candidate: ${event.candidate ? event.candidate.candidate : '(null)'}`);\n        });\n        peer.addEventListener('iceconnectionstatechange', () => {\n            this.context.logger.info(`peer connection ice connection state changed: ${peer.iceConnectionState}`);\n        });\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.context.removableObservers.push(this);\n            const hasTurnCredentials = this.context.turnCredentials && this.context.turnCredentials.uris.length > 0;\n            const configuration = hasTurnCredentials\n                ? {\n                    iceServers: [\n                        {\n                            urls: this.context.turnCredentials.uris,\n                            username: this.context.turnCredentials.username,\n                            credential: this.context.turnCredentials.password,\n                            credentialType: 'password',\n                        },\n                    ],\n                    iceTransportPolicy: 'relay',\n                }\n                : {};\n            configuration.bundlePolicy = this.context.browserBehavior.requiresBundlePolicy();\n            // @ts-ignore\n            configuration.sdpSemantics = 'unified-plan';\n            if (this.context.peer) {\n                this.context.logger.info('reusing peer connection');\n            }\n            else {\n                this.context.logger.info('creating new peer connection');\n                // @ts-ignore\n                this.context.peer = new RTCPeerConnection(configuration);\n                this.addPeerConnectionEventLogger();\n            }\n            this.removeTrackAddedEventListener = () => {\n                if (this.context.peer) {\n                    this.context.peer.removeEventListener('track', this.trackAddedHandler);\n                }\n                this.removeTrackAddedEventListener = null;\n            };\n            this.context.peer.addEventListener('track', this.trackAddedHandler);\n        });\n    }\n    trackIsVideoInput(track) {\n        if (this.context.transceiverController.useTransceivers()) {\n            this.logger.debug(() => {\n                return `getting video track type`;\n            });\n            return this.context.transceiverController.trackIsVideoInput(track);\n        }\n        return false;\n    }\n    addRemoteVideoTrack(track, stream) {\n        var _a;\n        const trackId = stream.id;\n        const attendeeId = this.context.videoStreamIndex.attendeeIdForTrack(trackId);\n        let skipAdding;\n        let tile;\n        if (this.context.videoTileController.getVideoTileForAttendeeId) {\n            tile = this.context.videoTileController.getVideoTileForAttendeeId(attendeeId);\n            skipAdding = !!((_a = tile === null || tile === void 0 ? void 0 : tile.state()) === null || _a === void 0 ? void 0 : _a.boundVideoStream);\n        }\n        else {\n            skipAdding = this.context.videoTileController.haveVideoTileForAttendeeId(attendeeId);\n        }\n        if (skipAdding) {\n            this.context.logger.info(`Not adding remote track. Already have tile for attendeeId:  ${attendeeId}`);\n            return;\n        }\n        if (!tile) {\n            tile = this.context.videoTileController.addVideoTile();\n            this.logger.info(`Created video tile ${tile.id()}`);\n        }\n        let streamId = this.context.videoStreamIndex.streamIdForTrack(trackId);\n        if (typeof streamId === 'undefined') {\n            this.logger.warn(`stream not found for tile=${tile.id()} track=${trackId}`);\n            streamId = null;\n        }\n        for (let i = 0; i < this.trackEvents.length; i++) {\n            const trackEvent = this.trackEvents[i];\n            const videoTracks = stream.getVideoTracks();\n            if (videoTracks && videoTracks.length) {\n                const videoTrack = videoTracks[0];\n                const callback = () => {\n                    this.context.logger.info(`received the ${trackEvent} event for tile=${tile.id()} id=${track.id} streamId=${streamId}`);\n                    if (trackEvent === 'ended') {\n                        this.removeRemoteVideoTrack(track, tile.state());\n                    }\n                };\n                videoTrack.addEventListener(trackEvent, callback);\n                if (!this.removeVideoTrackEventListeners[track.id]) {\n                    this.removeVideoTrackEventListeners[track.id] = [];\n                }\n                this.removeVideoTrackEventListeners[track.id].push(() => {\n                    videoTrack.removeEventListener(trackEvent, callback);\n                });\n            }\n        }\n        let width;\n        let height;\n        if (track.getSettings) {\n            const cap = track.getSettings();\n            width = cap.width;\n            height = cap.height;\n        }\n        else {\n            const cap = track.getCapabilities();\n            width = cap.width;\n            height = cap.height;\n        }\n        const externalUserId = this.context.videoStreamIndex.externalUserIdForTrack(trackId);\n        tile.bindVideoStream(attendeeId, false, stream, width, height, streamId, externalUserId);\n        this.logger.info(`video track added, use tile=${tile.id()} track=${trackId} streamId=${streamId}`);\n        const endEvent = 'removetrack';\n        const target = stream;\n        const trackRemovedHandler = () => this.removeRemoteVideoTrack(track, tile.state());\n        this.removeTrackRemovedEventListeners[track.id] = () => {\n            target.removeEventListener(endEvent, trackRemovedHandler);\n            delete this.removeTrackRemovedEventListeners[track.id];\n        };\n        target.addEventListener(endEvent, trackRemovedHandler);\n    }\n    removeRemoteVideoTrack(track, tileState) {\n        if (this.removeTrackRemovedEventListeners.hasOwnProperty(track.id)) {\n            this.removeTrackRemovedEventListeners[track.id]();\n            for (const removeVideoTrackEventListener of this.removeVideoTrackEventListeners[track.id]) {\n                removeVideoTrackEventListener();\n            }\n            delete this.removeVideoTrackEventListeners[track.id];\n        }\n        this.logger.info(`video track ended, removing tile=${tileState.tileId} id=${track.id} stream=${tileState.streamId}`);\n        if (tileState.streamId) {\n            this.context.videosPaused.remove(tileState.streamId);\n        }\n        else {\n            this.logger.warn(`no stream found for tile=${tileState.tileId}`);\n        }\n        this.context.videoTileController.removeVideoTile(tileState.tileId);\n    }\n}\nexports.default = CreatePeerConnectionTask;\nCreatePeerConnectionTask.REMOVE_HANDLER_INTERVAL_MS = 10000;\n//# sourceMappingURL=CreatePeerConnectionTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MeetingSessionStatusCode = void 0;\n/**\n * [[MeetingSessionStatusCode]] gives the underlying reason for a given [[MeetingSessionStatus]]. Though some codes are used for\n * [[MeetingSessionStatus]] internally, the primary use of these is in `AudioVideoObserver.audioVideoDidStop`, and their docstrings\n * will be specific to that usage. Other functions that use [[MeetingSessionStatus]] (mainly\n * `AudioVideoControllerFacade.promoteToPrimaryMeeting` and `AudioVideoObserver.audioVideoWasDemotedFromPrimaryMeeting` will document\n * their usage separately).\n *\n * These status codes can be used for logging, debugging, and notification to end users, but in most cases should not\n * be used for any retry behavior, as the audio video controller will already be retrying non-terminal errors (i.e. regardless\n * of `MeetingSessionStatus.isTerminal`, your application should not try to immediately restart or recreate the\n * audio video controller). For error codes that indicate issues with the Chime service, please create a github issue\n * with browser logs if they occur frequently.\n *\n * If `MeetingSessionStatus.isTerminal` returns `true`, you should remove any meeting UX in addition to notifying the user,\n * as the audio video controller will not be retrying the connection. When notifying users, more general failure messages are\n * recommended unless otherwise noted.\n */\nvar MeetingSessionStatusCode;\n(function (MeetingSessionStatusCode) {\n    /**\n     * There is no error. This code is used internally but will never be returned by `audioVideoDidStop`\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"OK\"] = 0] = \"OK\";\n    /**\n     * The attendee left the meeting normally via `AudioVideoConftrollerFacade.stop`\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"Left\"] = 1] = \"Left\";\n    /**\n     * The attendee joined from another device (e.g. another browser window/tab or on mobile) using the\n     * same credentials. `Audio` prefix is irrelevant. The end-user may want to be notified of this\n     * type of error.\n     *\n     * This also can occur if your application unintentionally creates two meeting sessions.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"AudioJoinedFromAnotherDevice\"] = 2] = \"AudioJoinedFromAnotherDevice\";\n    /**\n     * Authentication was rejected as the attendee information in `MeetingSessionCredentials` did\n     * not match that of an attendee created via `chime::CreateAttendee`.\n     *\n     * This error may imply an issue with your credential providing service. The `Audio` prefix is irrelevant.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"AudioAuthenticationRejected\"] = 3] = \"AudioAuthenticationRejected\";\n    /**\n     * The client can not join because the meeting is at capacity. The service supports up to 250 attendees. The\n     * end user may want to be notified of this type of error. The `Audio` prefix is irrelevant.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"AudioCallAtCapacity\"] = 4] = \"AudioCallAtCapacity\";\n    /**\n     * The attendee attempted to join a meeting that has already ended. See\n     * [this FAQ](https://aws.github.io/amazon-chime-sdk-js/modules/faqs.html#when-does-an-amazon-chime-sdk-meeting-end)\n     * for more information. The end user may want to be notified of this type of error.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"MeetingEnded\"] = 5] = \"MeetingEnded\";\n    /**\n     * There was an internal server error related to audio. This may indicate some issue with the audio device, or an issue with\n     * the Amazon Chime SDK service itself.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"AudioInternalServerError\"] = 6] = \"AudioInternalServerError\";\n    /**\n     * There was an internal server error related to audio. This may indicate some issue with the audio device, or an issue with\n     * the Amazon Chime SDK service itself.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"AudioServiceUnavailable\"] = 7] = \"AudioServiceUnavailable\";\n    /**\n     * There was an internal server error related to audio. This may indicate some issue with the audio device, or an issue with\n     * the Amazon Chime SDK service itself.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"AudioDisconnected\"] = 8] = \"AudioDisconnected\";\n    /**\n     * This is only used internally and will not be provided in any `audioVideoDidStop` calls.\n     *\n     * The client has asked to send and receive video, but it is only possible to\n     * continue in view-only mode (receiving video). This should be handled by\n     * explicitly switching to view-only mode.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"VideoCallSwitchToViewOnly\"] = 9] = \"VideoCallSwitchToViewOnly\";\n    /**\n     * This is only used internally and will not be provided in any `audioVideoDidStop` calls.\n     *\n     * This can happen when you attempt to join a video meeting in \"send only\" mode\n     * (transmitting your camera, but not receiving anything -- this isn't something\n     * we ever do in practice, but it is supported on the server). It should be\n     * treated as \"fatal\" and probably should not be retried (despite the 5xx nature).\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"VideoCallAtSourceCapacity\"] = 10] = \"VideoCallAtSourceCapacity\";\n    /**\n     * The Amazon Chime SDK for JavaScript failed to establish a signaling connection because\n     * you or someone else deleted the attendee using the\n     * [DeleteAttendee](https://docs.aws.amazon.com/chime/latest/APIReference/API_DeleteAttendee.html)\n     * API action in your server application. You also should not use the attendee response from\n     * the ended meeting that you created with the same ClientRequestToken parameter\n     * before.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"SignalingBadRequest\"] = 11] = \"SignalingBadRequest\";\n    /**\n     * The Chime SDK for JavaScript either failed to establish a signaling connection to the Chime\n     * backend due to an internal server error or the connection was lost mid-call.\n     *\n     * This may indicate an issue with the Chime service, but also often indicates a network issue impacting the end user,\n     * who may want to be notified of their unstable network during the reconnection.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"SignalingInternalServerError\"] = 12] = \"SignalingInternalServerError\";\n    /**\n     * Received unknown signaling error frame without a status. This code is nearly impossible to occur\n     * and indicates an issue with the Chime service.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"SignalingRequestFailed\"] = 13] = \"SignalingRequestFailed\";\n    /**\n     * Timed out gathering ICE candidates. If in Chrome, this could be an\n     * indication that the browser is in a bad state due to a VPN reconnect and\n     * the user should try quitting and relaunching the app. See:\n     * https://bugs.chromium.org/p/webrtc/issues/detail?id=9097\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"ICEGatheringTimeoutWorkaround\"] = 14] = \"ICEGatheringTimeoutWorkaround\";\n    /**\n     * Due to connection health as determined by [[ConnectionHealthPolicyConfiguration]], a reconnect has been triggered.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"ConnectionHealthReconnect\"] = 15] = \"ConnectionHealthReconnect\";\n    /**\n     * The [[RealtimeController]] failed in some way. This indicates an issue with the callback function provided to RealtimeController APIs (e.g. a callback is throwing an error).\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"RealtimeApiFailed\"] = 16] = \"RealtimeApiFailed\";\n    /**\n     * A step in the connection to the Amazon Chime SDK backends failed without a more specific reason. This may indicate end-user connection issues\n     * and should be retried.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"TaskFailed\"] = 17] = \"TaskFailed\";\n    /**\n     * There was an issue with media negotiation. This may indicate an issue with Amazon Chime SDK, or that the end user is using an unsupported\n     * browser. Please use `new DefaultBrowserBehavior().isSupported()` pre-call to check the support of end-user browsers\n     * and warn them of possible issues.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"IncompatibleSDP\"] = 18] = \"IncompatibleSDP\";\n    /**\n     * This can happen when you attempt to join a meeting which has ended or attendee got removed. This is analogous to `MeetingEnded` except\n     * determined through the media channel rather then the signaling channel.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"TURNCredentialsForbidden\"] = 19] = \"TURNCredentialsForbidden\";\n    /**\n     * The attendee did not show up on the roster. This may indicate an issue with the end user audio device or and issue with Amazon Chime SDK.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"NoAttendeePresent\"] = 20] = \"NoAttendeePresent\";\n    /**\n     * The session was ended because the attendee has been removed via `chime::DeleteAttendee`. The end user may want to be notified\n     * of this error.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"AudioAttendeeRemoved\"] = 21] = \"AudioAttendeeRemoved\";\n    /**\n     * This is only used in promotion functions and will not be provided in any `audioVideoDidStop` calls.\n     *\n     * The attendees Primary meeting credentials have been revoked or deleted.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"AudioVideoWasRemovedFromPrimaryMeeting\"] = 22] = \"AudioVideoWasRemovedFromPrimaryMeeting\";\n    /**\n     * This is only used internally and will not be provided in any `audioVideoDidStop` calls.\n     *\n     * Reserved.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"AudioDisconnectAudio\"] = 23] = \"AudioDisconnectAudio\";\n})(MeetingSessionStatusCode = exports.MeetingSessionStatusCode || (exports.MeetingSessionStatusCode = {}));\nexports.default = MeetingSessionStatusCode;\n//# sourceMappingURL=MeetingSessionStatusCode.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SDPCandidateType = void 0;\nvar SDPCandidateType;\n(function (SDPCandidateType) {\n    SDPCandidateType[\"Host\"] = \"host\";\n    SDPCandidateType[\"ServerReflexive\"] = \"srflx\";\n    SDPCandidateType[\"PeerReflexive\"] = \"prflx\";\n    SDPCandidateType[\"Relay\"] = \"relay\";\n})(SDPCandidateType = exports.SDPCandidateType || (exports.SDPCandidateType = {}));\nexports.default = SDPCandidateType;\n//# sourceMappingURL=SDPCandidateType.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Represents parsed attributes of a media section (i.e. associated with a single m-line)\n */\nclass SDPMediaSection {\n}\nexports.default = SDPMediaSection;\n//# sourceMappingURL=SDPMediaSection.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SignalingProtocol_1 = require(\"../signalingprotocol/SignalingProtocol\");\n/**\n * `VideoCodecCapability` represents a higher level type to wrap `RTCRtpCodecCapability`\n * and the codec name used in the SDP, while also namespacing static create functions\n * for codecs supported in the SDK.\n *\n * Note that `codecName` is different then `codecCapability.mimeType`\n */\nclass VideoCodecCapability {\n    constructor(codecName, codecCapability) {\n        this.codecName = codecName;\n        this.codecCapability = codecCapability;\n    }\n    equals(other) {\n        return (other !== undefined &&\n            this.codecName === other.codecName &&\n            this.codecCapability.mimeType === other.codecCapability.mimeType &&\n            this.codecCapability.clockRate === other.codecCapability.clockRate &&\n            this.codecCapability.sdpFmtpLine === other.codecCapability.sdpFmtpLine);\n    }\n    /**\n     * Returns the configuration of VP8 supported by the SDK\n     */\n    static vp8() {\n        return new VideoCodecCapability('VP8', {\n            clockRate: 90000,\n            mimeType: 'video/VP8',\n        });\n    }\n    /**\n     * Returns the configuration of H.264 CBP supported by the SDK\n     */\n    static h264ConstrainedBaselineProfile() {\n        return new VideoCodecCapability('H264', {\n            clockRate: 90000,\n            mimeType: 'video/H264',\n            sdpFmtpLine: 'level-asymmetry-allowed=1;packetization-mode=1;profile-level-id=42e01f',\n        });\n    }\n    /**\n     * Returns the configuration of H.264 recommended by the SDK\n     */\n    static h264() {\n        return this.h264ConstrainedBaselineProfile();\n    }\n    /**\n     * Returns the configuration of codec corresponding to the signaled capability\n     */\n    static fromSignaled(capability) {\n        switch (capability) {\n            case SignalingProtocol_1.SdkVideoCodecCapability.VP8:\n                return this.vp8();\n            case SignalingProtocol_1.SdkVideoCodecCapability.H264_CONSTRAINED_BASELINE_PROFILE:\n                return this.h264ConstrainedBaselineProfile();\n            default:\n                return undefined;\n        }\n    }\n}\nexports.default = VideoCodecCapability;\n//# sourceMappingURL=VideoCodecCapability.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SDPCandidateType_1 = require(\"./SDPCandidateType\");\nconst SDPMediaSection_1 = require(\"./SDPMediaSection\");\nconst VideoCodecCapability_1 = require(\"./VideoCodecCapability\");\n/**\n * [[SDP]] includes a few helper functions for parsing sdp string.\n */\nclass SDP {\n    /**\n     * Construts a new [[SDP]] object\n     */\n    constructor(sdp) {\n        this.sdp = sdp;\n    }\n    /**\n     * Clones an SDP\n     */\n    clone() {\n        return new SDP(this.sdp);\n    }\n    /**\n     * Checks if the candidate is a valid RTP candidate\n     */\n    static isRTPCandidate(candidate) {\n        const match = /candidate[:](\\S+) (\\d+)/g.exec(candidate);\n        if (match === null || match[2] !== '1') {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Constructs a new SDP with the given set of SDP lines.\n     */\n    static linesToSDP(lines) {\n        return new SDP(lines.join(SDP.CRLF));\n    }\n    /**\n     * Returns an enum of [[candidateType]] for the given string.\n     */\n    static candidateTypeFromString(candidateType) {\n        switch (candidateType) {\n            case SDPCandidateType_1.default.Host:\n                return SDPCandidateType_1.default.Host;\n            case SDPCandidateType_1.default.ServerReflexive:\n                return SDPCandidateType_1.default.ServerReflexive;\n            case SDPCandidateType_1.default.PeerReflexive:\n                return SDPCandidateType_1.default.PeerReflexive;\n            case SDPCandidateType_1.default.Relay:\n                return SDPCandidateType_1.default.Relay;\n        }\n        return null;\n    }\n    /**\n     * Returns the candidate type assocaited with the sdpline.\n     */\n    static candidateType(sdpLine) {\n        const match = /a[=]candidate[:].* typ ([a-z]+) /g.exec(sdpLine);\n        if (match === null) {\n            return null;\n        }\n        return SDP.candidateTypeFromString(match[1]);\n    }\n    /**\n     * Returns the media type associated with the sdp line.\n     */\n    static mediaType(sdpLine) {\n        const match = /m=(audio|video)/g.exec(sdpLine);\n        if (match === null) {\n            return undefined;\n        }\n        return match[1];\n    }\n    /**\n     * Erase out \"a=mid\"  from the sdp line.\n     */\n    static mid(sdpLine) {\n        if (!sdpLine.includes('a=mid:')) {\n            return undefined;\n        }\n        return sdpLine.replace(/^(a=mid:)/, '');\n    }\n    /**\n     * Return the direction associated with the sdp line.\n     */\n    static direction(sdpLine) {\n        const match = /a=(sendrecv|sendonly|recvonly|inactive)/g.exec(sdpLine);\n        if (match === null) {\n            return undefined;\n        }\n        return match[1];\n    }\n    /**\n     * Format the sdp string into separate lines.\n     */\n    static splitLines(blob) {\n        return blob\n            .trim()\n            .split('\\n')\n            .map((line) => {\n            return line.trim();\n        });\n    }\n    /**\n     * split the different sdp sections\n     */\n    static splitSections(sdp) {\n        // each section starts with \"m=\"\n        const sections = sdp.split('\\nm=');\n        return sections.map((section, index) => {\n            return (index > 0 ? 'm=' + section : section).trim() + SDP.CRLF;\n        });\n    }\n    /**\n     * split the different sdp sections\n     */\n    static findActiveCameraSection(sections) {\n        let cameraLineIndex = 0;\n        let hasCamera = false;\n        for (const sec of sections) {\n            if (/^m=video/.test(sec)) {\n                if (sec.indexOf('sendrecv') > -1 ||\n                    // RFC 4566: If none of the attributes \"sendonly\", \"recvonly\", \"inactive\",\n                    // and \"sendrecv\" is present, \"sendrecv\" SHOULD be assumed as the\n                    // default for sessions\n                    (sec.indexOf('sendonly') === -1 &&\n                        sec.indexOf('recvonly') === -1 &&\n                        sec.indexOf('inactive') === -1)) {\n                    hasCamera = true;\n                    break;\n                }\n            }\n            cameraLineIndex++;\n        }\n        if (hasCamera === false) {\n            cameraLineIndex = -1;\n        }\n        return cameraLineIndex;\n    }\n    /**\n     * Extract the SSRCs from the group line.\n     *\n     * a=ssrc-group:<semantics> <ssrc-id> ...\n     */\n    static extractSSRCsFromFIDGroupLine(figGroupLine) {\n        const ssrcStringMatch = /^a=ssrc-group:FID\\s(.+)/.exec(figGroupLine);\n        return ssrcStringMatch[1];\n    }\n    /**\n     * Extracts the lines from the sdp blob that matches the given prefix.\n     */\n    static matchPrefix(blob, prefix) {\n        return SDP.splitLines(blob).filter((line) => {\n            return line.indexOf(prefix) === 0;\n        });\n    }\n    /**\n     * Splits SDP string into lines\n     */\n    lines() {\n        return this.sdp.split(SDP.CRLF);\n    }\n    /**\n     * Checks if SDP has a video section.\n     */\n    hasVideo() {\n        return /^m=video/gm.exec(this.sdp) !== null;\n    }\n    /**\n     * Checks whether the SDP has candidates for any m-line\n     */\n    hasCandidates() {\n        const match = /a[=]candidate[:]/g.exec(this.sdp);\n        if (match === null) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Checks whether the SDP has candidates for all m-lines\n     */\n    hasCandidatesForAllMLines() {\n        const isAnyCLineUsingLocalHost = this.sdp.indexOf('c=IN IP4 0.0.0.0') > -1;\n        const mLinesHaveCandidates = !isAnyCLineUsingLocalHost;\n        return mLinesHaveCandidates;\n    }\n    /**\n     * Removes candidates of a given type from SDP\n     */\n    withoutCandidateType(candidateTypeToExclude) {\n        return SDP.linesToSDP(this.lines().filter(line => SDP.candidateType(line) !== candidateTypeToExclude));\n    }\n    /**\n     * Removes server reflexive candidate from SDP\n     */\n    withoutServerReflexiveCandidates() {\n        return this.withoutCandidateType(SDPCandidateType_1.default.ServerReflexive);\n    }\n    /**\n     * Inserts a parameter to the SDP local offer setting the desired average audio bitrate\n     */\n    withAudioMaxAverageBitrate(maxAverageBitrate) {\n        if (!maxAverageBitrate) {\n            return this.clone();\n        }\n        maxAverageBitrate = Math.trunc(Math.min(Math.max(maxAverageBitrate, SDP.rfc7587LowestBitrate), SDP.rfc7587HighestBitrate));\n        const srcLines = this.lines();\n        const fmtpAttributes = SDP.findOpusFmtpAttributes(srcLines);\n        const dstLines = SDP.updateOpusFmtpAttributes(srcLines, fmtpAttributes, [\n            `maxaveragebitrate=${maxAverageBitrate}`,\n        ]);\n        return SDP.linesToSDP(dstLines);\n    }\n    /**\n     * Update the SDP to include stereo\n     */\n    withStereoAudio() {\n        const srcLines = this.lines();\n        const fmtpAttributes = SDP.findOpusFmtpAttributes(srcLines);\n        const dstLines = SDP.updateOpusFmtpAttributes(srcLines, fmtpAttributes, [\n            'stereo=1',\n            'sprop-stereo=1',\n        ]);\n        return SDP.linesToSDP(dstLines);\n    }\n    /**\n     * Here we loop through each line in the SDP\n     * and construct an array containing the fmtp\n     * attribute for all the audio m lines that use\n     * the opus codec. If it doesn't use opus codec\n     * we add null to the array which tells\n     * updateOpusFmtpAttributes that no update is\n     * needed for that particular fmtp attribute line\n     */\n    static findOpusFmtpAttributes(sdpLines) {\n        const opusRtpMapRegex = /^a=rtpmap:\\s*(\\d+)\\s+opus\\/48000/;\n        let lookingForOpusRtpMap = false;\n        const fmtpAttributes = [];\n        for (const line of sdpLines) {\n            if (line.startsWith('m=audio')) {\n                fmtpAttributes.push(null);\n                lookingForOpusRtpMap = true;\n            }\n            if (line.startsWith('m=video')) {\n                // Opus rtpmap is only part of audio m lines section\n                // Set this to false as we don't need to perform regex\n                // matches for video section\n                lookingForOpusRtpMap = false;\n            }\n            if (lookingForOpusRtpMap) {\n                const match = opusRtpMapRegex.exec(line);\n                if (match !== null) {\n                    fmtpAttributes[fmtpAttributes.length - 1] = `a=fmtp:${match[1]} `;\n                }\n            }\n        }\n        return fmtpAttributes;\n    }\n    /**\n     * Update the fmtp lines in each audio m section\n     * that correspond to the opus codec with the parameters\n     * specifief in additionalParams\n     */\n    static updateOpusFmtpAttributes(srcLines, fmtpAttributes, additionalParams) {\n        const dstLines = [];\n        let fmtpIndex = 0;\n        let currFmtpAttribute = null;\n        for (const line of srcLines) {\n            if (line.startsWith('m=audio')) {\n                currFmtpAttribute = fmtpAttributes[fmtpIndex];\n                fmtpIndex++;\n            }\n            if (line.startsWith('m=video')) {\n                currFmtpAttribute = null;\n            }\n            if (currFmtpAttribute && line.startsWith(currFmtpAttribute)) {\n                const oldParameters = line.slice(currFmtpAttribute.length).split(';');\n                const newParameters = [];\n                // If an existing parameter is in additionalParams\n                // dont add it to newParameters as it will be replaced\n                for (const parameter of oldParameters) {\n                    const index = additionalParams.findIndex(element => element.startsWith(parameter.split('=')[0]));\n                    if (index < 0) {\n                        newParameters.push(parameter);\n                    }\n                }\n                for (const parameter of additionalParams) {\n                    newParameters.push(parameter);\n                }\n                dstLines.push(currFmtpAttribute + newParameters.join(';'));\n            }\n            else {\n                dstLines.push(line);\n            }\n        }\n        return dstLines;\n    }\n    /**\n     * Munges Unified-Plan SDP from different browsers to conform to one format\n     * TODO: will remove this soon.\n     */\n    withUnifiedPlanFormat() {\n        let originalSdp = this.sdp;\n        if (originalSdp.includes('mozilla')) {\n            return this.clone();\n        }\n        else {\n            originalSdp = originalSdp.replace('o=-', 'o=mozilla-chrome');\n        }\n        return new SDP(originalSdp);\n    }\n    /**\n     * Returns the total number of unique Rtp header extensions.\n     */\n    getUniqueRtpHeaderExtensionId(srcLines) {\n        const headerExtensionIds = [];\n        for (const line of srcLines) {\n            if (/^a=extmap:/.test(line.trim())) {\n                const headerExtension = line.split('a=extmap:')[1].split(' ');\n                const id = +headerExtension[0];\n                if (!headerExtensionIds.includes(id)) {\n                    headerExtensionIds.push(id);\n                }\n            }\n        }\n        headerExtensionIds.sort((a, b) => a - b);\n        let previousId = 0; // header extension cannot be 0, refer https://datatracker.ietf.org/doc/html/rfc5285\n        for (const id of headerExtensionIds) {\n            if (id - previousId > 1) {\n                return previousId + 1;\n            }\n            previousId = id;\n        }\n        // One-Byte Header header extension cannot be bigger than 14, refer https://datatracker.ietf.org/doc/html/rfc5285\n        return previousId === 14 ? -1 : previousId + 1;\n    }\n    /**\n     * To avoid resubscribing to preemptively turn off simulcast streams or to switch layers\n     * negotiate with the back end to determine whether to use layers allocation header extension\n     * this will not add the packet overhead unless negotiated to avoid waste\n     */\n    withVideoLayersAllocationRtpHeaderExtension(previousSdp) {\n        const url = `http://www.webrtc.org/experiments/rtp-hdrext/video-layers-allocation00`;\n        // According to https://webrtc.googlesource.com/src/+/b62ee8ce94e5f10e0a94d6f112e715cc4d0cd9dc,\n        // RTP header extension ID change would result in a hard failure. Therefore if the extension exists\n        // in the previous SDP, use the same extension ID to avoid the failure. Otherwise use a new ID\n        const previousId = previousSdp ? previousSdp.getRtpHeaderExtensionId(url) : -1;\n        const id = previousId === -1 ? this.getUniqueRtpHeaderExtensionId(SDP.splitLines(this.sdp)) : previousId;\n        const sections = SDP.splitSections(this.sdp);\n        const newSections = [];\n        for (let section of sections) {\n            if (/^m=video/.test(section) && SDP.getRtpHeaderExtensionIdInSection(section, url) === -1) {\n                // Add RTP header extension when it does not already exist\n                const srcLines = SDP.splitLines(section);\n                const dstLines = [];\n                if (id === -1 || this.hasRtpHeaderExtensionId(id)) {\n                    // if all ids are used or the id is already used, we won't add new line to it\n                    newSections.push(section);\n                    continue;\n                }\n                for (const line of srcLines) {\n                    dstLines.push(line);\n                    if (/^a=sendrecv/.test(line.trim())) {\n                        const targetLine = `a=extmap:` + id + ` ` + url;\n                        dstLines.push(targetLine);\n                    }\n                }\n                section = dstLines.join(SDP.CRLF) + SDP.CRLF;\n            }\n            else if (previousId !== -1 &&\n                /^m=video/.test(section) &&\n                SDP.getRtpHeaderExtensionIdInSection(section, url) !== previousId) {\n                // Override extension ID if it does not match previous SDP\n                const srcLines = SDP.splitLines(section);\n                const dstLines = [];\n                for (const line of srcLines) {\n                    if (/^a=extmap:/.test(line.trim())) {\n                        const headerExtension = line.split('a=extmap:')[1].split(' ');\n                        if (headerExtension[1] === url) {\n                            if (!this.hasRtpHeaderExtensionId(previousId)) {\n                                // If previous ID is used by another extension, remove it from this SDP\n                                const targetLine = `a=extmap:` + previousId + ` ` + url;\n                                dstLines.push(targetLine);\n                            }\n                            continue;\n                        }\n                    }\n                    dstLines.push(line);\n                }\n                section = dstLines.join(SDP.CRLF) + SDP.CRLF;\n            }\n            newSections.push(section);\n        }\n        const newSdp = newSections.join('');\n        return new SDP(newSdp);\n    }\n    /**\n     * Extracts the ssrc for the sendrecv video media section in SDP\n     */\n    ssrcForVideoSendingSection() {\n        const srcSDP = this.sdp;\n        const sections = SDP.splitSections(srcSDP);\n        if (sections.length < 2) {\n            return '';\n        }\n        const cameraLineIndex = SDP.findActiveCameraSection(sections);\n        if (cameraLineIndex === -1) {\n            return '';\n        }\n        // TODO: match for Firefox. Currently all failures are not Firefox induced.\n        const fidGroupMatch = SDP.matchPrefix(sections[cameraLineIndex], 'a=ssrc-group:FID ');\n        if (fidGroupMatch.length < 1) {\n            return '';\n        }\n        const fidGroup = SDP.extractSSRCsFromFIDGroupLine(fidGroupMatch[0]);\n        const [videoSSRC1] = fidGroup.split(' ').map(ssrc => parseInt(ssrc, 10));\n        return videoSSRC1.toString();\n    }\n    /**\n     * Returns whether the sendrecv video sections if exist have two different SSRCs in SDPs\n     */\n    videoSendSectionHasDifferentSSRC(prevSdp) {\n        const ssrc1 = this.ssrcForVideoSendingSection();\n        const ssrc2 = prevSdp.ssrcForVideoSendingSection();\n        if (ssrc1 === '' || ssrc2 === '') {\n            return false;\n        }\n        const ssrc1InNumber = parseInt(ssrc1, 10);\n        const ssrc2InNumber = parseInt(ssrc2, 10);\n        if (ssrc1InNumber === ssrc2InNumber) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Removes H.264 from the send section.\n     */\n    removeH264SupportFromSendSection() {\n        const srcSDP = this.sdp;\n        const sections = SDP.splitSections(srcSDP);\n        const cameraLineIndex = SDP.findActiveCameraSection(sections);\n        if (cameraLineIndex === -1) {\n            return new SDP(this.sdp);\n        }\n        const cameraSection = sections[cameraLineIndex];\n        const cameraSectionLines = SDP.splitLines(cameraSection);\n        const payloadTypesForH264 = [];\n        const primaryPayloadTypeToFeedbackPayloadTypes = new Map();\n        // Loop through camera section (m=video)\n        cameraSectionLines.forEach(attribute => {\n            // Find the payload type with H264 codec line (e.g., a=rtpmap:<payload> H264/90000)\n            if (/^a=rtpmap:/.test(attribute)) {\n                const payloadMatch = /^a=rtpmap:([0-9]+)\\s/.exec(attribute);\n                if (payloadMatch && attribute.toLowerCase().includes('h264')) {\n                    payloadTypesForH264.push(parseInt(payloadMatch[1], 10));\n                }\n            }\n            // Loop through the rtx payload and create a mapping between it and the primary payload.\n            // a=fmtp:<rtx payload> apt=<primary payload>\n            if (/^a=fmtp:/.test(attribute)) {\n                const feedbackMatches = /^a=fmtp:([0-9]+) apt=([0-9]+)/.exec(attribute);\n                if (feedbackMatches && feedbackMatches.length === 3) {\n                    const feedbackPayloadType = parseInt(feedbackMatches[1], 10);\n                    const primaryPayloadType = parseInt(feedbackMatches[2], 10);\n                    if (primaryPayloadTypeToFeedbackPayloadTypes.has(primaryPayloadType)) {\n                        primaryPayloadTypeToFeedbackPayloadTypes\n                            .get(primaryPayloadType)\n                            .push(feedbackPayloadType);\n                    }\n                    else {\n                        primaryPayloadTypeToFeedbackPayloadTypes.set(primaryPayloadType, [feedbackPayloadType]);\n                    }\n                }\n            }\n        });\n        // Add the rtx payloads corresponding to the H264 codec to the remove list\n        const payloadTypesToRemove = new Set();\n        for (const type of payloadTypesForH264) {\n            payloadTypesToRemove.add(type);\n            const feedbackTypes = primaryPayloadTypeToFeedbackPayloadTypes.get(type);\n            if (feedbackTypes) {\n                for (const feedbackType of feedbackTypes) {\n                    payloadTypesToRemove.add(feedbackType);\n                }\n            }\n        }\n        // Remove H264 payload from the media line. m=video 9 UDP/+++ <payload> <payload> <payload>\n        if (payloadTypesForH264.length > 0) {\n            const mline = cameraSectionLines[0].split(' ');\n            cameraSectionLines[0] = mline\n                .filter((text) => !payloadTypesToRemove.has(parseInt(text)))\n                .join(' ');\n        }\n        // Filter out lines with H264 payload\n        const filteredLines = cameraSectionLines.filter((line) => {\n            if (!line.includes('rtpmap') && !line.includes('rtcp-fb') && !line.includes('fmtp')) {\n                return true;\n            }\n            for (const type of payloadTypesToRemove) {\n                if (line.includes(type.toString())) {\n                    return false;\n                }\n            }\n            return true;\n        });\n        sections[cameraLineIndex] = filteredLines.join(SDP.CRLF) + SDP.CRLF;\n        const newSDP = sections.join('');\n        return new SDP(newSDP);\n    }\n    /**\n     * List of parsed media sections sections in order they occur on SDP.\n     */\n    mediaSections() {\n        const sections = SDP.splitSections(this.sdp);\n        if (sections.length < 2) {\n            return [];\n        }\n        const parsedMediaSections = [];\n        for (let i = 1; i < sections.length; i++) {\n            const section = new SDPMediaSection_1.default();\n            const lines = SDP.splitLines(sections[i]);\n            for (const line of lines) {\n                const mediaType = SDP.mediaType(line);\n                if (mediaType !== undefined) {\n                    section.mediaType = mediaType;\n                    continue;\n                }\n                const direction = SDP.direction(line);\n                if (direction !== undefined) {\n                    section.direction = direction;\n                    continue;\n                }\n                const mid = SDP.mid(line);\n                if (mid !== undefined) {\n                    section.mid = mid;\n                    continue;\n                }\n            }\n            parsedMediaSections.push(section);\n        }\n        return parsedMediaSections;\n    }\n    /**\n     * Return RTP header extension ID if the extension exists in section. Return -1 otherwise\n     */\n    static getRtpHeaderExtensionIdInSection(section, url) {\n        const lines = SDP.splitLines(section);\n        for (const line of lines) {\n            if (/^a=extmap:/.test(line.trim())) {\n                const headerExtension = line.split('a=extmap:')[1].split(' ');\n                const id = +headerExtension[0];\n                if (headerExtension[1] === url) {\n                    return id;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Return RTP header extension ID if the extension exists in SDP. Return -1 otherwise\n     */\n    getRtpHeaderExtensionId(url) {\n        const sections = SDP.splitSections(this.sdp);\n        for (const section of sections) {\n            if (/^m=video/.test(section)) {\n                const id = SDP.getRtpHeaderExtensionIdInSection(section, url);\n                if (id !== -1) {\n                    return id;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Return if extension ID exists in the SDP\n     */\n    hasRtpHeaderExtensionId(targetId) {\n        const lines = SDP.splitLines(this.sdp);\n        for (const line of lines) {\n            if (/^a=extmap:/.test(line.trim())) {\n                const headerExtension = line.split('a=extmap:')[1].split(' ');\n                const id = +headerExtension[0];\n                if (id === targetId) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Based off the provided preferences, this function will reorder the payload types listed in the `m=video` line.\n     *\n     * This will be applied to the `a=sendrecv` section so it can be applied on either local or remote SDPs. It can be used to\n     * 'polyfill' `RTCRtpSender.setCodecPreferences' on the offer, but it can also be used on remote SDPs to force the\n     * codec actually being send, since the send codec is currently dependent on the remote answer (i.e. `setCodecPreferences` doesn't actually\n     * have any impact unless the remote side respects the order of codecs).\n     */\n    withVideoSendCodecPreferences(preferences) {\n        const srcSDP = this.sdp;\n        const sections = SDP.splitSections(srcSDP);\n        // Note `findActiveCameraSection` looks for `sendrecv` video sections so it\n        // works on both local and remote SDPs.\n        const cameraLineIndex = SDP.findActiveCameraSection(sections);\n        if (cameraLineIndex === -1) {\n            return new SDP(this.sdp);\n        }\n        sections[cameraLineIndex] = this.sectionWithCodecPreferences(sections[cameraLineIndex], preferences);\n        const newSDP = sections.join('');\n        return new SDP(newSDP);\n    }\n    // Based off the provided preferences, this function will reorder the payload types listed in the `m=video` line.\n    sectionWithCodecPreferences(section, preferences) {\n        const codecNamesToPayloadTypes = new Map();\n        const lines = SDP.splitLines(section);\n        // First we get the payload types and their respective `a=rtpmap` lines for our provided preferences\n        lines.forEach(line => {\n            if (!/^a=rtpmap:/.test(line)) {\n                return;\n            }\n            for (const preference of preferences) {\n                // Check if theres a match for the encoding name and clock rate as defined in 'RFC 4566 Section 6':\n                // a=rtpmap:<payload type> <encoding name>/<clock rate> [/<encoding parameters>]\n                // E.g. 'a=rtpmap:125 H264/90000'\n                if (!line.includes(`${preference.codecName}/${preference.codecCapability.clockRate}`)) {\n                    continue;\n                }\n                const payloadMatch = /^a=rtpmap:([0-9]+)\\s/.exec(line); // Get the payload type\n                // We may need to check other parameters (e.g. fmtp line) in addition to the codec name\n                let codecMatches = false;\n                if (preference.codecCapability.sdpFmtpLine !== undefined) {\n                    // Check the fmtp line\n                    for (const prospectiveFmtpLine of lines) {\n                        if (prospectiveFmtpLine.startsWith(`a=fmtp:${payloadMatch[1]} ${preference.codecCapability.sdpFmtpLine}`)) {\n                            codecMatches = true;\n                            break;\n                        }\n                    }\n                }\n                else {\n                    // No 'fmtp' line, nothing else to check\n                    codecMatches = true;\n                }\n                if (codecMatches) {\n                    codecNamesToPayloadTypes.set(preference.codecName, payloadMatch[1]);\n                    break;\n                }\n            }\n        });\n        // RFC 4566 5.14\n        // When a list of payload type numbers is given, this implies that all of these\n        // payload formats MAY be used in the session, but the first of these\n        // formats SHOULD be used as the default format for the session.\n        const payloadTypesToRemove = new Set(codecNamesToPayloadTypes.values());\n        // Remove payloads from the media line. m=video 9 UDP/+++ <payload> <payload> <payload> ...\n        const mline = lines[0].split(' ').filter((text) => !payloadTypesToRemove.has(text));\n        // Then splice them back in, in preferred order at the start of the list\n        const orderedPreferedPayloadTypes = Array.from(codecNamesToPayloadTypes.values()).sort((name1, name2) => {\n            const priority1 = preferences.findIndex(capability => {\n                return codecNamesToPayloadTypes.get(capability.codecName) === name1;\n            });\n            const priority2 = preferences.findIndex(capability => {\n                return codecNamesToPayloadTypes.get(capability.codecName) === name2;\n            });\n            return priority1 - priority2;\n        });\n        // Start from 3 to skip `m=video 9 UDP/+++`\n        mline.splice(3, 0, ...orderedPreferedPayloadTypes.values());\n        lines[0] = mline.join(' ');\n        // Note that nothing in the RFCs require `a=rtpmap` lines to be reordered\n        return lines.join(SDP.CRLF) + SDP.CRLF;\n    }\n    /**\n     * Returns the `VideoCodecCapability` which corresponds to the first payload type in the\n     * m-line (e.g. `m=video 9 UDP/+++ <highest priority payload type> <payload type> <payload type> ...`),\n     * parsing the rest of the SDP for relevant information to construct it.\n     *\n     * Returns undefined if there is no video send section or no codecs in the send section\n     */\n    highestPriorityVideoSendCodec() {\n        const srcSDP = this.sdp;\n        const sections = SDP.splitSections(srcSDP);\n        // Note `findActiveCameraSection` looks for `sendrecv` video sections so it\n        // works on both local and remote SDPs.\n        const cameraLineIndex = SDP.findActiveCameraSection(sections);\n        if (cameraLineIndex === -1) {\n            return undefined;\n        }\n        const lines = SDP.splitLines(sections[cameraLineIndex]);\n        // m=video 9 UDP/+++ <payload> <payload> <payload> ...\n        const mlineTokens = lines[0].split(' ');\n        if (mlineTokens.length < 4) {\n            return undefined;\n        }\n        // Start from 3 to skip `m=video 9 UDP/+++`\n        const highestPriorityPayloadType = mlineTokens[3];\n        let highestPriorityCodecName = undefined;\n        let highestPriorityClockRate = undefined;\n        let highestPriorityFmtpLine = undefined;\n        for (const line of lines) {\n            // E.g. 'a=rtpmap:125 H264/90000'\n            const payloadMatch = /^a=rtpmap:([0-9]+)\\s/.exec(line); // Get the payload type\n            if (payloadMatch === null ||\n                payloadMatch.length < 2 ||\n                payloadMatch[1] !== highestPriorityPayloadType) {\n                continue;\n            }\n            const lineTokens = line.split(' '); // Previous check guarantees this to be valid\n            const nameAndClockRate = lineTokens[1].split('/');\n            if (nameAndClockRate === undefined || nameAndClockRate.length < 2) {\n                continue;\n            }\n            highestPriorityCodecName = nameAndClockRate[0];\n            highestPriorityClockRate = nameAndClockRate[1];\n            for (const prospectiveFmtpLine of lines) {\n                if (prospectiveFmtpLine.startsWith(`a=fmtp:${highestPriorityPayloadType}`)) {\n                    const fmtpLineTokens = prospectiveFmtpLine.split(' ');\n                    if (fmtpLineTokens === undefined || fmtpLineTokens.length < 2) {\n                        return undefined; // Bail out of broken SDP\n                    }\n                    highestPriorityFmtpLine = fmtpLineTokens[1];\n                    continue;\n                }\n            }\n            break;\n        }\n        if (highestPriorityCodecName !== undefined) {\n            return new VideoCodecCapability_1.default(highestPriorityCodecName, {\n                clockRate: parseInt(highestPriorityClockRate),\n                mimeType: `video/${highestPriorityCodecName}`,\n                sdpFmtpLine: highestPriorityFmtpLine,\n            });\n        }\n        return undefined;\n    }\n}\nexports.default = SDP;\nSDP.CRLF = '\\r\\n';\nSDP.rfc7587LowestBitrate = 6000;\nSDP.rfc7587HighestBitrate = 510000;\n//# sourceMappingURL=SDP.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MeetingSessionStatusCode_1 = require(\"../meetingsession/MeetingSessionStatusCode\");\nconst SDP_1 = require(\"../sdp/SDP\");\nconst BaseTask_1 = require(\"./BaseTask\");\n/*\n * [[CreateSDPTask]] asynchronously calls [[createOffer]] on peer connection.\n */\nclass CreateSDPTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'CreateSDPTask';\n    }\n    cancel() {\n        // Just in case. The baseCancel behavior should prevent this.\n        /* istanbul ignore else */\n        if (this.cancelPromise) {\n            const error = new Error(`canceling ${this.name()}`);\n            this.cancelPromise(error);\n            delete this.cancelPromise;\n        }\n    }\n    sessionUsesAudio() {\n        var _a, _b;\n        return !!((_b = (_a = this.context.meetingSessionConfiguration) === null || _a === void 0 ? void 0 : _a.urls) === null || _b === void 0 ? void 0 : _b.audioHostURL);\n    }\n    sessionUsesVideo() {\n        const enabled = true;\n        let sending;\n        if (this.context.transceiverController.useTransceivers()) {\n            sending = this.context.transceiverController.hasVideoInput();\n        }\n        else {\n            sending = this.context.videoTileController.hasStartedLocalVideoTile();\n        }\n        const receiving = !!this.context.videosToReceive && !this.context.videosToReceive.empty();\n        const usesVideo = enabled && (sending || receiving);\n        this.context.logger.info(`uses video: ${usesVideo} (enabled: ${enabled}, sending: ${sending}, receiving: ${receiving})`);\n        return usesVideo;\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const offerOptions = {\n                offerToReceiveAudio: this.sessionUsesAudio(),\n                offerToReceiveVideo: this.sessionUsesVideo(),\n            };\n            this.logger.info(`peer connection offerOptions: ${JSON.stringify(offerOptions)}`);\n            yield new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                this.cancelPromise = (error) => {\n                    reject(error);\n                };\n                try {\n                    this.context.sdpOfferInit = yield this.context.peer.createOffer(offerOptions);\n                    this.context.logger.info('peer connection created offer');\n                    if (this.context.previousSdpOffer) {\n                        if (new SDP_1.default(this.context.sdpOfferInit.sdp).videoSendSectionHasDifferentSSRC(this.context.previousSdpOffer)) {\n                            const error = new Error(`canceling ${this.name()} due to the meeting status code: ${MeetingSessionStatusCode_1.default.IncompatibleSDP}`);\n                            this.context.previousSdpOffer = null;\n                            reject(error);\n                            return;\n                        }\n                    }\n                    resolve();\n                }\n                catch (error) {\n                    reject(error);\n                }\n                finally {\n                    delete this.cancelPromise;\n                }\n            }));\n        });\n    }\n}\nexports.default = CreateSDPTask;\n//# sourceMappingURL=CreateSDPTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nclass DataMessage {\n    constructor(timestampMs, topic, data, senderAttendeeId, senderExternalUserId, throttled) {\n        this.timestampMs = timestampMs;\n        this.topic = topic;\n        this.data = data;\n        this.senderAttendeeId = senderAttendeeId;\n        this.senderExternalUserId = senderExternalUserId;\n        this.throttled = !!throttled;\n    }\n    /**\n     * Helper conversion methods to convert {@link Uint8Array} data to string\n     */\n    text() {\n        return new TextDecoder().decode(this.data);\n    }\n    /**\n     * Helper conversion methods to convert {@link Uint8Array} data to JSON\n     */\n    json() {\n        return JSON.parse(new TextDecoder().decode(this.data));\n    }\n}\nexports.default = DataMessage;\n//# sourceMappingURL=DataMessage.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst IntervalScheduler_1 = require(\"../scheduler/IntervalScheduler\");\nclass DefaultActiveSpeakerDetector {\n    constructor(realtimeController, selfAttendeeId, hasBandwidthPriorityCallback, waitIntervalMs = 1000, updateIntervalMs = 200) {\n        this.realtimeController = realtimeController;\n        this.selfAttendeeId = selfAttendeeId;\n        this.hasBandwidthPriorityCallback = hasBandwidthPriorityCallback;\n        this.waitIntervalMs = waitIntervalMs;\n        this.updateIntervalMs = updateIntervalMs;\n        this.speakerScores = {};\n        this.speakerMuteState = {};\n        this.detectorCallbackToHandler = new Map();\n        this.detectorCallbackToScoresTimer = new Map();\n        this.detectorCallbackToActivityTimer = new Map();\n        this.hasBandwidthPriority = false;\n        this.mostRecentUpdateTimestamp = {};\n    }\n    needUpdate(attendeeId) {\n        if (!this.activeSpeakers) {\n            return true;\n        }\n        return ((this.speakerScores[attendeeId] === 0 && this.activeSpeakers.includes(attendeeId)) ||\n            (this.speakerScores[attendeeId] > 0 && !this.activeSpeakers.includes(attendeeId)));\n    }\n    updateActiveSpeakers(policy, callback, attendeeId) {\n        if (!this.needUpdate(attendeeId)) {\n            return;\n        }\n        const sortedSpeakers = [];\n        const attendeeIds = Object.keys(this.speakerScores);\n        for (let i = 0; i < attendeeIds.length; i++) {\n            const attendeeId = attendeeIds[i];\n            sortedSpeakers.push({ attendeeId: attendeeId, activeScore: this.speakerScores[attendeeId] });\n        }\n        const sortedAttendeeIds = sortedSpeakers\n            .sort((s1, s2) => s2.activeScore - s1.activeScore)\n            .filter(function (s) {\n            return s.activeScore > 0;\n        })\n            .map(function (s) {\n            return s.attendeeId;\n        });\n        this.activeSpeakers = sortedAttendeeIds;\n        callback(sortedAttendeeIds);\n        const selfIsActive = sortedAttendeeIds.length > 0 && sortedAttendeeIds[0] === this.selfAttendeeId;\n        const hasBandwidthPriority = selfIsActive && policy.prioritizeVideoSendBandwidthForActiveSpeaker();\n        const hasBandwidthPriorityDidChange = this.hasBandwidthPriority !== hasBandwidthPriority;\n        if (hasBandwidthPriorityDidChange) {\n            this.hasBandwidthPriority = hasBandwidthPriority;\n            this.hasBandwidthPriorityCallback(hasBandwidthPriority);\n        }\n    }\n    updateScore(policy, callback, attendeeId, volume, muted) {\n        const activeScore = policy.calculateScore(attendeeId, volume, muted);\n        if (this.speakerScores[attendeeId] !== activeScore) {\n            this.speakerScores[attendeeId] = activeScore;\n            this.mostRecentUpdateTimestamp[attendeeId] = Date.now();\n            this.updateActiveSpeakers(policy, callback, attendeeId);\n        }\n    }\n    subscribe(policy, callback, scoresCallback, scoresCallbackIntervalMs) {\n        const handler = (attendeeId, present) => {\n            if (!present) {\n                this.speakerScores[attendeeId] = 0;\n                this.mostRecentUpdateTimestamp[attendeeId] = Date.now();\n                this.updateActiveSpeakers(policy, callback, attendeeId);\n                return;\n            }\n            this.realtimeController.realtimeSubscribeToVolumeIndicator(attendeeId, (attendeeId, volume, muted, _signalStrength) => {\n                this.mostRecentUpdateTimestamp[attendeeId] = Date.now();\n                if (muted !== null) {\n                    this.speakerMuteState[attendeeId] = muted;\n                }\n                this.updateScore(policy, callback, attendeeId, volume, muted);\n            });\n        };\n        this.detectorCallbackToHandler.set(callback, handler);\n        const activityTimer = new IntervalScheduler_1.default(this.updateIntervalMs);\n        activityTimer.start(() => {\n            for (const attendeeId in this.speakerScores) {\n                if (Date.now() - this.mostRecentUpdateTimestamp[attendeeId] > this.waitIntervalMs) {\n                    this.updateScore(policy, callback, attendeeId, 0, this.speakerMuteState[attendeeId]);\n                }\n            }\n        });\n        this.detectorCallbackToActivityTimer.set(callback, activityTimer);\n        if (scoresCallback && scoresCallbackIntervalMs) {\n            const scoresTimer = new IntervalScheduler_1.default(scoresCallbackIntervalMs);\n            scoresTimer.start(() => {\n                scoresCallback(this.speakerScores);\n            });\n            this.detectorCallbackToScoresTimer.set(callback, scoresTimer);\n        }\n        this.realtimeController.realtimeSubscribeToAttendeeIdPresence(handler);\n    }\n    unsubscribe(callback) {\n        const handler = this.detectorCallbackToHandler.get(callback);\n        this.detectorCallbackToHandler.delete(callback);\n        if (handler) {\n            this.realtimeController.realtimeUnsubscribeToAttendeeIdPresence(handler);\n        }\n        const activityTimer = this.detectorCallbackToActivityTimer.get(callback);\n        if (activityTimer) {\n            activityTimer.stop();\n            this.detectorCallbackToActivityTimer.delete(callback);\n        }\n        const scoresTimer = this.detectorCallbackToScoresTimer.get(callback);\n        if (scoresTimer) {\n            scoresTimer.stop();\n            this.detectorCallbackToHandler.delete(callback);\n        }\n    }\n    destroy() {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const handler of this.detectorCallbackToHandler.values()) {\n                this.realtimeController.realtimeUnsubscribeToAttendeeIdPresence(handler);\n            }\n            for (const activityTimer of this.detectorCallbackToActivityTimer.values()) {\n                activityTimer.stop();\n            }\n            for (const scoresTimer of this.detectorCallbackToScoresTimer.values()) {\n                scoresTimer.stop();\n            }\n            this.detectorCallbackToHandler.clear();\n            this.detectorCallbackToActivityTimer.clear();\n            this.detectorCallbackToScoresTimer.clear();\n        });\n    }\n}\nexports.default = DefaultActiveSpeakerDetector;\n//# sourceMappingURL=DefaultActiveSpeakerDetector.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass DefaultActiveSpeakerPolicy {\n    /** Creates active speaker policy with speakerWeight, cutoffThreshold, silenceThreshold, and takeoverRate.\n     *\n     * @param speakerWeight\n     * The number used to calculate new active speaker score for current attendee.\n     * ```js\n     * Formula:\n     * updatedCurrentAttendeeScore = currentAttendeeExistingScore * speakerWeight + currentReceivedVolume * (1 - speakerWeight)\n     * ```\n     *\n     * @param cutoffThreshold\n     * The threshold number compared with updated active speaker score.\n     * If the updated active speaker score is less than this threshold value,\n     * the updated score is returned as 0, else the updated score is returned.\n     *\n     * @param silenceThreshold\n     * The threshold number compared with current received volume.\n     * While calculating the new active speaker score, if the current received\n     * volume is less than this threshold value, the current received volume is considered as 0,\n     * else 1.\n     *\n     * @param takeoverRate\n     * The number used to calculate other attendee's active speaker score, other than the current attendee.\n     * ```js\n     * Formula:\n     *  updatedOtherAttendeeActiveSpeakerScore = Math.max(\n     *    existingOtherAttendeeActiveSpeakerScore - takeoverRate * currentReceivedVolume,\n     *    0\n     *  );\n     * ```\n     */\n    constructor(speakerWeight = 0.9, cutoffThreshold = 0.01, silenceThreshold = 0.2, takeoverRate = 0.2) {\n        this.speakerWeight = speakerWeight;\n        this.cutoffThreshold = cutoffThreshold;\n        this.silenceThreshold = silenceThreshold;\n        this.takeoverRate = takeoverRate;\n        /**\n         * The map of attendeeIds to their active speaker score values\n         */\n        this.volumes = {};\n    }\n    calculateScore(attendeeId, volume, muted) {\n        if (muted || volume === null) {\n            volume = 0;\n        }\n        if (!this.volumes.hasOwnProperty(attendeeId)) {\n            this.volumes[attendeeId] = 0;\n        }\n        if (volume > this.silenceThreshold) {\n            volume = 1.0;\n        }\n        else {\n            volume = 0.0;\n        }\n        const score = this.volumes[attendeeId] * this.speakerWeight + volume * (1 - this.speakerWeight);\n        this.volumes[attendeeId] = score;\n        for (const otherAttendeeId in this.volumes) {\n            if (otherAttendeeId !== attendeeId) {\n                this.volumes[otherAttendeeId] = Math.max(this.volumes[otherAttendeeId] - this.takeoverRate * volume, 0);\n            }\n        }\n        if (score < this.cutoffThreshold) {\n            return 0;\n        }\n        return score;\n    }\n    prioritizeVideoSendBandwidthForActiveSpeaker() {\n        return true;\n    }\n}\nexports.default = DefaultActiveSpeakerPolicy;\n//# sourceMappingURL=DefaultActiveSpeakerPolicy.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\nconst AsyncScheduler_1 = require(\"../scheduler/AsyncScheduler\");\nclass DefaultAudioMixController {\n    constructor(logger) {\n        this.logger = logger;\n        this.audioDevice = null;\n        this.audioElement = null;\n        this.audioStream = null;\n        this.browserBehavior = new DefaultBrowserBehavior_1.default();\n        this.observers = new Set();\n    }\n    bindAudioElement(element) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!element) {\n                throw new Error(`Cannot bind audio element: ${element}`);\n            }\n            this.audioElement = element;\n            this.audioElement.autoplay = true;\n            return this.bindAudioMix();\n        });\n    }\n    unbindAudioElement() {\n        if (!this.audioElement) {\n            return;\n        }\n        this.audioElement.srcObject = null;\n        this.audioElement = null;\n        this.forEachObserver((observer) => {\n            if (this.audioStream) {\n                observer.meetingAudioStreamBecameInactive(this.audioStream);\n            }\n        });\n    }\n    bindAudioStream(stream) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!stream) {\n                return;\n            }\n            this.audioStream = stream;\n            try {\n                yield this.bindAudioMix();\n            }\n            catch (error) {\n                /* istanbul ignore else */\n                if (this.logger) {\n                    this.logger.warn(`Failed to bind audio stream: ${error}`);\n                }\n            }\n        });\n    }\n    bindAudioDevice(device) {\n        return __awaiter(this, void 0, void 0, function* () {\n            /**\n             * Throw error if browser doesn't even support setSinkId\n             * Read more: https://caniuse.com/?search=setSinkId\n             */\n            if (device && !this.browserBehavior.supportsSetSinkId()) {\n                throw new Error('Cannot select audio output device. This browser does not support setSinkId.');\n            }\n            // Always set device -- we might be setting it back to `null` to reselect\n            // the default, and even in that case we need to call `bindAudioMix` in\n            // order to update the sink ID to the empty string.\n            this.audioDevice = device;\n            return this.bindAudioMix();\n        });\n    }\n    forEachObserver(observerFunc) {\n        for (const observer of this.observers) {\n            AsyncScheduler_1.default.nextTick(() => {\n                observerFunc(observer);\n            });\n        }\n    }\n    bindAudioMix() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.audioElement) {\n                return;\n            }\n            const previousStream = this.audioElement.srcObject;\n            if (this.audioStream) {\n                this.audioElement.srcObject = this.audioStream;\n            }\n            if (previousStream !== this.audioStream) {\n                this.forEachObserver((observer) => {\n                    if (previousStream) {\n                        observer.meetingAudioStreamBecameInactive(previousStream);\n                    }\n                    if (this.audioStream) {\n                        observer.meetingAudioStreamBecameActive(this.audioStream);\n                    }\n                });\n            }\n            // In usual operation, the output device is undefined, and so is the element\n            // sink ID. In this case, don't throw an error -- we're being called as a side\n            // effect of just binding the audio element, not choosing an output device.\n            const shouldSetSinkId = ((_a = this.audioDevice) === null || _a === void 0 ? void 0 : _a.deviceId) !== this.audioElement.sinkId;\n            if (shouldSetSinkId &&\n                typeof this.audioElement.sinkId === 'undefined') {\n                throw new Error('Cannot select audio output device. This browser does not support setSinkId.');\n            }\n            const newSinkId = this.audioDevice ? this.audioDevice.deviceId : '';\n            const oldSinkId = this.audioElement.sinkId;\n            if (newSinkId === oldSinkId) {\n                return;\n            }\n            // Take the existing stream and temporarily unbind it while we change\n            // the sink ID.\n            const existingAudioElement = this\n                .audioElement;\n            const existingStream = this.audioStream;\n            if (this.browserBehavior.hasChromiumWebRTC()) {\n                existingAudioElement.srcObject = null;\n            }\n            if (shouldSetSinkId) {\n                try {\n                    yield existingAudioElement.setSinkId(newSinkId);\n                }\n                catch (error) {\n                    (_b = this.logger) === null || _b === void 0 ? void 0 : _b.error(`Failed to set sinkId for audio element: ${error}`);\n                    throw error;\n                }\n            }\n            if (this.browserBehavior.hasChromiumWebRTC()) {\n                existingAudioElement.srcObject = existingStream;\n            }\n        });\n    }\n    getCurrentMeetingAudioStream() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.audioStream;\n        });\n    }\n    addAudioMixObserver(observer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.observers.add(observer);\n        });\n    }\n    removeAudioMixObserver(observer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.observers.delete(observer);\n        });\n    }\n    audioOutputDidChange(device) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.logger.info('Receive an audio output change event');\n            return this.bindAudioDevice(device);\n        });\n    }\n}\nexports.default = DefaultAudioMixController;\n//# sourceMappingURL=DefaultAudioMixController.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Types_1 = require(\"../utils/Types\");\nclass SignalingAndMetricsConnectionMonitor {\n    constructor(audioVideoController, realtimeController, connectionHealthData, pingPong, statsCollector) {\n        this.audioVideoController = audioVideoController;\n        this.realtimeController = realtimeController;\n        this.connectionHealthData = connectionHealthData;\n        this.pingPong = pingPong;\n        this.statsCollector = statsCollector;\n        this.isActive = false;\n        this.hasSeenValidPacketMetricsBefore = false;\n        this.realtimeController.realtimeSubscribeToLocalSignalStrengthChange((signalStrength) => {\n            if (this.isActive) {\n                this.receiveSignalStrengthChange(signalStrength);\n            }\n        });\n    }\n    start() {\n        this.isActive = true;\n        this.pingPong.addObserver(this);\n        this.pingPong.start();\n        this.audioVideoController.addObserver(this);\n    }\n    stop() {\n        this.isActive = false;\n        this.pingPong.removeObserver(this);\n        this.pingPong.stop();\n        this.audioVideoController.removeObserver(this);\n    }\n    receiveSignalStrengthChange(signalStrength) {\n        if (signalStrength === 0) {\n            this.connectionHealthData.setLastNoSignalTimestampMs(Date.now());\n        }\n        else if (signalStrength <= 0.5) {\n            this.connectionHealthData.setLastWeakSignalTimestampMs(Date.now());\n        }\n        else {\n            this.connectionHealthData.setLastGoodSignalTimestampMs(Date.now());\n        }\n        this.updateConnectionHealth();\n    }\n    didReceivePong(_id, latencyMs, clockSkewMs) {\n        this.connectionHealthData.setConsecutiveMissedPongs(0);\n        this.statsCollector.logLatency('ping_pong', latencyMs);\n        this.statsCollector.logLatency('ping_pong_clock_skew', clockSkewMs);\n        this.updateConnectionHealth();\n    }\n    didMissPongs() {\n        this.connectionHealthData.setConsecutiveMissedPongs(this.connectionHealthData.consecutiveMissedPongs + 1);\n        this.updateConnectionHealth();\n    }\n    metricsDidReceive(clientMetricReport) {\n        let packetsReceived = 0;\n        let fractionPacketsLostInbound = 0;\n        const metricReport = clientMetricReport.getObservableMetrics();\n        const potentialPacketsReceived = metricReport.audioPacketsReceived;\n        const potentialFractionPacketsLostInbound = metricReport.audioPacketsReceivedFractionLoss;\n        const audioSpeakerDelayMs = metricReport.audioSpeakerDelayMs;\n        // Firefox does not presently have aggregated bandwidth estimation\n        if (typeof audioSpeakerDelayMs === 'number' && !isNaN(audioSpeakerDelayMs)) {\n            this.connectionHealthData.setAudioSpeakerDelayMs(audioSpeakerDelayMs);\n        }\n        if (typeof potentialPacketsReceived === 'number' &&\n            typeof potentialFractionPacketsLostInbound === 'number') {\n            packetsReceived = potentialPacketsReceived;\n            fractionPacketsLostInbound = potentialFractionPacketsLostInbound;\n            if (packetsReceived < 0 || fractionPacketsLostInbound < 0) {\n                // TODO: getting negative numbers on this metric after reconnect sometimes\n                // For now, just skip the metric if it looks weird.\n                return;\n            }\n        }\n        else {\n            return;\n        }\n        this.addToMinuteWindow(this.connectionHealthData.packetsReceivedInLastMinute, packetsReceived);\n        this.addToMinuteWindow(this.connectionHealthData.fractionPacketsLostInboundInLastMinute, fractionPacketsLostInbound);\n        if (packetsReceived > 0) {\n            this.hasSeenValidPacketMetricsBefore = true;\n            this.connectionHealthData.setConsecutiveStatsWithNoPackets(0);\n        }\n        else if (this.hasSeenValidPacketMetricsBefore) {\n            this.connectionHealthData.setConsecutiveStatsWithNoPackets(this.connectionHealthData.consecutiveStatsWithNoPackets + 1);\n        }\n        if (packetsReceived === 0 || fractionPacketsLostInbound > 0) {\n            this.connectionHealthData.setLastPacketLossInboundTimestampMs(Date.now());\n        }\n        if (typeof metricReport.audioPacketsSent === 'number') {\n            this.updateAudioPacketsSentInConnectionHealth(metricReport.audioPacketsSent);\n        }\n        this.updateConnectionHealth();\n    }\n    updateAudioPacketsSentInConnectionHealth(audioPacketsSent) {\n        if (audioPacketsSent > 0) {\n            this.connectionHealthData.setConsecutiveStatsWithNoAudioPacketsSent(0);\n        }\n        else {\n            this.connectionHealthData.setConsecutiveStatsWithNoAudioPacketsSent(this.connectionHealthData.consecutiveStatsWithNoAudioPacketsSent + 1);\n        }\n    }\n    addToMinuteWindow(array, value) {\n        array.unshift(value);\n        if (array.length > 60) {\n            array.pop();\n        }\n    }\n    updateConnectionHealth() {\n        this.audioVideoController.forEachObserver((observer) => {\n            Types_1.Maybe.of(observer.connectionHealthDidChange).map(f => f.bind(observer)(this.connectionHealthData.clone()));\n        });\n    }\n}\nexports.default = SignalingAndMetricsConnectionMonitor;\n//# sourceMappingURL=SignalingAndMetricsConnectionMonitor.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nconst MeetingSessionStatusCode_1 = require(\"./MeetingSessionStatusCode\");\n/**\n * [[MeetingSessionStatus]] indicates a status received regarding the session.\n */\nclass MeetingSessionStatus {\n    constructor(_statusCode) {\n        this._statusCode = _statusCode;\n    }\n    statusCode() {\n        return this._statusCode;\n    }\n    isFailure() {\n        switch (this._statusCode) {\n            case MeetingSessionStatusCode_1.default.AudioAuthenticationRejected:\n            case MeetingSessionStatusCode_1.default.AudioCallAtCapacity:\n            case MeetingSessionStatusCode_1.default.AudioInternalServerError:\n            case MeetingSessionStatusCode_1.default.AudioServiceUnavailable:\n            case MeetingSessionStatusCode_1.default.AudioDisconnected:\n            case MeetingSessionStatusCode_1.default.VideoCallAtSourceCapacity:\n            case MeetingSessionStatusCode_1.default.SignalingBadRequest:\n            case MeetingSessionStatusCode_1.default.SignalingInternalServerError:\n            case MeetingSessionStatusCode_1.default.SignalingRequestFailed:\n            case MeetingSessionStatusCode_1.default.ICEGatheringTimeoutWorkaround:\n            case MeetingSessionStatusCode_1.default.ConnectionHealthReconnect:\n            case MeetingSessionStatusCode_1.default.RealtimeApiFailed:\n            case MeetingSessionStatusCode_1.default.TaskFailed:\n            case MeetingSessionStatusCode_1.default.NoAttendeePresent:\n                return true;\n            default:\n                return false;\n        }\n    }\n    isTerminal() {\n        switch (this._statusCode) {\n            case MeetingSessionStatusCode_1.default.Left:\n            case MeetingSessionStatusCode_1.default.AudioJoinedFromAnotherDevice:\n            case MeetingSessionStatusCode_1.default.AudioAuthenticationRejected:\n            case MeetingSessionStatusCode_1.default.AudioCallAtCapacity:\n            case MeetingSessionStatusCode_1.default.MeetingEnded:\n            case MeetingSessionStatusCode_1.default.AudioDisconnected:\n            case MeetingSessionStatusCode_1.default.TURNCredentialsForbidden:\n            case MeetingSessionStatusCode_1.default.SignalingBadRequest:\n            case MeetingSessionStatusCode_1.default.SignalingRequestFailed:\n            case MeetingSessionStatusCode_1.default.VideoCallAtSourceCapacity:\n            case MeetingSessionStatusCode_1.default.RealtimeApiFailed:\n            case MeetingSessionStatusCode_1.default.AudioAttendeeRemoved:\n                return true;\n            default:\n                return false;\n        }\n    }\n    isAudioConnectionFailure() {\n        switch (this._statusCode) {\n            case MeetingSessionStatusCode_1.default.AudioAuthenticationRejected:\n            case MeetingSessionStatusCode_1.default.AudioInternalServerError:\n            case MeetingSessionStatusCode_1.default.AudioServiceUnavailable:\n            case MeetingSessionStatusCode_1.default.ICEGatheringTimeoutWorkaround:\n            case MeetingSessionStatusCode_1.default.SignalingBadRequest:\n            case MeetingSessionStatusCode_1.default.SignalingInternalServerError:\n            case MeetingSessionStatusCode_1.default.SignalingRequestFailed:\n            case MeetingSessionStatusCode_1.default.RealtimeApiFailed:\n            case MeetingSessionStatusCode_1.default.NoAttendeePresent:\n                return true;\n            default:\n                return false;\n        }\n    }\n    toString() {\n        switch (this._statusCode) {\n            case MeetingSessionStatusCode_1.default.OK:\n                return 'Everything is OK so far.';\n            case MeetingSessionStatusCode_1.default.Left:\n                return 'The attendee left the meeting.';\n            case MeetingSessionStatusCode_1.default.AudioJoinedFromAnotherDevice:\n                return 'The attendee joined from another device.';\n            case MeetingSessionStatusCode_1.default.AudioAuthenticationRejected:\n                return 'The meeting rejected the attendee.';\n            case MeetingSessionStatusCode_1.default.AudioCallAtCapacity:\n                return \"The attendee couldn't join because the meeting was at capacity.\";\n            case MeetingSessionStatusCode_1.default.MeetingEnded:\n                return 'The meeting ended.';\n            case MeetingSessionStatusCode_1.default.AudioInternalServerError:\n            case MeetingSessionStatusCode_1.default.AudioServiceUnavailable:\n            case MeetingSessionStatusCode_1.default.AudioDisconnected:\n                return 'The audio connection failed.';\n            case MeetingSessionStatusCode_1.default.VideoCallSwitchToViewOnly:\n                return \"The attendee couldn't start the local video because the maximum video capacity was reached.\";\n            case MeetingSessionStatusCode_1.default.VideoCallAtSourceCapacity:\n                return 'The connection failed due to an internal server error.';\n            case MeetingSessionStatusCode_1.default.SignalingBadRequest:\n            case MeetingSessionStatusCode_1.default.SignalingInternalServerError:\n            case MeetingSessionStatusCode_1.default.SignalingRequestFailed:\n                return 'The signaling connection failed.';\n            case MeetingSessionStatusCode_1.default.ICEGatheringTimeoutWorkaround:\n                return 'Gathering ICE candidates timed out. In Chrome, this might indicate that the browser is in a bad state after reconnecting to VPN.';\n            case MeetingSessionStatusCode_1.default.ConnectionHealthReconnect:\n                return 'The meeting was reconnected.';\n            case MeetingSessionStatusCode_1.default.RealtimeApiFailed:\n                return 'The real-time API failed. This status code might indicate that the callback you passed to the real-time API threw an exception.';\n            case MeetingSessionStatusCode_1.default.TaskFailed:\n                return 'The connection failed. See the error message for more details.';\n            case MeetingSessionStatusCode_1.default.IncompatibleSDP:\n                return 'The connection failed due to incompatible SDP.';\n            case MeetingSessionStatusCode_1.default.TURNCredentialsForbidden:\n                return 'The meeting ended, or the attendee was removed.';\n            case MeetingSessionStatusCode_1.default.NoAttendeePresent:\n                return 'The attendee was not present.';\n            case MeetingSessionStatusCode_1.default.AudioAttendeeRemoved:\n                return 'The meeting ended because attendee removed.';\n            case MeetingSessionStatusCode_1.default.AudioVideoWasRemovedFromPrimaryMeeting:\n                return 'The Primary meeting credentials provided are no longer valid. chime::DeleteAttendee may have been called on them.';\n            case MeetingSessionStatusCode_1.default.AudioDisconnectAudio:\n                return 'The audio connection failed.';\n            /* istanbul ignore next */\n            default: {\n                // You get a compile-time error if you do not handle any status code.\n                const exhaustiveCheck = this._statusCode;\n                throw new Error(`Unhandled case: ${exhaustiveCheck}`);\n            }\n        }\n    }\n    static fromSignalFrame(frame) {\n        if (frame.error && frame.error.status) {\n            return this.fromSignalingStatus(frame.error.status);\n        }\n        else if (frame.type === SignalingProtocol_js_1.SdkSignalFrame.Type.AUDIO_STATUS) {\n            if (frame.audioStatus) {\n                return this.fromAudioStatus(frame.audioStatus.audioStatus);\n            }\n            return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.SignalingRequestFailed);\n        }\n        else if (frame.type === SignalingProtocol_js_1.SdkSignalFrame.Type.PRIMARY_MEETING_LEAVE) {\n            return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.AudioVideoWasRemovedFromPrimaryMeeting);\n        }\n        return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.OK);\n    }\n    static fromAudioStatus(status) {\n        // TODO: Add these numbers to proto definition and reference them here.\n        switch (status) {\n            case 200:\n                return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.OK);\n            case 301:\n                return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.AudioJoinedFromAnotherDevice);\n            case 302:\n                return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.AudioDisconnectAudio);\n            case 403:\n                return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.AudioAuthenticationRejected);\n            case 409:\n                return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.AudioCallAtCapacity);\n            case 410:\n                return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.MeetingEnded);\n            case 411:\n                return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.AudioAttendeeRemoved);\n            case 500:\n                return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.AudioInternalServerError);\n            case 503:\n                return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.AudioServiceUnavailable);\n            default:\n                switch (Math.floor(status / 100)) {\n                    case 2:\n                        return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.OK);\n                    default:\n                        return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.AudioDisconnected);\n                }\n        }\n    }\n    static fromSignalingStatus(status) {\n        // TODO: Add these numbers to proto definition and reference them here.\n        //\n        // We don't bother adding additional codes with different prefixes, and we probably\n        // shouldn't be prefixing all these errors (e.g. `AuthenticationRejected`) with the media type\n        // since that doesn't make sense.\n        switch (status) {\n            case 206:\n                return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.VideoCallSwitchToViewOnly);\n            case 509:\n                return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.VideoCallAtSourceCapacity);\n            case 403:\n                return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.AudioAuthenticationRejected);\n            case 409:\n                return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.AudioCallAtCapacity);\n            default:\n                switch (Math.floor(status / 100)) {\n                    case 2:\n                        return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.OK);\n                    case 4:\n                        return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.SignalingBadRequest);\n                    case 5:\n                        return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.SignalingInternalServerError);\n                    default:\n                        return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.SignalingRequestFailed);\n                }\n        }\n    }\n}\nexports.default = MeetingSessionStatus;\n//# sourceMappingURL=MeetingSessionStatus.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[MeetingSessionVideoAvailability]] contains the video availability information.\n */\nclass MeetingSessionVideoAvailability {\n    constructor() {\n        /**\n         * Indicates whether one or more remote video streams\n         * are available for streaming. This can be used to decide whether or not to\n         * switch the connection type to include video.\n         */\n        this.remoteVideoAvailable = false;\n        /**\n         * Indicates whether the server has a slot available for\n         * this client's local video tile. If the client is already sending a local\n         * video tile, then this will be true. This property can be used to decide\n         * whether to offer the option to start the local video tile.\n         */\n        this.canStartLocalVideo = false;\n    }\n    /**\n     * Returns whether the fields are the same as that of another availability object.\n     */\n    equal(other) {\n        return (this.remoteVideoAvailable === other.remoteVideoAvailable &&\n            this.canStartLocalVideo === other.canStartLocalVideo);\n    }\n    /**\n     * Returns a deep copy of this object.\n     */\n    clone() {\n        const cloned = new MeetingSessionVideoAvailability();\n        cloned.remoteVideoAvailable = this.remoteVideoAvailable;\n        cloned.canStartLocalVideo = this.canStartLocalVideo;\n        return cloned;\n    }\n}\nexports.default = MeetingSessionVideoAvailability;\n//# sourceMappingURL=MeetingSessionVideoAvailability.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AsyncScheduler_1 = require(\"../scheduler/AsyncScheduler\");\nconst IntervalScheduler_1 = require(\"../scheduler/IntervalScheduler\");\nconst SignalingClientEventType_1 = require(\"../signalingclient/SignalingClientEventType\");\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nconst Types_1 = require(\"../utils/Types\");\n/**\n * [[DefaultPingPong]] implements the PingPong and SignalingClientObserver interface.\n */\nclass DefaultPingPong {\n    constructor(signalingClient, intervalMs, logger) {\n        this.signalingClient = signalingClient;\n        this.intervalMs = intervalMs;\n        this.logger = logger;\n        this.observerQueue = new Set();\n        this.consecutivePongsUnaccountedFor = 0;\n        this.intervalScheduler = new IntervalScheduler_1.default(this.intervalMs);\n        this.pingId = 0;\n    }\n    addObserver(observer) {\n        this.logger.info('adding a ping-pong observer');\n        this.observerQueue.add(observer);\n    }\n    removeObserver(observer) {\n        this.logger.info('removing a ping-pong observer');\n        this.observerQueue.delete(observer);\n    }\n    forEachObserver(observerFunc) {\n        for (const observer of this.observerQueue) {\n            AsyncScheduler_1.default.nextTick(() => {\n                if (this.observerQueue.has(observer)) {\n                    observerFunc(observer);\n                }\n            });\n        }\n    }\n    start() {\n        this.stop();\n        this.signalingClient.registerObserver(this);\n        if (this.signalingClient.ready()) {\n            this.startPingInterval();\n        }\n    }\n    stop() {\n        this.stopPingInterval();\n        this.signalingClient.removeObserver(this);\n    }\n    startPingInterval() {\n        this.intervalScheduler.start(() => {\n            this.ping();\n        });\n        this.ping();\n    }\n    stopPingInterval() {\n        this.intervalScheduler.stop();\n        this.pingId = 0;\n        this.consecutivePongsUnaccountedFor = 0;\n    }\n    ping() {\n        if (this.consecutivePongsUnaccountedFor > 0) {\n            this.logger.warn(`missed pong ${this.consecutivePongsUnaccountedFor} time(s)`);\n            this.forEachObserver((observer) => {\n                Types_1.Maybe.of(observer.didMissPongs).map(f => f.bind(observer)(this.consecutivePongsUnaccountedFor));\n            });\n        }\n        this.consecutivePongsUnaccountedFor += 1;\n        this.pingId = (this.pingId + 1) & 0xffffffff;\n        const ping = SignalingProtocol_js_1.SdkPingPongFrame.create();\n        ping.pingId = this.pingId;\n        ping.type = SignalingProtocol_js_1.SdkPingPongType.PING;\n        this.pingTimestampLocalMs = this.signalingClient.pingPong(ping);\n        this.logger.debug(() => {\n            return `sent ping ${this.pingId}`;\n        });\n    }\n    pong(pingId) {\n        const pong = SignalingProtocol_js_1.SdkPingPongFrame.create();\n        pong.pingId = pingId;\n        pong.type = SignalingProtocol_js_1.SdkPingPongType.PONG;\n        this.signalingClient.pingPong(pong);\n    }\n    handleSignalingClientEvent(event) {\n        switch (event.type) {\n            case SignalingClientEventType_1.default.WebSocketOpen:\n                this.startPingInterval();\n                break;\n            case SignalingClientEventType_1.default.WebSocketFailed:\n            case SignalingClientEventType_1.default.WebSocketError:\n                this.logger.warn(`stopped pinging (${SignalingClientEventType_1.default[event.type]})`);\n                this.stopPingInterval();\n                break;\n            case SignalingClientEventType_1.default.WebSocketClosing:\n            case SignalingClientEventType_1.default.WebSocketClosed:\n                this.logger.info(`stopped pinging (${SignalingClientEventType_1.default[event.type]})`);\n                this.stopPingInterval();\n                break;\n            case SignalingClientEventType_1.default.ReceivedSignalFrame:\n                if (event.message.type !== SignalingProtocol_js_1.SdkSignalFrame.Type.PING_PONG) {\n                    break;\n                }\n                if (event.message.pingPong.type === SignalingProtocol_js_1.SdkPingPongType.PONG) {\n                    const pingId = event.message.pingPong.pingId;\n                    if (pingId !== this.pingId) {\n                        this.logger.warn(`unexpected ping id ${pingId} (expected ${this.pingId})`);\n                        break;\n                    }\n                    this.consecutivePongsUnaccountedFor = 0;\n                    let pongTimestampRemoteMs;\n                    if (typeof event.message.timestampMs === 'number') {\n                        pongTimestampRemoteMs = event.message.timestampMs;\n                    }\n                    else {\n                        break;\n                    }\n                    this.logger.debug(() => {\n                        return `received pong ${pingId} with timestamp ${pongTimestampRemoteMs}`;\n                    });\n                    const pongTimestampLocalMs = event.timestampMs;\n                    const pingPongLocalIntervalMs = pongTimestampLocalMs - this.pingTimestampLocalMs;\n                    const estimatedPingTimestampRemoteMs = Math.round(pongTimestampRemoteMs - pingPongLocalIntervalMs / 2);\n                    const estimatedClockSkewMs = this.pingTimestampLocalMs - estimatedPingTimestampRemoteMs;\n                    this.logger.info(`local clock skew estimate=${estimatedClockSkewMs}ms from ping-pong time=${pingPongLocalIntervalMs}ms`);\n                    this.forEachObserver((observer) => {\n                        Types_1.Maybe.of(observer.didReceivePong).map(f => f.bind(observer)(pingId, estimatedClockSkewMs, pingPongLocalIntervalMs));\n                    });\n                }\n                else {\n                    this.pong(event.message.pingPong.pingId);\n                }\n                break;\n        }\n    }\n}\nexports.default = DefaultPingPong;\n//# sourceMappingURL=DefaultPingPong.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Transcript {\n}\nexports.default = Transcript;\n//# sourceMappingURL=Transcript.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass TranscriptionStatus {\n}\nexports.default = TranscriptionStatus;\n//# sourceMappingURL=TranscriptionStatus.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TranscriptionStatusType;\n(function (TranscriptionStatusType) {\n    TranscriptionStatusType[\"STARTED\"] = \"started\";\n    TranscriptionStatusType[\"INTERRUPTED\"] = \"interrupted\";\n    TranscriptionStatusType[\"RESUMED\"] = \"resumed\";\n    TranscriptionStatusType[\"STOPPED\"] = \"stopped\";\n    TranscriptionStatusType[\"FAILED\"] = \"failed\";\n})(TranscriptionStatusType || (TranscriptionStatusType = {}));\nexports.default = TranscriptionStatusType;\n//# sourceMappingURL=TranscriptionStatusType.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TranscriptItemType;\n(function (TranscriptItemType) {\n    TranscriptItemType[\"PRONUNCIATION\"] = \"pronunciation\";\n    TranscriptItemType[\"PUNCTUATION\"] = \"punctuation\";\n})(TranscriptItemType || (TranscriptItemType = {}));\nexports.default = TranscriptItemType;\n//# sourceMappingURL=TranscriptItemType.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranscriptEventConverter = void 0;\nconst SignalingProtocol_1 = require(\"../signalingprotocol/SignalingProtocol\");\nconst Transcript_1 = require(\"./Transcript\");\nconst TranscriptionStatus_1 = require(\"./TranscriptionStatus\");\nconst TranscriptionStatusType_1 = require(\"./TranscriptionStatusType\");\nconst TranscriptItemType_1 = require(\"./TranscriptItemType\");\nconst TranscriptionStatusTypes = {\n    [SignalingProtocol_1.SdkTranscriptionStatus.Type.STARTED]: TranscriptionStatusType_1.default.STARTED,\n    [SignalingProtocol_1.SdkTranscriptionStatus.Type.INTERRUPTED]: TranscriptionStatusType_1.default.INTERRUPTED,\n    [SignalingProtocol_1.SdkTranscriptionStatus.Type.RESUMED]: TranscriptionStatusType_1.default.RESUMED,\n    [SignalingProtocol_1.SdkTranscriptionStatus.Type.STOPPED]: TranscriptionStatusType_1.default.STOPPED,\n    [SignalingProtocol_1.SdkTranscriptionStatus.Type.FAILED]: TranscriptionStatusType_1.default.FAILED,\n};\nclass TranscriptEventConverter {\n    /**\n     * Decodes a list of TranscriptEvent from a data message.\n     * @param dataMessage Data message to decode from\n     * @returns List of TranscriptEvent\n     * @throws {Error} If the data message payload cannot be decoded\n     */\n    static from(dataMessage) {\n        let frame;\n        try {\n            frame = SignalingProtocol_1.SdkTranscriptFrame.decode(dataMessage.data);\n        }\n        catch (e) {\n            throw new Error('Cannot decode transcript data message: ' + e);\n        }\n        const transcriptEvents = [];\n        for (const sdkTranscriptEvent of frame.events) {\n            if (sdkTranscriptEvent.status) {\n                const transcriptionStatusType = TranscriptionStatusTypes[sdkTranscriptEvent.status.type];\n                if (!transcriptionStatusType) {\n                    continue;\n                }\n                const transcriptionStatus = new TranscriptionStatus_1.default();\n                transcriptionStatus.type = transcriptionStatusType;\n                transcriptionStatus.eventTimeMs = sdkTranscriptEvent.status.eventTime;\n                transcriptionStatus.transcriptionRegion = sdkTranscriptEvent.status.transcriptionRegion;\n                transcriptionStatus.transcriptionConfiguration =\n                    sdkTranscriptEvent.status.transcriptionConfiguration;\n                if (sdkTranscriptEvent.status.message) {\n                    transcriptionStatus.message = sdkTranscriptEvent.status.message;\n                }\n                transcriptEvents.push(transcriptionStatus);\n            }\n            else if (sdkTranscriptEvent.transcript) {\n                const transcript = new Transcript_1.default();\n                transcript.results = [];\n                for (const result of sdkTranscriptEvent.transcript.results) {\n                    const transcriptResult = {\n                        channelId: result.channelId,\n                        isPartial: result.isPartial,\n                        resultId: result.resultId,\n                        startTimeMs: result.startTime,\n                        endTimeMs: result.endTime,\n                        alternatives: [],\n                    };\n                    if (result.languageCode) {\n                        transcriptResult.languageCode = result.languageCode;\n                    }\n                    if (result.languageIdentification && result.languageIdentification.length > 0) {\n                        transcriptResult.languageIdentification = [];\n                        for (const languageIdentification of result.languageIdentification) {\n                            const transcriptLanguageWithScore = {\n                                languageCode: languageIdentification.languageCode,\n                                score: languageIdentification.score,\n                            };\n                            transcriptResult.languageIdentification.push(transcriptLanguageWithScore);\n                        }\n                    }\n                    for (const alternative of result.alternatives) {\n                        const transcriptAlternative = {\n                            items: [],\n                            transcript: alternative.transcript,\n                        };\n                        for (const item of alternative.items) {\n                            const transcriptItem = {\n                                content: item.content,\n                                attendee: {\n                                    attendeeId: item.speakerAttendeeId,\n                                    externalUserId: item.speakerExternalUserId,\n                                },\n                                startTimeMs: item.startTime,\n                                endTimeMs: item.endTime,\n                                type: null,\n                            };\n                            if (item.vocabularyFilterMatch) {\n                                transcriptItem.vocabularyFilterMatch = item.vocabularyFilterMatch;\n                            }\n                            if (item.hasOwnProperty('stable')) {\n                                transcriptItem.stable = item.stable;\n                            }\n                            if (item.hasOwnProperty('confidence')) {\n                                transcriptItem.confidence = item.confidence;\n                            }\n                            switch (item.type) {\n                                case SignalingProtocol_1.SdkTranscriptItem.Type.PRONUNCIATION:\n                                    transcriptItem.type = TranscriptItemType_1.default.PRONUNCIATION;\n                                    break;\n                                case SignalingProtocol_1.SdkTranscriptItem.Type.PUNCTUATION:\n                                    transcriptItem.type = TranscriptItemType_1.default.PUNCTUATION;\n                                    break;\n                            }\n                            transcriptAlternative.items.push(transcriptItem);\n                        }\n                        for (const entity of alternative.entities) {\n                            if (!transcriptAlternative.entities) {\n                                transcriptAlternative.entities = [];\n                            }\n                            const transcriptEntity = {\n                                category: entity.category,\n                                confidence: entity.confidence,\n                                content: entity.content,\n                                startTimeMs: entity.startTime,\n                                endTimeMs: entity.endTime,\n                            };\n                            if (entity.type) {\n                                transcriptEntity.type = entity.type;\n                            }\n                            transcriptAlternative.entities.push(transcriptEntity);\n                        }\n                        transcriptResult.alternatives.push(transcriptAlternative);\n                    }\n                    transcript.results.push(transcriptResult);\n                }\n                transcriptEvents.push(transcript);\n            }\n        }\n        return transcriptEvents;\n    }\n}\nexports.TranscriptEventConverter = TranscriptEventConverter;\n//# sourceMappingURL=TranscriptEvent.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TRANSCRIPTION_DATA_MESSAGE_TOPIC = void 0;\nconst TranscriptEvent_1 = require(\"./TranscriptEvent\");\nexports.TRANSCRIPTION_DATA_MESSAGE_TOPIC = 'aws:chime:transcription';\nclass DefaultTranscriptionController {\n    constructor(realtimeController) {\n        this.realtimeController = realtimeController;\n        this.transcriptEventCallbacks = new Set();\n    }\n    subscribeToTranscriptEvent(callback) {\n        if (this.transcriptEventCallbacks.size === 0) {\n            this.realtimeController.realtimeSubscribeToReceiveDataMessage(exports.TRANSCRIPTION_DATA_MESSAGE_TOPIC, (dataMessage) => {\n                for (const transcriptEvent of TranscriptEvent_1.TranscriptEventConverter.from(dataMessage)) {\n                    for (const transcriptEventCallback of this.transcriptEventCallbacks) {\n                        transcriptEventCallback(transcriptEvent);\n                    }\n                }\n            });\n        }\n        this.transcriptEventCallbacks.add(callback);\n    }\n    unsubscribeFromTranscriptEvent(callback) {\n        this.transcriptEventCallbacks.delete(callback);\n        if (this.transcriptEventCallbacks.size === 0) {\n            this.realtimeController.realtimeUnsubscribeFromReceiveDataMessage(exports.TRANSCRIPTION_DATA_MESSAGE_TOPIC);\n        }\n    }\n}\nexports.default = DefaultTranscriptionController;\n//# sourceMappingURL=DefaultTranscriptionController.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[RealtimeState]] stores all realtime persistent state.\n */\nclass RealtimeState {\n    constructor() {\n        /**\n         * Stores the attendee id of the current user\n         */\n        this.localAttendeeId = null;\n        /**\n         * Stores the external user id of the current user\n         */\n        this.localExternalUserId = null;\n        /**\n         * Callbacks to listen for attendee id changes\n         */\n        this.attendeeIdChangesCallbacks = [];\n        /**\n         * Stores whether the user can transition from muted to unmuted\n         */\n        this.canUnmute = true;\n        /**\n         * Callbacks to listen for changes to can-unmute local audio state\n         */\n        this.setCanUnmuteLocalAudioCallbacks = [];\n        /**\n         * Stores whether the user is presently muted\n         */\n        this.muted = false;\n        /**\n         * Callbacks to listen for local audio mutes and unmutes\n         */\n        this.muteAndUnmuteLocalAudioCallbacks = [];\n        /**\n         * Stores per-attendee id volume indicator state\n         */\n        this.volumeIndicatorState = {};\n        /**\n         * Stores attendee id to external user id mappings\n         */\n        this.attendeeIdToExternalUserId = {};\n        /**\n         * Stores per-attendee id callbacks called when volume indicators change\n         */\n        this.volumeIndicatorCallbacks = {};\n        /**\n         * Callbacks to listen for changes to local signal strength\n         */\n        this.localSignalStrengthChangeCallbacks = [];\n        /**\n         * Callbacks to listen for fatal errors\n         */\n        this.fatalErrorCallbacks = [];\n        /**\n         * Callbacks to trigger when sending message\n         */\n        this.sendDataMessageCallbacks = [];\n        /**\n         * Callbacks to listen for receiving message from data channel based on given topic\n         */\n        this.receiveDataMessageCallbacks = new Map();\n    }\n}\nexports.default = RealtimeState;\n//# sourceMappingURL=RealtimeState.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[RealtimeVolumeIndicator]] stores the current volume, mute, and\n * signal strength for an attendee.\n */\nclass RealtimeVolumeIndicator {\n    constructor() {\n        this.volume = null;\n        this.muted = null;\n        this.signalStrength = null;\n    }\n}\nexports.default = RealtimeVolumeIndicator;\n//# sourceMappingURL=RealtimeVolumeIndicator.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultTranscriptionController_1 = require(\"../transcript/DefaultTranscriptionController\");\nconst RealtimeState_1 = require(\"./RealtimeState\");\nconst RealtimeVolumeIndicator_1 = require(\"./RealtimeVolumeIndicator\");\n/**\n * [[DefaultRealtimeController]] is written to adhere to the following tenets to\n * make privacy and performance bugs significantly less likely.\n *\n * 1. Any call to the object is guaranteed to succeed from the caller's\n *    perspective to the maximum extent that this can be ensured. However, all\n *    failures of the object are reported as fatal errors. For example, if local\n *    mute fails, then that is a privacy issue and we must tear down the\n *    connection and try starting over.\n *\n * 2. State is owned by the object and is considered authoritative at all times.\n *    For example, if [[realtimeIsLocalAudioMuted]] is true then the user *is*\n *    muted.\n *\n * 3. Callbacks are fired synchronously and do their work synchronously. Any\n *    unnecessary asynchronous implementation only invites latency and\n *    increases the surface error for potential errors.\n *\n * 4. Mutation only occurs when state changes. All state-changing functions are\n *    idempotent.\n *\n * 5. Every conditional branch gets its own if statement and test coverage is\n *    100% for this object.\n *\n * 6. Function parameters and returns use primitives only (no classes or enums).\n *    This minimizes the number of dependencies that consumers have to take on\n *    and allows the object to be more easily wrapped. Values are normalized\n *    where possible.\n *\n * 7. The object takes no other non-realtime dependencies.\n *\n * 8. Interface functions begin with `realtime` to make boundaries between the\n *    RealtimeController interface and the UI or business logic explicit and\n *    auditable.\n *\n * 9. Local state overrides remote state but not vice-versa. For example, if\n *    locally muted with an active audio input and a remote state indicates the\n *    same user is unmuted because the muted state has not yet propagated, then\n *    the volume indicator update for the user would show the remote mute state\n *    as muted. However, if locally muted without an active audio input and a\n *    remote state indicates the user is unmuted (since they are dialed in), the\n *    remote state persists but does not override the local state so\n *    [[realtimeIsLocalAudioMuted]] still returns true.\n */\nclass DefaultRealtimeController {\n    constructor(mediaStreamBroker, transcriptionController) {\n        this.mediaStreamBroker = mediaStreamBroker;\n        this.state = new RealtimeState_1.default();\n        this._transcriptionController =\n            transcriptionController || new DefaultTranscriptionController_1.default(this);\n    }\n    realtimeSetLocalAttendeeId(attendeeId, externalUserId) {\n        this.state.localAttendeeId = attendeeId;\n        this.state.localExternalUserId = externalUserId;\n    }\n    realtimeSetAttendeeIdPresence(attendeeId, present, externalUserId, dropped, posInFrame) {\n        try {\n            if (present) {\n                this.state.attendeeIdToExternalUserId[attendeeId] = externalUserId;\n            }\n            for (const fn of this.state.attendeeIdChangesCallbacks) {\n                fn(attendeeId, present, externalUserId, dropped, posInFrame);\n            }\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeSubscribeToAttendeeIdPresence(callback) {\n        try {\n            this.state.attendeeIdChangesCallbacks.push(callback);\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeUnsubscribeToAttendeeIdPresence(callback) {\n        try {\n            const index = this.state.attendeeIdChangesCallbacks.indexOf(callback);\n            if (index !== -1) {\n                this.state.attendeeIdChangesCallbacks.splice(index, 1);\n            }\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    // Muting\n    realtimeSetCanUnmuteLocalAudio(canUnmute) {\n        try {\n            if (this.state.canUnmute === canUnmute) {\n                return;\n            }\n            this.state.canUnmute = canUnmute;\n            for (const fn of this.state.setCanUnmuteLocalAudioCallbacks) {\n                fn(canUnmute);\n            }\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeSubscribeToSetCanUnmuteLocalAudio(callback) {\n        try {\n            this.state.setCanUnmuteLocalAudioCallbacks.push(callback);\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeUnsubscribeToSetCanUnmuteLocalAudio(callback) {\n        try {\n            const index = this.state.setCanUnmuteLocalAudioCallbacks.indexOf(callback);\n            if (index !== -1) {\n                this.state.setCanUnmuteLocalAudioCallbacks.splice(index, 1);\n            }\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeCanUnmuteLocalAudio() {\n        return this.state.canUnmute;\n    }\n    realtimeMuteLocalAudio() {\n        if (this.state.muted) {\n            return;\n        }\n        try {\n            this.setAudioInputEnabled(false);\n            this.state.muted = true;\n            this.realtimeUpdateVolumeIndicator(this.state.localAttendeeId, null, null, null, this.state.localExternalUserId);\n            for (const fn of this.state.muteAndUnmuteLocalAudioCallbacks) {\n                fn(true);\n            }\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeUnmuteLocalAudio() {\n        if (!this.state.muted) {\n            return true;\n        }\n        if (!this.state.canUnmute) {\n            return false;\n        }\n        try {\n            this.setAudioInputEnabled(true);\n            this.state.muted = false;\n            this.realtimeUpdateVolumeIndicator(this.state.localAttendeeId, null, null, null, this.state.localExternalUserId);\n            for (const fn of this.state.muteAndUnmuteLocalAudioCallbacks) {\n                fn(false);\n            }\n            return true;\n        }\n        catch (e) {\n            this.onError(e);\n            return false;\n        }\n    }\n    realtimeSubscribeToMuteAndUnmuteLocalAudio(callback) {\n        try {\n            this.state.muteAndUnmuteLocalAudioCallbacks.push(callback);\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeUnsubscribeToMuteAndUnmuteLocalAudio(callback) {\n        try {\n            const index = this.state.muteAndUnmuteLocalAudioCallbacks.indexOf(callback);\n            if (index !== -1) {\n                this.state.muteAndUnmuteLocalAudioCallbacks.splice(index, 1);\n            }\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeIsLocalAudioMuted() {\n        return this.state.muted;\n    }\n    // Volume Indicators\n    realtimeSubscribeToVolumeIndicator(attendeeId, callback) {\n        try {\n            if (!this.state.volumeIndicatorCallbacks.hasOwnProperty(attendeeId)) {\n                this.state.volumeIndicatorCallbacks[attendeeId] = [];\n            }\n            this.state.volumeIndicatorCallbacks[attendeeId].push(callback);\n            this.sendVolumeIndicatorChange(attendeeId, true, true, true, this.state.attendeeIdToExternalUserId[attendeeId]);\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeUnsubscribeFromVolumeIndicator(attendeeId, callback) {\n        const callbacks = this.state.volumeIndicatorCallbacks[attendeeId];\n        if (!callbacks) {\n            return;\n        }\n        if (callback) {\n            const index = this.state.volumeIndicatorCallbacks[attendeeId].indexOf(callback);\n            if (index >= 0) {\n                this.state.volumeIndicatorCallbacks[attendeeId].splice(index, 1);\n            }\n        }\n        else {\n            delete this.state.volumeIndicatorCallbacks[attendeeId];\n        }\n    }\n    realtimeUpdateVolumeIndicator(attendeeId, volume, muted, signalStrength, externalUserId) {\n        try {\n            muted = this.applyLocalMuteOverride(attendeeId, muted);\n            const state = this.getVolumeIndicatorState(attendeeId);\n            let volumeUpdated = false;\n            let mutedUpdated = false;\n            let signalStrengthUpdated = false;\n            if (muted !== null) {\n                if (state.muted !== muted) {\n                    state.muted = muted;\n                    mutedUpdated = true;\n                    if (state.muted && state.volume !== 0.0) {\n                        state.volume = 0.0;\n                        volumeUpdated = true;\n                    }\n                }\n            }\n            if (!state.muted && volume !== null) {\n                if (state.volume !== volume) {\n                    state.volume = volume;\n                    volumeUpdated = true;\n                }\n                if (state.muted === null) {\n                    state.muted = false;\n                    mutedUpdated = true;\n                }\n            }\n            if (signalStrength !== null) {\n                if (state.signalStrength !== signalStrength) {\n                    state.signalStrength = signalStrength;\n                    signalStrengthUpdated = true;\n                }\n            }\n            this.sendVolumeIndicatorChange(attendeeId, volumeUpdated, mutedUpdated, signalStrengthUpdated, externalUserId);\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeSubscribeToLocalSignalStrengthChange(callback) {\n        try {\n            this.state.localSignalStrengthChangeCallbacks.push(callback);\n            if (this.state.localAttendeeId === null) {\n                return;\n            }\n            this.sendLocalSignalStrengthChange(this.state.localAttendeeId, true);\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeUnsubscribeToLocalSignalStrengthChange(callback) {\n        try {\n            const index = this.state.localSignalStrengthChangeCallbacks.indexOf(callback);\n            if (index !== -1) {\n                this.state.localSignalStrengthChangeCallbacks.splice(index, 1);\n            }\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeSubscribeToSendDataMessage(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callback) {\n        try {\n            this.state.sendDataMessageCallbacks.push(callback);\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeUnsubscribeFromSendDataMessage(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callback) {\n        try {\n            const index = this.state.sendDataMessageCallbacks.indexOf(callback);\n            if (index !== -1) {\n                this.state.sendDataMessageCallbacks.splice(index, 1);\n            }\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeSendDataMessage(topic, data, // eslint-disable-line @typescript-eslint/no-explicit-any\n    lifetimeMs) {\n        try {\n            for (const fn of this.state.sendDataMessageCallbacks) {\n                fn(topic, data, lifetimeMs);\n            }\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeSubscribeToReceiveDataMessage(topic, callback) {\n        try {\n            if (this.state.receiveDataMessageCallbacks.has(topic)) {\n                this.state.receiveDataMessageCallbacks.get(topic).push(callback);\n            }\n            else {\n                this.state.receiveDataMessageCallbacks.set(topic, [callback]);\n            }\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeUnsubscribeFromReceiveDataMessage(topic) {\n        try {\n            this.state.receiveDataMessageCallbacks.delete(topic);\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeReceiveDataMessage(dataMessage) {\n        try {\n            if (this.state.receiveDataMessageCallbacks.has(dataMessage.topic)) {\n                for (const fn of this.state.receiveDataMessageCallbacks.get(dataMessage.topic)) {\n                    fn(dataMessage);\n                }\n            }\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    // Error Handling\n    realtimeSubscribeToFatalError(callback) {\n        try {\n            this.state.fatalErrorCallbacks.push(callback);\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeUnsubscribeToFatalError(callback) {\n        try {\n            const index = this.state.fatalErrorCallbacks.indexOf(callback);\n            if (index !== -1) {\n                this.state.fatalErrorCallbacks.splice(index, 1);\n            }\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    get transcriptionController() {\n        return this._transcriptionController;\n    }\n    // Internals\n    setAudioInputEnabled(enabled) {\n        if (enabled) {\n            this.mediaStreamBroker.unmuteLocalAudioInputStream();\n        }\n        else {\n            this.mediaStreamBroker.muteLocalAudioInputStream();\n        }\n    }\n    applyLocalMuteOverride(attendeeIdRemote, mutedRemote) {\n        const attendeeIdLocal = this.state.localAttendeeId;\n        const mutedLocal = this.state.muted;\n        if (attendeeIdRemote !== attendeeIdLocal) {\n            return mutedRemote;\n        }\n        // This is a workaround to check if no audio input then just use the remote value\n        if (\n        // @ts-ignore\n        !('activeDevices' in this.mediaStreamBroker && this.mediaStreamBroker.activeDevices['audio'])) {\n            return mutedRemote;\n        }\n        return mutedLocal;\n    }\n    sendVolumeIndicatorChange(attendeeId, volumeUpdated, mutedUpdated, signalStrengthUpdated, externalUserId) {\n        this.sendLocalSignalStrengthChange(attendeeId, signalStrengthUpdated);\n        if (!this.state.volumeIndicatorCallbacks.hasOwnProperty(attendeeId)) {\n            return;\n        }\n        const state = this.getVolumeIndicatorState(attendeeId);\n        const updateState = new RealtimeVolumeIndicator_1.default();\n        if (volumeUpdated) {\n            updateState.volume = state.volume;\n        }\n        if (mutedUpdated) {\n            updateState.muted = state.muted;\n        }\n        if (signalStrengthUpdated) {\n            updateState.signalStrength = state.signalStrength;\n        }\n        if (this.stateIsEmpty(updateState)) {\n            return;\n        }\n        for (const fn of this.state.volumeIndicatorCallbacks[attendeeId]) {\n            fn(attendeeId, updateState.volume, updateState.muted, updateState.signalStrength, externalUserId);\n        }\n    }\n    sendLocalSignalStrengthChange(attendeeId, signalStrengthUpdated) {\n        if (!signalStrengthUpdated) {\n            return;\n        }\n        if (attendeeId !== this.state.localAttendeeId) {\n            return;\n        }\n        const state = this.getVolumeIndicatorState(attendeeId);\n        const signalStrength = state.signalStrength;\n        if (signalStrength === null) {\n            return;\n        }\n        for (const fn of this.state.localSignalStrengthChangeCallbacks) {\n            fn(signalStrength);\n        }\n    }\n    getVolumeIndicatorState(id) {\n        if (!this.state.volumeIndicatorState.hasOwnProperty(id)) {\n            this.state.volumeIndicatorState[id] = new RealtimeVolumeIndicator_1.default();\n        }\n        return this.state.volumeIndicatorState[id];\n    }\n    stateIsEmpty(state) {\n        return state.volume === null && state.muted === null && state.signalStrength === null;\n    }\n    onError(error) {\n        try {\n            // 1) try the fatal error callbacks so that the issue is reported in\n            //    logs and to give the handler a chance to clean up and reset.\n            for (const callback of this.state.fatalErrorCallbacks) {\n                callback(error);\n            }\n        }\n        catch (eventError) {\n            try {\n                // 2) if the error event fails, fall back to console.error so that\n                //    it at least prints out to the console before moving on.\n                console.error(error);\n                console.error(eventError);\n            }\n            catch (consoleError) {\n                // 3) if all else fails, swallow the error and give up to guarantee\n                //    that the API call returns cleanly.\n            }\n        }\n    }\n}\nexports.default = DefaultRealtimeController;\n//# sourceMappingURL=DefaultRealtimeController.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionStateControllerAction = void 0;\n/**\n * [[SessionStateControllerAction]] is a state-changing action to perform.\n */\nvar SessionStateControllerAction;\n(function (SessionStateControllerAction) {\n    SessionStateControllerAction[SessionStateControllerAction[\"Connect\"] = 0] = \"Connect\";\n    SessionStateControllerAction[SessionStateControllerAction[\"FinishConnecting\"] = 1] = \"FinishConnecting\";\n    SessionStateControllerAction[SessionStateControllerAction[\"Update\"] = 2] = \"Update\";\n    SessionStateControllerAction[SessionStateControllerAction[\"FinishUpdating\"] = 3] = \"FinishUpdating\";\n    SessionStateControllerAction[SessionStateControllerAction[\"Reconnect\"] = 4] = \"Reconnect\";\n    SessionStateControllerAction[SessionStateControllerAction[\"Disconnect\"] = 5] = \"Disconnect\";\n    SessionStateControllerAction[SessionStateControllerAction[\"Fail\"] = 6] = \"Fail\";\n    SessionStateControllerAction[SessionStateControllerAction[\"FinishDisconnecting\"] = 7] = \"FinishDisconnecting\";\n})(SessionStateControllerAction = exports.SessionStateControllerAction || (exports.SessionStateControllerAction = {}));\nexports.default = SessionStateControllerAction;\n//# sourceMappingURL=SessionStateControllerAction.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionStateControllerDeferPriority = void 0;\n/**\n * [[SessionStateControllerDeferPriority]] indicates the priority level of the action\n * being deferred. For example, stop is more important than update so if forced\n * to pick between the two stop should be chosen.\n */\nvar SessionStateControllerDeferPriority;\n(function (SessionStateControllerDeferPriority) {\n    SessionStateControllerDeferPriority[SessionStateControllerDeferPriority[\"DoNotDefer\"] = 0] = \"DoNotDefer\";\n    SessionStateControllerDeferPriority[SessionStateControllerDeferPriority[\"Low\"] = 1] = \"Low\";\n    SessionStateControllerDeferPriority[SessionStateControllerDeferPriority[\"Medium\"] = 2] = \"Medium\";\n    SessionStateControllerDeferPriority[SessionStateControllerDeferPriority[\"High\"] = 3] = \"High\";\n    SessionStateControllerDeferPriority[SessionStateControllerDeferPriority[\"VeryHigh\"] = 4] = \"VeryHigh\";\n})(SessionStateControllerDeferPriority = exports.SessionStateControllerDeferPriority || (exports.SessionStateControllerDeferPriority = {}));\nexports.default = SessionStateControllerDeferPriority;\n//# sourceMappingURL=SessionStateControllerDeferPriority.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionStateControllerState = void 0;\n/**\n * [[SessionStateControllerState]] reflects the current connection state of the session.\n */\nvar SessionStateControllerState;\n(function (SessionStateControllerState) {\n    SessionStateControllerState[SessionStateControllerState[\"NotConnected\"] = 0] = \"NotConnected\";\n    SessionStateControllerState[SessionStateControllerState[\"Connecting\"] = 1] = \"Connecting\";\n    SessionStateControllerState[SessionStateControllerState[\"Connected\"] = 2] = \"Connected\";\n    SessionStateControllerState[SessionStateControllerState[\"Updating\"] = 3] = \"Updating\";\n    SessionStateControllerState[SessionStateControllerState[\"Disconnecting\"] = 4] = \"Disconnecting\";\n})(SessionStateControllerState = exports.SessionStateControllerState || (exports.SessionStateControllerState = {}));\nexports.default = SessionStateControllerState;\n//# sourceMappingURL=SessionStateControllerState.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionStateControllerTransitionResult = void 0;\n/**\n * Indicates the result of an attempted state transition.\n */\nvar SessionStateControllerTransitionResult;\n(function (SessionStateControllerTransitionResult) {\n    /**\n     * The transition was successful.\n     */\n    SessionStateControllerTransitionResult[SessionStateControllerTransitionResult[\"Transitioned\"] = 0] = \"Transitioned\";\n    /**\n     * No transition is available from the current state using that action.\n     */\n    SessionStateControllerTransitionResult[SessionStateControllerTransitionResult[\"NoTransitionAvailable\"] = 1] = \"NoTransitionAvailable\";\n    /**\n     * The transition will be tried on the next state.\n     */\n    SessionStateControllerTransitionResult[SessionStateControllerTransitionResult[\"DeferredTransition\"] = 2] = \"DeferredTransition\";\n    /**\n     * An unexpected error occurred while transitioning to the next state.\n     */\n    SessionStateControllerTransitionResult[SessionStateControllerTransitionResult[\"TransitionFailed\"] = 3] = \"TransitionFailed\";\n})(SessionStateControllerTransitionResult = exports.SessionStateControllerTransitionResult || (exports.SessionStateControllerTransitionResult = {}));\nexports.default = SessionStateControllerTransitionResult;\n//# sourceMappingURL=SessionStateControllerTransitionResult.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SessionStateControllerAction_1 = require(\"./SessionStateControllerAction\");\nconst SessionStateControllerDeferPriority_1 = require(\"./SessionStateControllerDeferPriority\");\nconst SessionStateControllerState_1 = require(\"./SessionStateControllerState\");\nconst SessionStateControllerTransitionResult_1 = require(\"./SessionStateControllerTransitionResult\");\nclass DefaultSessionStateController {\n    constructor(logger) {\n        this.logger = logger;\n        this.currentState = SessionStateControllerState_1.SessionStateControllerState.NotConnected;\n        this.deferredAction = null;\n        this.deferredWork = null;\n    }\n    perform(action, work) {\n        const state = this.currentState;\n        if (state === SessionStateControllerState_1.SessionStateControllerState.NotConnected &&\n            action === SessionStateControllerAction_1.SessionStateControllerAction.Connect) {\n            this.transition(SessionStateControllerState_1.SessionStateControllerState.Connecting, action);\n        }\n        else if (state === SessionStateControllerState_1.SessionStateControllerState.Connecting &&\n            action === SessionStateControllerAction_1.SessionStateControllerAction.Fail) {\n            this.transition(SessionStateControllerState_1.SessionStateControllerState.Disconnecting, action);\n        }\n        else if (state === SessionStateControllerState_1.SessionStateControllerState.Connecting &&\n            action === SessionStateControllerAction_1.SessionStateControllerAction.FinishConnecting) {\n            this.transition(SessionStateControllerState_1.SessionStateControllerState.Connected, action);\n        }\n        else if (state === SessionStateControllerState_1.SessionStateControllerState.Connected &&\n            action === SessionStateControllerAction_1.SessionStateControllerAction.Disconnect) {\n            this.transition(SessionStateControllerState_1.SessionStateControllerState.Disconnecting, action);\n        }\n        else if (state === SessionStateControllerState_1.SessionStateControllerState.Connected &&\n            action === SessionStateControllerAction_1.SessionStateControllerAction.Reconnect) {\n            this.transition(SessionStateControllerState_1.SessionStateControllerState.Connecting, action);\n        }\n        else if (state === SessionStateControllerState_1.SessionStateControllerState.Connected &&\n            action === SessionStateControllerAction_1.SessionStateControllerAction.Fail) {\n            this.transition(SessionStateControllerState_1.SessionStateControllerState.Disconnecting, action);\n        }\n        else if (state === SessionStateControllerState_1.SessionStateControllerState.Connected &&\n            action === SessionStateControllerAction_1.SessionStateControllerAction.Update) {\n            this.transition(SessionStateControllerState_1.SessionStateControllerState.Updating, action);\n        }\n        else if (state === SessionStateControllerState_1.SessionStateControllerState.Updating &&\n            action === SessionStateControllerAction_1.SessionStateControllerAction.Fail) {\n            this.transition(SessionStateControllerState_1.SessionStateControllerState.Disconnecting, action);\n        }\n        else if (state === SessionStateControllerState_1.SessionStateControllerState.Updating &&\n            action === SessionStateControllerAction_1.SessionStateControllerAction.FinishUpdating) {\n            this.transition(SessionStateControllerState_1.SessionStateControllerState.Connected, action);\n        }\n        else if (state === SessionStateControllerState_1.SessionStateControllerState.Disconnecting &&\n            action === SessionStateControllerAction_1.SessionStateControllerAction.FinishDisconnecting) {\n            this.transition(SessionStateControllerState_1.SessionStateControllerState.NotConnected, action);\n        }\n        else if (this.canDefer(action)) {\n            this.logger.info(`deferring transition from ${SessionStateControllerState_1.SessionStateControllerState[this.currentState]} with ${SessionStateControllerAction_1.SessionStateControllerAction[action]}`);\n            this.deferAction(action, work);\n            return SessionStateControllerTransitionResult_1.SessionStateControllerTransitionResult.DeferredTransition;\n        }\n        else {\n            this.logger.warn(`no transition found from ${SessionStateControllerState_1.SessionStateControllerState[this.currentState]} with ${SessionStateControllerAction_1.SessionStateControllerAction[action]}`);\n            return SessionStateControllerTransitionResult_1.SessionStateControllerTransitionResult.NoTransitionAvailable;\n        }\n        try {\n            work();\n        }\n        catch (e) {\n            this.logger.error(`error during state ${SessionStateControllerState_1.SessionStateControllerState[this.currentState]} with action ${SessionStateControllerAction_1.SessionStateControllerAction[action]}: ${e}`);\n            this.logger.info(`rolling back transition to ${SessionStateControllerState_1.SessionStateControllerState[state]}`);\n            this.currentState = state;\n            return SessionStateControllerTransitionResult_1.SessionStateControllerTransitionResult.TransitionFailed;\n        }\n        this.performDeferredAction();\n        return SessionStateControllerTransitionResult_1.SessionStateControllerTransitionResult.Transitioned;\n    }\n    state() {\n        return this.currentState;\n    }\n    transition(newState, action) {\n        this.logger.info(`transitioning from ${SessionStateControllerState_1.SessionStateControllerState[this.currentState]} to ${SessionStateControllerState_1.SessionStateControllerState[newState]} with ${SessionStateControllerAction_1.SessionStateControllerAction[action]}`);\n        this.currentState = newState;\n    }\n    deferPriority(action) {\n        switch (action) {\n            case SessionStateControllerAction_1.SessionStateControllerAction.Disconnect:\n                return SessionStateControllerDeferPriority_1.SessionStateControllerDeferPriority.VeryHigh;\n            case SessionStateControllerAction_1.SessionStateControllerAction.Fail:\n                return SessionStateControllerDeferPriority_1.SessionStateControllerDeferPriority.High;\n            case SessionStateControllerAction_1.SessionStateControllerAction.Reconnect:\n                return SessionStateControllerDeferPriority_1.SessionStateControllerDeferPriority.Medium;\n            case SessionStateControllerAction_1.SessionStateControllerAction.Update:\n                return SessionStateControllerDeferPriority_1.SessionStateControllerDeferPriority.Low;\n            default:\n                return SessionStateControllerDeferPriority_1.SessionStateControllerDeferPriority.DoNotDefer;\n        }\n    }\n    deferAction(action, work) {\n        if (this.deferredAction !== null &&\n            this.deferPriority(this.deferredAction) > this.deferPriority(action)) {\n            return;\n        }\n        this.deferredAction = action;\n        this.deferredWork = work;\n    }\n    canDefer(action) {\n        return (this.deferPriority(action) !== SessionStateControllerDeferPriority_1.SessionStateControllerDeferPriority.DoNotDefer &&\n            (this.currentState === SessionStateControllerState_1.SessionStateControllerState.Connecting ||\n                this.currentState === SessionStateControllerState_1.SessionStateControllerState.Updating));\n    }\n    performDeferredAction() {\n        if (!this.deferredAction) {\n            return;\n        }\n        const deferredAction = this.deferredAction;\n        const deferredWork = this.deferredWork;\n        this.deferredAction = null;\n        this.deferredWork = null;\n        this.logger.info(`performing deferred action ${SessionStateControllerAction_1.SessionStateControllerAction[deferredAction]}`);\n        if (this.perform(deferredAction, deferredWork) !==\n            SessionStateControllerTransitionResult_1.SessionStateControllerTransitionResult.Transitioned) {\n            this.logger.info(`unable to perform deferred action ${SessionStateControllerAction_1.SessionStateControllerAction[deferredAction]} in state ${SessionStateControllerState_1.SessionStateControllerState[this.currentState]}`);\n        }\n    }\n}\nexports.default = DefaultSessionStateController;\n//# sourceMappingURL=DefaultSessionStateController.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebSocketReadyState = void 0;\nvar WebSocketReadyState;\n(function (WebSocketReadyState) {\n    WebSocketReadyState[WebSocketReadyState[\"None\"] = 0] = \"None\";\n    WebSocketReadyState[WebSocketReadyState[\"Connecting\"] = 1] = \"Connecting\";\n    WebSocketReadyState[WebSocketReadyState[\"Open\"] = 2] = \"Open\";\n    WebSocketReadyState[WebSocketReadyState[\"Closing\"] = 3] = \"Closing\";\n    WebSocketReadyState[WebSocketReadyState[\"Closed\"] = 4] = \"Closed\";\n})(WebSocketReadyState = exports.WebSocketReadyState || (exports.WebSocketReadyState = {}));\nexports.default = WebSocketReadyState;\n//# sourceMappingURL=WebSocketReadyState.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertServerSideNetworkAdaptionEnumToSignaled = exports.convertServerSideNetworkAdaptionEnumFromSignaled = exports.ServerSideNetworkAdaption = void 0;\nconst SignalingProtocol_1 = require(\"../signalingprotocol/SignalingProtocol\");\n/**\n * [[ServerSideNetworkAdaption]] represents additional server side features that can be enabled for network adaption.\n */\nvar ServerSideNetworkAdaption;\n(function (ServerSideNetworkAdaption) {\n    /**\n     * No features enabled, but can be overriden from server side values.\n     */\n    ServerSideNetworkAdaption[ServerSideNetworkAdaption[\"Default\"] = 0] = \"Default\";\n    /**\n     * No features enabled. Will not be override from server side choice.\n     */\n    ServerSideNetworkAdaption[ServerSideNetworkAdaption[\"None\"] = 1] = \"None\";\n    /**\n     * Disable the existing client side bandwidth probing methods of waiting and unpausing,\n     * or waiting and upgrading simulcast streams (which can be large increases of bitrates\n     * and may lead to periodic oversubscription over network capacity\n     * and resulting video freezes) and replace it with more gradual server\n     * side probing of increasing amounts padding packets until the\n     * bandwidth estimate safely reaches the value needed to resume the\n     * next video source, or upgrade to the next higher simulcast stream.\n     *\n     * When this is enabled, any policy 'probing' for bandwidth headroom\n     * should be disabled. This may also enable pacing of some media packets from the server\n     * side, and may also enable packet burst probing.\n     *\n     * End users should overall see reduced video freezes, reduced broken audio,\n     * and reduced packet loss.\n     */\n    ServerSideNetworkAdaption[ServerSideNetworkAdaption[\"BandwidthProbing\"] = 2] = \"BandwidthProbing\";\n})(ServerSideNetworkAdaption = exports.ServerSideNetworkAdaption || (exports.ServerSideNetworkAdaption = {}));\nexports.default = ServerSideNetworkAdaption;\nfunction convertServerSideNetworkAdaptionEnumFromSignaled(adaption) {\n    switch (adaption) {\n        case SignalingProtocol_1.SdkServerSideNetworkAdaption.DEFAULT:\n            return ServerSideNetworkAdaption.Default;\n        case SignalingProtocol_1.SdkServerSideNetworkAdaption.NONE:\n            return ServerSideNetworkAdaption.None;\n        case SignalingProtocol_1.SdkServerSideNetworkAdaption.BANDWIDTH_PROBING:\n            return ServerSideNetworkAdaption.BandwidthProbing;\n    }\n}\nexports.convertServerSideNetworkAdaptionEnumFromSignaled = convertServerSideNetworkAdaptionEnumFromSignaled;\nfunction convertServerSideNetworkAdaptionEnumToSignaled(adaption) {\n    switch (adaption) {\n        case ServerSideNetworkAdaption.Default:\n            return SignalingProtocol_1.SdkServerSideNetworkAdaption.DEFAULT;\n        case ServerSideNetworkAdaption.None:\n            return SignalingProtocol_1.SdkServerSideNetworkAdaption.NONE;\n        case ServerSideNetworkAdaption.BandwidthProbing:\n            return SignalingProtocol_1.SdkServerSideNetworkAdaption.BANDWIDTH_PROBING;\n    }\n}\nexports.convertServerSideNetworkAdaptionEnumToSignaled = convertServerSideNetworkAdaptionEnumToSignaled;\n//# sourceMappingURL=ServerSideNetworkAdaption.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SignalingClientEventType_1 = require(\"./SignalingClientEventType\");\n/*\n * [[SignalingClientEvent]] stores an event that can be sent to observers of the SignalingClient.\n */\nclass SignalingClientEvent {\n    /** Initializes a SignalingClientEvent with the given SignalingClientEventType.\n     *\n     * @param client Indicates the SignalingClient associated with the event.\n     * @param type Indicates the kind of event.\n     * @param message SdkSignalFrame if type is ReceivedSignalFrame\n     */\n    constructor(client, type, message, closeCode, closeReason) {\n        this.client = client;\n        this.type = type;\n        this.message = message;\n        this.closeCode = closeCode;\n        this.closeReason = closeReason;\n        this.timestampMs = Date.now();\n    }\n    isConnectionTerminated() {\n        switch (this.type) {\n            case SignalingClientEventType_1.default.WebSocketFailed:\n            case SignalingClientEventType_1.default.WebSocketError:\n            case SignalingClientEventType_1.default.WebSocketClosing:\n            case SignalingClientEventType_1.default.WebSocketClosed:\n                return true;\n            default:\n                return false;\n        }\n    }\n}\nexports.default = SignalingClientEvent;\n//# sourceMappingURL=SignalingClientEvent.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\nconst TimeoutScheduler_1 = require(\"../scheduler/TimeoutScheduler\");\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nconst Versioning_1 = require(\"../versioning/Versioning\");\nconst WebSocketReadyState_1 = require(\"../websocketadapter/WebSocketReadyState\");\nconst ServerSideNetworkAdaption_1 = require(\"./ServerSideNetworkAdaption\");\nconst SignalingClientEvent_1 = require(\"./SignalingClientEvent\");\nconst SignalingClientEventType_1 = require(\"./SignalingClientEventType\");\n/**\n * [[DefaultSignalingClient]] implements the SignalingClient interface.\n */\nclass DefaultSignalingClient {\n    constructor(webSocket, logger) {\n        this.webSocket = webSocket;\n        this.logger = logger;\n        this.unloadHandler = null;\n        this.closeEventHandler = (event) => {\n            this.deactivatePageUnloadHandler();\n            this.resetConnection();\n            this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.WebSocketClosed, null, event.code, event.reason));\n            this.serviceConnectionRequestQueue();\n        };\n        this.observerQueue = new Set();\n        this.connectionRequestQueue = [];\n        this.resetConnection();\n        this.logger.debug(() => 'signaling client init');\n        this.audioSessionId = this.generateNewAudioSessionId();\n    }\n    registerObserver(observer) {\n        this.logger.debug(() => 'registering signaling client observer');\n        this.observerQueue.add(observer);\n    }\n    removeObserver(observer) {\n        this.logger.debug(() => 'removing signaling client observer');\n        this.observerQueue.delete(observer);\n    }\n    openConnection(request) {\n        this.logger.info('adding connection request to queue: ' + request.url());\n        this.connectionRequestQueue.push(request);\n        this.closeConnection();\n    }\n    pingPong(pingPongFrame) {\n        this.logger.debug(() => 'sending ping');\n        const message = SignalingProtocol_js_1.SdkSignalFrame.create();\n        message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.PING_PONG;\n        message.pingPong = pingPongFrame;\n        this.sendMessage(message);\n        return message.timestampMs;\n    }\n    join(settings) {\n        this.logger.info('sending join');\n        const joinFrame = SignalingProtocol_js_1.SdkJoinFrame.create();\n        joinFrame.protocolVersion = 2;\n        joinFrame.flags = SignalingProtocol_js_1.SdkJoinFlags.HAS_STREAM_UPDATE;\n        const browserBehavior = new DefaultBrowserBehavior_1.default();\n        const sdkClientDetails = {\n            platformName: browserBehavior.name(),\n            platformVersion: browserBehavior.version(),\n            clientSource: Versioning_1.default.sdkName,\n            chimeSdkVersion: Versioning_1.default.sdkVersion,\n        };\n        if (settings.applicationMetadata) {\n            const { appName, appVersion } = settings.applicationMetadata;\n            sdkClientDetails.appName = appName;\n            sdkClientDetails.appVersion = appVersion;\n        }\n        joinFrame.clientDetails = SignalingProtocol_js_1.SdkClientDetails.create(sdkClientDetails);\n        joinFrame.audioSessionId = this.audioSessionId;\n        joinFrame.wantsCompressedSdp = DefaultSignalingClient.CLIENT_SUPPORTS_COMPRESSION;\n        joinFrame.disablePeriodicKeyframeRequestOnContentSender =\n            settings.disablePeriodicKeyframeRequestOnContentSender;\n        joinFrame.serverSideNetworkAdaption = ServerSideNetworkAdaption_1.convertServerSideNetworkAdaptionEnumToSignaled(settings.serverSideNetworkAdaption);\n        joinFrame.supportedServerSideNetworkAdaptions = settings.supportedServerSideNetworkAdaptions.map(ServerSideNetworkAdaption_1.convertServerSideNetworkAdaptionEnumToSignaled);\n        const message = SignalingProtocol_js_1.SdkSignalFrame.create();\n        message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.JOIN;\n        message.join = joinFrame;\n        this.sendMessage(message);\n    }\n    subscribe(settings) {\n        const subscribeFrame = SignalingProtocol_js_1.SdkSubscribeFrame.create();\n        subscribeFrame.sendStreams = [];\n        subscribeFrame.sdpOffer = settings.sdpOffer;\n        if (settings.connectionTypeHasVideo) {\n            subscribeFrame.receiveStreamIds = settings.receiveStreamIds;\n        }\n        if (settings.audioHost) {\n            subscribeFrame.audioCheckin = settings.audioCheckin;\n            subscribeFrame.audioHost = settings.audioHost;\n            subscribeFrame.audioMuted = settings.audioMuted;\n            if (!settings.audioCheckin) {\n                const audioStream = SignalingProtocol_js_1.SdkStreamDescriptor.create();\n                audioStream.mediaType = SignalingProtocol_js_1.SdkStreamMediaType.AUDIO;\n                audioStream.trackLabel = 'AmazonChimeExpressAudio';\n                audioStream.attendeeId = settings.attendeeId;\n                audioStream.streamId = 1;\n                audioStream.groupId = 1;\n                audioStream.framerate = 15;\n                audioStream.maxBitrateKbps = 600;\n                audioStream.avgBitrateBps = 400000;\n                subscribeFrame.sendStreams.push(audioStream);\n            }\n        }\n        subscribeFrame.compressedSdpOffer = settings.compressedSdpOffer;\n        subscribeFrame.duplex = SignalingProtocol_js_1.SdkStreamServiceType.RX;\n        if (settings.localVideoEnabled) {\n            subscribeFrame.duplex = SignalingProtocol_js_1.SdkStreamServiceType.DUPLEX;\n            for (let i = 0; i < settings.videoStreamDescriptions.length; i++) {\n                // Non-simulcast use DefaultVideoStreamIndex.localStreamDescriptions\n                // which is the exact old behavior\n                const streamDescription = settings.videoStreamDescriptions[i].clone();\n                streamDescription.attendeeId = settings.attendeeId;\n                subscribeFrame.sendStreams.push(streamDescription.toStreamDescriptor());\n            }\n        }\n        if (settings.videoSubscriptionConfiguration.length > 0) {\n            subscribeFrame.videoSubscriptionConfiguration = settings.videoSubscriptionConfiguration.map(this.convertVideoSubscriptionConfiguration);\n        }\n        const message = SignalingProtocol_js_1.SdkSignalFrame.create();\n        message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.SUBSCRIBE;\n        message.sub = subscribeFrame;\n        this.sendMessage(message);\n    }\n    remoteVideoUpdate(addedOrUpdated, removed) {\n        const remoteVideoUpdate = SignalingProtocol_js_1.SdkRemoteVideoUpdateFrame.create();\n        remoteVideoUpdate.addedOrUpdatedVideoSubscriptions = addedOrUpdated.map(this.convertVideoSubscriptionConfiguration);\n        remoteVideoUpdate.removedVideoSubscriptionMids = removed;\n        const message = SignalingProtocol_js_1.SdkSignalFrame.create();\n        message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.REMOTE_VIDEO_UPDATE;\n        message.remoteVideoUpdate = remoteVideoUpdate;\n        this.sendMessage(message);\n    }\n    convertVideoSubscriptionConfiguration(config) {\n        const signalConfig = new SignalingProtocol_js_1.SdkVideoSubscriptionConfiguration();\n        signalConfig.mid = config.mid;\n        signalConfig.attendeeId = config.attendeeId;\n        signalConfig.streamId = config.streamId;\n        signalConfig.groupId = config.groupId;\n        signalConfig.priority = config.priority;\n        signalConfig.targetBitrateKbps = config.targetBitrateKbps;\n        return signalConfig;\n    }\n    leave() {\n        const message = SignalingProtocol_js_1.SdkSignalFrame.create();\n        message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.LEAVE;\n        message.leave = SignalingProtocol_js_1.SdkLeaveFrame.create();\n        this.sendMessage(message);\n        this.logger.debug(() => {\n            return 'sent leave';\n        });\n    }\n    sendClientMetrics(clientMetricFrame) {\n        const message = SignalingProtocol_js_1.SdkSignalFrame.create();\n        message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.CLIENT_METRIC;\n        message.clientMetric = clientMetricFrame;\n        this.sendMessage(message);\n    }\n    sendDataMessage(messageFrame) {\n        const message = SignalingProtocol_js_1.SdkSignalFrame.create();\n        message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.DATA_MESSAGE;\n        message.dataMessage = messageFrame;\n        this.sendMessage(message);\n    }\n    closeConnection() {\n        var _a, _b;\n        if (this.webSocket.readyState() !== WebSocketReadyState_1.default.None &&\n            this.webSocket.readyState() !== WebSocketReadyState_1.default.Closed) {\n            this.isClosing = true;\n            this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.WebSocketClosing, null));\n            // Continue resetting the connection even if SDK does not receive the \"close\" event.\n            const scheduler = new TimeoutScheduler_1.default(DefaultSignalingClient.CLOSE_EVENT_TIMEOUT_MS);\n            const handler = (event) => {\n                var _a, _b;\n                /* istanbul ignore next */\n                (_b = (_a = this.webSocket).removeEventListener) === null || _b === void 0 ? void 0 : _b.call(_a, 'close', handler);\n                scheduler.stop();\n                this.closeEventHandler(event);\n            };\n            // Remove the existing close handler to prevent SDK from opening a new connection.\n            /* istanbul ignore next */\n            (_b = (_a = this.webSocket).removeEventListener) === null || _b === void 0 ? void 0 : _b.call(_a, 'close', this.closeEventHandler);\n            this.webSocket.addEventListener('close', handler);\n            scheduler.start(() => {\n                // SDK has not received the \"close\" event on WebSocket for two seconds.\n                // Handle a fake close event with 1006 to indicate that the client abnormally closed the connection.\n                handler(new CloseEvent('close', { wasClean: false, code: 1006, reason: '', bubbles: false }));\n            });\n            this.webSocket.close();\n            this.deactivatePageUnloadHandler();\n        }\n        else {\n            this.logger.info('no existing signaling client connection needs closing');\n            this.serviceConnectionRequestQueue();\n        }\n    }\n    ready() {\n        return (this.webSocket.readyState() === WebSocketReadyState_1.default.Open && !this.isClosing && this.wasOpened);\n    }\n    mute(muted) {\n        const message = SignalingProtocol_js_1.SdkSignalFrame.create();\n        message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.AUDIO_CONTROL;\n        const audioControl = SignalingProtocol_js_1.SdkAudioControlFrame.create();\n        audioControl.muted = muted;\n        message.audioControl = audioControl;\n        this.sendMessage(message);\n    }\n    pause(streamIds) {\n        const message = SignalingProtocol_js_1.SdkSignalFrame.create();\n        message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.PAUSE;\n        message.pause = SignalingProtocol_js_1.SdkPauseResumeFrame.create();\n        message.pause.streamIds = streamIds;\n        this.sendMessage(message);\n    }\n    resume(streamIds) {\n        const message = SignalingProtocol_js_1.SdkSignalFrame.create();\n        message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.RESUME;\n        message.pause = SignalingProtocol_js_1.SdkPauseResumeFrame.create();\n        message.pause.streamIds = streamIds;\n        this.sendMessage(message);\n    }\n    resetConnection() {\n        this.webSocket.destroy();\n        this.wasOpened = false;\n    }\n    sendMessage(message) {\n        message.timestampMs = Date.now();\n        this.logger.debug(() => `sending: ${JSON.stringify(message)}`);\n        const buffer = this.prependWithFrameTypeRTC(SignalingProtocol_js_1.SdkSignalFrame.encode(message).finish());\n        if (this.ready()) {\n            if (!this.webSocket.send(buffer)) {\n                this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.WebSocketSendMessageFailure, null));\n                return;\n            }\n            this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.WebSocketSentMessage, null));\n        }\n        else {\n            this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.WebSocketSkippedMessage, null));\n        }\n    }\n    receiveMessage(inBuffer) {\n        let message;\n        try {\n            message = SignalingProtocol_js_1.SdkSignalFrame.decode(inBuffer);\n        }\n        catch (e) {\n            this.logger.info(`failed to decode: ${inBuffer}`);\n            this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.ProtocolDecodeFailure, null));\n            return;\n        }\n        this.logger.debug(() => `received: ${JSON.stringify(message)}`);\n        if (this.webSocket.readyState() === WebSocketReadyState_1.default.Open) {\n            this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.ReceivedSignalFrame, message));\n        }\n        else {\n            this.logger.info(`skipping notification of message since WebSocket is not open: ${JSON.stringify(message)}`);\n        }\n    }\n    stripFrameTypeRTC(inBuffer) {\n        const frameType = inBuffer[0];\n        // TODO: change server frame type to send 0x05\n        if (frameType !== DefaultSignalingClient.FRAME_TYPE_RTC && frameType !== 0x02) {\n            this.logger.warn(`expected FrameTypeRTC for message but got ${frameType}`);\n        }\n        return inBuffer.slice(1);\n    }\n    prependWithFrameTypeRTC(inBuffer) {\n        const outBuffer = new Uint8Array(inBuffer.length + 1);\n        outBuffer[0] = DefaultSignalingClient.FRAME_TYPE_RTC;\n        outBuffer.set(inBuffer, 1);\n        return outBuffer;\n    }\n    serviceConnectionRequestQueue() {\n        if (this.connectionRequestQueue.length === 0) {\n            this.logger.info('no connection requests to service');\n            return;\n        }\n        const request = this.connectionRequestQueue.shift();\n        this.logger.info(`opening connection to ${request.url()}`);\n        this.isClosing = false;\n        this.webSocket.create(request.url(), request.protocols());\n        this.setUpEventListeners();\n        this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.WebSocketConnecting, null));\n    }\n    sendEvent(event) {\n        switch (event.type) {\n            case SignalingClientEventType_1.default.WebSocketMessage:\n            case SignalingClientEventType_1.default.ReceivedSignalFrame:\n            case SignalingClientEventType_1.default.WebSocketSentMessage:\n                this.logger.debug(() => `notifying event: ${SignalingClientEventType_1.default[event.type]}`);\n                break;\n            case SignalingClientEventType_1.default.WebSocketSkippedMessage:\n                this.logger.debug(() => `notifying event: ${SignalingClientEventType_1.default[event.type]}, websocket state=${WebSocketReadyState_1.default[this.webSocket.readyState()]}`);\n                break;\n            default:\n                this.logger.info(`notifying event: ${SignalingClientEventType_1.default[event.type]}`);\n                break;\n        }\n        for (const observer of this.observerQueue) {\n            observer.handleSignalingClientEvent(event);\n        }\n    }\n    setUpEventListeners() {\n        this.webSocket.addEventListener('open', () => {\n            this.activatePageUnloadHandler();\n            this.wasOpened = true;\n            this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.WebSocketOpen, null));\n        });\n        this.webSocket.addEventListener('message', (event) => {\n            this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.WebSocketMessage, null));\n            this.receiveMessage(this.stripFrameTypeRTC(new Uint8Array(event.data)));\n        });\n        this.webSocket.addEventListener('close', this.closeEventHandler);\n        this.webSocket.addEventListener('error', () => {\n            if (this.isClosing && !this.wasOpened) {\n                this.logger.info('ignoring error closing signaling while connecting');\n                return;\n            }\n            if (this.wasOpened) {\n                this.logger.error('received error while connected');\n                this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.WebSocketError, null));\n            }\n            else {\n                this.logger.error('failed to connect');\n                this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.WebSocketFailed, null));\n            }\n        });\n    }\n    activatePageUnloadHandler() {\n        this.unloadHandler = () => {\n            this.leave();\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const GlobalAny = global;\n        GlobalAny['window'] &&\n            GlobalAny['window']['addEventListener'] &&\n            window.addEventListener('unload', this.unloadHandler);\n    }\n    deactivatePageUnloadHandler() {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const GlobalAny = global;\n        GlobalAny['window'] &&\n            GlobalAny['window']['removeEventListener'] &&\n            window.removeEventListener('unload', this.unloadHandler);\n        this.unloadHandler = null;\n    }\n    generateNewAudioSessionId() {\n        const num = new Uint32Array(1);\n        const randomNum = window.crypto.getRandomValues(num);\n        return randomNum[0];\n    }\n    promoteToPrimaryMeeting(credentials) {\n        const signaledCredentials = SignalingProtocol_js_1.SdkMeetingSessionCredentials.create();\n        signaledCredentials.attendeeId = credentials.attendeeId;\n        signaledCredentials.externalUserId = credentials.externalUserId;\n        signaledCredentials.joinToken = credentials.joinToken;\n        const primaryMeetingJoin = SignalingProtocol_js_1.SdkPrimaryMeetingJoinFrame.create();\n        primaryMeetingJoin.credentials = signaledCredentials;\n        const message = SignalingProtocol_js_1.SdkSignalFrame.create();\n        message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.PRIMARY_MEETING_JOIN;\n        message.primaryMeetingJoin = primaryMeetingJoin;\n        this.sendMessage(message);\n    }\n    demoteFromPrimaryMeeting() {\n        const primaryMeetingLeave = SignalingProtocol_js_1.SdkPrimaryMeetingLeaveFrame.create();\n        const message = SignalingProtocol_js_1.SdkSignalFrame.create();\n        message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.PRIMARY_MEETING_LEAVE;\n        message.primaryMeetingLeave = primaryMeetingLeave;\n        this.sendMessage(message);\n    }\n}\nexports.default = DefaultSignalingClient;\nDefaultSignalingClient.FRAME_TYPE_RTC = 0x5;\nDefaultSignalingClient.CLOSE_EVENT_TIMEOUT_MS = 2000;\nDefaultSignalingClient.CLIENT_SUPPORTS_COMPRESSION = true;\n//# sourceMappingURL=DefaultSignalingClient.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[SignalingClientVideoSubscriptionConfiguration]] is an internal representation of\n * `SignalingProtocol.VideoSubscriptionConfiguration`\n */\nclass SignalingClientVideoSubscriptionConfiguration {\n}\nexports.default = SignalingClientVideoSubscriptionConfiguration;\n//# sourceMappingURL=SignalingClientVideoSubscriptionConfiguration.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass StreamMetricReport {\n    constructor() {\n        this.previousMetrics = {};\n        this.currentMetrics = {};\n        // As metric values do not necessarily be number, this is a workaround in case metric value is string\n        this.currentStringMetrics = {};\n    }\n}\nexports.default = StreamMetricReport;\n//# sourceMappingURL=StreamMetricReport.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MeetingSessionLifecycleEvent = void 0;\n/**\n * [[MeetingSessionLifecycleEvent]] indicates the lifecycle status.\n * Add new enums to the bottom. We depend on these numbers for analytics.\n */\nvar MeetingSessionLifecycleEvent;\n(function (MeetingSessionLifecycleEvent) {\n    /**\n     * The session is connecting, either to start a new call, or reconnect to an existing one.\n     */\n    MeetingSessionLifecycleEvent[MeetingSessionLifecycleEvent[\"Connecting\"] = 0] = \"Connecting\";\n    /**\n     * The session successfully arrived in the started state either for the first time or\n     * due to a change in connection type.\n     */\n    MeetingSessionLifecycleEvent[MeetingSessionLifecycleEvent[\"Started\"] = 1] = \"Started\";\n    /**\n     * The session came to a stop, either from leaving or due to a failure.\n     */\n    MeetingSessionLifecycleEvent[MeetingSessionLifecycleEvent[\"Stopped\"] = 2] = \"Stopped\";\n})(MeetingSessionLifecycleEvent = exports.MeetingSessionLifecycleEvent || (exports.MeetingSessionLifecycleEvent = {}));\nexports.default = MeetingSessionLifecycleEvent;\n//# sourceMappingURL=MeetingSessionLifecycleEvent.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MeetingSessionLifecycleEventCondition = void 0;\n/**\n * [[MeetingSessionLifecycleEventCondition]] indicates the lifecycle event condition.\n * Add new enums to the bottom. We depend on these numbers for analytics.\n */\nvar MeetingSessionLifecycleEventCondition;\n(function (MeetingSessionLifecycleEventCondition) {\n    /**\n     * The session is connecting for the first time.\n     */\n    MeetingSessionLifecycleEventCondition[MeetingSessionLifecycleEventCondition[\"ConnectingNew\"] = 0] = \"ConnectingNew\";\n    /**\n     * The session was connected before and is now reconnecting.\n     */\n    MeetingSessionLifecycleEventCondition[MeetingSessionLifecycleEventCondition[\"ReconnectingExisting\"] = 1] = \"ReconnectingExisting\";\n    /**\n     * The session successfully arrived in the started state for the first time.\n     */\n    MeetingSessionLifecycleEventCondition[MeetingSessionLifecycleEventCondition[\"StartedNew\"] = 2] = \"StartedNew\";\n    /**\n     * The session successfully arrived in the started state but was connected before.\n     * This can happen, for example, when the connection type changes.\n     */\n    MeetingSessionLifecycleEventCondition[MeetingSessionLifecycleEventCondition[\"StartedExisting\"] = 3] = \"StartedExisting\";\n    /**\n     * The session successfully arrived in the started state following a reconnect.\n     */\n    MeetingSessionLifecycleEventCondition[MeetingSessionLifecycleEventCondition[\"StartedAfterReconnect\"] = 4] = \"StartedAfterReconnect\";\n    /**\n     * The session stopped cleanly, probably due to leaving the call.\n     */\n    MeetingSessionLifecycleEventCondition[MeetingSessionLifecycleEventCondition[\"StoppedCleanly\"] = 5] = \"StoppedCleanly\";\n    /**\n     * The session stopped due to a failure. A status code will indicate the cause of\n     * the failure.\n     */\n    MeetingSessionLifecycleEventCondition[MeetingSessionLifecycleEventCondition[\"StoppedWithFailure\"] = 6] = \"StoppedWithFailure\";\n})(MeetingSessionLifecycleEventCondition = exports.MeetingSessionLifecycleEventCondition || (exports.MeetingSessionLifecycleEventCondition = {}));\nexports.default = MeetingSessionLifecycleEventCondition;\n//# sourceMappingURL=MeetingSessionLifecycleEventCondition.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ClientMetricReport_1 = require(\"../clientmetricreport/ClientMetricReport\");\nconst ClientMetricReportDirection_1 = require(\"../clientmetricreport/ClientMetricReportDirection\");\nconst ClientMetricReportMediaType_1 = require(\"../clientmetricreport/ClientMetricReportMediaType\");\nconst StreamMetricReport_1 = require(\"../clientmetricreport/StreamMetricReport\");\nconst MeetingSessionLifecycleEvent_1 = require(\"../meetingsession/MeetingSessionLifecycleEvent\");\nconst MeetingSessionLifecycleEventCondition_1 = require(\"../meetingsession/MeetingSessionLifecycleEventCondition\");\nconst IntervalScheduler_1 = require(\"../scheduler/IntervalScheduler\");\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nconst Types_1 = require(\"../utils/Types\");\nconst AudioLogEvent_1 = require(\"./AudioLogEvent\");\nconst VideoLogEvent_1 = require(\"./VideoLogEvent\");\n/**\n * [[StatsCollector]] gathers statistics and sends metrics.\n */\nclass StatsCollector {\n    constructor(audioVideoController, logger, interval = StatsCollector.INTERVAL_MS) {\n        this.audioVideoController = audioVideoController;\n        this.logger = logger;\n        this.interval = interval;\n        this.intervalScheduler = null;\n        // TODO: Implement metricsAddTime() and metricsLogEvent().\n        this.metricsAddTime = (_name, _duration, _attributes) => { };\n        this.metricsLogEvent = (_name, _attributes) => { };\n    }\n    // TODO: Update toAttribute() and toSuffix() methods to convert raw data to a required type.\n    /**\n     * Converts string to attribute format.\n     */\n    toAttribute(str) {\n        return this.toSuffix(str).substring(1);\n    }\n    /**\n     * Converts string to suffix format.\n     */\n    toSuffix(str) {\n        if (str.toLowerCase() === str) {\n            // e.g. lower_case -> _lower_case\n            return `_${str}`;\n        }\n        else if (str.toUpperCase() === str) {\n            // e.g. UPPER_CASE -> _upper_case\n            return `_${str.toLowerCase()}`;\n        }\n        else {\n            // e.g. CamelCaseWithCAPS -> _camel_case_with_caps\n            return str\n                .replace(/([A-Z][a-z]+)/g, function ($1) {\n                return `_${$1}`;\n            })\n                .replace(/([A-Z][A-Z]+)/g, function ($1) {\n                return `_${$1}`;\n            })\n                .toLowerCase();\n        }\n    }\n    /**\n     * Logs the latency.\n     */\n    logLatency(eventName, timeMs, attributes) {\n        const event = this.toSuffix(eventName);\n        this.logEventTime('meeting' + event, timeMs, attributes);\n    }\n    /**\n     * Logs the state timeout.\n     */\n    logStateTimeout(stateName, attributes) {\n        const state = this.toSuffix(stateName);\n        this.logEvent('meeting_session_state_timeout', Object.assign(Object.assign({}, attributes), { state: `state${state}` }));\n    }\n    /**\n     * Logs the audio event.\n     */\n    logAudioEvent(eventName, attributes) {\n        const event = 'audio' + this.toSuffix(AudioLogEvent_1.default[eventName]);\n        this.logEvent(event, attributes);\n    }\n    /**\n     * Logs the video event.\n     */\n    logVideoEvent(eventName, attributes) {\n        const event = 'video' + this.toSuffix(VideoLogEvent_1.default[eventName]);\n        this.logEvent(event, attributes);\n    }\n    logEventTime(eventName, timeMs, attributes = {}) {\n        const finalAttributes = Object.assign(Object.assign({}, attributes), { call_id: this.audioVideoController.configuration.meetingId, client_type: StatsCollector.CLIENT_TYPE, metric_type: 'latency' });\n        this.logger.debug(() => {\n            return `[StatsCollector] ${eventName}: ${JSON.stringify(finalAttributes)}`;\n        });\n        this.metricsAddTime(eventName, timeMs, finalAttributes);\n    }\n    /**\n     * Logs the session status.\n     */\n    logMeetingSessionStatus(status) {\n        // TODO: Generate the status event name given the status code.\n        const statusEventName = `${status.statusCode()}`;\n        this.logEvent(statusEventName);\n        const statusAttribute = {\n            status: statusEventName,\n            status_code: `${status.statusCode()}`,\n        };\n        this.logEvent('meeting_session_status', statusAttribute);\n        if (status.isTerminal()) {\n            this.logEvent('meeting_session_stopped', statusAttribute);\n        }\n        if (status.isAudioConnectionFailure()) {\n            this.logEvent('meeting_session_audio_failed', statusAttribute);\n        }\n        if (status.isFailure()) {\n            this.logEvent('meeting_session_failed', statusAttribute);\n        }\n    }\n    /**\n     * Logs the lifecycle event.\n     */\n    logLifecycleEvent(lifecycleEvent, condition) {\n        const attributes = {\n            lifecycle_event: `lifecycle${this.toSuffix(MeetingSessionLifecycleEvent_1.default[lifecycleEvent])}`,\n            lifecycle_event_code: `${lifecycleEvent}`,\n            lifecycle_event_condition: `condition${this.toSuffix(MeetingSessionLifecycleEventCondition_1.default[condition])}`,\n            lifecycle_event_condition_code: `${condition}`,\n        };\n        this.logEvent('meeting_session_lifecycle', attributes);\n    }\n    /**\n     * Logs the events.\n     */\n    logEvent(eventName, attributes = {}) {\n        const finalAttributes = Object.assign(Object.assign({}, attributes), { call_id: this.audioVideoController.configuration.meetingId, client_type: StatsCollector.CLIENT_TYPE });\n        this.logger.debug(() => {\n            return `[StatsCollector] ${eventName}: ${JSON.stringify(finalAttributes)}`;\n        });\n        this.metricsLogEvent(eventName, finalAttributes);\n    }\n    /**\n     * Starts collecting statistics.\n     */\n    start(signalingClient, videoStreamIndex) {\n        if (this.intervalScheduler) {\n            return false;\n        }\n        this.logger.info('Starting StatsCollector');\n        this.signalingClient = signalingClient;\n        this.videoStreamIndex = videoStreamIndex;\n        this.clientMetricReport = new ClientMetricReport_1.default(this.logger, this.videoStreamIndex, this.audioVideoController.configuration.credentials.attendeeId);\n        this.intervalScheduler = new IntervalScheduler_1.default(this.interval);\n        this.intervalScheduler.start(() => __awaiter(this, void 0, void 0, function* () {\n            yield this.getStatsWrapper();\n        }));\n        return true;\n    }\n    /*\n     * Stops the stats collector.\n     */\n    stop() {\n        this.logger.info('Stopping StatsCollector');\n        if (this.intervalScheduler) {\n            this.intervalScheduler.stop();\n        }\n        this.intervalScheduler = null;\n    }\n    /**\n     * Convert raw metrics to client metric report.\n     */\n    updateMetricValues(rawMetricReport, isStream) {\n        const metricReport = isStream\n            ? this.clientMetricReport.streamMetricReports[Number(rawMetricReport.ssrc)]\n            : this.clientMetricReport.globalMetricReport;\n        let metricMap;\n        if (isStream) {\n            metricMap = this.clientMetricReport.getMetricMap(metricReport.mediaType, metricReport.direction);\n        }\n        else {\n            metricMap = this.clientMetricReport.getMetricMap();\n        }\n        for (const rawMetric in rawMetricReport) {\n            if (rawMetric in metricMap) {\n                if (typeof rawMetricReport[rawMetric] === 'number') {\n                    metricReport.previousMetrics[rawMetric] = metricReport.currentMetrics[rawMetric];\n                    metricReport.currentMetrics[rawMetric] = rawMetricReport[rawMetric];\n                }\n                else if (typeof rawMetricReport[rawMetric] === 'string') {\n                    metricReport.currentStringMetrics[rawMetric] = rawMetricReport[rawMetric];\n                }\n                else {\n                    this.logger.error(`Unknown metric value type ${typeof rawMetricReport[rawMetric]} for metric ${rawMetric}`);\n                }\n            }\n        }\n    }\n    /**\n     * Converts RawMetricReport to StreamMetricReport and GlobalMetricReport and stores them as clientMetricReport.\n     */\n    processRawMetricReports(rawMetricReports) {\n        this.clientMetricReport.currentSsrcs = {};\n        const timeStamp = Date.now();\n        for (const rawMetricReport of rawMetricReports) {\n            const isStream = this.isStreamRawMetricReport(rawMetricReport.type);\n            if (isStream) {\n                const existingStreamMetricReport = this.clientMetricReport.streamMetricReports[Number(rawMetricReport.ssrc)];\n                if (!existingStreamMetricReport) {\n                    const streamMetricReport = new StreamMetricReport_1.default();\n                    streamMetricReport.mediaType = this.getMediaType(rawMetricReport);\n                    streamMetricReport.direction = this.getDirectionType(rawMetricReport);\n                    if (!this.videoStreamIndex.allStreams().empty()) {\n                        streamMetricReport.streamId = this.videoStreamIndex.streamIdForSSRC(Number(rawMetricReport.ssrc));\n                    }\n                    this.clientMetricReport.streamMetricReports[Number(rawMetricReport.ssrc)] = streamMetricReport;\n                }\n                else {\n                    // Update stream ID in case we have overridden it locally in the case of remote video\n                    // updates completed without a negotiation\n                    existingStreamMetricReport.streamId = this.videoStreamIndex.streamIdForSSRC(Number(rawMetricReport.ssrc));\n                }\n                this.clientMetricReport.currentSsrcs[Number(rawMetricReport.ssrc)] = 1;\n            }\n            this.updateMetricValues(rawMetricReport, isStream);\n        }\n        this.clientMetricReport.removeDestroyedSsrcs();\n        this.clientMetricReport.previousTimestampMs = this.clientMetricReport.currentTimestampMs;\n        this.clientMetricReport.currentTimestampMs = timeStamp;\n        this.clientMetricReport.print();\n    }\n    /**\n     *  Add stream metric dimension frames derived from metrics\n     */\n    addStreamMetricDimensionFrames(streamMetricFrame, streamMetricReport) {\n        const streamDimensionMap = this.clientMetricReport.getStreamDimensionMap();\n        for (const metricName in streamMetricReport.currentStringMetrics) {\n            if (metricName in streamDimensionMap) {\n                const dimensionFrame = SignalingProtocol_js_1.SdkStreamDimension.create();\n                dimensionFrame.type = streamDimensionMap[metricName];\n                const dimensionValue = SignalingProtocol_js_1.SdkDimensionValue.create();\n                dimensionValue.stringValue = streamMetricReport.currentStringMetrics[metricName];\n                dimensionFrame.value = dimensionValue;\n                streamMetricFrame.dimensions.push(dimensionFrame);\n            }\n        }\n    }\n    /**\n     * Packages a metric into the MetricFrame.\n     */\n    addMetricFrame(metricName, clientMetricFrame, metricSpec, ssrc) {\n        const type = metricSpec.type;\n        const transform = metricSpec.transform;\n        const sourceMetric = metricSpec.source;\n        const streamMetricFramesLength = clientMetricFrame.streamMetricFrames.length;\n        const latestStreamMetricFrame = clientMetricFrame.streamMetricFrames[streamMetricFramesLength - 1];\n        if (type) {\n            const metricFrame = SignalingProtocol_js_1.SdkMetric.create();\n            metricFrame.type = type;\n            metricFrame.value = sourceMetric\n                ? transform(sourceMetric, ssrc)\n                : transform(metricName, ssrc);\n            ssrc\n                ? latestStreamMetricFrame.metrics.push(metricFrame)\n                : clientMetricFrame.globalMetrics.push(metricFrame);\n        }\n    }\n    /**\n     * Packages metrics in GlobalMetricReport into the MetricFrame.\n     */\n    addGlobalMetricsToProtobuf(clientMetricFrame) {\n        const metricMap = this.clientMetricReport.getMetricMap();\n        for (const metricName in this.clientMetricReport.globalMetricReport.currentMetrics) {\n            this.addMetricFrame(metricName, clientMetricFrame, metricMap[metricName]);\n        }\n    }\n    /**\n     * Packages metrics in StreamMetricReport into the MetricFrame.\n     */\n    addStreamMetricsToProtobuf(clientMetricFrame) {\n        for (const ssrc in this.clientMetricReport.streamMetricReports) {\n            const streamMetricReport = this.clientMetricReport.streamMetricReports[ssrc];\n            const streamMetricFrame = SignalingProtocol_js_1.SdkStreamMetricFrame.create();\n            streamMetricFrame.streamId = streamMetricReport.streamId;\n            streamMetricFrame.metrics = [];\n            this.addStreamMetricDimensionFrames(streamMetricFrame, streamMetricReport);\n            clientMetricFrame.streamMetricFrames.push(streamMetricFrame);\n            const metricMap = this.clientMetricReport.getMetricMap(streamMetricReport.mediaType, streamMetricReport.direction);\n            for (const metricName in streamMetricReport.currentMetrics) {\n                this.addMetricFrame(metricName, clientMetricFrame, metricMap[metricName], Number(ssrc));\n            }\n            for (const metricName in streamMetricReport.currentStringMetrics) {\n                this.addMetricFrame(metricName, clientMetricFrame, metricMap[metricName], Number(ssrc));\n            }\n        }\n    }\n    /**\n     * Packages all metrics into the MetricFrame.\n     */\n    makeClientMetricProtobuf() {\n        const clientMetricFrame = SignalingProtocol_js_1.SdkClientMetricFrame.create();\n        clientMetricFrame.globalMetrics = [];\n        clientMetricFrame.streamMetricFrames = [];\n        this.addGlobalMetricsToProtobuf(clientMetricFrame);\n        this.addStreamMetricsToProtobuf(clientMetricFrame);\n        return clientMetricFrame;\n    }\n    /**\n     * Sends the MetricFrame to Tincan via ProtoBuf.\n     */\n    sendClientMetricProtobuf(clientMetricFrame) {\n        this.signalingClient.sendClientMetrics(clientMetricFrame);\n    }\n    /**\n     * Checks if the type of RawMetricReport is stream related.\n     */\n    isStreamRawMetricReport(type) {\n        return ['inbound-rtp', 'outbound-rtp', 'remote-inbound-rtp', 'remote-outbound-rtp'].includes(type);\n    }\n    /**\n     * Returns the MediaType for a RawMetricReport.\n     */\n    getMediaType(rawMetricReport) {\n        return rawMetricReport.kind === 'audio' ? ClientMetricReportMediaType_1.default.AUDIO : ClientMetricReportMediaType_1.default.VIDEO;\n    }\n    /**\n     * Returns the Direction for a RawMetricReport.\n     */\n    getDirectionType(rawMetricReport) {\n        const { type } = rawMetricReport;\n        return type === 'inbound-rtp' || type === 'remote-outbound-rtp'\n            ? ClientMetricReportDirection_1.default.DOWNSTREAM\n            : ClientMetricReportDirection_1.default.UPSTREAM;\n    }\n    /**\n     * Checks if a RawMetricReport belongs to certain types.\n     */\n    isValidStandardRawMetric(rawMetricReport) {\n        return (rawMetricReport.type === 'inbound-rtp' ||\n            rawMetricReport.type === 'outbound-rtp' ||\n            rawMetricReport.type === 'remote-inbound-rtp' ||\n            rawMetricReport.type === 'remote-outbound-rtp' ||\n            (rawMetricReport.type === 'candidate-pair' && rawMetricReport.state === 'succeeded'));\n    }\n    /**\n     * Checks if a RawMetricReport is stream related.\n     */\n    isValidSsrc(rawMetricReport) {\n        let validSsrc = true;\n        if (this.isStreamRawMetricReport(rawMetricReport.type) &&\n            this.getDirectionType(rawMetricReport) === ClientMetricReportDirection_1.default.DOWNSTREAM &&\n            this.getMediaType(rawMetricReport) === ClientMetricReportMediaType_1.default.VIDEO) {\n            validSsrc = this.videoStreamIndex.streamIdForSSRC(Number(rawMetricReport.ssrc)) > 0;\n        }\n        return validSsrc;\n    }\n    /**\n     * Checks if a RawMetricReport is valid.\n     */\n    isValidRawMetricReport(rawMetricReport) {\n        return this.isValidStandardRawMetric(rawMetricReport) && this.isValidSsrc(rawMetricReport);\n    }\n    /**\n     * Filters RawMetricReports and keeps the required parts.\n     */\n    filterRawMetricReports(rawMetricReports) {\n        const filteredRawMetricReports = [];\n        for (const rawMetricReport of rawMetricReports) {\n            if (this.isValidRawMetricReport(rawMetricReport)) {\n                filteredRawMetricReports.push(rawMetricReport);\n            }\n        }\n        return filteredRawMetricReports;\n    }\n    /**\n     * Performs a series operation on RawMetricReport.\n     */\n    handleRawMetricReports(rawMetricReports) {\n        const filteredRawMetricReports = this.filterRawMetricReports(rawMetricReports);\n        this.logger.debug(() => {\n            return `Filtered raw metrics : ${JSON.stringify(filteredRawMetricReports)}`;\n        });\n        this.processRawMetricReports(filteredRawMetricReports);\n        const clientMetricFrame = this.makeClientMetricProtobuf();\n        this.sendClientMetricProtobuf(clientMetricFrame);\n        this.audioVideoController.forEachObserver(observer => {\n            Types_1.Maybe.of(observer.metricsDidReceive).map(f => f.bind(observer)(this.clientMetricReport.clone()));\n        });\n    }\n    /**\n     * Gets raw WebRTC metrics.\n     */\n    getStatsWrapper() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.audioVideoController.rtcPeerConnection) {\n                return;\n            }\n            const rawMetricReports = [];\n            // @ts-ignore\n            try {\n                const report = yield this.audioVideoController.rtcPeerConnection.getStats();\n                this.clientMetricReport.rtcStatsReport = report;\n                report.forEach((item) => {\n                    rawMetricReports.push(item);\n                });\n                this.handleRawMetricReports(rawMetricReports);\n            }\n            catch (error) {\n                this.logger.error(error.message);\n            }\n        });\n    }\n}\nexports.default = StatsCollector;\nStatsCollector.INTERVAL_MS = 1000;\nStatsCollector.CLIENT_TYPE = 'amazon-chime-sdk-js';\n//# sourceMappingURL=StatsCollector.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MeetingSessionStatusCode_1 = require(\"../meetingsession/MeetingSessionStatusCode\");\nconst SDP_1 = require(\"../sdp/SDP\");\nconst BaseTask_1 = require(\"./BaseTask\");\n/*\n * [[FinishGatheringICECandidatesTask]] add ice-candidate event handler on peer connection to\n * collect ice candidates and wait for peer connection ice gathering state to complete\n */\nclass FinishGatheringICECandidatesTask extends BaseTask_1.default {\n    constructor(context, chromeVpnTimeoutMs = FinishGatheringICECandidatesTask.CHROME_VPN_TIMEOUT_MS) {\n        super(context.logger);\n        this.context = context;\n        this.chromeVpnTimeoutMs = chromeVpnTimeoutMs;\n        this.taskName = 'FinishGatheringICECandidatesTask';\n    }\n    removeEventListener() {\n        if (this.context.peer) {\n            this.context.peer.removeEventListener('icecandidate', this.context.iceCandidateHandler);\n            if (!this.context.turnCredentials) {\n                this.context.peer.removeEventListener('icegatheringstatechange', this.context.iceGatheringStateEventHandler);\n            }\n        }\n    }\n    cancel() {\n        let error;\n        // TODO: Remove when the Chrome VPN reconnect bug is fixed.\n        // In Chrome, SDK may fail to establish TURN session after VPN reconnect.\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=9097\n        if (this.context.browserBehavior.requiresIceCandidateGatheringTimeoutWorkaround()) {\n            if (this.chromeVpnTimeoutMs < this.context.meetingSessionConfiguration.connectionTimeoutMs) {\n                const duration = Date.now() - this.startTimestampMs;\n                if (duration > this.chromeVpnTimeoutMs) {\n                    error = new Error(`canceling ${this.name()} due to the meeting status code: ${MeetingSessionStatusCode_1.default.ICEGatheringTimeoutWorkaround}`);\n                }\n            }\n        }\n        // Just in case. The baseCancel behavior should prevent this.\n        /* istanbul ignore else */\n        if (this.cancelPromise) {\n            error = error || new Error(`canceling ${this.name()}`);\n            this.cancelPromise(error);\n            delete this.cancelPromise;\n        }\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.context.peer) {\n                this.logAndThrow(`session does not have peer connection; bypass ice gathering`);\n            }\n            if (this.context.browserBehavior.requiresCheckForSdpConnectionAttributes()) {\n                if (new SDP_1.default(this.context.peer.localDescription.sdp).hasCandidatesForAllMLines()) {\n                    this.context.logger.info(`ice gathering already complete; bypass gathering, current local description ${this.context.peer.localDescription.sdp}`);\n                    return;\n                }\n            }\n            else {\n                this.context.logger.info(`iOS device does not require checking for connection attributes in SDP, current local description ${this.context.peer.localDescription.sdp}`);\n            }\n            /*\n             * To bypass waiting for events, it is required that \"icegatheringstate\" to be complete and sdp to have candidate\n             * For Firefox, it takes long for iceGatheringState === 'complete'\n             * Ref: https://github.com/aws/amazon-chime-sdk-js/issues/609\n             */\n            if ((this.context.browserBehavior.hasFirefoxWebRTC() ||\n                this.context.peer.iceGatheringState === 'complete') &&\n                new SDP_1.default(this.context.peer.localDescription.sdp).hasCandidates()) {\n                this.context.logger.info('ice gathering state is complete and candidates are in SDP; bypass gathering');\n                return;\n            }\n            try {\n                yield new Promise((resolve, reject) => {\n                    this.cancelPromise = (error) => {\n                        this.removeEventListener();\n                        reject(error);\n                    };\n                    if (!this.context.turnCredentials) {\n                        // if one day, we found a case where a FinishGatheringICECandidate did not resolve but ice gathering state is complete and SDP answer has ice candidates\n                        // we may need to enable this\n                        this.context.iceGatheringStateEventHandler = () => {\n                            if (this.context.peer.iceGatheringState === 'complete') {\n                                this.removeEventListener();\n                                resolve();\n                                delete this.cancelPromise;\n                                return;\n                            }\n                        };\n                        this.context.peer.addEventListener('icegatheringstatechange', this.context.iceGatheringStateEventHandler);\n                    }\n                    this.context.iceCandidateHandler = (event) => {\n                        this.context.logger.info(`ice candidate: ${event.candidate ? event.candidate.candidate : '(null)'} state: ${this.context.peer.iceGatheringState}`);\n                        // Ice candidate arrives, do not need to wait anymore.\n                        // https://webrtcglossary.com/trickle-ice/\n                        if (event.candidate) {\n                            if (SDP_1.default.isRTPCandidate(event.candidate.candidate)) {\n                                this.context.iceCandidates.push(event.candidate);\n                            }\n                            // Could there be a case the candidate is not written to SDP ?\n                            if (this.context.turnCredentials && this.context.iceCandidates.length >= 1) {\n                                this.context.logger.info('gathered at least one relay candidate');\n                                this.removeEventListener();\n                                resolve();\n                                delete this.cancelPromise;\n                                return;\n                            }\n                        }\n                        // Ice candidate gathering is complete, additional barrier to make sure sdp contain an ice candidate.\n                        // TODO: Could there be a race where iceGatheringState is flipped after this task is run ? This could only be handled if ice state is monitored persistently.\n                        if (this.context.peer.iceGatheringState === 'complete') {\n                            this.context.logger.info('done gathering ice candidates');\n                            this.removeEventListener();\n                            if (!new SDP_1.default(this.context.peer.localDescription.sdp).hasCandidates() ||\n                                this.context.iceCandidates.length === 0) {\n                                reject(new Error('no ice candidates were gathered'));\n                                delete this.cancelPromise;\n                            }\n                            else {\n                                resolve();\n                                delete this.cancelPromise;\n                            }\n                        }\n                    };\n                    // SDK does not catch candidate itself and send to sever. Rather, WebRTC handles candidate events and writes candidate to SDP.\n                    this.context.peer.addEventListener('icecandidate', this.context.iceCandidateHandler);\n                    this.startTimestampMs = Date.now();\n                });\n            }\n            catch (error) {\n                throw error;\n            }\n            finally {\n                /* istanbul ignore else */\n                if (this.startTimestampMs) {\n                    this.context.iceGatheringDurationMs = Math.round(Date.now() - this.startTimestampMs);\n                }\n            }\n        });\n    }\n}\nexports.default = FinishGatheringICECandidatesTask;\nFinishGatheringICECandidatesTask.CHROME_VPN_TIMEOUT_MS = 5000;\n//# sourceMappingURL=FinishGatheringICECandidatesTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[MeetingSessionTURNCredentials]] contains TURN credentials from the TURN server.\n */\nclass MeetingSessionTURNCredentials {\n    constructor() {\n        this.username = null;\n        this.password = null;\n        this.ttl = null;\n        this.uris = null;\n    }\n}\nexports.default = MeetingSessionTURNCredentials;\n//# sourceMappingURL=MeetingSessionTURNCredentials.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ServerSideNetworkAdaption_1 = require(\"./ServerSideNetworkAdaption\");\n/**\n * [[SignalingClientJoin]] contains settings for the Join SignalFrame.\n */\nclass SignalingClientJoin {\n    /**\n     * Initializes a SignalingClientJoin with the given properties.\n     * @param applicationMetadata [[ApplicationMetadata]].\n     */\n    constructor(applicationMetadata) {\n        this.applicationMetadata = applicationMetadata;\n        this.serverSideNetworkAdaption = ServerSideNetworkAdaption_1.default.Default;\n        this.supportedServerSideNetworkAdaptions = [];\n        this.disablePeriodicKeyframeRequestOnContentSender = false;\n    }\n}\nexports.default = SignalingClientJoin;\n//# sourceMappingURL=SignalingClientJoin.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MeetingSessionStatus_1 = require(\"../meetingsession/MeetingSessionStatus\");\nconst MeetingSessionStatusCode_1 = require(\"../meetingsession/MeetingSessionStatusCode\");\nconst MeetingSessionTURNCredentials_1 = require(\"../meetingsession/MeetingSessionTURNCredentials\");\nconst ServerSideNetworkAdaption_1 = require(\"../signalingclient/ServerSideNetworkAdaption\");\nconst SignalingClientEventType_1 = require(\"../signalingclient/SignalingClientEventType\");\nconst SignalingClientJoin_1 = require(\"../signalingclient/SignalingClientJoin\");\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nconst BaseTask_1 = require(\"./BaseTask\");\n/*\n * [[JoinAndReceiveIndexTask]] sends the JoinFrame and asynchronously waits for the server to send the [[SdkIndexFrame]].\n * It should run with the [[TimeoutTask]] as the subtask so it can get canceled after timeout.\n */\nclass JoinAndReceiveIndexTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'JoinAndReceiveIndexTask';\n        this.taskCanceler = null;\n    }\n    cancel() {\n        if (this.taskCanceler) {\n            this.taskCanceler.cancel();\n            this.taskCanceler = null;\n        }\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const indexFrame = yield new Promise((resolve, reject) => {\n                const context = this.context;\n                context.turnCredentials = null;\n                class IndexFrameInterceptor {\n                    constructor(signalingClient) {\n                        this.signalingClient = signalingClient;\n                    }\n                    cancel() {\n                        this.signalingClient.removeObserver(this);\n                        reject(new Error(`JoinAndReceiveIndexTask got canceled while waiting for SdkIndexFrame`));\n                    }\n                    handleSignalingClientEvent(event) {\n                        if (event.type === SignalingClientEventType_1.default.WebSocketClosed) {\n                            let message = `The signaling connection was closed with code ${event.closeCode} and reason: ${event.closeReason}`;\n                            context.logger.warn(message);\n                            let statusCode = MeetingSessionStatusCode_1.default.SignalingBadRequest;\n                            if (event.closeCode === 4410) {\n                                message = 'The meeting already ended.';\n                                context.logger.warn(message);\n                                statusCode = MeetingSessionStatusCode_1.default.MeetingEnded;\n                            }\n                            else if (event.closeCode >= 4500 && event.closeCode < 4600) {\n                                statusCode = MeetingSessionStatusCode_1.default.SignalingInternalServerError;\n                            }\n                            context.audioVideoController.handleMeetingSessionStatus(new MeetingSessionStatus_1.default(statusCode), new Error(message));\n                            return;\n                        }\n                        if (event.type !== SignalingClientEventType_1.default.ReceivedSignalFrame) {\n                            return;\n                        }\n                        if (event.message.type === SignalingProtocol_js_1.SdkSignalFrame.Type.JOIN_ACK) {\n                            // @ts-ignore: force cast to SdkJoinAckFrame\n                            const joinAckFrame = event.message.joinack;\n                            if (joinAckFrame && joinAckFrame.videoSubscriptionLimit) {\n                                context.videoSubscriptionLimit = joinAckFrame.videoSubscriptionLimit;\n                            }\n                            context.serverSupportsCompression = joinAckFrame === null || joinAckFrame === void 0 ? void 0 : joinAckFrame.wantsCompressedSdp;\n                            if ((joinAckFrame === null || joinAckFrame === void 0 ? void 0 : joinAckFrame.defaultServerSideNetworkAdaption) !== undefined &&\n                                joinAckFrame.defaultServerSideNetworkAdaption !== ServerSideNetworkAdaption_1.default.Default &&\n                                context.videoDownlinkBandwidthPolicy.setServerSideNetworkAdaption !== undefined) {\n                                const defaultServerSideNetworkAdaption = joinAckFrame.defaultServerSideNetworkAdaption;\n                                context.logger.info(`Overriding server side network adaption value to ${defaultServerSideNetworkAdaption}`);\n                                context.videoDownlinkBandwidthPolicy.setServerSideNetworkAdaption(ServerSideNetworkAdaption_1.convertServerSideNetworkAdaptionEnumFromSignaled(defaultServerSideNetworkAdaption));\n                            }\n                            if (joinAckFrame && joinAckFrame.turnCredentials) {\n                                context.turnCredentials = new MeetingSessionTURNCredentials_1.default();\n                                context.turnCredentials.username = joinAckFrame.turnCredentials.username;\n                                context.turnCredentials.password = joinAckFrame.turnCredentials.password;\n                                context.turnCredentials.ttl = joinAckFrame.turnCredentials.ttl;\n                                context.turnCredentials.uris = joinAckFrame.turnCredentials.uris\n                                    .map((uri) => {\n                                    return context.meetingSessionConfiguration.urls.urlRewriter(uri);\n                                })\n                                    .filter((uri) => {\n                                    return !!uri;\n                                });\n                            }\n                            else {\n                                context.logger.error('missing TURN credentials in JoinAckFrame');\n                            }\n                            return;\n                        }\n                        if (event.message.type !== SignalingProtocol_js_1.SdkSignalFrame.Type.INDEX) {\n                            return;\n                        }\n                        this.signalingClient.removeObserver(this);\n                        // @ts-ignore: force cast to SdkIndexFrame\n                        const indexFrame = event.message.index;\n                        resolve(indexFrame);\n                    }\n                }\n                const interceptor = new IndexFrameInterceptor(this.context.signalingClient);\n                this.context.signalingClient.registerObserver(interceptor);\n                this.taskCanceler = interceptor;\n                // reset SDP compression state\n                this.context.previousSdpAnswerAsString = '';\n                this.context.previousSdpOffer = null;\n                this.context.serverSupportsCompression = false;\n                const join = new SignalingClientJoin_1.default(this.context.meetingSessionConfiguration.applicationMetadata);\n                if (this.context.videoDownlinkBandwidthPolicy.getServerSideNetworkAdaption !== undefined &&\n                    this.context.videoDownlinkBandwidthPolicy.supportedServerSideNetworkAdaptions !== undefined) {\n                    join.serverSideNetworkAdaption = this.context.videoDownlinkBandwidthPolicy.getServerSideNetworkAdaption();\n                    join.supportedServerSideNetworkAdaptions = this.context.videoDownlinkBandwidthPolicy.supportedServerSideNetworkAdaptions();\n                }\n                join.disablePeriodicKeyframeRequestOnContentSender = this.context.meetingSessionConfiguration.disablePeriodicKeyframeRequestOnContentSender;\n                this.context.signalingClient.join(join);\n            });\n            this.context.logger.info(`received first index ${JSON.stringify(indexFrame)}`);\n            // We currently don't bother ingesting this into the same places as `ReceiveVideoStreamIndexTask` as we synchronously attempt a first subscribe\n            // after this task completes and the state isn't quite in the right place to make it work without some refactoring. However that\n            // means that we will always have an initial subscribe without any received videos.\n            this.context.indexFrame = indexFrame;\n        });\n    }\n}\nexports.default = JoinAndReceiveIndexTask;\n//# sourceMappingURL=JoinAndReceiveIndexTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SignalingClientEventType_1 = require(\"../signalingclient/SignalingClientEventType\");\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nconst BaseTask_1 = require(\"./BaseTask\");\n/**\n * [[LeaveAndReceiveLeaveAckTask]] sends a Leave frame and waits for a LeaveAck.\n */\nclass LeaveAndReceiveLeaveAckTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'LeaveAndReceiveLeaveAckTask';\n        this.taskCanceler = null;\n    }\n    cancel() {\n        if (this.taskCanceler) {\n            this.taskCanceler.cancel();\n            this.taskCanceler = null;\n        }\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.context.signalingClient.ready()) {\n                this.context.signalingClient.leave();\n                this.context.logger.info('sent leave');\n                yield this.receiveLeaveAck();\n            }\n        });\n    }\n    receiveLeaveAck() {\n        return new Promise((resolve, reject) => {\n            class Interceptor {\n                constructor(signalingClient, logger) {\n                    this.signalingClient = signalingClient;\n                    this.logger = logger;\n                }\n                cancel() {\n                    this.signalingClient.removeObserver(this);\n                    reject(new Error(`LeaveAndReceiveLeaveAckTask got canceled while waiting for IndexFrame`));\n                }\n                handleSignalingClientEvent(event) {\n                    if (event.isConnectionTerminated()) {\n                        this.signalingClient.removeObserver(this);\n                        this.logger.info('LeaveAndReceiveLeaveAckTask connection terminated');\n                        // don't treat this as an error\n                        resolve();\n                        return;\n                    }\n                    if (event.type === SignalingClientEventType_1.default.ReceivedSignalFrame &&\n                        event.message.type === SignalingProtocol_js_1.SdkSignalFrame.Type.LEAVE_ACK) {\n                        this.signalingClient.removeObserver(this);\n                        this.logger.info('got leave ack');\n                        resolve();\n                    }\n                }\n            }\n            const interceptor = new Interceptor(this.context.signalingClient, this.context.logger);\n            this.taskCanceler = interceptor;\n            this.context.signalingClient.registerObserver(interceptor);\n        });\n    }\n}\nexports.default = LeaveAndReceiveLeaveAckTask;\n//# sourceMappingURL=LeaveAndReceiveLeaveAckTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SignalingClientEventType_1 = require(\"../signalingclient/SignalingClientEventType\");\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nconst BaseTask_1 = require(\"./BaseTask\");\nclass ListenForVolumeIndicatorsTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'ListenForVolumeIndicatorsTask';\n        this.realtimeMuteAndUnmuteHandler = (muted) => {\n            this.context.signalingClient.mute(muted);\n        };\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.context.removableObservers.push(this);\n            this.context.signalingClient.registerObserver(this);\n            this.context.realtimeController.realtimeSubscribeToMuteAndUnmuteLocalAudio(this.realtimeMuteAndUnmuteHandler);\n        });\n    }\n    removeObserver() {\n        this.context.realtimeController.realtimeUnsubscribeToMuteAndUnmuteLocalAudio(this.realtimeMuteAndUnmuteHandler);\n        this.context.signalingClient.removeObserver(this);\n    }\n    handleSignalingClientEvent(event) {\n        if (event.type !== SignalingClientEventType_1.default.ReceivedSignalFrame) {\n            return;\n        }\n        if (event.message.type === SignalingProtocol_js_1.SdkSignalFrame.Type.AUDIO_STREAM_ID_INFO) {\n            // @ts-ignore\n            const audioStreamIdInfo = event.message.audioStreamIdInfo;\n            this.context.volumeIndicatorAdapter.sendRealtimeUpdatesForAudioStreamIdInfo(audioStreamIdInfo);\n        }\n        else if (event.message.type === SignalingProtocol_js_1.SdkSignalFrame.Type.AUDIO_METADATA) {\n            // @ts-ignore\n            const audioMetadata = event.message.audioMetadata;\n            this.context.volumeIndicatorAdapter.sendRealtimeUpdatesForAudioMetadata(audioMetadata);\n        }\n    }\n}\nexports.default = ListenForVolumeIndicatorsTask;\n//# sourceMappingURL=ListenForVolumeIndicatorsTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BaseConnectionHealthPolicy_1 = require(\"./BaseConnectionHealthPolicy\");\nclass ReconnectionHealthPolicy extends BaseConnectionHealthPolicy_1.default {\n    constructor(logger, configuration, data) {\n        super(configuration, data, 'Reconnection Health');\n        this.logger = logger;\n        this.audioDelayPointsOverMaximum = 0;\n        ReconnectionHealthPolicy.CONNECTION_UNHEALTHY_THRESHOLD =\n            configuration.connectionUnhealthyThreshold;\n        ReconnectionHealthPolicy.CONNECTION_WAIT_TIME_MS = configuration.connectionWaitTimeMs;\n        ReconnectionHealthPolicy.MISSED_PONGS_THRESHOLD = configuration.missedPongsUpperThreshold;\n        ReconnectionHealthPolicy.MAXIMUM_AUDIO_DELAY_MS = configuration.maximumAudioDelayMs;\n        ReconnectionHealthPolicy.MAXIMUM_AUDIO_DELAY_DATA_POINTS =\n            configuration.maximumAudioDelayDataPoints;\n    }\n    health() {\n        const connectionStartedRecently = this.currentData.isConnectionStartRecent(ReconnectionHealthPolicy.CONNECTION_WAIT_TIME_MS);\n        if (connectionStartedRecently) {\n            return 1;\n        }\n        const noPacketsReceivedRecently = this.currentData.consecutiveStatsWithNoPackets >=\n            ReconnectionHealthPolicy.CONNECTION_UNHEALTHY_THRESHOLD;\n        const missedPongsRecently = this.currentData.consecutiveMissedPongs >= ReconnectionHealthPolicy.MISSED_PONGS_THRESHOLD;\n        if (this.currentData.audioSpeakerDelayMs > ReconnectionHealthPolicy.MAXIMUM_AUDIO_DELAY_MS) {\n            this.audioDelayPointsOverMaximum += 1;\n        }\n        else {\n            this.audioDelayPointsOverMaximum = 0;\n        }\n        const hasBadAudioDelay = this.audioDelayPointsOverMaximum > ReconnectionHealthPolicy.MAXIMUM_AUDIO_DELAY_DATA_POINTS;\n        if (hasBadAudioDelay) {\n            this.audioDelayPointsOverMaximum = 0;\n        }\n        const needsReconnect = noPacketsReceivedRecently || missedPongsRecently || hasBadAudioDelay;\n        if (needsReconnect) {\n            this.logger.warn(`reconnection recommended due to: no packets received: ${noPacketsReceivedRecently}, missed pongs: ${missedPongsRecently}, bad audio delay: ${hasBadAudioDelay}`);\n            return 0;\n        }\n        return 1;\n    }\n}\nexports.default = ReconnectionHealthPolicy;\n//# sourceMappingURL=ReconnectionHealthPolicy.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BaseConnectionHealthPolicy_1 = require(\"./BaseConnectionHealthPolicy\");\nclass SendingAudioFailureConnectionHealthPolicy extends BaseConnectionHealthPolicy_1.default {\n    constructor(logger, configuration, data) {\n        super(configuration, data, 'Sending Audio Health');\n        this.logger = logger;\n        this.sendingAudioFailureSamplesToConsider =\n            configuration.sendingAudioFailureSamplesToConsider > 0\n                ? configuration.sendingAudioFailureSamplesToConsider\n                : 1;\n        this.sendingAudioFailureInitialWaitTimeMs = configuration.sendingAudioFailureInitialWaitTimeMs;\n        this.maximumTimesToWarn = configuration.maximumTimesToWarn;\n        this.coolDownTimeMs = configuration.cooldownTimeMs;\n        this.lastWarnTimestampMs = 0;\n        this.warnCount = 0;\n    }\n    isSendingAudioUnhealthy() {\n        const hasEnoughTimeElapsedToEvaluateStatus = !this.currentData.isConnectionStartRecent(this.sendingAudioFailureInitialWaitTimeMs);\n        const areAudioPacketsNotBeingSent = this.currentData.consecutiveStatsWithNoAudioPacketsSent >=\n            this.sendingAudioFailureSamplesToConsider;\n        return hasEnoughTimeElapsedToEvaluateStatus && areAudioPacketsNotBeingSent;\n    }\n    health() {\n        if (this.isSendingAudioUnhealthy()) {\n            const didWarnRecently = Date.now() - this.lastWarnTimestampMs < this.coolDownTimeMs;\n            if (this.currentHealth > this.minimumHealth() && !didWarnRecently) {\n                this.logger.warn(`Sending Audio is unhealthy for ${this.sendingAudioFailureSamplesToConsider} seconds consecutively.`);\n                this.warnCount++;\n                if (this.warnCount > this.maximumTimesToWarn) {\n                    this.logger.warn('SendingAudioFailure health policy maximum warnings breached. Falling back to reporting healthy.');\n                    return this.maximumHealth();\n                }\n                this.lastWarnTimestampMs = Date.now();\n                return this.minimumHealth();\n            }\n            else {\n                return this.currentHealth;\n            }\n        }\n        return this.maximumHealth();\n    }\n}\nexports.default = SendingAudioFailureConnectionHealthPolicy;\n//# sourceMappingURL=SendingAudioFailureConnectionHealthPolicy.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BaseConnectionHealthPolicy_1 = require(\"./BaseConnectionHealthPolicy\");\nclass UnusableAudioWarningConnectionHealthPolicy extends BaseConnectionHealthPolicy_1.default {\n    constructor(configuration, data) {\n        super(configuration, data, 'Unusable Audio Warning');\n        this.coolDownTimeMs = configuration.cooldownTimeMs;\n        this.pastSamplesToConsider = configuration.pastSamplesToConsider;\n        this.fractionalLoss = configuration.fractionalLoss;\n        this.packetsExpected = configuration.packetsExpected;\n        this.maximumTimesToWarn = configuration.maximumTimesToWarn;\n        this.lastWarnTimestampMs = 0;\n        this.warnCount = 0;\n    }\n    calculateFractionalLoss() {\n        if (this.currentData.packetsReceivedInLastMinute.length < this.pastSamplesToConsider) {\n            return 0;\n        }\n        const samplesToConsider = this.pastSamplesToConsider;\n        const totalPacketsExpected = samplesToConsider * this.packetsExpected;\n        let totalPacketsReceived = 0;\n        for (let i = 0; i < samplesToConsider; i++) {\n            totalPacketsReceived += this.currentData.packetsReceivedInLastMinute[i];\n        }\n        return Math.min(Math.max(1 - totalPacketsReceived / totalPacketsExpected, 0), 1);\n    }\n    health() {\n        const warnedRecently = Date.now() - this.lastWarnTimestampMs < this.coolDownTimeMs;\n        if (warnedRecently) {\n            return this.currentHealth;\n        }\n        const hasHadHighPacketLoss = this.calculateFractionalLoss() >= this.fractionalLoss;\n        if (hasHadHighPacketLoss) {\n            if (this.currentHealth !== 0) {\n                this.lastWarnTimestampMs = Date.now();\n                this.warnCount++;\n                if (this.warnCount > this.maximumTimesToWarn) {\n                    return 1;\n                }\n            }\n            return 0;\n        }\n        return 1;\n    }\n}\nexports.default = UnusableAudioWarningConnectionHealthPolicy;\n//# sourceMappingURL=UnusableAudioWarningConnectionHealthPolicy.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ClientMetricReportDirection_1 = require(\"../clientmetricreport/ClientMetricReportDirection\");\nconst ClientMetricReportMediaType_1 = require(\"../clientmetricreport/ClientMetricReportMediaType\");\nconst ClientVideoStreamReceivingReport_1 = require(\"../clientmetricreport/ClientVideoStreamReceivingReport\");\nconst ReconnectionHealthPolicy_1 = require(\"../connectionhealthpolicy/ReconnectionHealthPolicy\");\nconst SendingAudioFailureConnectionHealthPolicy_1 = require(\"../connectionhealthpolicy/SendingAudioFailureConnectionHealthPolicy\");\nconst UnusableAudioWarningConnectionHealthPolicy_1 = require(\"../connectionhealthpolicy/UnusableAudioWarningConnectionHealthPolicy\");\nconst MeetingSessionStatus_1 = require(\"../meetingsession/MeetingSessionStatus\");\nconst MeetingSessionStatusCode_1 = require(\"../meetingsession/MeetingSessionStatusCode\");\nconst SignalingClientEventType_1 = require(\"../signalingclient/SignalingClientEventType\");\nconst SignalingProtocol_1 = require(\"../signalingprotocol/SignalingProtocol\");\nconst AudioLogEvent_1 = require(\"../statscollector/AudioLogEvent\");\nconst Types_1 = require(\"../utils/Types\");\nconst BaseTask_1 = require(\"./BaseTask\");\n/*\n * [[MonitorTask]] monitors connections using SignalingAndMetricsConnectionMonitor.\n */\nclass MonitorTask extends BaseTask_1.default {\n    constructor(context, connectionHealthPolicyConfiguration, initialConnectionHealthData) {\n        super(context.logger);\n        this.context = context;\n        this.initialConnectionHealthData = initialConnectionHealthData;\n        this.taskName = 'MonitorTask';\n        this.prevSignalStrength = 1;\n        this.currentVideoDownlinkBandwidthEstimationKbps = 10000;\n        this.currentAvailableStreamAvgBitrates = null;\n        this.hasSignalingError = false;\n        this.presenceHandlerCalled = false;\n        // See comment above invocation of `pauseResubscribeCheck` in `DefaultAudioVideoController`\n        // for explanation.\n        this.isResubscribeCheckPaused = false;\n        this.pendingMetricsReport = undefined;\n        this.checkAndSendWeakSignalEvent = (signalStrength) => {\n            const isCurrentSignalBad = signalStrength < 1;\n            const isPrevSignalBad = this.prevSignalStrength < 1;\n            const signalStrengthEventType = isCurrentSignalBad\n                ? !isPrevSignalBad\n                    ? AudioLogEvent_1.default.RedmicStartLoss\n                    : null\n                : isPrevSignalBad\n                    ? AudioLogEvent_1.default.RedmicEndLoss\n                    : null;\n            if (signalStrengthEventType) {\n                this.context.statsCollector.logAudioEvent(signalStrengthEventType);\n            }\n            this.prevSignalStrength = signalStrength;\n        };\n        this.realtimeFatalErrorCallback = (error) => {\n            this.logger.error(`realtime error: ${error}: ${error.stack}`);\n            this.context.audioVideoController.handleMeetingSessionStatus(new MeetingSessionStatus_1.default(MeetingSessionStatusCode_1.default.RealtimeApiFailed), error);\n        };\n        this.realtimeAttendeeIdPresenceHandler = (presentAttendeeId, present) => {\n            var _a;\n            const attendeeId = this.context.meetingSessionConfiguration.credentials.attendeeId;\n            this.logger.info(`attendeePresenceReceived: ${attendeeId}`);\n            if (attendeeId === presentAttendeeId && present && !this.presenceHandlerCalled) {\n                this.presenceHandlerCalled = true;\n                this.context.attendeePresenceDurationMs = Date.now() - this.context.startAudioVideoTimestamp;\n                (_a = this.context.eventController) === null || _a === void 0 ? void 0 : _a.publishEvent('attendeePresenceReceived', {\n                    attendeePresenceDurationMs: this.context.attendeePresenceDurationMs,\n                });\n            }\n        };\n        this.generateBaseAudioVideoEventAttributes = () => {\n            const { signalingOpenDurationMs, startTimeMs, iceGatheringDurationMs, attendeePresenceDurationMs, meetingStartDurationMs, } = this.context;\n            return {\n                meetingDurationMs: startTimeMs === null ? 0 : Math.round(Date.now() - startTimeMs),\n                signalingOpenDurationMs,\n                iceGatheringDurationMs,\n                attendeePresenceDurationMs,\n                meetingStartDurationMs,\n            };\n        };\n        this.generateAudioVideoEventAttributesForReceivingAudioDropped = () => {\n            const baseAttributes = this.generateBaseAudioVideoEventAttributes();\n            return Object.assign(Object.assign({}, baseAttributes), { maxVideoTileCount: this.context.maxVideoTileCount, poorConnectionCount: this.context.poorConnectionCount });\n        };\n        this.reconnectionHealthPolicy = new ReconnectionHealthPolicy_1.default(context.logger, Object.assign({}, connectionHealthPolicyConfiguration), this.initialConnectionHealthData.clone());\n        this.unusableAudioWarningHealthPolicy = new UnusableAudioWarningConnectionHealthPolicy_1.default(Object.assign({}, connectionHealthPolicyConfiguration), this.initialConnectionHealthData.clone());\n        this.sendingAudioFailureHealthPolicy = new SendingAudioFailureConnectionHealthPolicy_1.default(context.logger, Object.assign({}, connectionHealthPolicyConfiguration), this.initialConnectionHealthData.clone());\n    }\n    removeObserver() {\n        this.context.audioVideoController.removeObserver(this);\n        this.context.realtimeController.realtimeUnsubscribeToFatalError(this.realtimeFatalErrorCallback);\n        this.context.realtimeController.realtimeUnsubscribeToLocalSignalStrengthChange(this.checkAndSendWeakSignalEvent);\n        this.context.realtimeController.realtimeUnsubscribeToAttendeeIdPresence(this.realtimeAttendeeIdPresenceHandler);\n        this.context.signalingClient.removeObserver(this);\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.context.removableObservers.push(this);\n            this.context.audioVideoController.addObserver(this);\n            this.context.realtimeController.realtimeSubscribeToFatalError(this.realtimeFatalErrorCallback);\n            this.context.realtimeController.realtimeSubscribeToLocalSignalStrengthChange(this.checkAndSendWeakSignalEvent);\n            this.context.realtimeController.realtimeSubscribeToAttendeeIdPresence(this.realtimeAttendeeIdPresenceHandler);\n            this.context.connectionMonitor.start();\n            this.context.statsCollector.start(this.context.signalingClient, this.context.videoStreamIndex);\n            this.context.signalingClient.registerObserver(this);\n        });\n    }\n    pauseResubscribeCheck() {\n        this.isResubscribeCheckPaused = true;\n    }\n    resumeResubscribeCheck() {\n        if (!this.isResubscribeCheckPaused) {\n            // Do not recheck subcribe if it wasn't paused to begin with.\n            return;\n        }\n        this.isResubscribeCheckPaused = false;\n        if (this.pendingMetricsReport) {\n            this.context.logger.info('Resuming resubscribe check with pending metrics report');\n            if (this.checkResubscribe(this.pendingMetricsReport)) {\n                this.context.audioVideoController.update({ needsRenegotiation: false });\n            }\n        }\n    }\n    videoTileDidUpdate(_tileState) {\n        this.context.maxVideoTileCount = Math.max(this.context.maxVideoTileCount, this.context.videoTileController.getAllVideoTiles().length);\n    }\n    checkResubscribe(clientMetricReport) {\n        if (this.isResubscribeCheckPaused) {\n            this.context.logger.info('Resubscribe check is paused, setting incoming client metric report as pending');\n            this.pendingMetricsReport = clientMetricReport;\n            return;\n        }\n        else {\n            this.pendingMetricsReport = undefined;\n        }\n        const metricReport = clientMetricReport.getObservableMetrics();\n        if (!metricReport) {\n            return false;\n        }\n        const availableSendBandwidth = metricReport.availableOutgoingBitrate;\n        const nackCountPerSecond = metricReport.nackCountReceivedPerSecond;\n        let needResubscribe = false;\n        this.context.videoDownlinkBandwidthPolicy.updateMetrics(clientMetricReport);\n        const resubscribeForDownlink = this.context.videoDownlinkBandwidthPolicy.wantsResubscribe();\n        needResubscribe = needResubscribe || resubscribeForDownlink;\n        if (resubscribeForDownlink) {\n            const videoSubscriptionIdSet = this.context.videoDownlinkBandwidthPolicy.chooseSubscriptions();\n            // Same logic as in `ReceiveVideoStreamIndexTask`, immediately truncating rather then truncating on subscribe\n            // avoids any issues with components (e.g. transceiver controller) along the way.\n            this.context.videosToReceive = videoSubscriptionIdSet.truncate(this.context.videoSubscriptionLimit);\n            if (videoSubscriptionIdSet.size() > this.context.videosToReceive.size()) {\n                this.logger.warn(`Video receive limit exceeded. Limiting the videos to ${this.context.videosToReceive.size()}. Please consider using AllHighestVideoBandwidthPolicy or VideoPriorityBasedPolicy along with chooseRemoteVideoSources api to select the video sources to be displayed.`);\n            }\n            this.logger.info(`trigger resubscribe for down=${resubscribeForDownlink}; videosToReceive=[${this.context.videosToReceive.array()}]`);\n        }\n        if (this.context.videoTileController.hasStartedLocalVideoTile()) {\n            this.context.videoUplinkBandwidthPolicy.updateConnectionMetric({\n                uplinkKbps: availableSendBandwidth / 1000,\n                nackCountPerSecond: nackCountPerSecond,\n            });\n            const resubscribeForUplink = this.context.videoUplinkBandwidthPolicy.wantsResubscribe();\n            needResubscribe = needResubscribe || resubscribeForUplink;\n            if (resubscribeForUplink) {\n                this.logger.info(`trigger resubscribe for up=${resubscribeForUplink}; videosToReceive=[${this.context.videosToReceive.array()}]`);\n                this.context.videoUplinkBandwidthPolicy.chooseEncodingParameters();\n                this.context.videoUplinkBandwidthPolicy.chooseMediaTrackConstraints();\n            }\n        }\n        return needResubscribe;\n    }\n    metricsDidReceive(clientMetricReport) {\n        const defaultClientMetricReport = clientMetricReport;\n        if (!defaultClientMetricReport) {\n            return;\n        }\n        if (this.checkResubscribe(clientMetricReport)) {\n            this.context.audioVideoController.update({ needsRenegotiation: false });\n        }\n        if (!this.currentAvailableStreamAvgBitrates) {\n            return;\n        }\n        const streamMetricReport = defaultClientMetricReport.streamMetricReports;\n        if (!streamMetricReport) {\n            return;\n        }\n        const metricReport = clientMetricReport.getObservableMetrics();\n        this.currentVideoDownlinkBandwidthEstimationKbps = metricReport.availableIncomingBitrate;\n        const downlinkVideoStream = new Map();\n        const videoReceivingBitrateMap = new Map();\n        // TODO: move those logic to stats collector.\n        for (const ssrc in streamMetricReport) {\n            if (streamMetricReport[ssrc].mediaType === ClientMetricReportMediaType_1.default.VIDEO &&\n                streamMetricReport[ssrc].direction === ClientMetricReportDirection_1.default.DOWNSTREAM) {\n                downlinkVideoStream.set(streamMetricReport[ssrc].streamId, streamMetricReport[ssrc]);\n            }\n        }\n        let fireCallback = false;\n        for (const bitrate of this.currentAvailableStreamAvgBitrates.bitrates) {\n            if (downlinkVideoStream.has(bitrate.sourceStreamId)) {\n                const report = downlinkVideoStream.get(bitrate.sourceStreamId);\n                const attendeeId = this.context.videoStreamIndex.attendeeIdForStreamId(bitrate.sourceStreamId);\n                if (!attendeeId) {\n                    continue;\n                }\n                const newReport = new ClientVideoStreamReceivingReport_1.default();\n                const prevBytesReceived = report.previousMetrics['bytesReceived'];\n                const currBytesReceived = report.currentMetrics['bytesReceived'];\n                if (!prevBytesReceived || !currBytesReceived) {\n                    continue;\n                }\n                const receivedBitrate = ((currBytesReceived - prevBytesReceived) * 8) / 1000;\n                newReport.expectedAverageBitrateKbps = bitrate.avgBitrateBps / 1000;\n                newReport.receivedAverageBitrateKbps = receivedBitrate;\n                newReport.attendeeId = attendeeId;\n                if (receivedBitrate <\n                    (bitrate.avgBitrateBps / 1000) * MonitorTask.DEFAULT_DOWNLINK_CALLRATE_UNDERSHOOT_FACTOR) {\n                    fireCallback = true;\n                }\n                videoReceivingBitrateMap.set(attendeeId, newReport);\n            }\n        }\n        if (fireCallback) {\n            this.logger.info(`One or more video streams are not receiving expected amounts of data ${JSON.stringify(Array.from(videoReceivingBitrateMap.values()))}`);\n        }\n    }\n    connectionHealthDidChange(connectionHealthData) {\n        if (connectionHealthData.consecutiveMissedPongs === 0) {\n            if (this.context.reconnectController) {\n                this.context.reconnectController.setLastActiveTimestampMs(Date.now());\n            }\n        }\n        this.applyHealthPolicy(this.reconnectionHealthPolicy, connectionHealthData, () => {\n            this.context.audioVideoController.handleMeetingSessionStatus(new MeetingSessionStatus_1.default(MeetingSessionStatusCode_1.default.ConnectionHealthReconnect), null);\n        });\n        this.applyHealthPolicy(this.unusableAudioWarningHealthPolicy, connectionHealthData, () => {\n            var _a;\n            this.context.poorConnectionCount += 1;\n            const attributes = this.generateAudioVideoEventAttributesForReceivingAudioDropped();\n            (_a = this.context.eventController) === null || _a === void 0 ? void 0 : _a.publishEvent('receivingAudioDropped', attributes);\n            if (this.context.videoTileController.haveVideoTilesWithStreams()) {\n                this.context.audioVideoController.forEachObserver((observer) => {\n                    Types_1.Maybe.of(observer.connectionDidSuggestStopVideo).map(f => f.bind(observer)());\n                });\n            }\n            else {\n                this.context.audioVideoController.forEachObserver((observer) => {\n                    Types_1.Maybe.of(observer.connectionDidBecomePoor).map(f => f.bind(observer)());\n                });\n            }\n        }, () => {\n            this.context.audioVideoController.forEachObserver((observer) => {\n                Types_1.Maybe.of(observer.connectionDidBecomeGood).map(f => f.bind(observer)());\n            });\n        });\n        this.applyHealthPolicy(this.sendingAudioFailureHealthPolicy, connectionHealthData, () => {\n            var _a;\n            const attributes = this.generateBaseAudioVideoEventAttributes();\n            (_a = this.context.eventController) === null || _a === void 0 ? void 0 : _a.publishEvent('sendingAudioFailed', attributes);\n        }, () => {\n            var _a;\n            const attributes = this.generateBaseAudioVideoEventAttributes();\n            (_a = this.context.eventController) === null || _a === void 0 ? void 0 : _a.publishEvent('sendingAudioRecovered', attributes);\n        });\n    }\n    applyHealthPolicy(healthPolicy, connectionHealthData, unhealthyCallback, healthyCallback) {\n        healthPolicy.update(connectionHealthData);\n        const healthValue = healthPolicy.healthIfChanged();\n        if (healthValue !== null) {\n            this.logger.info(`${healthPolicy.name} value is now ${healthValue}`);\n            if (healthValue <= healthPolicy.minimumHealth()) {\n                Types_1.Maybe.of(unhealthyCallback).map(f => f.bind(this)());\n            }\n            else {\n                Types_1.Maybe.of(healthyCallback).map(f => f.bind(this)());\n            }\n        }\n    }\n    handleBitrateFrame(bitrates) {\n        let requiredBandwidthKbps = 0;\n        this.currentAvailableStreamAvgBitrates = bitrates;\n        this.logger.debug(() => {\n            return `simulcast: bitrates from server ${JSON.stringify(bitrates)}`;\n        });\n        for (const bitrate of bitrates.bitrates) {\n            if (this.context.videosToReceive.contain(bitrate.sourceStreamId)) {\n                requiredBandwidthKbps += bitrate.avgBitrateBps;\n            }\n        }\n        requiredBandwidthKbps /= 1000;\n        if (this.currentVideoDownlinkBandwidthEstimationKbps *\n            MonitorTask.DEFAULT_DOWNLINK_CALLRATE_OVERSHOOT_FACTOR <\n            requiredBandwidthKbps) {\n            this.logger.info(`Downlink bandwidth pressure is high: estimated bandwidth ${this.currentVideoDownlinkBandwidthEstimationKbps}Kbps, required bandwidth ${requiredBandwidthKbps}Kbps`);\n        }\n    }\n    handleSignalingClientEvent(event) {\n        var _a;\n        // Don't add two or more consecutive \"signalingDropped\" states.\n        if ((event.type === SignalingClientEventType_1.default.WebSocketClosed &&\n            (event.closeCode === 4410 || (event.closeCode >= 4500 && event.closeCode < 4600))) ||\n            event.type === SignalingClientEventType_1.default.WebSocketError ||\n            event.type === SignalingClientEventType_1.default.WebSocketFailed) {\n            if (!this.hasSignalingError) {\n                const attributes = this.generateAudioVideoEventAttributesForReceivingAudioDropped();\n                (_a = this.context.eventController) === null || _a === void 0 ? void 0 : _a.publishEvent('signalingDropped', attributes);\n                this.hasSignalingError = true;\n            }\n        }\n        else if (event.type === SignalingClientEventType_1.default.WebSocketOpen) {\n            this.hasSignalingError = false;\n        }\n        if (event.type === SignalingClientEventType_1.default.ReceivedSignalFrame) {\n            if (!!event.message.bitrates) {\n                const bitrateFrame = event.message.bitrates;\n                this.context.videoStreamIndex.integrateBitratesFrame(bitrateFrame);\n                this.context.videoDownlinkBandwidthPolicy.updateIndex(this.context.videoStreamIndex);\n                this.handleBitrateFrame(event.message.bitrates);\n            }\n            const status = MeetingSessionStatus_1.default.fromSignalFrame(event.message);\n            // Primary meeting join ack status will be handled by `PromoteToPrimaryMeetingTask`\n            if (event.message.type !== SignalingProtocol_1.SdkSignalFrame.Type.PRIMARY_MEETING_JOIN_ACK &&\n                status.statusCode() !== MeetingSessionStatusCode_1.default.OK) {\n                this.context.audioVideoController.handleMeetingSessionStatus(status, null);\n            }\n        }\n    }\n}\nexports.default = MonitorTask;\nMonitorTask.DEFAULT_DOWNLINK_CALLRATE_OVERSHOOT_FACTOR = 2.0;\nMonitorTask.DEFAULT_DOWNLINK_CALLRATE_UNDERSHOOT_FACTOR = 0.2;\n//# sourceMappingURL=MonitorTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n * [[SignalingClientConnectionRequest]] represents an connection request.\n */\nclass SignalingClientConnectionRequest {\n    /** Creates a request with the given URL, conference id, and join token.\n     *\n     * @param signalingURL The URL of the signaling proxy.\n     * @param joinToken The join token that will authenticate the connection.\n     */\n    constructor(signalingURL, joinToken) {\n        this.signalingURL = signalingURL;\n        this.joinToken = joinToken;\n    }\n    /** Gets the signaling URL representing this request.*/\n    url() {\n        return (this.signalingURL + '?X-Chime-Control-Protocol-Version=3&X-Amzn-Chime-Send-Close-On-Error=1');\n    }\n    /** Gets the protocols associated with this request.*/\n    protocols() {\n        return ['_aws_wt_session', this.joinToken];\n    }\n}\nexports.default = SignalingClientConnectionRequest;\n//# sourceMappingURL=SignalingClientConnectionRequest.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SignalingClientConnectionRequest_1 = require(\"../signalingclient/SignalingClientConnectionRequest\");\nconst SignalingClientEventType_1 = require(\"../signalingclient/SignalingClientEventType\");\nconst BaseTask_1 = require(\"./BaseTask\");\nclass OpenSignalingConnectionTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'OpenSignalingConnectionTask';\n        this.taskCanceler = null;\n    }\n    cancel() {\n        if (this.taskCanceler) {\n            this.taskCanceler.cancel();\n            this.taskCanceler = null;\n        }\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const configuration = this.context.meetingSessionConfiguration;\n            this.context.signalingClient.openConnection(new SignalingClientConnectionRequest_1.default(configuration.urls.signalingURL, configuration.credentials.joinToken));\n            const startTimeMs = Date.now();\n            try {\n                yield new Promise((resolve, reject) => {\n                    class WebSocketOpenInterceptor {\n                        constructor(signalingClient) {\n                            this.signalingClient = signalingClient;\n                        }\n                        cancel() {\n                            this.signalingClient.removeObserver(this);\n                            reject(new Error(`OpenSignalingConnectionTask got canceled while waiting to open signaling connection`));\n                        }\n                        handleSignalingClientEvent(event) {\n                            switch (event.type) {\n                                case SignalingClientEventType_1.default.WebSocketOpen:\n                                    this.signalingClient.removeObserver(this);\n                                    resolve();\n                                    break;\n                                case SignalingClientEventType_1.default.WebSocketFailed:\n                                    this.signalingClient.removeObserver(this);\n                                    reject(new Error('WebSocket connection failed'));\n                                    break;\n                            }\n                        }\n                    }\n                    const interceptor = new WebSocketOpenInterceptor(this.context.signalingClient);\n                    this.context.signalingClient.registerObserver(interceptor);\n                    this.taskCanceler = interceptor;\n                });\n            }\n            catch (error) {\n                throw error;\n            }\n            finally {\n                this.context.signalingOpenDurationMs = Math.round(Date.now() - startTimeMs);\n                this.logger.info(`Opening signaling connection took ${this.context.signalingOpenDurationMs} ms`);\n            }\n        });\n    }\n}\nexports.default = OpenSignalingConnectionTask;\n//# sourceMappingURL=OpenSignalingConnectionTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BaseTask_1 = require(\"./BaseTask\");\n/**\n * [[ParallelGroupTask]] runs a set of tasks in parallel. When canceled, it\n * stops any currently running tasks.\n */\nclass ParallelGroupTask extends BaseTask_1.default {\n    constructor(logger, taskName, tasksToRunParallel) {\n        super(logger);\n        this.taskName = taskName;\n        this.tasksToRunParallel = tasksToRunParallel;\n        for (const task of tasksToRunParallel) {\n            task.setParent(this);\n        }\n    }\n    cancel() {\n        for (const task of this.tasksToRunParallel) {\n            this.logger.info(`canceling parallel group task ${this.name()} subtask ${task.name()}`);\n            task.cancel();\n        }\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const taskResults = [];\n            for (const task of this.tasksToRunParallel) {\n                this.logger.info(`parallel group task ${this.name()} running subtask ${task.name()}`);\n                taskResults.push(task.run());\n            }\n            const failures = [];\n            for (let i = 0; i < taskResults.length; i++) {\n                try {\n                    yield taskResults[i];\n                }\n                catch (err) {\n                    failures.push(`task ${this.tasksToRunParallel[i].name()} failed: ${err.message}`);\n                }\n                this.logger.info(`parallel group task ${this.name()} completed subtask ${this.tasksToRunParallel[i].name()}`);\n            }\n            if (failures.length > 0) {\n                const failureMessage = failures.join(', ');\n                this.logAndThrow(`parallel group task ${this.name()} failed for tasks: ${failureMessage}`);\n            }\n            this.logger.info(`parallel group task ${this.name()} completed`);\n        });\n    }\n}\nexports.default = ParallelGroupTask;\n//# sourceMappingURL=ParallelGroupTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst __1 = require(\"..\");\nconst SignalingClientEventType_1 = require(\"../signalingclient/SignalingClientEventType\");\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nconst BaseTask_1 = require(\"./BaseTask\");\n/**\n * [[PromoteToPrimaryMeetingTask]] sends a `SdkSignalFrame.PrimaryMeetingJoin` and waits for\n * a `SdkSignalFrame.PrimaryMeetingJoinAck`  frame.\n */\nclass PromoteToPrimaryMeetingTask extends BaseTask_1.default {\n    constructor(context, credentials, completionCallback) {\n        super(context.logger);\n        this.context = context;\n        this.credentials = credentials;\n        this.completionCallback = completionCallback;\n        this.taskName = 'PromoteToPrimaryMeetingTask';\n        this.taskCanceler = null;\n    }\n    cancel() {\n        if (this.taskCanceler) {\n            this.taskCanceler.cancel();\n            this.taskCanceler = null;\n        }\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.context.signalingClient.ready()) {\n                this.context.signalingClient.promoteToPrimaryMeeting(this.credentials);\n                this.context.logger.info('Sent request to join primary meeting');\n                yield this.receivePrimaryMeetingJoinAck();\n            }\n            else {\n                this.completionCallback(new __1.MeetingSessionStatus(__1.MeetingSessionStatusCode.SignalingRequestFailed));\n            }\n        });\n    }\n    receivePrimaryMeetingJoinAck() {\n        return new Promise((resolve, _) => {\n            class Interceptor {\n                constructor(signalingClient, completionCallback, logger) {\n                    this.signalingClient = signalingClient;\n                    this.completionCallback = completionCallback;\n                    this.logger = logger;\n                }\n                cancel() {\n                    this.signalingClient.removeObserver(this);\n                    // Currently only cancel would come from timeout.  Should\n                    // be rare enough (ignoring bugs) that we don't need to bother\n                    // retrying.\n                    this.completionCallback(new __1.MeetingSessionStatus(__1.MeetingSessionStatusCode.SignalingRequestFailed));\n                    resolve();\n                }\n                handleSignalingClientEvent(event) {\n                    if (event.isConnectionTerminated()) {\n                        this.signalingClient.removeObserver(this);\n                        this.logger.info('PromoteToPrimaryMeetingTask connection terminated');\n                        // This would happen either in happy or unhappy disconnections.  The\n                        // timing here is rare enough (ignoring bugs) that we don't need to bother\n                        // retrying the unhappy case.\n                        this.completionCallback(new __1.MeetingSessionStatus(__1.MeetingSessionStatusCode.SignalingRequestFailed));\n                        resolve();\n                    }\n                    if (event.type === SignalingClientEventType_1.default.ReceivedSignalFrame &&\n                        event.message.type === SignalingProtocol_js_1.SdkSignalFrame.Type.PRIMARY_MEETING_JOIN_ACK) {\n                        this.signalingClient.removeObserver(this);\n                        this.logger.info('Got a primary meeting join ACK');\n                        this.completionCallback(__1.MeetingSessionStatus.fromSignalFrame(event.message));\n                        resolve();\n                    }\n                }\n            }\n            const interceptor = new Interceptor(this.context.signalingClient, this.completionCallback, this.context.logger);\n            this.taskCanceler = interceptor;\n            this.context.signalingClient.registerObserver(interceptor);\n        });\n    }\n}\nexports.default = PromoteToPrimaryMeetingTask;\n//# sourceMappingURL=PromoteToPrimaryMeetingTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BaseTask_1 = require(\"./BaseTask\");\n/**\n * [[ReceiveAudioInputTask]] acquires an audio input.\n */\nclass ReceiveAudioInputTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'ReceiveAudioInputTask';\n    }\n    run() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!((_b = (_a = this.context.meetingSessionConfiguration) === null || _a === void 0 ? void 0 : _a.urls) === null || _b === void 0 ? void 0 : _b.audioHostURL)) {\n                this.context.logger.info('No audio connection: not acquiring audio input');\n                return;\n            }\n            if (this.context.activeAudioInput) {\n                this.context.logger.info('an active audio input exists');\n                return;\n            }\n            let audioInput;\n            try {\n                audioInput = yield this.context.mediaStreamBroker.acquireAudioInputStream();\n            }\n            catch (error) {\n                this.context.logger.warn('could not acquire audio input from current device');\n            }\n            if (audioInput) {\n                this.context.activeAudioInput = audioInput;\n            }\n            else {\n                this.context.logger.warn('an audio input is not available');\n            }\n        });\n    }\n}\nexports.default = ReceiveAudioInputTask;\n//# sourceMappingURL=ReceiveAudioInputTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MeetingSessionStatusCode_1 = require(\"../meetingsession/MeetingSessionStatusCode\");\nconst MeetingSessionTURNCredentials_1 = require(\"../meetingsession/MeetingSessionTURNCredentials\");\nconst DefaultModality_1 = require(\"../modality/DefaultModality\");\nconst Versioning_1 = require(\"../versioning/Versioning\");\nconst BaseTask_1 = require(\"./BaseTask\");\n/*\n * [[ReceiveTURNCredentialsTask]] asynchronously retrieves TURN credentials.\n */\nclass ReceiveTURNCredentialsTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'ReceiveTURNCredentialsTask';\n        this.url = context.meetingSessionConfiguration.urls.turnControlURL;\n        this.meetingId = context.meetingSessionConfiguration.meetingId;\n        this.joinToken = context.meetingSessionConfiguration.credentials.joinToken;\n    }\n    cancel() {\n        // Just in case. The baseCancel behavior should prevent this.\n        /* istanbul ignore else */\n        if (this.cancelPromise) {\n            const error = new Error(`canceling ${this.name()}`);\n            this.cancelPromise(error);\n            delete this.cancelPromise;\n        }\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.context.turnCredentials) {\n                this.context.logger.info('TURN credentials available, skipping credentials fetch');\n                return;\n            }\n            this.context.logger.error('missing TURN credentials - falling back to fetch');\n            if (!this.url) {\n                this.context.logger.info('TURN control url not supplied, skipping credentials fetch');\n                return;\n            }\n            const options = {\n                method: 'POST',\n                mode: 'cors',\n                cache: 'no-cache',\n                credentials: 'omit',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-Chime-Auth-Token': '_aws_wt_session=' + new DefaultModality_1.default(this.joinToken).base(),\n                },\n                redirect: 'follow',\n                referrer: 'no-referrer',\n                body: JSON.stringify({ meetingId: this.meetingId }),\n            };\n            this.context.logger.info(`requesting TURN credentials from ${this.url}`);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const responseBodyJson = yield new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                this.cancelPromise = (error) => {\n                    reject(error);\n                };\n                try {\n                    const responseBody = yield fetch(Versioning_1.default.urlWithVersion(this.url), options);\n                    this.context.logger.info(`received TURN credentials`);\n                    if (responseBody.status && responseBody.status === 403) {\n                        reject(new Error(`canceling ${this.name()} due to the meeting status code: ${MeetingSessionStatusCode_1.default.TURNCredentialsForbidden}`));\n                        return;\n                    }\n                    if (responseBody.status && responseBody.status === 404) {\n                        reject(new Error(`canceling ${this.name()} due to the meeting status code: ${MeetingSessionStatusCode_1.default.MeetingEnded}`));\n                        return;\n                    }\n                    resolve(yield responseBody.json());\n                }\n                catch (error) {\n                    reject(error);\n                }\n                finally {\n                    delete this.cancelPromise;\n                }\n            }));\n            this.context.turnCredentials = new MeetingSessionTURNCredentials_1.default();\n            this.context.turnCredentials.password = responseBodyJson.password;\n            this.context.turnCredentials.ttl = responseBodyJson.ttl;\n            this.context.turnCredentials.uris = responseBodyJson.uris\n                .map((uri) => {\n                return this.context.meetingSessionConfiguration.urls.urlRewriter(uri);\n            })\n                .filter((uri) => {\n                return !!uri;\n            });\n            this.context.turnCredentials.username = responseBodyJson.username;\n        });\n    }\n}\nexports.default = ReceiveTURNCredentialsTask;\n//# sourceMappingURL=ReceiveTURNCredentialsTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultModality_1 = require(\"../modality/DefaultModality\");\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nconst BaseTask_1 = require(\"./BaseTask\");\n/**\n * [[ReceiveVideoInputTask]] acquires a video input from [[DeviceController]].\n */\nclass ReceiveVideoInputTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'ReceiveVideoInputTask';\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: move videoDuplexMode and videoCaptureAndEncodeParameters to video tile controller\n            const receiveEnabled = this.context.videoDuplexMode === SignalingProtocol_js_1.SdkStreamServiceType.RX ||\n                this.context.videoDuplexMode === SignalingProtocol_js_1.SdkStreamServiceType.DUPLEX;\n            if (this.context.videoTileController.hasStartedLocalVideoTile()) {\n                this.context.videoDuplexMode = receiveEnabled\n                    ? SignalingProtocol_js_1.SdkStreamServiceType.DUPLEX\n                    : SignalingProtocol_js_1.SdkStreamServiceType.TX;\n            }\n            else {\n                this.context.videoDuplexMode = receiveEnabled ? SignalingProtocol_js_1.SdkStreamServiceType.RX : 0;\n            }\n            this.context.videoCaptureAndEncodeParameter = this.context.videoUplinkBandwidthPolicy.chooseCaptureAndEncodeParameters();\n            if (!this.context.videoTileController.hasStartedLocalVideoTile()) {\n                this.context.logger.info('has not started local video tile');\n                if (this.context.activeVideoInput) {\n                    this.context.activeVideoInput = undefined;\n                    // Indicate to the stream index that we are no longer sending video.  We will\n                    // no longer be tracking irrelevant local sending bitrates sent via received Bitrate message, nor will\n                    // we track any spurious allocated stream IDs from the backend.\n                    this.context.videoStreamIndex.integrateUplinkPolicyDecision([]);\n                }\n                return;\n            }\n            // TODO: bind after ICE connection started in case of a failure to resubscribe\n            //       or perform error handling to unbind video stream.\n            const localTile = this.context.videoTileController.getLocalVideoTile();\n            let videoInput = undefined;\n            try {\n                videoInput = yield this.context.mediaStreamBroker.acquireVideoInputStream();\n            }\n            catch (error) {\n                this.context.logger.warn('could not acquire video input from current device');\n                this.context.videoTileController.stopLocalVideoTile();\n            }\n            if (this.context.enableSimulcast) {\n                const encodingParams = this.context.videoUplinkBandwidthPolicy.chooseEncodingParameters();\n                this.context.videoStreamIndex.integrateUplinkPolicyDecision(Array.from(encodingParams.values()));\n            }\n            this.context.activeVideoInput = videoInput;\n            if (videoInput) {\n                const videoTracks = videoInput.getVideoTracks();\n                // There can be a race condition when there are several audioVideo.update calls (e.g., calling\n                // startLocalVideoTile and stopLocalVideoTile at the same time)\n                // that causes the video stream to not contain any video track.\n                // This should recovers in the next update call.\n                if (!videoTracks || videoTracks.length === 0) {\n                    return;\n                }\n                const attendeeId = this.context.meetingSessionConfiguration.credentials.attendeeId;\n                const isContentAttendee = new DefaultModality_1.default(attendeeId).hasModality(DefaultModality_1.default.MODALITY_CONTENT);\n                const trackSettings = videoTracks[0].getSettings();\n                // For video, we currently enforce 720p for simulcast. This logic should be removed in the future.\n                if (this.context.enableSimulcast && !isContentAttendee) {\n                    const constraint = this.context.videoUplinkBandwidthPolicy.chooseMediaTrackConstraints();\n                    this.context.logger.info(`simulcast: choose constraint ${JSON.stringify(constraint)}`);\n                    try {\n                        yield videoTracks[0].applyConstraints(constraint);\n                    }\n                    catch (error) {\n                        this.context.logger.info('simulcast: pass video without more constraint');\n                    }\n                }\n                const externalUserId = this.context.audioVideoController.configuration.credentials\n                    .externalUserId;\n                localTile.bindVideoStream(attendeeId, true, videoInput, trackSettings.width, trackSettings.height, null, externalUserId);\n                for (let i = 0; i < videoTracks.length; i++) {\n                    const track = videoTracks[i];\n                    this.logger.info(`using video device label=${track.label} id=${track.id}`);\n                    this.context.videoDeviceInformation['current_camera_name'] = track.label;\n                    this.context.videoDeviceInformation['current_camera_id'] = track.id;\n                }\n            }\n        });\n    }\n}\nexports.default = ReceiveVideoInputTask;\n//# sourceMappingURL=ReceiveVideoInputTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MeetingSessionVideoAvailability_1 = require(\"../meetingsession/MeetingSessionVideoAvailability\");\nconst DefaultModality_1 = require(\"../modality/DefaultModality\");\nconst VideoCodecCapability_1 = require(\"../sdp/VideoCodecCapability\");\nconst SignalingClientEventType_1 = require(\"../signalingclient/SignalingClientEventType\");\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nconst Types_1 = require(\"../utils/Types\");\nconst BaseTask_1 = require(\"./BaseTask\");\n/*\n * [[ReceiveVideoStreamIndexTask]] receives [[SdkIndexFrame]] and updates [[VideoUplinkBandwidthPolicy]] and [[VideoDownlinkBandwidthPolicy]].\n */\nclass ReceiveVideoStreamIndexTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'ReceiveVideoStreamIndexTask';\n        // See comment above invocation of `pauseIngestion` in `DefaultAudioVideoController`\n        // for explanation.\n        this.isIngestionPaused = false;\n        this.pendingIndex = null;\n    }\n    removeObserver() {\n        this.context.signalingClient.removeObserver(this);\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.handleIndexFrame(this.context.indexFrame);\n            this.context.signalingClient.registerObserver(this);\n            this.context.removableObservers.push(this);\n        });\n    }\n    handleSignalingClientEvent(event) {\n        if (event.type !== SignalingClientEventType_1.default.ReceivedSignalFrame ||\n            event.message.type !== SignalingProtocol_js_1.SdkSignalFrame.Type.INDEX) {\n            return;\n        }\n        // @ts-ignore: force cast to SdkIndexFrame\n        const indexFrame = event.message.index;\n        this.context.logger.info(`received new index ${JSON.stringify(indexFrame)}`);\n        this.handleIndexFrame(indexFrame);\n    }\n    pauseIngestion() {\n        this.isIngestionPaused = true;\n    }\n    resumeIngestion() {\n        if (!this.isIngestionPaused) {\n            // Do not recheck subcribe if it wasn't paused to begin with.\n            return;\n        }\n        this.isIngestionPaused = false;\n        if (this.pendingIndex) {\n            this.context.logger.info('Resuming index ingestion with pending index');\n            this.handleIndexFrame(this.pendingIndex);\n        }\n    }\n    handleIndexFrame(indexFrame) {\n        if (!indexFrame) {\n            return;\n        }\n        if (this.isIngestionPaused) {\n            this.context.logger.info(`Index ingestion is paused, setting most recent index as pending`);\n            this.pendingIndex = indexFrame;\n            return;\n        }\n        else {\n            this.pendingIndex = null;\n        }\n        // Filter out self content share video\n        const selfAttendeeId = this.context.audioVideoController.configuration.credentials.attendeeId;\n        indexFrame.sources = indexFrame.sources.filter(source => {\n            const modality = new DefaultModality_1.default(source.attendeeId);\n            return !(modality.base() === selfAttendeeId && modality.hasModality(DefaultModality_1.default.MODALITY_CONTENT));\n        });\n        const { videoStreamIndex, videoDownlinkBandwidthPolicy, videoUplinkBandwidthPolicy, } = this.context;\n        const oldVideoSources = videoStreamIndex.allVideoSendingSourcesExcludingSelf(selfAttendeeId);\n        videoStreamIndex.integrateIndexFrame(indexFrame);\n        videoDownlinkBandwidthPolicy.updateIndex(videoStreamIndex);\n        videoUplinkBandwidthPolicy.updateIndex(videoStreamIndex);\n        this.resubscribe(videoDownlinkBandwidthPolicy, videoUplinkBandwidthPolicy);\n        this.updateVideoAvailability(indexFrame);\n        this.handleIndexVideosPausedAtSource();\n        if (indexFrame.supportedReceiveCodecIntersection.length > 0) {\n            this.handleSupportedVideoReceiveCodecIntersection(indexFrame);\n        }\n        // `forEachObserver`is asynchronous anyways so it doesn't matter (for better or worse) whether we\n        // trigger it before or after the policy update + possible resubscribe kickoff\n        const newVideoSources = videoStreamIndex.allVideoSendingSourcesExcludingSelf(selfAttendeeId);\n        if (!this.areVideoSourcesEqual(oldVideoSources, newVideoSources)) {\n            this.context.audioVideoController.forEachObserver((observer) => {\n                Types_1.Maybe.of(observer.remoteVideoSourcesDidChange).map(f => f.bind(observer)(newVideoSources));\n            });\n        }\n    }\n    areVideoSourcesEqual(oldVideoSources, newVideoSources) {\n        if (oldVideoSources.length !== newVideoSources.length) {\n            return false;\n        }\n        const compare = (videoSourceA, videoSourceB) => videoSourceA.attendee.attendeeId.localeCompare(videoSourceB.attendee.attendeeId);\n        const sortedOldVideoSources = [...oldVideoSources].sort(compare);\n        const sortedNewVideoSources = [...newVideoSources].sort(compare);\n        for (let i = 0; i < sortedOldVideoSources.length; i++) {\n            if (sortedOldVideoSources[i].attendee.attendeeId !==\n                sortedNewVideoSources[i].attendee.attendeeId) {\n                return false;\n            }\n        }\n        return true;\n    }\n    resubscribe(videoDownlinkBandwidthPolicy, videoUplinkBandwidthPolicy) {\n        const resubscribeForDownlink = videoDownlinkBandwidthPolicy.wantsResubscribe();\n        const resubscribeForUplink = (this.context.videoDuplexMode === SignalingProtocol_js_1.SdkStreamServiceType.TX ||\n            this.context.videoDuplexMode === SignalingProtocol_js_1.SdkStreamServiceType.DUPLEX) &&\n            videoUplinkBandwidthPolicy.wantsResubscribe();\n        const shouldResubscribe = resubscribeForDownlink || resubscribeForUplink;\n        this.logger.info(`should resubscribe: ${shouldResubscribe} (downlink: ${resubscribeForDownlink} uplink: ${resubscribeForUplink})`);\n        if (!shouldResubscribe) {\n            return;\n        }\n        const videoSubscriptionIdSet = videoDownlinkBandwidthPolicy.chooseSubscriptions();\n        this.context.videosToReceive = videoSubscriptionIdSet.truncate(this.context.videoSubscriptionLimit);\n        if (videoSubscriptionIdSet.size() > this.context.videosToReceive.size()) {\n            this.logger.warn(`Video receive limit exceeded. Limiting the videos to ${this.context.videosToReceive.size()}. Please consider using AllHighestVideoBandwidthPolicy or VideoPriorityBasedPolicy along with chooseRemoteVideoSources api to select the video sources to be displayed.`);\n        }\n        this.context.videoCaptureAndEncodeParameter = videoUplinkBandwidthPolicy.chooseCaptureAndEncodeParameters();\n        this.logger.info(`trigger resubscribe for up=${resubscribeForUplink} down=${resubscribeForDownlink}; videosToReceive=[${this.context.videosToReceive.array()}] captureParams=${JSON.stringify(this.context.videoCaptureAndEncodeParameter)}`);\n        this.context.audioVideoController.update({ needsRenegotiation: false });\n    }\n    updateVideoAvailability(indexFrame) {\n        if (!this.context.videosToReceive) {\n            this.logger.error('videosToReceive must be set in the meeting context.');\n            return;\n        }\n        const videoAvailability = new MeetingSessionVideoAvailability_1.default();\n        videoAvailability.remoteVideoAvailable = !this.context.videosToReceive.empty();\n        videoAvailability.canStartLocalVideo = !indexFrame.atCapacity;\n        if (!this.context.lastKnownVideoAvailability ||\n            !this.context.lastKnownVideoAvailability.equal(videoAvailability)) {\n            this.context.lastKnownVideoAvailability = videoAvailability.clone();\n            this.context.audioVideoController.forEachObserver((observer) => {\n                Types_1.Maybe.of(observer.videoAvailabilityDidChange).map(f => f.bind(observer)(videoAvailability.clone()));\n            });\n        }\n    }\n    handleSupportedVideoReceiveCodecIntersection(index) {\n        if (this.context.videoSendCodecPreferences === undefined) {\n            return;\n        }\n        const newMeetingSupportedVideoSendCodecPreferences = [];\n        let willNeedUpdate = false;\n        // Intersect `this.context.videoSendCodecPreferences` with `index.supportedReceiveCodecIntersection`\n        for (const capability of this.context.videoSendCodecPreferences) {\n            let codecSupported = false;\n            for (const signaledCapability of index.supportedReceiveCodecIntersection) {\n                if (capability.equals(VideoCodecCapability_1.default.fromSignaled(signaledCapability))) {\n                    codecSupported = true;\n                    newMeetingSupportedVideoSendCodecPreferences.push(capability);\n                    break;\n                }\n            }\n            // We need to renegotiate if we are currently sending a codec that is no longer supported in the call.\n            if (this.context.currentVideoSendCodec !== undefined &&\n                !codecSupported &&\n                capability.equals(this.context.currentVideoSendCodec)) {\n                willNeedUpdate = true;\n            }\n        }\n        if (newMeetingSupportedVideoSendCodecPreferences.length > 0) {\n            this.context.meetingSupportedVideoSendCodecPreferences = newMeetingSupportedVideoSendCodecPreferences;\n        }\n        else {\n            this.logger.warn('Interesection of meeting receive codec support and send codec preferences has no overlap, falling back to just values provided in `setVideoCodecSendPreferences`');\n            this.context.meetingSupportedVideoSendCodecPreferences = undefined;\n        }\n        if (willNeedUpdate) {\n            this.context.audioVideoController.update({ needsRenegotiation: true });\n        }\n    }\n    handleIndexVideosPausedAtSource() {\n        const streamsPausedAtSource = this.context.videoStreamIndex.streamsPausedAtSource();\n        for (const tile of this.context.videoTileController.getAllVideoTiles()) {\n            const tileState = tile.state();\n            if (streamsPausedAtSource.contain(tileState.streamId)) {\n                if (tile.markPoorConnection()) {\n                    this.logger.info(`marks the tile ${tileState.tileId} as having a poor connection`);\n                }\n            }\n            else {\n                if (tile.unmarkPoorConnection()) {\n                    this.logger.info(`unmarks the tile ${tileState.tileId} as having a poor connection`);\n                }\n            }\n        }\n    }\n}\nexports.default = ReceiveVideoStreamIndexTask;\n//# sourceMappingURL=ReceiveVideoStreamIndexTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DataMessage_1 = require(\"../datamessage/DataMessage\");\nconst SignalingClientEventType_1 = require(\"../signalingclient/SignalingClientEventType\");\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nconst BaseTask_1 = require(\"./BaseTask\");\nclass SendAndReceiveDataMessagesTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'SendAndReceiveDataMessagesTask';\n        this.sendDataMessageHandler = (topic, data, // eslint-disable-line @typescript-eslint/no-explicit-any\n        lifetimeMs) => {\n            if (this.context.signalingClient.ready()) {\n                let uint8Data;\n                if (data instanceof Uint8Array) {\n                    uint8Data = data;\n                }\n                else if (typeof data === 'string') {\n                    uint8Data = new TextEncoder().encode(data);\n                }\n                else {\n                    uint8Data = new TextEncoder().encode(JSON.stringify(data));\n                }\n                this.validateDataMessage(topic, uint8Data, lifetimeMs);\n                const message = SignalingProtocol_js_1.SdkDataMessagePayload.create();\n                message.topic = topic;\n                message.lifetimeMs = lifetimeMs;\n                message.data = uint8Data;\n                const messageFrame = SignalingProtocol_js_1.SdkDataMessageFrame.create();\n                messageFrame.messages = [message];\n                this.context.signalingClient.sendDataMessage(messageFrame);\n            }\n            else {\n                this.context.logger.error('Signaling client is not ready');\n            }\n        };\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.context.removableObservers.push(this);\n            this.context.signalingClient.registerObserver(this);\n            this.context.realtimeController.realtimeSubscribeToSendDataMessage(this.sendDataMessageHandler);\n        });\n    }\n    removeObserver() {\n        this.context.realtimeController.realtimeUnsubscribeFromSendDataMessage(this.sendDataMessageHandler);\n        this.context.signalingClient.removeObserver(this);\n    }\n    handleSignalingClientEvent(event) {\n        if (event.type === SignalingClientEventType_1.default.ReceivedSignalFrame &&\n            event.message.type === SignalingProtocol_js_1.SdkSignalFrame.Type.DATA_MESSAGE) {\n            for (const message of event.message.dataMessage.messages) {\n                const dataMessage = new DataMessage_1.default(message.ingestTimeNs / 1000000, message.topic, message.data, message.senderAttendeeId, message.senderExternalUserId, message.ingestTimeNs === 0);\n                this.context.realtimeController.realtimeReceiveDataMessage(dataMessage);\n            }\n        }\n    }\n    validateDataMessage(topic, data, lifetimeMs) {\n        if (!SendAndReceiveDataMessagesTask.TOPIC_REGEX.test(topic)) {\n            throw new Error('Invalid topic');\n        }\n        if (data.length > SendAndReceiveDataMessagesTask.DATA_SIZE) {\n            throw new Error('Data size has to be less than 2048 bytes');\n        }\n        if (lifetimeMs && lifetimeMs < 0) {\n            throw new Error('The life time of the message has to be non negative');\n        }\n    }\n}\nexports.default = SendAndReceiveDataMessagesTask;\nSendAndReceiveDataMessagesTask.TOPIC_REGEX = new RegExp(/^[a-zA-Z0-9_-]{1,36}$/);\nSendAndReceiveDataMessagesTask.DATA_SIZE = 2048;\n//# sourceMappingURL=SendAndReceiveDataMessagesTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BaseTask_1 = require(\"./BaseTask\");\nconst TaskStatus_1 = require(\"./TaskStatus\");\n/**\n * [[SerialGroupTask]] runs a set of tasks in series. When canceled, it stops\n * any currently running task and runs no further tasks in the group.\n */\nclass SerialGroupTask extends BaseTask_1.default {\n    constructor(logger, taskName, tasksToRunSerially) {\n        super(logger);\n        this.taskName = taskName;\n        this.tasksToRunSerially = tasksToRunSerially;\n        this.currentTask = null;\n        for (const task of tasksToRunSerially) {\n            task.setParent(this);\n        }\n    }\n    cancel() {\n        if (this.currentTask) {\n            this.logger.info(`canceling serial group task ${this.name()} subtask ${this.currentTask.name()}`);\n            this.currentTask.cancel();\n        }\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const task of this.tasksToRunSerially) {\n                if (this.getStatus() === TaskStatus_1.default.CANCELED) {\n                    this.logAndThrow(`serial group task ${this.name()} was canceled`);\n                }\n                try {\n                    this.logger.info(`serial group task ${this.name()} running subtask ${task.name()}`);\n                    this.currentTask = task;\n                    yield task.run();\n                    this.logger.info(`serial group task ${this.name()} completed subtask ${task.name()}`);\n                }\n                catch (err) {\n                    this.logAndThrow(`serial group task ${this.name()} was canceled due to subtask ` +\n                        `${this.currentTask.name()} error: ${err.message}`);\n                }\n                finally {\n                    this.currentTask = null;\n                }\n            }\n            this.logger.info(`serial group task ${this.name()} completed`);\n        });\n    }\n}\nexports.default = SerialGroupTask;\n//# sourceMappingURL=SerialGroupTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\nconst SDP_1 = require(\"../sdp/SDP\");\nconst BaseTask_1 = require(\"./BaseTask\");\n/*\n * [[SetLocalDescriptionTask]] asynchronously calls [[setLocalDescription]] on peer connection.\n */\nclass SetLocalDescriptionTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'SetLocalDescriptionTask';\n    }\n    cancel() {\n        // Just in case. The baseCancel behavior should prevent this.\n        /* istanbul ignore else */\n        if (this.cancelPromise) {\n            const error = new Error(`canceling ${this.name()}`);\n            this.cancelPromise(error);\n            delete this.cancelPromise;\n        }\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const peer = this.context.peer;\n            const sdpOfferInit = this.context.sdpOfferInit;\n            let sdp = sdpOfferInit.sdp;\n            if (this.context.browserBehavior.supportsVideoLayersAllocationRtpHeaderExtension()) {\n                // This will be negotiatiated with backend, and we will only use it to skip resubscribes\n                // if we confirm support/negotiation via `RTCRtpTranceiver.sender.getParams`\n                sdp = new SDP_1.default(sdp).withVideoLayersAllocationRtpHeaderExtension(this.context.previousSdpOffer)\n                    .sdp;\n            }\n            if (new DefaultBrowserBehavior_1.default().requiresDisablingH264Encoding()) {\n                sdp = new SDP_1.default(sdp).removeH264SupportFromSendSection().sdp;\n            }\n            if (this.context.videoSendCodecPreferences !== undefined &&\n                this.context.videoSendCodecPreferences.length > 0) {\n                sdp = new SDP_1.default(sdp).withVideoSendCodecPreferences(this.context.meetingSupportedVideoSendCodecPreferences !== undefined\n                    ? this.context.meetingSupportedVideoSendCodecPreferences\n                    : this.context.videoSendCodecPreferences).sdp;\n            }\n            if (this.context.audioProfile) {\n                sdp = new SDP_1.default(sdp).withAudioMaxAverageBitrate(this.context.audioProfile.audioBitrateBps).sdp;\n                if (this.context.audioProfile.isStereo()) {\n                    sdp = new SDP_1.default(sdp).withStereoAudio().sdp;\n                }\n            }\n            this.logger.debug(() => {\n                return `local description is >>>${sdp}<<<`;\n            });\n            const sdpOffer = {\n                type: 'offer',\n                sdp: sdp,\n                toJSON: null,\n            };\n            yield new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                this.cancelPromise = (error) => {\n                    reject(error);\n                };\n                try {\n                    yield peer.setLocalDescription(sdpOffer);\n                    resolve();\n                }\n                catch (error) {\n                    reject(error);\n                }\n                finally {\n                    delete this.cancelPromise;\n                }\n            }));\n            this.context.logger.info('set local description');\n        });\n    }\n}\nexports.default = SetLocalDescriptionTask;\n//# sourceMappingURL=SetLocalDescriptionTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SDP_1 = require(\"../sdp/SDP\");\nconst BaseTask_1 = require(\"./BaseTask\");\n/*\n * [[SetRemoteDescriptionTask]] asynchronously calls [[setRemoteDescription]] on the\n * peer connection and then waits for the tracks to be added and for the ICE connection\n * to complete.\n */\nclass SetRemoteDescriptionTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'SetRemoteDescriptionTask';\n    }\n    cancel() {\n        if (this.cancelICEPromise) {\n            this.cancelICEPromise();\n        }\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const peer = this.context.peer;\n            if (!peer) {\n                this.logAndThrow('session does not have peer connection; bypass set remote description');\n            }\n            let sdp = this.context.sdpAnswer;\n            sdp = new SDP_1.default(sdp).withoutServerReflexiveCandidates().sdp;\n            if (this.context.audioProfile) {\n                sdp = new SDP_1.default(sdp).withAudioMaxAverageBitrate(this.context.audioProfile.audioBitrateBps).sdp;\n                if (this.context.audioProfile.isStereo()) {\n                    sdp = new SDP_1.default(sdp).withStereoAudio().sdp;\n                }\n            }\n            if (this.context.videoSendCodecPreferences !== undefined &&\n                this.context.videoSendCodecPreferences.length > 0) {\n                sdp = new SDP_1.default(sdp).withVideoSendCodecPreferences(this.context.meetingSupportedVideoSendCodecPreferences !== undefined\n                    ? this.context.meetingSupportedVideoSendCodecPreferences\n                    : this.context.videoSendCodecPreferences).sdp;\n                this.context.currentVideoSendCodec = new SDP_1.default(sdp).highestPriorityVideoSendCodec();\n            }\n            this.logger.info(`processed remote description is >>>${sdp}<<<`);\n            const remoteDescription = {\n                type: 'answer',\n                sdp: sdp,\n                toJSON: null,\n            };\n            try {\n                yield this.createICEConnectionCompletedPromise(remoteDescription);\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    createICEConnectionCompletedPromise(remoteDescription) {\n        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n            const checkConnectionCompleted = () => {\n                if (this.context.peer.iceConnectionState === 'connected' ||\n                    this.context.peer.iceConnectionState === 'completed') {\n                    this.context.peer.removeEventListener('iceconnectionstatechange', checkConnectionCompleted);\n                    resolve();\n                }\n            };\n            this.cancelICEPromise = () => {\n                if (this.context.peer) {\n                    this.context.peer.removeEventListener('iceconnectionstatechange', checkConnectionCompleted);\n                }\n                reject(new Error(`${this.name()} got canceled while waiting for the ICE connection state`));\n            };\n            this.context.peer.addEventListener('iceconnectionstatechange', checkConnectionCompleted);\n            try {\n                yield this.context.peer.setRemoteDescription(remoteDescription);\n                this.logger.info('set remote description, waiting for ICE connection');\n                checkConnectionCompleted();\n            }\n            catch (err) {\n                reject(err);\n            }\n        }));\n    }\n}\nexports.default = SetRemoteDescriptionTask;\n//# sourceMappingURL=SetRemoteDescriptionTask.js.map","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH    = 3;\nconst MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES       = 30;\n/* number of distance codes */\n\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nconst MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Tracev((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) => {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  const next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.sym_next = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) => {\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) => {\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let sx = 0;         /* running index in sym_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.sym_next !== 0) {\n    do {\n      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n      lc = s.pending_buf[s.sym_buf + sx++];\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and sym_buf is ok: */\n      //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n\n    } while (sx < s.sym_next);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) => {\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let block_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"block-listed\") bytes. */\n  for (n = 0; n <= 31; n++, block_mask >>>= 1) {\n    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"allow-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  bi_windup(s);        /* align on byte boundary */\n  put_short(s, stored_len);\n  put_short(s, ~stored_len);\n  if (stored_len) {\n    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n  }\n  s.pending += stored_len;\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */\nconst _tr_flush_block = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->sym_next / 3));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally = (s, dist, lc) => {\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n  s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n  return (s.sym_next === s.sym_end);\n};\n\nmodule.exports._tr_init  = _tr_init;\nmodule.exports._tr_stored_block = _tr_stored_block;\nmodule.exports._tr_flush_block  = _tr_flush_block;\nmodule.exports._tr_tally = _tr_tally;\nmodule.exports._tr_align = _tr_align;\n","'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nmodule.exports = adler32;\n","'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nmodule.exports = crc32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = require('./trees');\nconst adler32 = require('./adler32');\nconst crc32   = require('./crc32');\nconst msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_PARTIAL_FLUSH, Z_FULL_FLUSH, Z_FINISH, Z_BLOCK,\n  Z_OK, Z_STREAM_END, Z_STREAM_ERROR, Z_DATA_ERROR, Z_BUF_ERROR,\n  Z_DEFAULT_COMPRESSION,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY,\n  Z_UNKNOWN,\n  Z_DEFLATED\n} = require('./constants');\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */\n//#ifdef GZIP\nconst GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n//#endif\nconst EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */\nconst NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */\nconst COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */\nconst HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */\nconst BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */\nconst FINISH_STATE  = 666;    /* stream complete */\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = msg[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) * 2) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */\nconst slide_hash = (s) => {\n  let n, m;\n  let p;\n  let wsize = s.w_size;\n\n  n = s.hash_size;\n  p = n;\n  do {\n    m = s.head[--p];\n    s.head[p] = (m >= wsize ? m - wsize : 0);\n  } while (--n);\n  n = wsize;\n//#ifndef FASTEST\n  p = n;\n  do {\n    m = s.prev[--p];\n    s.prev[p] = (m >= wsize ? m - wsize : 0);\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */\n  } while (--n);\n//#endif\n};\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out  += len;\n  s.pending_out  += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending      -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let n, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n      if (s.insert > s.strstart) {\n        s.insert = s.strstart;\n      }\n      slide_hash(s);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */\n  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n\n  /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */\n  let len, left, have, last = 0;\n  let used = s.strm.avail_in;\n  do {\n    /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */\n    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */\n    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    if (s.strm.avail_out < have) {         /* need room for header */\n      break;\n    }\n      /* maximum stored block length that will fit in avail_out: */\n    have = s.strm.avail_out - have;\n    left = s.strstart - s.block_start;  /* bytes left in window */\n    if (len > left + s.strm.avail_in) {\n      len = left + s.strm.avail_in;   /* limit len to the input */\n    }\n    if (len > have) {\n      len = have;             /* limit len to the output */\n    }\n\n    /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */\n    if (len < min_block && ((len === 0 && flush !== Z_FINISH) ||\n                        flush === Z_NO_FLUSH ||\n                        len !== left + s.strm.avail_in)) {\n      break;\n    }\n\n    /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */\n    last = flush === Z_FINISH && len === left + s.strm.avail_in ? 1 : 0;\n    _tr_stored_block(s, 0, 0, last);\n\n    /* Replace the lengths in the dummy stored block with len. */\n    s.pending_buf[s.pending - 4] = len;\n    s.pending_buf[s.pending - 3] = len >> 8;\n    s.pending_buf[s.pending - 2] = ~len;\n    s.pending_buf[s.pending - 1] = ~len >> 8;\n\n    /* Write the stored block header bytes. */\n    flush_pending(s.strm);\n\n//#ifdef ZLIB_DEBUG\n//    /* Update debugging counts for the data about to be copied. */\n//    s->compressed_len += len << 3;\n//    s->bits_sent += len << 3;\n//#endif\n\n    /* Copy uncompressed bytes from the window to next_out. */\n    if (left) {\n      if (left > len) {\n        left = len;\n      }\n      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n      s.strm.next_out += left;\n      s.strm.avail_out -= left;\n      s.strm.total_out += left;\n      s.block_start += left;\n      len -= left;\n    }\n\n    /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */\n    if (len) {\n      read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n      s.strm.next_out += len;\n      s.strm.avail_out -= len;\n      s.strm.total_out += len;\n    }\n  } while (last === 0);\n\n  /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */\n  used -= s.strm.avail_in;    /* number of input bytes directly copied */\n  if (used) {\n    /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */\n    if (used >= s.w_size) {  /* supplant the previous history */\n      s.matches = 2;     /* clear hash */\n      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n      s.strstart = s.w_size;\n      s.insert = s.strstart;\n    }\n    else {\n      if (s.window_size - s.strstart <= used) {\n        /* Slide the window down. */\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) {\n          s.matches++;   /* add a pending slide_hash() */\n        }\n        if (s.insert > s.strstart) {\n          s.insert = s.strstart;\n        }\n      }\n      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n      s.strstart += used;\n      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n    }\n    s.block_start = s.strstart;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* If the last block was written to next_out, then done. */\n  if (last) {\n    return BS_FINISH_DONE;\n  }\n\n  /* If flushing and all input has been consumed, then done. */\n  if (flush !== Z_NO_FLUSH && flush !== Z_FINISH &&\n    s.strm.avail_in === 0 && s.strstart === s.block_start) {\n    return BS_BLOCK_DONE;\n  }\n\n  /* Fill the window with any remaining input. */\n  have = s.window_size - s.strstart;\n  if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n    /* Slide the window down. */\n    s.block_start -= s.w_size;\n    s.strstart -= s.w_size;\n    //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n    if (s.matches < 2) {\n      s.matches++;       /* add a pending slide_hash() */\n    }\n    have += s.w_size;      /* more space now */\n    if (s.insert > s.strstart) {\n      s.insert = s.strstart;\n    }\n  }\n  if (have > s.strm.avail_in) {\n    have = s.strm.avail_in;\n  }\n  if (have) {\n    read_buf(s.strm, s.window, s.strstart, have);\n    s.strstart += have;\n    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */\n  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    /* maximum stored block length that will fit in pending: */\n  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;\n  min_block = have > s.w_size ? s.w_size : have;\n  left = s.strstart - s.block_start;\n  if (left >= min_block ||\n     ((left || flush === Z_FINISH) && flush !== Z_NO_FLUSH &&\n     s.strm.avail_in === 0 && left <= have)) {\n    len = left > have ? have : left;\n    last = flush === Z_FINISH && s.strm.avail_in === 0 &&\n         len === left ? 1 : 0;\n    _tr_stored_block(s, s.block_start, len, last);\n    s.block_start += len;\n    flush_pending(s.strm);\n  }\n\n  /* We've done all we can with the available input and output. */\n  return last ? BS_FINISH_STARTED : BS_NEED_MORE;\n};\n\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.sym_buf = 0;        /* buffer for distances and literals/lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.sym_next = 0;      /* running index in sym_buf */\n  this.sym_end = 0;       /* symbol table full when sym_next reaches this */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */\nconst deflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const s = strm.state;\n  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&\n//#ifdef GZIP\n                                s.status !== GZIP_STATE &&\n//#endif\n                                s.status !== EXTRA_STATE &&\n                                s.status !== NAME_STATE &&\n                                s.status !== COMMENT_STATE &&\n                                s.status !== HCRC_STATE &&\n                                s.status !== BUSY_STATE &&\n                                s.status !== FINISH_STATE)) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status =\n//#ifdef GZIP\n    s.wrap === 2 ? GZIP_STATE :\n//#endif\n    s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = -2;\n  _tr_init(s);\n  return Z_OK;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR;\n  }\n  strm.state.gzhead = head;\n  return Z_OK;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n  s.status = INIT_STATE;     /* to pass state test in deflateReset() */\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->sym_buf = s->pending_buf + s->lit_bufsize;\n  s.sym_buf = s.lit_bufsize;\n\n  //s->sym_end = (s->lit_bufsize - 1) * 3;\n  s.sym_end = (s.lit_bufsize - 1) * 3;\n  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n};\n\n\n/* ========================================================================= */\nconst deflate = (strm, flush) => {\n\n  if (deflateStateCheck(strm) || flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (strm.avail_in !== 0 && !strm.input) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Write the header */\n  if (s.status === INIT_STATE && s.wrap === 0) {\n    s.status = BUSY_STATE;\n  }\n  if (s.status === INIT_STATE) {\n    /* zlib header */\n    let header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n    let level_flags = -1;\n\n    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n      level_flags = 0;\n    } else if (s.level < 6) {\n      level_flags = 1;\n    } else if (s.level === 6) {\n      level_flags = 2;\n    } else {\n      level_flags = 3;\n    }\n    header |= (level_flags << 6);\n    if (s.strstart !== 0) { header |= PRESET_DICT; }\n    header += 31 - (header % 31);\n\n    putShortMSB(s, header);\n\n    /* Save the adler32 of the preset dictionary: */\n    if (s.strstart !== 0) {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK;\n    }\n  }\n//#ifdef GZIP\n  if (s.status === GZIP_STATE) {\n    /* gzip header */\n    strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n    put_byte(s, 31);\n    put_byte(s, 139);\n    put_byte(s, 8);\n    if (!s.gzhead) { // s->gzhead == Z_NULL\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, OS_CODE);\n      s.status = BUSY_STATE;\n\n      /* Compression must start with an empty pending buffer */\n      flush_pending(strm);\n      if (s.pending !== 0) {\n        s.last_flush = -1;\n        return Z_OK;\n      }\n    }\n    else {\n      put_byte(s, (s.gzhead.text ? 1 : 0) +\n                  (s.gzhead.hcrc ? 2 : 0) +\n                  (!s.gzhead.extra ? 0 : 4) +\n                  (!s.gzhead.name ? 0 : 8) +\n                  (!s.gzhead.comment ? 0 : 16)\n      );\n      put_byte(s, s.gzhead.time & 0xff);\n      put_byte(s, (s.gzhead.time >> 8) & 0xff);\n      put_byte(s, (s.gzhead.time >> 16) & 0xff);\n      put_byte(s, (s.gzhead.time >> 24) & 0xff);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, s.gzhead.os & 0xff);\n      if (s.gzhead.extra && s.gzhead.extra.length) {\n        put_byte(s, s.gzhead.extra.length & 0xff);\n        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n      }\n      if (s.gzhead.hcrc) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n      }\n      s.gzindex = 0;\n      s.status = EXTRA_STATE;\n    }\n  }\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n      while (s.pending + left > s.pending_buf_size) {\n        let copy = s.pending_buf_size - s.pending;\n        // zmemcpy(s.pending_buf + s.pending,\n        //    s.gzhead.extra + s.gzindex, copy);\n        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n        s.pending = s.pending_buf_size;\n        //--- HCRC_UPDATE(beg) ---//\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        //---//\n        s.gzindex += copy;\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK;\n        }\n        beg = 0;\n        left -= copy;\n      }\n      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n      let gzhead_extra = new Uint8Array(s.gzhead.extra);\n      // zmemcpy(s->pending_buf + s->pending,\n      //     s->gzhead->extra + s->gzindex, left);\n      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n      s.pending += left;\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = NAME_STATE;\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = COMMENT_STATE;\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n    }\n    s.status = HCRC_STATE;\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK;\n        }\n      }\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n    }\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK;\n    }\n  }\n//#endif\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    let bstate = s.level === 0 ? deflate_stored(s, flush) :\n                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n                 s.strategy === Z_RLE ? deflate_rle(s, flush) :\n                 configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR;\n  }\n\n  const status = strm.state.status;\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n};\n\n\nmodule.exports.deflateInit = deflateInit;\nmodule.exports.deflateInit2 = deflateInit2;\nmodule.exports.deflateReset = deflateReset;\nmodule.exports.deflateResetKeep = deflateResetKeep;\nmodule.exports.deflateSetHeader = deflateSetHeader;\nmodule.exports.deflate = deflate;\nmodule.exports.deflateEnd = deflateEnd;\nmodule.exports.deflateSetDictionary = deflateSetDictionary;\nmodule.exports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateGetDictionary = deflateGetDictionary;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n","'use strict';\n\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nmodule.exports.assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nmodule.exports.flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n","// String encode/decode helpers\n'use strict';\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nmodule.exports.string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nmodule.exports.buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nmodule.exports.utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n","'use strict';\n\n\nconst zlib_deflate = require('./zlib/deflate');\nconst utils        = require('./utils/common');\nconst strings      = require('./utils/strings');\nconst msg          = require('./zlib/messages');\nconst ZStream      = require('./zlib/zstream');\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED\n} = require('./zlib/constants');\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n\n  let status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = zlib_deflate.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = zlib_deflate.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    this.result = utils.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  const deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\n\nmodule.exports.Deflate = Deflate;\nmodule.exports.deflate = deflate;\nmodule.exports.deflateRaw = deflateRaw;\nmodule.exports.gzip = gzip;\nmodule.exports.constants = require('./zlib/constants');\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD = 16209;       /* got a data error -- remain here until reset */\nconst TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nmodule.exports = inflate_table;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32       = require('./adler32');\nconst crc32         = require('./crc32');\nconst inflate_fast  = require('./inffast');\nconst inflate_table = require('./inftrees');\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH, Z_BLOCK, Z_TREES,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR, Z_BUF_ERROR,\n  Z_DEFLATED\n} = require('./constants');\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n};\n\n\nmodule.exports.inflateReset = inflateReset;\nmodule.exports.inflateReset2 = inflateReset2;\nmodule.exports.inflateResetKeep = inflateResetKeep;\nmodule.exports.inflateInit = inflateInit;\nmodule.exports.inflateInit2 = inflateInit2;\nmodule.exports.inflate = inflate;\nmodule.exports.inflateEnd = inflateEnd;\nmodule.exports.inflateGetHeader = inflateGetHeader;\nmodule.exports.inflateSetDictionary = inflateSetDictionary;\nmodule.exports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n","'use strict';\n\n\nconst zlib_inflate = require('./zlib/inflate');\nconst utils        = require('./utils/common');\nconst strings      = require('./utils/strings');\nconst msg          = require('./zlib/messages');\nconst ZStream      = require('./zlib/zstream');\nconst GZheader     = require('./zlib/gzheader');\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = require('./zlib/constants');\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  this.options = utils.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  let status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(msg[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = zlib_inflate.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = zlib_inflate.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      zlib_inflate.inflateReset(strm);\n      status = zlib_inflate.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = zlib_inflate.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  const inflator = new Inflate(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || msg[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nmodule.exports.Inflate = Inflate;\nmodule.exports.inflate = inflate;\nmodule.exports.inflateRaw = inflateRaw;\nmodule.exports.ungzip = inflate;\nmodule.exports.constants = require('./zlib/constants');\n","// Top level file is just a mixin of submodules & constants\n'use strict';\n\nconst { Deflate, deflate, deflateRaw, gzip } = require('./lib/deflate');\n\nconst { Inflate, inflate, inflateRaw, ungzip } = require('./lib/inflate');\n\nconst constants = require('./lib/zlib/constants');\n\nmodule.exports.Deflate = Deflate;\nmodule.exports.deflate = deflate;\nmodule.exports.deflateRaw = deflateRaw;\nmodule.exports.gzip = gzip;\nmodule.exports.Inflate = Inflate;\nmodule.exports.inflate = inflate;\nmodule.exports.inflateRaw = inflateRaw;\nmodule.exports.ungzip = ungzip;\nmodule.exports.constants = constants;\n","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst pako = require('pako');\n/**\n * [[ZLIBTextCompressor]] Performs the text compression and decompression using zlib\n */\nclass ZLIBTextCompressor {\n    /**\n     * Constructs an instance of [[ZLIBTextCompressor]]\n     * @param logger\n     */\n    constructor(logger) {\n        this.logger = logger;\n    }\n    /**\n     * Compresses the given text.\n     *\n     * Note: The dictionary used during compression should be the same as\n     * that being used during decompression.\n     *\n     * @param text - the text that needs to be compressed\n     * @param dictionary - that will be used to seed the compression\n     *      library to improve compression's performance\n     * @returns a compressed text\n     */\n    compress(text, dictionary) {\n        if (dictionary.length > 0) {\n            const dictionarySize = Math.min(dictionary.length, ZLIBTextCompressor.MAX_DICTIONARY_SIZE);\n            dictionary = dictionary.slice(0, dictionarySize);\n        }\n        const options = {\n            memLevel: ZLIBTextCompressor.Z_MEM_LEVEL,\n            dictionary: dictionary,\n        };\n        const compressedText = pako.deflateRaw(text, options);\n        return compressedText;\n    }\n    /**\n     * Decompresses the given text and returns the original text.\n     *\n     * Note: The dictionary used during compression should be the same as\n     * that being used during decompression.\n     *\n     * @param compressedText that will be decompressed\n     * @param dictionary that will be used to seed the compression library to improve\n     *      decompression's performance\n     * @returns decompressed string\n     */\n    decompress(compressedText, dictionary) {\n        if (dictionary.length > 0) {\n            const dictionarySize = Math.min(dictionary.length, ZLIBTextCompressor.MAX_DICTIONARY_SIZE);\n            dictionary = dictionary.slice(0, dictionarySize);\n        }\n        const options = {\n            to: 'string',\n            dictionary: dictionary,\n            chunkSize: 4096,\n        };\n        let decompressedText = '';\n        try {\n            decompressedText = pako.inflateRaw(compressedText, options);\n        }\n        catch (ex) {\n            this.logger.error(`failed to decompress the string with error: [${ex}]`);\n        }\n        return decompressedText;\n    }\n}\nexports.default = ZLIBTextCompressor;\n// The memory Level parameter specifies how much memory to use for the internal state.\n// Smaller values use less memory but are slower, while higher values use more memory\n// to gain compression speed.\n// Range is between 1 to 9\nZLIBTextCompressor.Z_MEM_LEVEL = 9;\n// 32kB is the maximum dictionary size supported by the zlib format.\nZLIBTextCompressor.MAX_DICTIONARY_SIZE = 31744; // 31 KB\n//# sourceMappingURL=ZLIBTextCompressor.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[SignalingClientSubscribe]] contains settings for the Subscribe SignalFrame.\n */\nclass SignalingClientSubscribe {\n    /** Initializes a SignalingClientSubscribe with the given properties.\n     *\n     * @param attendeeId Attendee ID of the client\n     * @param sdpOffer SDP offer created by WebRTC\n     * @param audioHost host\n     * @param audioMuted Whether audio from client is muted\n     * @param audioCheckin Whether audio is in checked-in state\n     * @param receiveStreamIds Which video streams to receive\n     * @param localVideoEnabled Whether to send a video stream for the local camera\n     * @param array of local video stream description\n     * @param connectionTypeHasVideo Whether connection type has video\n     * @param compressedSdpOffer Compressed version of the SDP offer which was created by WebRTC\n     */\n    constructor(attendeeId, sdpOffer, audioHost, audioMuted, audioCheckin, receiveStreamIds, localVideoEnabled, videoStreamDescriptions, connectionTypeHasVideo, compressedSdpOffer) {\n        this.attendeeId = attendeeId;\n        this.sdpOffer = sdpOffer;\n        this.audioHost = audioHost;\n        this.audioMuted = audioMuted;\n        this.audioCheckin = audioCheckin;\n        this.receiveStreamIds = receiveStreamIds;\n        this.localVideoEnabled = localVideoEnabled;\n        this.videoStreamDescriptions = videoStreamDescriptions;\n        this.connectionTypeHasVideo = connectionTypeHasVideo;\n        this.compressedSdpOffer = compressedSdpOffer;\n        this.videoSubscriptionConfiguration = [];\n    }\n}\nexports.default = SignalingClientSubscribe;\n//# sourceMappingURL=SignalingClientSubscribe.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MeetingSessionStatus_1 = require(\"../meetingsession/MeetingSessionStatus\");\nconst MeetingSessionStatusCode_1 = require(\"../meetingsession/MeetingSessionStatusCode\");\nconst SDP_1 = require(\"../sdp/SDP\");\nconst ZLIBTextCompressor_1 = require(\"../sdp/ZLIBTextCompressor\");\nconst ServerSideNetworkAdaption_1 = require(\"../signalingclient/ServerSideNetworkAdaption\");\nconst SignalingClientEventType_1 = require(\"../signalingclient/SignalingClientEventType\");\nconst SignalingClientSubscribe_1 = require(\"../signalingclient/SignalingClientSubscribe\");\nconst SignalingClientVideoSubscriptionConfiguration_1 = require(\"../signalingclient/SignalingClientVideoSubscriptionConfiguration\");\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nconst BaseTask_1 = require(\"./BaseTask\");\n/**\n * [[SubscribeAndReceiveSubscribeAckTask]] sends a subscribe frame with the given settings\n * and receives SdkSubscribeAckFrame.\n */\nclass SubscribeAndReceiveSubscribeAckTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'SubscribeAndReceiveSubscribeAckTask';\n        this.taskCanceler = null;\n        this.textCompressor = new ZLIBTextCompressor_1.default(context.logger);\n    }\n    cancel() {\n        if (this.taskCanceler) {\n            this.taskCanceler.cancel();\n            this.taskCanceler = null;\n        }\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let localSdp = '';\n            if (this.context.peer && this.context.peer.localDescription) {\n                localSdp = new SDP_1.default(this.context.peer.localDescription.sdp).withUnifiedPlanFormat().sdp;\n            }\n            if (!this.context.enableSimulcast) {\n                // backward compatibility\n                let frameRate = 0;\n                let maxEncodeBitrateKbps = 0;\n                if (this.context.videoCaptureAndEncodeParameter) {\n                    frameRate = this.context.videoCaptureAndEncodeParameter.captureFrameRate();\n                    maxEncodeBitrateKbps = this.context.videoCaptureAndEncodeParameter.encodeBitrates()[0];\n                }\n                const param = {\n                    rid: 'hi',\n                    maxBitrate: maxEncodeBitrateKbps * 1000,\n                    maxFramerate: frameRate,\n                    active: true,\n                };\n                this.context.videoStreamIndex.integrateUplinkPolicyDecision([param]);\n            }\n            // This will cache the current index so that we maintain the values over the course of the subscribe.\n            this.context.videoStreamIndex.subscribeFrameSent();\n            // See comment above `fixUpSubscriptionOrder`\n            const videoSubscriptions = this.fixUpSubscriptionOrder(localSdp, this.context.videoSubscriptions);\n            const isSendingStreams = this.context.videoDuplexMode === SignalingProtocol_js_1.SdkStreamServiceType.TX ||\n                this.context.videoDuplexMode === SignalingProtocol_js_1.SdkStreamServiceType.DUPLEX;\n            let compressedSDPOffer;\n            const localSdpOffer = localSdp;\n            if (this.context.serverSupportsCompression) {\n                // If the server supports compression, then send the compressed version of the sdp\n                // and exclude the original sdp offer.\n                const prevOffer = this.context.previousSdpOffer ? this.context.previousSdpOffer.sdp : '';\n                compressedSDPOffer = this.textCompressor.compress(localSdpOffer, prevOffer);\n                this.context.logger.info(`Compressed the SDP message from ${localSdpOffer.length} to ${compressedSDPOffer.length} bytes.`);\n                localSdp = '';\n            }\n            this.context.previousSdpOffer = new SDP_1.default(localSdpOffer);\n            const subscribe = new SignalingClientSubscribe_1.default(this.context.meetingSessionConfiguration.credentials.attendeeId, localSdp, this.context.meetingSessionConfiguration.urls.audioHostURL, this.context.realtimeController.realtimeIsLocalAudioMuted(), false, videoSubscriptions, isSendingStreams, this.context.videoStreamIndex.localStreamDescriptions(), \n            // TODO: handle check-in mode, or remove this param\n            true, compressedSDPOffer);\n            if (this.context.videoDownlinkBandwidthPolicy.getServerSideNetworkAdaption !== undefined &&\n                this.context.videoDownlinkBandwidthPolicy.getServerSideNetworkAdaption() !==\n                    ServerSideNetworkAdaption_1.default.None &&\n                this.context.videoDownlinkBandwidthPolicy.getVideoPreferences !== undefined) {\n                // Set initial configuration for the receive streams indicated by the rest of the subscribe\n                subscribe.videoSubscriptionConfiguration = this.convertVideoPreferencesToVideoSubscriptionConfiguration(videoSubscriptions, this.context.videoDownlinkBandwidthPolicy.getVideoPreferences());\n            }\n            this.context.logger.info(`sending subscribe: ${JSON.stringify(subscribe)}`);\n            this.context.signalingClient.subscribe(subscribe);\n            const subscribeAckFrame = yield this.receiveSubscribeAck();\n            this.context.logger.info(`got subscribe ack: ${JSON.stringify(subscribeAckFrame)}`);\n            let decompressedText = '';\n            if (subscribeAckFrame.compressedSdpAnswer && subscribeAckFrame.compressedSdpAnswer.length) {\n                decompressedText = this.textCompressor.decompress(subscribeAckFrame.compressedSdpAnswer, this.context.previousSdpAnswerAsString);\n                if (decompressedText.length === 0) {\n                    this.context.sdpAnswer = '';\n                    this.context.previousSdpAnswerAsString = '';\n                    this.logAndThrow(`Error occurred while trying to decompress the SDP answer.`);\n                }\n                this.context.logger.info(`Decompressed the SDP message from ${subscribeAckFrame.compressedSdpAnswer.length} to ${decompressedText.length} bytes.`);\n                this.context.sdpAnswer = decompressedText;\n            }\n            else {\n                this.context.sdpAnswer = subscribeAckFrame.sdpAnswer;\n            }\n            this.context.previousSdpAnswerAsString = this.context.sdpAnswer;\n            this.context.videoStreamIndex.integrateSubscribeAckFrame(subscribeAckFrame);\n        });\n    }\n    // Our backends currently expect the video subscriptions passed in subscribe to precisely\n    // line up with the media sections, with a zero for any video send or inactive section.\n    //\n    // Firefox occasionally tosses stopped transceivers at the end of the SDP without reason\n    // and in general we don't want to be at the mercy of SDP sections not being in the same\n    // order as `getTransceivers`, so we simply recalculate the array here to enforce that\n    // expected invarient until we refactor our signaling to simply take a mapping of MID to\n    // subscription.\n    //\n    // This only works on Unified Plan SDPs\n    fixUpSubscriptionOrder(sdp, videoSubscriptions) {\n        if (this.context.transceiverController.getMidForStreamId === undefined) {\n            return videoSubscriptions;\n        }\n        const midsToStreamIds = new Map();\n        for (const streamId of videoSubscriptions) {\n            // The local description will have been set by the time this task is running, so all\n            // of the transceivers should have `mid` set by now (see comment above `getMidForStreamId`)\n            const mid = this.context.transceiverController.getMidForStreamId(streamId);\n            if (mid === undefined) {\n                if (streamId !== 0) {\n                    // Send section or inactive section\n                    this.logger.warn(`Could not find MID for stream ID: ${streamId}`);\n                }\n                continue;\n            }\n            midsToStreamIds.set(mid, streamId);\n        }\n        const sections = new SDP_1.default(sdp).mediaSections();\n        const newSubscriptions = [];\n        for (const section of sections) {\n            if (section.mediaType !== 'video') {\n                continue;\n            }\n            if (section.direction === 'recvonly') {\n                const streamId = midsToStreamIds.get(section.mid);\n                if (streamId === undefined) {\n                    this.logger.warn(`Could not find stream ID for MID: ${section.mid}`);\n                    continue;\n                }\n                newSubscriptions.push(streamId);\n            }\n            else {\n                newSubscriptions.push(0);\n            }\n        }\n        this.logger.info(`Fixed up ${JSON.stringify(videoSubscriptions)} to ${JSON.stringify(newSubscriptions)} (may be same))}`);\n        return newSubscriptions;\n    }\n    convertVideoPreferencesToVideoSubscriptionConfiguration(receiveStreamIds, preferences) {\n        if (this.context.transceiverController.getMidForStreamId === undefined ||\n            preferences === undefined) {\n            return [];\n        }\n        const configurations = new Array();\n        const attendeeIdToMid = new Map();\n        const attendeeIdToGroupId = new Map();\n        for (const streamId of receiveStreamIds) {\n            // The local description will have been set by the time this task is running, so all\n            // of the transceivers should have `mid` set by now (see comment above `getMidForStreamId`)\n            const mid = this.context.transceiverController.getMidForStreamId(streamId);\n            if (mid === undefined) {\n                // Likely imposible to hit the next `if` given use of `fixUpSubscriptionOrder`\n                /* istanbul ignore if */\n                if (streamId !== 0) {\n                    // Send section or inactive section\n                    this.context.logger.warn(`Could not find MID for stream ID: ${streamId}`);\n                }\n                continue;\n            }\n            const attendeeId = this.context.videoStreamIndex.attendeeIdForStreamId(streamId);\n            attendeeIdToMid.set(attendeeId, mid);\n            attendeeIdToGroupId.set(attendeeId, this.context.videoStreamIndex.groupIdForStreamId(streamId));\n        }\n        for (const preference of preferences) {\n            const configuration = new SignalingClientVideoSubscriptionConfiguration_1.default();\n            const mid = attendeeIdToMid.get(preference.attendeeId);\n            if (mid === undefined) {\n                this.context.logger.warn(`Could not find MID for attendee ID: ${preference.attendeeId}`);\n                continue;\n            }\n            configuration.mid = mid;\n            configuration.attendeeId = preference.attendeeId;\n            configuration.groupId = attendeeIdToGroupId.get(preference.attendeeId);\n            // The signaling protocol expects 'higher' values for 'higher' priorities\n            configuration.priority = Number.MAX_SAFE_INTEGER - preference.priority;\n            configuration.targetBitrateKbps = preference.targetSizeToBitrateKbps(preference.targetSize);\n            configurations.push(configuration);\n        }\n        return configurations;\n    }\n    receiveSubscribeAck() {\n        return new Promise((resolve, reject) => {\n            const context = this.context;\n            class Interceptor {\n                constructor(signalingClient) {\n                    this.signalingClient = signalingClient;\n                }\n                cancel() {\n                    this.signalingClient.removeObserver(this);\n                    reject(new Error(`SubscribeAndReceiveSubscribeAckTask got canceled while waiting for SdkSubscribeAckFrame`));\n                }\n                handleSignalingClientEvent(event) {\n                    if (event.isConnectionTerminated()) {\n                        const message = `SubscribeAndReceiveSubscribeAckTask connection was terminated with code ${event.closeCode} and reason: ${event.closeReason}`;\n                        context.logger.warn(message);\n                        let statusCode = MeetingSessionStatusCode_1.default.TaskFailed;\n                        if (event.closeCode >= 4500 && event.closeCode < 4600) {\n                            statusCode = MeetingSessionStatusCode_1.default.SignalingInternalServerError;\n                        }\n                        context.audioVideoController.handleMeetingSessionStatus(new MeetingSessionStatus_1.default(statusCode), new Error(message));\n                        return;\n                    }\n                    if (event.type !== SignalingClientEventType_1.default.ReceivedSignalFrame ||\n                        event.message.type !== SignalingProtocol_js_1.SdkSignalFrame.Type.SUBSCRIBE_ACK) {\n                        return;\n                    }\n                    this.signalingClient.removeObserver(this);\n                    // @ts-ignore: force cast to SdkSubscribeAckFrame\n                    const subackFrame = event.message.suback;\n                    resolve(subackFrame);\n                }\n            }\n            const interceptor = new Interceptor(this.context.signalingClient);\n            this.context.signalingClient.registerObserver(interceptor);\n            this.taskCanceler = interceptor;\n        });\n    }\n}\nexports.default = SubscribeAndReceiveSubscribeAckTask;\n//# sourceMappingURL=SubscribeAndReceiveSubscribeAckTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst TimeoutScheduler_1 = require(\"../scheduler/TimeoutScheduler\");\nconst BaseTask_1 = require(\"./BaseTask\");\n/**\n * [[TimeoutTask]] runs a subtask until it either succeeds or reaches a\n * timeout, at which point the subtask is canceled.\n */\nclass TimeoutTask extends BaseTask_1.default {\n    constructor(logger, taskToRunBeforeTimeout, timeoutMs) {\n        super(logger);\n        this.taskToRunBeforeTimeout = taskToRunBeforeTimeout;\n        this.timeoutMs = timeoutMs;\n        this.taskName = `Timeout${this.timeoutMs}ms`;\n        taskToRunBeforeTimeout.setParent(this);\n    }\n    cancel() {\n        this.logger.info(`canceling timeout task ${this.name()} subtask ${this.taskToRunBeforeTimeout}`);\n        this.taskToRunBeforeTimeout.cancel();\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const timer = new TimeoutScheduler_1.default(this.timeoutMs);\n            timer.start(() => {\n                this.logger.info(`timeout reached for task ${this.name()}`);\n                this.taskToRunBeforeTimeout.cancel();\n            });\n            try {\n                yield this.taskToRunBeforeTimeout.run();\n            }\n            finally {\n                timer.stop();\n            }\n            this.logger.info(`timeout task ${this.name()} completed`);\n        });\n    }\n}\nexports.default = TimeoutTask;\n//# sourceMappingURL=TimeoutTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MeetingSessionStatusCode_1 = require(\"../meetingsession/MeetingSessionStatusCode\");\nconst BaseTask_1 = require(\"./BaseTask\");\n/*\n * [[WaitForAttendeePresenceTask]] waits until an attendee presence event happens.\n */\nclass WaitForAttendeePresenceTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'WaitForAttendeePresenceTask';\n    }\n    cancel() {\n        // Just in case. The baseCancel behavior should prevent this.\n        /* istanbul ignore else */\n        if (this.cancelPromise) {\n            const error = new Error(`canceling ${this.name()} due to the meeting status code: ${MeetingSessionStatusCode_1.default.NoAttendeePresent}`);\n            this.cancelPromise(error);\n            delete this.cancelPromise;\n        }\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const attendeeId = this.context.meetingSessionConfiguration.credentials.attendeeId;\n            return new Promise((resolve, reject) => {\n                const handler = (presentAttendeeId, present, _externalUserId, _dropped, _pos) => {\n                    if (attendeeId === presentAttendeeId && present) {\n                        this.context.realtimeController.realtimeUnsubscribeToAttendeeIdPresence(handler);\n                        resolve();\n                        delete this.cancelPromise;\n                    }\n                };\n                this.cancelPromise = (error) => {\n                    this.context.realtimeController.realtimeUnsubscribeToAttendeeIdPresence(handler);\n                    reject(error);\n                };\n                this.context.realtimeController.realtimeSubscribeToAttendeeIdPresence(handler);\n            });\n        });\n    }\n}\nexports.default = WaitForAttendeePresenceTask;\n//# sourceMappingURL=WaitForAttendeePresenceTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass DefaultTransceiverController {\n    constructor(logger, browserBehavior) {\n        this.logger = logger;\n        this.browserBehavior = browserBehavior;\n        this._localCameraTransceiver = null;\n        this._localAudioTransceiver = null;\n        this.videoSubscriptions = [];\n        this.defaultMediaStream = null;\n        this.peer = null;\n        this.streamIdToTransceiver = new Map();\n    }\n    setEncodingParameters(encodingParamMap) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._localCameraTransceiver || this._localCameraTransceiver.direction !== 'sendrecv') {\n                return;\n            }\n            const sender = this._localCameraTransceiver.sender;\n            if (!encodingParamMap || encodingParamMap.size === 0) {\n                return;\n            }\n            const newEncodingParams = Array.from(encodingParamMap.values());\n            const oldParam = sender.getParameters();\n            if (!oldParam.encodings || oldParam.encodings.length === 0) {\n                oldParam.encodings = newEncodingParams;\n            }\n            else {\n                for (const existing of oldParam.encodings) {\n                    for (const changed of newEncodingParams) {\n                        if ((existing.rid || changed.rid) && existing.rid !== changed.rid) {\n                            continue;\n                        }\n                        let key;\n                        for (key in changed) {\n                            // These properties can't be changed.\n                            if (key === 'rid' || key === 'codecPayloadType') {\n                                continue;\n                            }\n                            /* istanbul ignore else */\n                            if (changed.hasOwnProperty(key)) {\n                                existing[key] = changed[key];\n                            }\n                        }\n                    }\n                }\n            }\n            yield sender.setParameters(oldParam);\n        });\n    }\n    localAudioTransceiver() {\n        return this._localAudioTransceiver;\n    }\n    localVideoTransceiver() {\n        return this._localCameraTransceiver;\n    }\n    setVideoSendingBitrateKbps(bitrateKbps) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._localCameraTransceiver || this._localCameraTransceiver.direction !== 'sendrecv') {\n                return;\n            }\n            const sender = this._localCameraTransceiver.sender;\n            if (!sender || bitrateKbps <= 0) {\n                return;\n            }\n            const param = sender.getParameters();\n            if (!param.encodings) {\n                param.encodings = [{}];\n            }\n            for (const encodeParam of param.encodings) {\n                encodeParam.maxBitrate = bitrateKbps * 1000;\n            }\n            yield sender.setParameters(param);\n        });\n    }\n    setPeer(peer) {\n        this.peer = peer;\n    }\n    reset() {\n        this._localCameraTransceiver = null;\n        this._localAudioTransceiver = null;\n        this.videoSubscriptions = [];\n        this.defaultMediaStream = null;\n        this.peer = null;\n    }\n    useTransceivers() {\n        return !!this.peer && typeof this.peer.getTransceivers !== 'undefined';\n    }\n    hasVideoInput() {\n        if (!this._localCameraTransceiver || this._localCameraTransceiver.direction !== 'sendrecv')\n            return false;\n        return true;\n    }\n    trackIsVideoInput(track) {\n        if (!this._localCameraTransceiver) {\n            return false;\n        }\n        return (track === this._localCameraTransceiver.sender.track ||\n            track === this._localCameraTransceiver.receiver.track);\n    }\n    setupLocalTransceivers() {\n        if (!this.useTransceivers()) {\n            return;\n        }\n        if (!this.defaultMediaStream && typeof MediaStream !== 'undefined') {\n            this.defaultMediaStream = new MediaStream();\n        }\n        if (!this._localAudioTransceiver) {\n            this._localAudioTransceiver = this.peer.addTransceiver('audio', {\n                direction: 'inactive',\n                streams: [this.defaultMediaStream],\n            });\n        }\n        if (!this._localCameraTransceiver) {\n            this._localCameraTransceiver = this.peer.addTransceiver('video', {\n                direction: 'inactive',\n                streams: [this.defaultMediaStream],\n            });\n        }\n    }\n    replaceAudioTrack(track) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._localAudioTransceiver || this._localAudioTransceiver.direction !== 'sendrecv') {\n                this.logger.info(`audio transceiver direction is not set up or not activated`);\n                return false;\n            }\n            yield this._localAudioTransceiver.sender.replaceTrack(track);\n            return true;\n        });\n    }\n    setAudioInput(track) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.setTransceiverInput(this._localAudioTransceiver, track);\n            return;\n        });\n    }\n    setVideoInput(track) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.setTransceiverInput(this._localCameraTransceiver, track);\n            return;\n        });\n    }\n    updateVideoTransceivers(videoStreamIndex, videosToReceive) {\n        if (!this.useTransceivers()) {\n            return videosToReceive.array();\n        }\n        // See https://blog.mozilla.org/webrtc/rtcrtptransceiver-explored/ for details on transceivers\n        const transceivers = this.peer.getTransceivers();\n        // Subscription index 0 is reserved for transmitting camera.\n        // We mark inactive slots with 0 in the subscription array.\n        this.videoSubscriptions = [0];\n        videosToReceive = videosToReceive.clone();\n        this.updateTransceivers(transceivers, videoStreamIndex, videosToReceive);\n        this.logger.debug(() => {\n            return this.debugDumpTransceivers();\n        });\n        return this.videoSubscriptions;\n    }\n    updateTransceivers(transceivers, videoStreamIndex, videosToReceive) {\n        const videosRemaining = videosToReceive.array();\n        if (transceivers.length !== 0 && !transceivers[0].stop) {\n            // This function and its usage can be removed once we raise Chrome browser requirements\n            // to M88 (when `RTCRtpTransceiver.stop` was added)\n            this.logger.info('Updating transceivers without `stop` function');\n            this.updateTransceiverWithoutStop(transceivers, videoStreamIndex, videosRemaining);\n        }\n        else if (transceivers.length !== 0) {\n            this.updateTransceiverWithStop(transceivers, videoStreamIndex, videosRemaining);\n        }\n        // Add transceivers for the remaining subscriptions\n        for (const index of videosRemaining) {\n            // @ts-ignore\n            const transceiver = this.peer.addTransceiver('video', {\n                direction: 'recvonly',\n                streams: [new MediaStream()],\n            });\n            this.streamIdToTransceiver.set(index, transceiver);\n            this.videoSubscriptions.push(index);\n            this.logger.info(`adding transceiver mid: ${transceiver.mid} subscription: ${index} direction: recvonly`);\n        }\n    }\n    updateTransceiverWithStop(transceivers, videoStreamIndex, videosRemaining) {\n        // Begin counting out index in the the subscription array at 1 since the camera.\n        // Always occupies position 0 (whether active or not).\n        let n = 1;\n        // Reset since otherwise there will be stale indexes corresponding to\n        // stopped transceivers.\n        this.videoSubscriptions = [0];\n        for (const transceiver of transceivers) {\n            if (transceiver === this._localCameraTransceiver ||\n                !this.transceiverIsVideo(transceiver) ||\n                !transceiver.mid) {\n                continue;\n            }\n            let reusingTranceiver = false;\n            // See if we want this existing transceiver for a simulcast stream switch\n            //\n            // By convention with the service backend, msid is equal to the media section mid, prefixed with the string \"v_\";\n            // we use this to get the stream ID for the track\n            const streamId = videoStreamIndex.streamIdForTrack('v_' + transceiver.mid);\n            if (transceiver.direction !== 'inactive' && streamId !== undefined) {\n                for (const [index, recvStreamId] of videosRemaining.entries()) {\n                    // `streamId` may still be the same as `recvStreamId`\n                    if (videoStreamIndex.StreamIdsInSameGroup(streamId, recvStreamId)) {\n                        transceiver.direction = 'recvonly';\n                        this.videoSubscriptions[n] = recvStreamId;\n                        reusingTranceiver = true;\n                        this.streamIdToTransceiver.delete(streamId);\n                        this.streamIdToTransceiver.set(recvStreamId, transceiver);\n                        videosRemaining.splice(index, 1);\n                        break;\n                    }\n                }\n            }\n            if (!reusingTranceiver) {\n                this.videoSubscriptions[n] = 0;\n                this.logger.info(`Stopping MID: ${transceiver.mid}, direction: ${transceiver.direction}, current direction: ${transceiver.currentDirection}`);\n                // Clean up transceiver and mappings for streams that have been unsubscribed from.  Note we do not try to reuse\n                // old inactive transceivers for new streams as Firefox will reuse the last frame from\n                // that transceiver, and additionally we simply don't want to risk wiring up a transceiver\n                // to the incorrect video stream for no real benefit besides possible a smaller SDP size.\n                transceiver.stop(); // Note (as of Firefox 94): Firefox will keep these around forever\n                for (const [streamId, previousTransceiver] of this.streamIdToTransceiver.entries()) {\n                    if (transceiver.mid === previousTransceiver.mid) {\n                        this.streamIdToTransceiver.delete(streamId);\n                    }\n                }\n            }\n            n += 1;\n        }\n    }\n    // This function operates similarily to `updateTransceiverWithStop` with the following changes to account\n    // for the fact RTCRtpTransceiver.stop is not available on all supported browsers:\n    //  * We attempt to reuse inactive transceivers because libwebrtc will not remove them otherwise and\n    //    the SDP will grow endlessly.\n    //  * We mark unsubscribed transceivers as 'inactive' so that they can be reused. This requires using a\n    //    second for loop.\n    updateTransceiverWithoutStop(transceivers, videoStreamIndex, videosRemaining) {\n        let n = 1;\n        for (const transceiver of transceivers) {\n            if (transceiver === this._localCameraTransceiver || !this.transceiverIsVideo(transceiver)) {\n                continue;\n            }\n            this.videoSubscriptions[n] = 0;\n            if (transceiver.direction !== 'inactive') {\n                const streamId = videoStreamIndex.streamIdForTrack('v_' + transceiver.mid);\n                if (streamId !== undefined) {\n                    for (const [index, recvStreamId] of videosRemaining.entries()) {\n                        if (videoStreamIndex.StreamIdsInSameGroup(streamId, recvStreamId)) {\n                            transceiver.direction = 'recvonly';\n                            this.videoSubscriptions[n] = recvStreamId;\n                            this.streamIdToTransceiver.delete(streamId);\n                            this.streamIdToTransceiver.set(recvStreamId, transceiver);\n                            videosRemaining.splice(index, 1);\n                            break;\n                        }\n                    }\n                }\n            }\n            n += 1;\n        }\n        // Next fill in open slots and remove unused\n        n = 1;\n        for (const transceiver of transceivers) {\n            if (transceiver === this._localCameraTransceiver || !this.transceiverIsVideo(transceiver)) {\n                continue;\n            }\n            if (transceiver.direction === 'inactive' && videosRemaining.length > 0) {\n                // Fill available slot\n                transceiver.direction = 'recvonly';\n                const streamId = videosRemaining.shift();\n                this.videoSubscriptions[n] = streamId;\n                this.streamIdToTransceiver.set(streamId, transceiver);\n            }\n            else {\n                // Remove if no longer subscribed\n                if (this.videoSubscriptions[n] === 0) {\n                    transceiver.direction = 'inactive';\n                    for (const [streamId, previousTransceiver] of this.streamIdToTransceiver.entries()) {\n                        if (transceiver === previousTransceiver) {\n                            this.streamIdToTransceiver.delete(streamId);\n                        }\n                    }\n                }\n            }\n            n += 1;\n        }\n    }\n    getMidForStreamId(streamId) {\n        var _a;\n        return (_a = this.streamIdToTransceiver.get(streamId)) === null || _a === void 0 ? void 0 : _a.mid;\n    }\n    setStreamIdForMid(mid, newStreamId) {\n        for (const [streamId, transceiver] of this.streamIdToTransceiver.entries()) {\n            if (transceiver.mid === mid) {\n                this.streamIdToTransceiver.delete(streamId);\n                this.streamIdToTransceiver.set(newStreamId, transceiver);\n                return;\n            }\n        }\n    }\n    transceiverIsVideo(transceiver) {\n        return ((transceiver.receiver &&\n            transceiver.receiver.track &&\n            transceiver.receiver.track.kind === 'video') ||\n            (transceiver.sender && transceiver.sender.track && transceiver.sender.track.kind === 'video'));\n    }\n    debugDumpTransceivers() {\n        let msg = '';\n        let n = 0;\n        for (const transceiver of this.peer.getTransceivers()) {\n            if (!this.transceiverIsVideo(transceiver)) {\n                continue;\n            }\n            msg += `transceiver index=${n} mid=${transceiver.mid} subscription=${this.videoSubscriptions[n]} direction=${transceiver.direction}\\n`;\n            n += 1;\n        }\n        return msg;\n    }\n    setTransceiverInput(transceiver, track) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!transceiver) {\n                return;\n            }\n            if (track) {\n                transceiver.direction = 'sendrecv';\n            }\n            else {\n                transceiver.direction = 'inactive';\n            }\n            yield transceiver.sender.replaceTrack(track);\n        });\n    }\n}\nexports.default = DefaultTransceiverController;\n//# sourceMappingURL=DefaultTransceiverController.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultTransceiverController_1 = require(\"./DefaultTransceiverController\");\nclass SimulcastTransceiverController extends DefaultTransceiverController_1.default {\n    constructor(logger, browserBehavior) {\n        super(logger, browserBehavior);\n        this.videoQualityControlParameterMap = new Map();\n        let scale = 4;\n        for (let i = 0; i < SimulcastTransceiverController.NAME_ARR_ASCENDING.length; i++) {\n            const ridName = SimulcastTransceiverController.NAME_ARR_ASCENDING[i];\n            this.videoQualityControlParameterMap.set(ridName, {\n                rid: ridName,\n                scaleResolutionDownBy: scale,\n                maxBitrate: SimulcastTransceiverController.BITRATE_ARR_ASCENDING[i] * 1000,\n            });\n            scale = scale / 2;\n        }\n    }\n    // Note: `scaleResolutionDownBy` has only been tested with values 1, 2, and 4.\n    setEncodingParameters(encodingParamMap) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._localCameraTransceiver || this._localCameraTransceiver.direction !== 'sendrecv') {\n                return;\n            }\n            const sender = this._localCameraTransceiver.sender;\n            const newEncodingParams = Array.from(encodingParamMap.values());\n            if (newEncodingParams.length <= 0) {\n                return;\n            }\n            const oldParam = sender.getParameters();\n            if (!oldParam.encodings) {\n                oldParam.encodings = newEncodingParams;\n            }\n            else {\n                for (let i = 0; i < oldParam.encodings.length; i++) {\n                    if (oldParam.encodings[i].rid === SimulcastTransceiverController.LOW_LEVEL_NAME) {\n                        this.copyEncodingParams(encodingParamMap.get(SimulcastTransceiverController.LOW_LEVEL_NAME), oldParam.encodings[i]);\n                    }\n                    if (oldParam.encodings[i].rid === SimulcastTransceiverController.MID_LEVEL_NAME) {\n                        this.copyEncodingParams(encodingParamMap.get(SimulcastTransceiverController.MID_LEVEL_NAME), oldParam.encodings[i]);\n                    }\n                    if (oldParam.encodings[i].rid === SimulcastTransceiverController.HIGH_LEVEL_NAME) {\n                        this.copyEncodingParams(encodingParamMap.get(SimulcastTransceiverController.HIGH_LEVEL_NAME), oldParam.encodings[i]);\n                    }\n                }\n            }\n            yield sender.setParameters(oldParam);\n            this.logVideoTransceiverParameters();\n        });\n    }\n    setVideoSendingBitrateKbps(_bitrateKbps) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return;\n        });\n    }\n    setupLocalTransceivers() {\n        if (!this.useTransceivers()) {\n            return;\n        }\n        if (!this.defaultMediaStream && typeof MediaStream !== 'undefined') {\n            this.defaultMediaStream = new MediaStream();\n        }\n        if (!this._localAudioTransceiver) {\n            this._localAudioTransceiver = this.peer.addTransceiver('audio', {\n                direction: 'inactive',\n                streams: [this.defaultMediaStream],\n            });\n        }\n        if (!this._localCameraTransceiver) {\n            const encodingParams = Array.from(this.videoQualityControlParameterMap.values());\n            this._localCameraTransceiver = this.peer.addTransceiver('video', {\n                direction: 'inactive',\n                streams: [this.defaultMediaStream],\n                sendEncodings: encodingParams,\n            });\n        }\n    }\n    logVideoTransceiverParameters() {\n        const params = this._localCameraTransceiver.sender.getParameters();\n        const encodings = params.encodings;\n        let msg = 'simulcast: current encoding parameters \\n';\n        for (const encodingParam of encodings) {\n            msg += `rid=${encodingParam.rid} maxBitrate=${encodingParam.maxBitrate} active=${encodingParam.active} scaleDownBy=${encodingParam.scaleResolutionDownBy} maxFrameRate = ${encodingParam.maxFramerate} \\n`;\n        }\n        this.logger.info(msg);\n    }\n    copyEncodingParams(fromEncodingParams, toEncodingParams) {\n        toEncodingParams.active = fromEncodingParams.active;\n        toEncodingParams.maxBitrate = fromEncodingParams.maxBitrate;\n        toEncodingParams.scaleResolutionDownBy = fromEncodingParams.scaleResolutionDownBy;\n        toEncodingParams.maxFramerate = fromEncodingParams.maxFramerate;\n    }\n}\nexports.default = SimulcastTransceiverController;\nSimulcastTransceiverController.LOW_LEVEL_NAME = 'low';\nSimulcastTransceiverController.MID_LEVEL_NAME = 'mid';\nSimulcastTransceiverController.HIGH_LEVEL_NAME = 'hi';\nSimulcastTransceiverController.NAME_ARR_ASCENDING = ['low', 'mid', 'hi'];\nSimulcastTransceiverController.BITRATE_ARR_ASCENDING = [200, 400, 1100];\n//# sourceMappingURL=SimulcastTransceiverController.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SimulcastTransceiverController_1 = require(\"./SimulcastTransceiverController\");\nclass SimulcastContentShareTransceiverController extends SimulcastTransceiverController_1.default {\n    constructor(logger, browserBehavior) {\n        super(logger, browserBehavior);\n        let scale = 2;\n        this.videoQualityControlParameterMap = new Map();\n        for (let i = 0; i < SimulcastContentShareTransceiverController.NAME_ARR_ASCENDING.length; i++) {\n            const ridName = SimulcastContentShareTransceiverController.NAME_ARR_ASCENDING[i];\n            this.videoQualityControlParameterMap.set(ridName, {\n                rid: ridName,\n                scaleResolutionDownBy: scale,\n                maxBitrate: SimulcastContentShareTransceiverController.BITRATE_ARR_ASCENDING[i] * 1000,\n            });\n            scale = scale / 2;\n        }\n    }\n    // Note: `scaleResolutionDownBy` has only been tested with values 1, 2, and 4.\n    setEncodingParameters(encodingParamMap) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._localCameraTransceiver || this._localCameraTransceiver.direction !== 'sendrecv') {\n                return;\n            }\n            const sender = this._localCameraTransceiver.sender;\n            const newEncodingParams = Array.from(encodingParamMap.values());\n            if (newEncodingParams.length <= 0) {\n                return;\n            }\n            const oldParam = sender.getParameters();\n            if (!oldParam.encodings) {\n                oldParam.encodings = newEncodingParams;\n            }\n            else {\n                for (let i = 0; i < oldParam.encodings.length; i++) {\n                    if (oldParam.encodings[i].rid === SimulcastTransceiverController_1.default.LOW_LEVEL_NAME) {\n                        this.copyEncodingParams(encodingParamMap.get(SimulcastTransceiverController_1.default.LOW_LEVEL_NAME), oldParam.encodings[i]);\n                    }\n                    if (oldParam.encodings[i].rid === SimulcastTransceiverController_1.default.HIGH_LEVEL_NAME) {\n                        this.copyEncodingParams(encodingParamMap.get(SimulcastTransceiverController_1.default.HIGH_LEVEL_NAME), oldParam.encodings[i]);\n                    }\n                }\n            }\n            yield sender.setParameters(oldParam);\n            this.logVideoTransceiverParameters();\n        });\n    }\n}\nexports.default = SimulcastContentShareTransceiverController;\nSimulcastContentShareTransceiverController.NAME_ARR_ASCENDING = ['low', 'hi'];\nSimulcastContentShareTransceiverController.BITRATE_ARR_ASCENDING = [300, 1200];\n//# sourceMappingURL=SimulcastContentShareTransceiverController.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultTransceiverController_1 = require(\"./DefaultTransceiverController\");\nclass VideoOnlyTransceiverController extends DefaultTransceiverController_1.default {\n    constructor(logger, browserBehavior) {\n        super(logger, browserBehavior);\n    }\n    setupLocalTransceivers() {\n        if (!this.useTransceivers()) {\n            return;\n        }\n        if (!this.defaultMediaStream && typeof MediaStream !== 'undefined') {\n            this.defaultMediaStream = new MediaStream();\n        }\n        if (!this._localCameraTransceiver) {\n            this._localCameraTransceiver = this.peer.addTransceiver('video', {\n                direction: 'inactive',\n                streams: [this.defaultMediaStream],\n            });\n        }\n    }\n}\nexports.default = VideoOnlyTransceiverController;\n//# sourceMappingURL=VideoOnlyTransceiverController.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass DefaultVideoCaptureAndEncodeParameter {\n    constructor(cameraWidth, cameraHeight, cameraFrameRate, maxEncodeBitrateKbps, isSimulcast, scaleResolutionDownBy = 1) {\n        this.cameraWidth = cameraWidth;\n        this.cameraHeight = cameraHeight;\n        this.cameraFrameRate = cameraFrameRate;\n        this.maxEncodeBitrateKbps = maxEncodeBitrateKbps;\n        this.isSimulcast = isSimulcast;\n        this.scaleResolutionDownBy = scaleResolutionDownBy;\n    }\n    equal(other) {\n        let checkForEqual = other.captureWidth() === this.cameraWidth &&\n            other.captureHeight() === this.cameraHeight &&\n            other.captureFrameRate() === this.cameraFrameRate &&\n            other.encodeBitrates().length === this.encodeBitrates().length &&\n            other.encodeScaleResolutionDownBy().length === this.encodeScaleResolutionDownBy().length &&\n            other.encodeWidths().length === this.encodeWidths().length &&\n            other.encodeHeights().length === this.encodeHeights().length;\n        if (checkForEqual) {\n            for (let i = 0; i < other.encodeWidths().length; i++) {\n                if (other.encodeWidths()[i] !== this.encodeWidths()[i] ||\n                    other.encodeHeights()[i] !== this.encodeHeights()[i] ||\n                    other.encodeBitrates()[i] !== this.encodeBitrates()[i] ||\n                    other.encodeScaleResolutionDownBy()[i] !== this.encodeScaleResolutionDownBy()[i]) {\n                    checkForEqual = false;\n                    return checkForEqual;\n                }\n            }\n        }\n        return checkForEqual;\n    }\n    clone() {\n        return new DefaultVideoCaptureAndEncodeParameter(this.cameraWidth, this.cameraHeight, this.cameraFrameRate, this.maxEncodeBitrateKbps, this.isSimulcast, this.scaleResolutionDownBy);\n    }\n    captureWidth() {\n        return this.cameraWidth;\n    }\n    captureHeight() {\n        return this.cameraHeight;\n    }\n    captureFrameRate() {\n        return this.cameraFrameRate;\n    }\n    encodeBitrates() {\n        // TODO: add simulcast layer\n        return [this.maxEncodeBitrateKbps];\n    }\n    encodeScaleResolutionDownBy() {\n        return [this.scaleResolutionDownBy];\n    }\n    encodeWidths() {\n        return [this.cameraWidth];\n    }\n    encodeHeights() {\n        return [this.cameraHeight];\n    }\n}\nexports.default = DefaultVideoCaptureAndEncodeParameter;\n//# sourceMappingURL=DefaultVideoCaptureAndEncodeParameter.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TargetDisplaySize = void 0;\n/**\n * [[TargetDisplaySize]] represents the max resolution that a video stream can have when simulcast is enabled in priority based downlink policy.\n * If there is only one stream being sent, then this field will get ignored.  Its values currently parallel [[SimulcastLayers]].\n */\nvar TargetDisplaySize;\n(function (TargetDisplaySize) {\n    /**\n     * Low resolution video stream.\n     */\n    TargetDisplaySize[TargetDisplaySize[\"Low\"] = 0] = \"Low\";\n    /**\n     * Medium resolution video stream.\n     */\n    TargetDisplaySize[TargetDisplaySize[\"Medium\"] = 1] = \"Medium\";\n    /**\n     * High resolution video stream.\n     */\n    TargetDisplaySize[TargetDisplaySize[\"High\"] = 2] = \"High\";\n})(TargetDisplaySize = exports.TargetDisplaySize || (exports.TargetDisplaySize = {}));\nexports.default = TargetDisplaySize;\n//# sourceMappingURL=TargetDisplaySize.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst TargetDisplaySize_1 = require(\"./TargetDisplaySize\");\nclass VideoPreference {\n    /** Initializes a [[VideoPreference]] with the given properties.\n     *\n     * @param attendeeId Attendee ID of the client\n     * @param priority The relative priority of this attendee against others.\n     * @param targetSize The desired maximum simulcast layers to receive.\n     */\n    constructor(attendeeId, priority, targetSize) {\n        this.attendeeId = attendeeId;\n        this.priority = priority;\n        this.targetSize = targetSize !== undefined ? targetSize : TargetDisplaySize_1.default.High;\n    }\n    partialCompare(other) {\n        return this.priority - other.priority;\n    }\n    equals(other) {\n        return (this.attendeeId === other.attendeeId &&\n            this.targetSize === other.targetSize &&\n            this.priority === other.priority);\n    }\n    clone() {\n        return new VideoPreference(this.attendeeId, this.priority, this.targetSize);\n    }\n    targetSizeToBitrateKbps(targetSize) {\n        switch (targetSize) {\n            case TargetDisplaySize_1.default.High:\n                return VideoPreference.HIGH_BITRATE_KBPS;\n            case TargetDisplaySize_1.default.Medium:\n                return VideoPreference.MID_BITRATE_KBPS;\n            case TargetDisplaySize_1.default.Low:\n                return VideoPreference.LOW_BITRATE_KBPS;\n        }\n    }\n}\nexports.default = VideoPreference;\nVideoPreference.LOW_BITRATE_KBPS = 300;\nVideoPreference.MID_BITRATE_KBPS = 600;\nVideoPreference.HIGH_BITRATE_KBPS = 1200;\n//# sourceMappingURL=VideoPreference.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VideoPreferences = exports.MutableVideoPreferences = void 0;\nclass ObjectSet {\n    constructor(items = []) {\n        this.items = items;\n    }\n    static default() {\n        return new ObjectSet([]);\n    }\n    // Returns the items in sorted order.\n    [Symbol.iterator]() {\n        let i = 0;\n        const items = this.items;\n        return {\n            next() {\n                if (i < items.length) {\n                    return {\n                        done: false,\n                        value: items[i++],\n                    };\n                }\n                return {\n                    done: true,\n                    value: null,\n                };\n            },\n        };\n    }\n    first() {\n        return this.items[0];\n    }\n    add(item) {\n        // If this is used elsewhere, there needs to be a duplicate check here\n        this.items.push(item);\n    }\n    replaceFirst(newItem, f) {\n        const pos = this.items.findIndex(f);\n        if (pos === -1) {\n            // If this is used elsewhere, there needs to be a duplicate check here\n            this.items.push(newItem);\n        }\n        else if (!this.has(newItem)) {\n            this.items[pos] = newItem;\n        }\n        else {\n            this.items.splice(pos, 1);\n        }\n    }\n    remove(item) {\n        this.items = this.items.filter(a => !a.equals(item));\n    }\n    clear() {\n        this.items = [];\n    }\n    isEmpty() {\n        return this.items.length === 0;\n    }\n    equals(other) {\n        if (other === this) {\n            return true;\n        }\n        if (other.items.length !== this.items.length) {\n            return false;\n        }\n        // TODO: if we keep the arrays sorted correctly, not just by priority, then\n        // we don't need to do this painstaking O(n^2) work.\n        for (const item of this.items) {\n            if (!other.items.some(a => a.equals(item))) {\n                return false;\n            }\n        }\n        return true;\n    }\n    has(item) {\n        return this.items.some(a => a.equals(item));\n    }\n    some(f) {\n        return this.items.some(f);\n    }\n    clone() {\n        return new ObjectSet([...this.items]);\n    }\n    sort() {\n        this.items.sort((a, b) => a.partialCompare(b));\n    }\n    modify() {\n        // COW.\n        return new SetBuilder(this);\n    }\n}\nclass SetBuilder {\n    constructor(items = new ObjectSet()) {\n        this.items = items;\n        this.copied = false;\n    }\n    cow() {\n        if (this.copied) {\n            return;\n        }\n        this.items = this.items.clone();\n        this.copied = true;\n    }\n    add(item) {\n        // Don't actually need to COW unless the item is there to add.\n        if (this.items.has(item)) {\n            return;\n        }\n        this.cow();\n        this.items.add(item);\n    }\n    replaceFirst(newItem, f) {\n        // Don't actually need to COW unless the item is already there\n        // and there are no items to replace\n        if (this.items.has(newItem) && !this.items.some(f)) {\n            return;\n        }\n        this.cow();\n        this.items.replaceFirst(newItem, f);\n    }\n    remove(item) {\n        // Don't actually need to COW unless the item is there to remove.\n        if (!this.items.has(item)) {\n            return;\n        }\n        this.cow();\n        this.items.remove(item);\n    }\n    some(f) {\n        return this.items.some(f);\n    }\n    clear() {\n        if (this.items.isEmpty()) {\n            return;\n        }\n        this.cow();\n        this.items.clear();\n    }\n    build() {\n        // Immutable sets are always kept sorted!\n        if (this.copied) {\n            this.items.sort();\n        }\n        this.copied = false;\n        return this.items;\n    }\n}\nclass MutableVideoPreferences {\n    constructor(builder) {\n        this.builder = builder;\n    }\n    add(pref) {\n        this.builder.add(pref);\n    }\n    replaceFirst(newPref, f) {\n        this.builder.replaceFirst(newPref, f);\n    }\n    remove(pref) {\n        this.builder.remove(pref);\n    }\n    some(f) {\n        return this.builder.some(f);\n    }\n    clear() {\n        this.builder.clear();\n    }\n    build() {\n        return new VideoPreferences(this.builder.build());\n    }\n}\nexports.MutableVideoPreferences = MutableVideoPreferences;\nclass VideoPreferences {\n    /** @internal */\n    constructor(items) {\n        this.items = items;\n    }\n    static prepare() {\n        return new MutableVideoPreferences(new SetBuilder());\n    }\n    static default() {\n        return new VideoPreferences(ObjectSet.default());\n    }\n    [Symbol.iterator]() {\n        return this.items[Symbol.iterator]();\n    }\n    highestPriority() {\n        var _a;\n        return (_a = this.items.first()) === null || _a === void 0 ? void 0 : _a.priority;\n    }\n    // Our items happen to always be sorted!\n    sorted() {\n        return this.items[Symbol.iterator]();\n    }\n    equals(other) {\n        return other === this || this.items.equals(other.items);\n    }\n    modify() {\n        return new MutableVideoPreferences(this.items.modify());\n    }\n    some(f) {\n        return this.items.some(f);\n    }\n    isEmpty() {\n        return this.items.isEmpty();\n    }\n    clone() {\n        const videoPreferences = VideoPreferences.prepare();\n        for (const preference of this.items) {\n            videoPreferences.add(preference.clone());\n        }\n        return videoPreferences.build();\n    }\n}\nexports.VideoPreferences = VideoPreferences;\nexports.default = VideoPreferences;\n//# sourceMappingURL=VideoPreferences.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ServerSideNetworkAdaption_1 = require(\"../signalingclient/ServerSideNetworkAdaption\");\n/**\n * [[VideoPriorityBasedPolicyConfig]] contains the network issue response delay and network issue recovery delay.\n */\nclass VideoPriorityBasedPolicyConfig {\n    /** Initializes a [[VideoPriorityBasedPolicyConfig]] with the network event delays.\n     *\n     * @param networkIssueResponseDelayFactor Delays before reducing subscribed video bitrate. Input should be a value between 0 and 1.\n     * @param networkIssueRecoveryDelayFactor Delays before starting to increase bitrates after a network event and\n     * delays between increasing video bitrates on each individual stream. Input should be a value between 0 and 1.\n     */\n    constructor(networkIssueResponseDelayFactor = 0, networkIssueRecoveryDelayFactor = 0) {\n        this.networkIssueResponseDelayFactor = networkIssueResponseDelayFactor;\n        this.networkIssueRecoveryDelayFactor = networkIssueRecoveryDelayFactor;\n        this.currentNetworkEvent = 0 /* Stable */;\n        this.bandwidthDecreaseTimestamp = 0; // the last time bandwidth decreases\n        this.referenceBitrate = 0;\n        /**\n         * Additional server side features to be enabled for network adaption. This\n         * may be overridden by the server.\n         */\n        this.serverSideNetworkAdaption = ServerSideNetworkAdaption_1.default.Default;\n        if (networkIssueResponseDelayFactor < 0) {\n            networkIssueResponseDelayFactor = 0;\n        }\n        else if (networkIssueResponseDelayFactor > 1) {\n            networkIssueResponseDelayFactor = 1;\n        }\n        this.networkIssueResponseDelayFactor = networkIssueResponseDelayFactor;\n        if (networkIssueRecoveryDelayFactor < 0) {\n            networkIssueRecoveryDelayFactor = 0;\n        }\n        else if (networkIssueRecoveryDelayFactor > 1) {\n            networkIssueRecoveryDelayFactor = 1;\n        }\n        this.networkIssueRecoveryDelayFactor = networkIssueRecoveryDelayFactor;\n    }\n    // determine if subscribe is allowed based on network issue/recovery delays\n    allowSubscribe(numberOfParticipants, currentEstimated) {\n        let timeBeforeAllowSubscribeMs = 0;\n        const previousNetworkEvent = this.currentNetworkEvent;\n        if (currentEstimated > this.referenceBitrate) {\n            // if bw increases\n            this.currentNetworkEvent = 2 /* Increase */;\n            this.referenceBitrate = currentEstimated;\n            return true;\n        }\n        else if (currentEstimated < this.referenceBitrate) {\n            // if bw decreases, we use response delay\n            this.currentNetworkEvent = 1 /* Decrease */;\n            timeBeforeAllowSubscribeMs = this.getSubscribeDelay(this.currentNetworkEvent, numberOfParticipants);\n            if (previousNetworkEvent !== 1 /* Decrease */) {\n                this.bandwidthDecreaseTimestamp = Date.now();\n            }\n            else if (Date.now() - this.bandwidthDecreaseTimestamp > timeBeforeAllowSubscribeMs) {\n                this.referenceBitrate = currentEstimated;\n                return true;\n            }\n            return false;\n        }\n        else {\n            this.currentNetworkEvent = 0 /* Stable */;\n            return false;\n        }\n    }\n    // convert network event delay factor to actual delay in ms\n    getSubscribeDelay(event, numberOfParticipants) {\n        // left and right boundary of the delay\n        let subscribeDelay = VideoPriorityBasedPolicyConfig.MINIMUM_DELAY_MS;\n        const range = VideoPriorityBasedPolicyConfig.MAXIMUM_DELAY_MS -\n            VideoPriorityBasedPolicyConfig.MINIMUM_DELAY_MS;\n        const responseFactor = this.networkIssueResponseDelayFactor;\n        switch (event) {\n            case 1 /* Decrease */:\n                // we include number of participants here since bigger size of the meeting will generate higher bitrate\n                subscribeDelay += range * responseFactor * (1 + numberOfParticipants / 10);\n                subscribeDelay = Math.min(VideoPriorityBasedPolicyConfig.MAXIMUM_DELAY_MS, subscribeDelay);\n                break;\n        }\n        return subscribeDelay;\n    }\n}\nexports.default = VideoPriorityBasedPolicyConfig;\nVideoPriorityBasedPolicyConfig.MINIMUM_DELAY_MS = 2000;\nVideoPriorityBasedPolicyConfig.MAXIMUM_DELAY_MS = 8000;\n// presets\nVideoPriorityBasedPolicyConfig.Default = new VideoPriorityBasedPolicyConfig(0, 0);\nVideoPriorityBasedPolicyConfig.UnstableNetworkPreset = new VideoPriorityBasedPolicyConfig(0, 1);\nVideoPriorityBasedPolicyConfig.StableNetworkPreset = new VideoPriorityBasedPolicyConfig(1, 0);\n//# sourceMappingURL=VideoPriorityBasedPolicyConfig.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ClientMetricReportDirection_1 = require(\"../clientmetricreport/ClientMetricReportDirection\");\nconst ClientMetricReportMediaType_1 = require(\"../clientmetricreport/ClientMetricReportMediaType\");\nconst ContentShareConstants_1 = require(\"../contentsharecontroller/ContentShareConstants\");\nconst LogLevel_1 = require(\"../logger/LogLevel\");\nconst ServerSideNetworkAdaption_1 = require(\"../signalingclient/ServerSideNetworkAdaption\");\nconst DefaultVideoStreamIdSet_1 = require(\"../videostreamidset/DefaultVideoStreamIdSet\");\nconst TargetDisplaySize_1 = require(\"./TargetDisplaySize\");\nconst VideoPreference_1 = require(\"./VideoPreference\");\nconst VideoPreferences_1 = require(\"./VideoPreferences\");\nconst VideoPriorityBasedPolicyConfig_1 = require(\"./VideoPriorityBasedPolicyConfig\");\n/** @internal */\nclass LinkMediaStats {\n    constructor() {\n        this.bandwidthEstimateKbps = 0;\n        this.usedBandwidthKbps = 0;\n        this.packetsLost = 0;\n        this.nackCount = 0;\n        this.rttMs = 0;\n    }\n}\nclass VideoPriorityBasedPolicy {\n    constructor(logger, videoPriorityBasedPolicyConfig = VideoPriorityBasedPolicyConfig_1.default.Default) {\n        this.logger = logger;\n        this.videoPriorityBasedPolicyConfig = videoPriorityBasedPolicyConfig;\n        this.shouldPauseTiles = true;\n        this.observerQueue = new Set();\n        this.pausedBwAttendeeIds = new Set();\n        this.reset();\n    }\n    reset() {\n        this.optimalReceiveSet = new DefaultVideoStreamIdSet_1.default();\n        this.optimalReceiveStreams = [];\n        this.optimalNonPausedReceiveStreams = [];\n        this.subscribedReceiveSet = new DefaultVideoStreamIdSet_1.default();\n        this.subscribedReceiveStreams = [];\n        this.videoPreferences = undefined;\n        this.defaultVideoPreferences = undefined;\n        this.shouldPauseTiles = true;\n        this.pausedStreamIds = new DefaultVideoStreamIdSet_1.default();\n        this.pausedBwAttendeeIds = new Set();\n        this.videoPreferencesUpdated = false;\n        this.logCount = 0;\n        this.startupPeriod = true;\n        this.usingPrevTargetRate = false;\n        this.rateProbeState = \"Not Probing\" /* NotProbing */;\n        this.firstEstimateTimestamp = 0;\n        this.lastUpgradeRateKbps = 0;\n        this.timeBeforeAllowSubscribeMs = VideoPriorityBasedPolicy.MIN_TIME_BETWEEN_SUBSCRIBE_MS;\n        this.lastProbeTimestamp = Date.now();\n        this.timeBeforeAllowProbeMs = VideoPriorityBasedPolicy.MIN_TIME_BETWEEN_PROBE_MS;\n        this.downlinkStats = new LinkMediaStats();\n        this.prevDownlinkStats = new LinkMediaStats();\n        this.probeFailed = false;\n        this.serverSideNetworkAdaption = this.videoPriorityBasedPolicyConfig.serverSideNetworkAdaption;\n    }\n    bindToTileController(tileController) {\n        this.tileController = tileController;\n        this.logger.info('tileController bound');\n    }\n    // This function allows setting preferences without the need to inherit from this class\n    // which would require not using the internal keyword\n    chooseRemoteVideoSources(preferences) {\n        var _a;\n        if ((_a = this.videoPreferences) === null || _a === void 0 ? void 0 : _a.equals(preferences)) {\n            return;\n        }\n        this.videoPreferences = preferences === null || preferences === void 0 ? void 0 : preferences.clone();\n        this.videoPreferencesUpdated = true;\n        this.logger.info(`bwe: setVideoPreferences bwe: new preferences: ${JSON.stringify(preferences)}`);\n        return;\n    }\n    updateIndex(videoIndex) {\n        this.videoIndex = videoIndex;\n        if (!this.videoPreferences) {\n            this.updateDefaultVideoPreferences();\n        }\n    }\n    updateDefaultVideoPreferences() {\n        const attendeeIds = new Set();\n        for (const stream of this.videoIndex.remoteStreamDescriptions()) {\n            attendeeIds.add(stream.attendeeId);\n        }\n        const prefs = VideoPreferences_1.VideoPreferences.prepare();\n        const numAttendees = attendeeIds.size;\n        let targetDisplaySize = TargetDisplaySize_1.default.High;\n        if (numAttendees > 8) {\n            targetDisplaySize = TargetDisplaySize_1.default.Low;\n        }\n        else if (numAttendees > 4) {\n            targetDisplaySize = TargetDisplaySize_1.default.Medium;\n        }\n        for (const attendeeId of attendeeIds) {\n            prefs.add(new VideoPreference_1.default(attendeeId, 1, targetDisplaySize));\n        }\n        this.defaultVideoPreferences = prefs.build();\n    }\n    updateMetrics(clientMetricReport) {\n        if (!this.videoIndex || this.videoIndex.allStreams().empty()) {\n            return;\n        }\n        this.prevDownlinkStats = this.downlinkStats;\n        this.downlinkStats = new LinkMediaStats();\n        const metricReport = clientMetricReport.getObservableMetrics();\n        // availableIncomingBitrate is the standard stat but is not available in Firefox yet so only Safari for now.\n        this.downlinkStats.bandwidthEstimateKbps = metricReport.availableIncomingBitrate / 1000;\n        for (const ssrcStr in clientMetricReport.streamMetricReports) {\n            const ssrc = Number.parseInt(ssrcStr, 10);\n            const metrics = clientMetricReport.streamMetricReports[ssrc];\n            if (metrics.direction === ClientMetricReportDirection_1.default.DOWNSTREAM && metrics.mediaType === ClientMetricReportMediaType_1.default.VIDEO) {\n                // Only use video stream metrics\n                if (metrics.currentMetrics.hasOwnProperty('nackCount')) {\n                    this.downlinkStats.nackCount += clientMetricReport.countPerSecond('nackCount', ssrc);\n                }\n                if (metrics.currentMetrics.hasOwnProperty('packetsLost')) {\n                    this.downlinkStats.packetsLost += clientMetricReport.countPerSecond('packetsLost', ssrc);\n                }\n                if (metrics.currentMetrics.hasOwnProperty('bytesReceived')) {\n                    this.downlinkStats.usedBandwidthKbps +=\n                        clientMetricReport.bitsPerSecond('bytesReceived', ssrc) / 1000;\n                }\n            }\n        }\n    }\n    wantsResubscribe() {\n        this.calculateOptimalReceiveSet();\n        return !this.subscribedReceiveSet.equal(this.optimalReceiveSet);\n    }\n    chooseSubscriptions() {\n        if (!this.subscribedReceiveSet.equal(this.optimalReceiveSet)) {\n            this.lastSubscribeTimestamp = Date.now();\n        }\n        this.subscribedReceiveSet = this.optimalReceiveSet.clone();\n        this.subscribedReceiveStreams = this.optimalReceiveStreams.slice();\n        return this.subscribedReceiveSet.clone();\n    }\n    addObserver(observer) {\n        this.observerQueue.add(observer);\n    }\n    removeObserver(observer) {\n        this.observerQueue.delete(observer);\n    }\n    forEachObserver(observerFunc) {\n        for (const observer of this.observerQueue) {\n            observerFunc(observer);\n        }\n    }\n    setVideoPriorityBasedPolicyConfigs(config) {\n        this.videoPriorityBasedPolicyConfig = config;\n    }\n    calculateOptimalReceiveStreams() {\n        var _a;\n        const chosenStreams = [];\n        const remoteInfos = this.videoIndex.remoteStreamDescriptions();\n        if (remoteInfos.length === 0 || ((_a = this.videoPreferences) === null || _a === void 0 ? void 0 : _a.isEmpty())) {\n            this.optimalReceiveStreams = [];\n            return;\n        }\n        const lastProbeState = this.rateProbeState;\n        this.cleanBwPausedTiles(remoteInfos);\n        this.handleAppPausedStreams(chosenStreams, remoteInfos);\n        const sameStreamChoices = this.availStreamsSameAsLast(remoteInfos);\n        const noMajorChange = !this.startupPeriod && sameStreamChoices;\n        // If no major changes then don't allow subscribes for the allowed amount of time\n        if (noMajorChange &&\n            Date.now() - this.lastSubscribeTimestamp < this.timeBeforeAllowSubscribeMs) {\n            return;\n        }\n        // Sort streams by bitrate ascending.\n        remoteInfos.sort((a, b) => {\n            if (a.maxBitrateKbps === b.maxBitrateKbps) {\n                return a.streamId - b.streamId;\n            }\n            return a.maxBitrateKbps - b.maxBitrateKbps;\n        });\n        // Convert 0 avg bitrates to max and handle special cases\n        for (const info of remoteInfos) {\n            if (info.avgBitrateKbps === 0 || info.avgBitrateKbps > info.maxBitrateKbps) {\n                // Content can be a special case\n                if (info.attendeeId.endsWith(ContentShareConstants_1.default.Modality) && info.maxBitrateKbps < 100) {\n                    info.maxBitrateKbps = info.avgBitrateKbps;\n                }\n                else {\n                    info.avgBitrateKbps = info.maxBitrateKbps;\n                }\n            }\n        }\n        const rates = {\n            targetDownlinkBitrate: 0,\n            chosenTotalBitrate: 0,\n            deltaToNextUpgrade: 0,\n        };\n        rates.targetDownlinkBitrate = this.determineTargetRate();\n        const numberOfParticipants = this.subscribedReceiveSet.size();\n        const currentEstimated = this.downlinkStats.bandwidthEstimateKbps;\n        // Use videoPriorityBasedPolicyConfig to add additional delays based on network conditions\n        const dontAllowSubscribe = !this.videoPriorityBasedPolicyConfig.allowSubscribe(numberOfParticipants, currentEstimated);\n        if (this.probeFailed) {\n            // When probe failed, we set timeBeforeAllowSubscribeMs to 3x longer\n            // Since we have passed the subscribe interval now, we will try to probe again\n            this.probeFailed = false;\n            // For the same reason above, reset time before allow subscribe to default\n            this.timeBeforeAllowSubscribeMs = VideoPriorityBasedPolicy.MIN_TIME_BETWEEN_SUBSCRIBE_MS;\n            if (noMajorChange && dontAllowSubscribe)\n                return;\n        }\n        const upgradeStream = this.priorityPolicy(rates, remoteInfos, chosenStreams);\n        const skipProbe = this.serverSideNetworkAdaption !== ServerSideNetworkAdaption_1.default.None &&\n            this.serverSideNetworkAdaption !== ServerSideNetworkAdaption_1.default.Default;\n        let subscriptionChoice = 0 /* NewOptimal */;\n        // Look for probing or override opportunities\n        if (!skipProbe && !this.startupPeriod && sameStreamChoices) {\n            if (this.rateProbeState === \"Probing\" /* Probing */) {\n                subscriptionChoice = this.handleProbe(chosenStreams, rates.targetDownlinkBitrate);\n            }\n            else if (rates.deltaToNextUpgrade !== 0) {\n                subscriptionChoice = this.maybeOverrideOrProbe(chosenStreams, rates, upgradeStream);\n            }\n        }\n        else {\n            // If there was a change in streams to choose from, then cancel any probing or upgrades\n            this.setProbeState(\"Not Probing\" /* NotProbing */);\n            this.lastUpgradeRateKbps = 0;\n        }\n        this.prevRemoteInfos = remoteInfos;\n        this.videoPreferencesUpdated = false;\n        if (subscriptionChoice === 1 /* PreviousOptimal */) {\n            this.logger.info(`bwe: keepSameSubscriptions stats:${JSON.stringify(this.downlinkStats)}`);\n            this.prevTargetRateKbps = rates.targetDownlinkBitrate;\n            return;\n        }\n        if (subscriptionChoice === 2 /* PreProbe */) {\n            const subscribedRate = this.calculateSubscribeRate(this.preProbeNonPausedReceiveStreams);\n            this.optimalReceiveStreams = this.preProbeReceiveStreams.slice();\n            this.processBwPausedStreams(remoteInfos, this.preProbeNonPausedReceiveStreams);\n            this.logger.info('bwe: Use Pre-Probe subscription subscribedRate:' + subscribedRate);\n            return;\n        }\n        this.optimalNonPausedReceiveStreams = chosenStreams.slice();\n        const lastNumberPaused = this.pausedBwAttendeeIds.size;\n        this.processBwPausedStreams(remoteInfos, chosenStreams);\n        if (this.logger.getLogLevel() <= LogLevel_1.LogLevel.INFO &&\n            (this.logCount % 15 === 0 ||\n                this.rateProbeState !== lastProbeState ||\n                this.optimalReceiveStreams.length !== chosenStreams.length ||\n                lastNumberPaused !== this.pausedBwAttendeeIds.size)) {\n            this.logger.info(this.policyStateLogStr(remoteInfos, rates.targetDownlinkBitrate));\n            this.logCount = 0;\n        }\n        this.logCount++;\n        this.prevTargetRateKbps = rates.targetDownlinkBitrate;\n        this.optimalReceiveStreams = chosenStreams.slice();\n    }\n    calculateOptimalReceiveSet() {\n        const streamSelectionSet = new DefaultVideoStreamIdSet_1.default();\n        this.calculateOptimalReceiveStreams();\n        for (const stream of this.optimalReceiveStreams) {\n            streamSelectionSet.add(stream.streamId);\n        }\n        if (!this.optimalReceiveSet.equal(streamSelectionSet)) {\n            const subscribedRate = this.calculateSubscribeRate(this.optimalReceiveStreams);\n            this.logger.info(`bwe: new streamSelection: ${JSON.stringify(streamSelectionSet)} subscribedRate:${subscribedRate}`);\n        }\n        this.optimalReceiveSet = streamSelectionSet;\n    }\n    determineTargetRate() {\n        let targetBitrate = 0;\n        const now = Date.now();\n        // Startup phase handling.  During this period the estimate can be 0 or\n        // could still be slowly hunting for a steady state.  This startup ramp up\n        // can cause a series of subscribes which can be distracting. During this\n        // time just use our configured default value\n        if (this.downlinkStats.bandwidthEstimateKbps !== 0) {\n            if (this.firstEstimateTimestamp === 0) {\n                this.firstEstimateTimestamp = now;\n            }\n            // handle startup state where estimator is still converging.\n            if (this.startupPeriod) {\n                // Drop out of startup period if\n                // - estimate is above default\n                // - get packet loss and have a valid estimate\n                // - startup period has expired and rate is not still increasing\n                if (this.downlinkStats.bandwidthEstimateKbps >\n                    VideoPriorityBasedPolicy.DEFAULT_BANDWIDTH_KBPS ||\n                    this.downlinkStats.packetsLost > 0 ||\n                    (now - this.firstEstimateTimestamp > VideoPriorityBasedPolicy.STARTUP_PERIOD_MS &&\n                        this.downlinkStats.bandwidthEstimateKbps <=\n                            this.prevDownlinkStats.bandwidthEstimateKbps)) {\n                    this.startupPeriod = false;\n                    this.prevTargetRateKbps = this.downlinkStats.bandwidthEstimateKbps;\n                }\n            }\n            // If we are in the startup period and we haven't detected any packet loss, then\n            // keep it at the default to let the estimation get to a steady state\n            if (this.startupPeriod) {\n                targetBitrate = VideoPriorityBasedPolicy.DEFAULT_BANDWIDTH_KBPS;\n            }\n            else {\n                // We rely on our target bitrate being above what we are receiving to mark a probe as complete,\n                // however in browsers, the estimate can heavily lag behind the actual receive rate, especially when low.\n                //\n                // To mitigate this we override with the actual estimate plus some buffer if we aren't seeing packet loss.\n                if (this.rateProbeState === \"Probing\" /* Probing */ &&\n                    this.downlinkStats.usedBandwidthKbps > this.downlinkStats.bandwidthEstimateKbps &&\n                    this.downlinkStats.packetsLost < VideoPriorityBasedPolicy.SPURIOUS_PACKET_LOST_THRESHOLD) {\n                    this.logger.info(`bwe: In probe state, overriding estimate ${this.downlinkStats.bandwidthEstimateKbps} with actual receive bitrate ${this.downlinkStats.usedBandwidthKbps}`);\n                    targetBitrate =\n                        this.downlinkStats.usedBandwidthKbps +\n                            VideoPriorityBasedPolicy.USED_BANDWIDTH_OVERRIDE_BUFFER_KBPS;\n                }\n                else {\n                    targetBitrate = this.downlinkStats.bandwidthEstimateKbps;\n                }\n            }\n        }\n        else {\n            if (this.firstEstimateTimestamp === 0) {\n                targetBitrate = VideoPriorityBasedPolicy.DEFAULT_BANDWIDTH_KBPS;\n            }\n            else {\n                targetBitrate = this.prevTargetRateKbps;\n            }\n        }\n        // Estimated downlink rate can follow actual bandwidth or fall for a short period of time\n        // due to the absolute send time estimator incorrectly thinking that a delay in packets is\n        // a precursor to packet loss.  We have seen too many false positives on this, so we\n        // will ignore largish drops in the estimate if there is no packet loss\n        if (!this.startupPeriod &&\n            ((this.usingPrevTargetRate &&\n                this.downlinkStats.bandwidthEstimateKbps < this.prevTargetRateKbps) ||\n                this.downlinkStats.bandwidthEstimateKbps <\n                    (this.prevTargetRateKbps *\n                        (100 - VideoPriorityBasedPolicy.LARGE_RATE_CHANGE_TRIGGER_PERCENT)) /\n                        100 ||\n                this.downlinkStats.bandwidthEstimateKbps <\n                    (this.downlinkStats.usedBandwidthKbps *\n                        VideoPriorityBasedPolicy.LARGE_RATE_CHANGE_TRIGGER_PERCENT) /\n                        100) &&\n            this.downlinkStats.packetsLost === 0) {\n            // Set target to be the same as last\n            this.logger.debug(() => {\n                return 'bwe: ValidateRate: Using Previous rate ' + this.prevTargetRateKbps;\n            });\n            this.usingPrevTargetRate = true;\n            targetBitrate = this.prevTargetRateKbps;\n        }\n        else {\n            this.usingPrevTargetRate = false;\n        }\n        return targetBitrate;\n    }\n    setProbeState(newState) {\n        if (this.rateProbeState === newState) {\n            return false;\n        }\n        const now = Date.now();\n        switch (newState) {\n            case \"Not Probing\" /* NotProbing */:\n                this.probePendingStartTimestamp = 0;\n                break;\n            case \"Probe Pending\" /* ProbePending */:\n                if (this.lastProbeTimestamp === 0 ||\n                    now - this.lastProbeTimestamp > VideoPriorityBasedPolicy.MIN_TIME_BETWEEN_PROBE_MS) {\n                    this.probePendingStartTimestamp = now;\n                }\n                else {\n                    // Too soon to do a probe again\n                    return false;\n                }\n                break;\n            case \"Probing\" /* Probing */:\n                if (now - this.probePendingStartTimestamp > this.timeBeforeAllowProbeMs) {\n                    this.lastProbeTimestamp = now;\n                    this.preProbeReceiveStreams = this.subscribedReceiveStreams.slice();\n                    this.preProbeNonPausedReceiveStreams = this.optimalNonPausedReceiveStreams;\n                    // Increase the time allowed until the next probe\n                    this.timeBeforeAllowProbeMs = Math.min(this.timeBeforeAllowProbeMs * 2, VideoPriorityBasedPolicy.MAX_HOLD_BEFORE_PROBE_MS);\n                }\n                else {\n                    // Too soon to do probe\n                    return false;\n                }\n                break;\n        }\n        this.logger.info('bwe: setProbeState to ' + newState + ' from ' + this.rateProbeState);\n        this.rateProbeState = newState;\n        return true;\n    }\n    // Upgrade the stream id from the appropriate group or add it if it wasn't already in the list.\n    // Return the added amount of bandwidth\n    upgradeToStream(chosenStreams, upgradeStream) {\n        for (let i = 0; i < chosenStreams.length; i++) {\n            if (chosenStreams[i].groupId === upgradeStream.groupId) {\n                const diffRate = upgradeStream.avgBitrateKbps - chosenStreams[i].avgBitrateKbps;\n                this.logger.info('bwe: upgradeStream from ' + JSON.stringify(chosenStreams[i]) + ' to ' + upgradeStream);\n                this.lastUpgradeRateKbps = diffRate;\n                chosenStreams[i] = upgradeStream;\n                return diffRate;\n            }\n        }\n        // We are adding a stream and not upgrading.\n        chosenStreams.push(upgradeStream);\n        this.lastUpgradeRateKbps = upgradeStream.avgBitrateKbps;\n        return this.lastUpgradeRateKbps;\n    }\n    // Do specific behavior while we are currently in probing state and metrics\n    // indicate environment is still valid to do probing.\n    // Return true if the caller should not change from the previous subscriptions.\n    handleProbe(chosenStreams, targetDownlinkBitrate) {\n        // Don't allow probe to happen indefinitely\n        if (Date.now() - this.lastProbeTimestamp > VideoPriorityBasedPolicy.MAX_ALLOWED_PROBE_TIME_MS) {\n            this.logger.info(`bwe: Canceling probe due to timeout`);\n            this.setProbeState(\"Not Probing\" /* NotProbing */);\n            return 0 /* NewOptimal */;\n        }\n        if (this.downlinkStats.packetsLost > 0) {\n            this.logger.info(`bwe: Probe encountering packets lost:${this.downlinkStats.packetsLost}`);\n            // See comment above `VideoPriorityBasedPolicy.SPURIOUS_PACKET_LOST_THRESHOLD`\n            if (this.downlinkStats.packetsLost > VideoPriorityBasedPolicy.SPURIOUS_PACKET_LOST_THRESHOLD) {\n                this.setProbeState(\"Not Probing\" /* NotProbing */);\n                this.logger.info(`bwe: Canceling probe due to packets lost:${this.downlinkStats.packetsLost}`);\n                this.probeFailed = true;\n                this.timeBeforeAllowSubscribeMs =\n                    Math.max(VideoPriorityBasedPolicy.MIN_TIME_BETWEEN_SUBSCRIBE_MS, this.timeBeforeAllowSubscribeMs) * 3;\n                // packet lost indicates bad network and thus slowing down subscribing by extend delay by 3 times\n                return 2 /* PreProbe */;\n            }\n        }\n        const subscribedRate = this.calculateSubscribeRate(this.optimalReceiveStreams);\n        if (this.chosenStreamsSameAsLast(chosenStreams) || targetDownlinkBitrate > subscribedRate) {\n            this.logger.info(`bwe: Probe successful`);\n            // If target bitrate can sustain probe rate, then probe was successful.\n            this.setProbeState(\"Not Probing\" /* NotProbing */);\n            // Reset the time allowed between probes since this was successful\n            this.timeBeforeAllowProbeMs = VideoPriorityBasedPolicy.MIN_TIME_BETWEEN_PROBE_MS;\n            return 0 /* NewOptimal */;\n        }\n        return 1 /* PreviousOptimal */;\n    }\n    maybeOverrideOrProbe(chosenStreams, rates, upgradeStream) {\n        const sameSubscriptions = this.chosenStreamsSameAsLast(chosenStreams);\n        let useLastSubscriptions = 0 /* NewOptimal */;\n        // We want to minimize thrashing between between low res and high res of different\n        // participants due to avg bitrate fluctuations. If there hasn't been much of a change in estimated bandwidth\n        // and the number of streams and their max rates are the same, then reuse the previous subscription\n        const triggerPercent = rates.targetDownlinkBitrate > VideoPriorityBasedPolicy.LOW_BITRATE_THRESHOLD_KBPS\n            ? VideoPriorityBasedPolicy.TARGET_RATE_CHANGE_TRIGGER_PERCENT\n            : VideoPriorityBasedPolicy.TARGET_RATE_CHANGE_TRIGGER_PERCENT * 2;\n        const minTargetBitrateDelta = (rates.targetDownlinkBitrate * triggerPercent) / 100;\n        this.targetRateBaselineForDeltaCheckKbps =\n            this.targetRateBaselineForDeltaCheckKbps !== undefined\n                ? this.targetRateBaselineForDeltaCheckKbps\n                : this.prevTargetRateKbps;\n        if (!sameSubscriptions &&\n            Math.abs(rates.targetDownlinkBitrate - this.targetRateBaselineForDeltaCheckKbps) <\n                minTargetBitrateDelta) {\n            this.logger.info('bwe: MaybeOverrideOrProbe: Reuse last decision based on delta rate. {' +\n                JSON.stringify(this.subscribedReceiveSet) +\n                `}`);\n            useLastSubscriptions = 1 /* PreviousOptimal */;\n        }\n        else {\n            this.targetRateBaselineForDeltaCheckKbps = rates.targetDownlinkBitrate;\n        }\n        // If there has been packet loss, then reset to no probing state\n        if (this.downlinkStats.packetsLost > this.prevDownlinkStats.packetsLost) {\n            this.setProbeState(\"Not Probing\" /* NotProbing */);\n            this.lastUpgradeRateKbps = 0;\n            return useLastSubscriptions;\n        }\n        if (sameSubscriptions || useLastSubscriptions === 1 /* PreviousOptimal */) {\n            // If planned subscriptions are same as last, then either move to probe pending state\n            // or move to probing state if enough time has passed.\n            switch (this.rateProbeState) {\n                case \"Not Probing\" /* NotProbing */:\n                    this.setProbeState(\"Probe Pending\" /* ProbePending */);\n                    break;\n                case \"Probe Pending\" /* ProbePending */:\n                    if (this.setProbeState(\"Probing\" /* Probing */)) {\n                        this.upgradeToStream(chosenStreams, upgradeStream);\n                        useLastSubscriptions = 0 /* NewOptimal */;\n                    }\n                    break;\n            }\n        }\n        else {\n            this.setProbeState(\"Not Probing\" /* NotProbing */);\n        }\n        return useLastSubscriptions;\n    }\n    // Utility function to find max rate of streams in current decision\n    calculateSubscribeRate(streams) {\n        let subscribeRate = 0;\n        for (const stream of streams) {\n            if (!this.pausedStreamIds.contain(stream.streamId) &&\n                !this.pausedBwAttendeeIds.has(stream.attendeeId)) {\n                subscribeRate += stream.maxBitrateKbps;\n            }\n        }\n        return subscribeRate;\n    }\n    handleAppPausedStreams(chosenStreams, remoteInfos) {\n        if (!this.tileController) {\n            this.logger.warn('tileController not found!');\n            return;\n        }\n        this.pausedStreamIds = new DefaultVideoStreamIdSet_1.default();\n        const remoteTiles = this.tileController.getAllRemoteVideoTiles();\n        for (const tile of remoteTiles) {\n            const state = tile.state();\n            if (state.paused && !this.pausedBwAttendeeIds.has(state.boundAttendeeId)) {\n                let j = remoteInfos.length;\n                while (j--) {\n                    if (remoteInfos[j].attendeeId === state.boundAttendeeId) {\n                        this.logger.info('bwe: removed paused attendee ' +\n                            state.boundAttendeeId +\n                            ' streamId: ' +\n                            remoteInfos[j].streamId);\n                        this.pausedStreamIds.add(remoteInfos[j].streamId);\n                        // Add the stream to the selection set to keep the tile around\n                        if (this.subscribedReceiveSet.contain(remoteInfos[j].streamId)) {\n                            chosenStreams.push(remoteInfos[j]);\n                        }\n                        remoteInfos.splice(j, 1);\n                    }\n                }\n            }\n        }\n    }\n    processBwPausedStreams(remoteInfos, chosenStreams) {\n        if (!this.tileController) {\n            this.logger.warn('tileController not found!');\n            return;\n        }\n        const preferences = this.getCurrentVideoPreferences();\n        if (preferences && this.shouldPauseTiles) {\n            const videoTiles = this.tileController.getAllVideoTiles();\n            for (const preference of preferences) {\n                const videoTile = this.getVideoTileForAttendeeId(preference.attendeeId, videoTiles);\n                const paused = (videoTile === null || videoTile === void 0 ? void 0 : videoTile.state().paused) || false;\n                if (!chosenStreams.some(stream => stream.attendeeId === preference.attendeeId)) {\n                    // We cannot rely on the existance of video tile to indicate that the source exists in the call\n                    // because tiles will not be added or removed until after a full renegotiation (i.e. it will\n                    // be behind the state provided by the index)\n                    const streamExists = remoteInfos.some(stream => stream.attendeeId === preference.attendeeId);\n                    if (videoTile && streamExists) {\n                        const info = this.optimalReceiveStreams.find(stream => stream.attendeeId === preference.attendeeId);\n                        if (info !== undefined) {\n                            if (!paused) {\n                                this.logger.info(`bwe: pausing streamId ${info.streamId} attendee ${preference.attendeeId} due to bandwidth`);\n                                this.forEachObserver(observer => {\n                                    observer.tileWillBePausedByDownlinkPolicy(videoTile.id());\n                                });\n                                this.tileController.pauseVideoTile(videoTile.id());\n                            }\n                            chosenStreams.push(info);\n                        }\n                        this.pausedBwAttendeeIds.add(preference.attendeeId);\n                    }\n                    else if (streamExists) {\n                        // Create a tile for this participant if one doesn't already exist and mark it as paused\n                        // Don't include it in the chosen streams because we don't want to subscribe for it then have to pause it.\n                        const newTile = this.tileController.addVideoTile();\n                        newTile.bindVideoStream(preference.attendeeId, false, null, 0, 0, 0, null);\n                        this.forEachObserver(observer => {\n                            observer.tileWillBePausedByDownlinkPolicy(newTile.id());\n                        });\n                        newTile.pause();\n                        this.logger.info(`bwe: Created video tile ${newTile.id()} for bw paused attendee ${preference.attendeeId}`);\n                        this.pausedBwAttendeeIds.add(preference.attendeeId);\n                    }\n                }\n                else if (paused && this.pausedBwAttendeeIds.has(preference.attendeeId)) {\n                    this.logger.info(`bwe: unpausing attendee ${preference.attendeeId} due to bandwidth`);\n                    this.forEachObserver(observer => {\n                        observer.tileWillBeUnpausedByDownlinkPolicy(videoTile.id());\n                    });\n                    this.tileController.unpauseVideoTile(videoTile.id());\n                    this.pausedBwAttendeeIds.delete(preference.attendeeId);\n                }\n            }\n        }\n    }\n    cleanBwPausedTiles(remoteInfos) {\n        if (!this.tileController) {\n            this.logger.warn('tileController not found!');\n            return;\n        }\n        const tiles = this.tileController.getAllRemoteVideoTiles();\n        const preferences = this.getCurrentVideoPreferences();\n        for (const tile of tiles) {\n            const state = tile.state();\n            if (!state.boundVideoStream) {\n                if (!remoteInfos.some(stream => stream.attendeeId === state.boundAttendeeId)) {\n                    this.tileController.removeVideoTile(state.tileId);\n                    this.logger.info(`bwe: Removed video tile ${state.tileId} for bw paused attendee ${state.boundAttendeeId}`);\n                }\n                else if (preferences !== undefined &&\n                    !preferences.some(pref => pref.attendeeId === state.boundAttendeeId)) {\n                    this.tileController.removeVideoTile(state.tileId);\n                }\n            }\n        }\n    }\n    priorityPolicy(rates, remoteInfos, chosenStreams) {\n        let upgradeStream;\n        const videoPreferences = this.getCurrentVideoPreferences();\n        const highestPriority = videoPreferences.highestPriority();\n        let nextPriority;\n        let priority = highestPriority;\n        while (priority !== -1) {\n            nextPriority = -1;\n            for (const preference of videoPreferences) {\n                if (preference.priority === priority) {\n                    // First subscribe to at least low rate\n                    for (const info of remoteInfos) {\n                        if (info.attendeeId === preference.attendeeId) {\n                            if (!chosenStreams.some(stream => stream.groupId === info.groupId)) {\n                                if (rates.chosenTotalBitrate + info.avgBitrateKbps <= rates.targetDownlinkBitrate) {\n                                    chosenStreams.push(info);\n                                    rates.chosenTotalBitrate += info.avgBitrateKbps;\n                                }\n                                else if (rates.deltaToNextUpgrade === 0) {\n                                    // Keep track of step to next upgrade\n                                    rates.deltaToNextUpgrade = info.avgBitrateKbps;\n                                    upgradeStream = info;\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (preference.priority > priority) {\n                        nextPriority = preference.priority;\n                        break;\n                    }\n                }\n            }\n            // Now try to upgrade all attendee's with this priority\n            for (const preference of videoPreferences) {\n                if (preference.priority === priority) {\n                    for (const info of remoteInfos) {\n                        if (info.attendeeId === preference.attendeeId) {\n                            const index = chosenStreams.findIndex(stream => stream.groupId === info.groupId && stream.maxBitrateKbps < info.maxBitrateKbps);\n                            if (index !== -1) {\n                                const increaseKbps = info.avgBitrateKbps - chosenStreams[index].avgBitrateKbps;\n                                if (this.hasSimulcastStreams(remoteInfos, info.attendeeId, info.groupId) &&\n                                    this.canUpgrade(info.avgBitrateKbps, preference.targetSize, preference.targetSizeToBitrateKbps(preference.targetSize), info.attendeeId.endsWith(ContentShareConstants_1.default.Modality))) {\n                                    this.logger.info(`bwe: attendee: ${info.attendeeId} group: ${info.groupId} has simulcast and can upgrade avgBitrate: ${info.avgBitrateKbps} target: ${preference.targetSizeToBitrateKbps(preference.targetSize)} targetTotalBitrate: ${rates.targetDownlinkBitrate}`);\n                                    if (rates.chosenTotalBitrate + increaseKbps <= rates.targetDownlinkBitrate) {\n                                        rates.chosenTotalBitrate += increaseKbps;\n                                        chosenStreams[index] = info;\n                                    }\n                                    else if (rates.deltaToNextUpgrade === 0) {\n                                        // Keep track of step to next upgrade\n                                        rates.deltaToNextUpgrade = increaseKbps;\n                                        upgradeStream = info;\n                                    }\n                                }\n                                else {\n                                    this.logger.info('bwe: cannot upgrade stream quality beyond target size');\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (preference.priority > priority) {\n                        break;\n                    }\n                }\n            }\n            // If we haven't subscribed to the highest rate of the top priority videos then\n            // do not subscribe to any other sources\n            if (priority === highestPriority && rates.deltaToNextUpgrade !== 0) {\n                break;\n            }\n            priority = nextPriority;\n        }\n        return upgradeStream;\n    }\n    getVideoTileForAttendeeId(attendeeId, videoTiles) {\n        for (const tile of videoTiles) {\n            const state = tile.state();\n            if (state.boundAttendeeId === attendeeId) {\n                return tile;\n            }\n        }\n        return null;\n    }\n    canUpgrade(bitrateKbp, targetResolution, targetBitrateKbp, isContent) {\n        // For content share, even if the higher quality stream has a high max bitrate of 1200 kbps for example\n        // the avg bitrate can be way lower so have to make sure that we do not update to a higher bitrate than the\n        // target value.\n        // This does not apply to video as video uplink bandwidth could change the max bitrate value without resubscribing\n        // so the max bitrate value might not be up-to-date on the downlink side. Also in the case of video, the avg\n        // bitrate is close to the actual max bitrate.\n        let canUpgrade = false;\n        if (isContent) {\n            // Content simulcast only have 2 layers right now so we always upgrade if the target resolution is high and\n            // skip if the target resolution is low. If the target resolution is medium then fall back to use avg bitrate\n            // as video.\n            if (targetResolution === TargetDisplaySize_1.default.High) {\n                canUpgrade = true;\n            }\n            else if (targetResolution === TargetDisplaySize_1.default.Medium && bitrateKbp <= targetBitrateKbp) {\n                canUpgrade = true;\n            }\n        }\n        else if (bitrateKbp <= targetBitrateKbp) {\n            canUpgrade = true;\n        }\n        if (canUpgrade) {\n            this.logger.info(`bwe: canUpgrade: bitrateKbp: ${bitrateKbp} targetBitrateKbp: ${targetBitrateKbp}`);\n            return true;\n        }\n        this.logger.info(`bwe: cannot Upgrade: bitrateKbp: ${bitrateKbp} targetBitrateKbp: ${targetBitrateKbp}`);\n        return false;\n    }\n    hasSimulcastStreams(remoteInfos, attendeeId, groupId) {\n        let streamCount = 0;\n        for (const info of remoteInfos) {\n            if (info.attendeeId === attendeeId && info.groupId === groupId) {\n                streamCount++;\n            }\n        }\n        this.logger.info(`bwe: attendeeId: ${attendeeId} groupId: ${groupId} hasSimulcastStreams: streamCount: ${streamCount}`);\n        return streamCount > 1;\n    }\n    availStreamsSameAsLast(remoteInfos) {\n        if (this.prevRemoteInfos === undefined ||\n            remoteInfos.length !== this.prevRemoteInfos.length ||\n            this.videoPreferencesUpdated === true) {\n            return false;\n        }\n        for (const info of remoteInfos) {\n            const infoMatch = this.prevRemoteInfos.find(prevInfo => prevInfo.groupId === info.groupId &&\n                prevInfo.streamId === info.streamId &&\n                prevInfo.maxBitrateKbps === info.maxBitrateKbps);\n            if (infoMatch === undefined) {\n                return false;\n            }\n        }\n        return true;\n    }\n    chosenStreamsSameAsLast(chosenStreams) {\n        if (this.optimalNonPausedReceiveStreams.length !== chosenStreams.length) {\n            return false;\n        }\n        for (const lastStream of this.optimalNonPausedReceiveStreams) {\n            if (!chosenStreams.some(stream => stream.streamId === lastStream.streamId)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    policyStateLogStr(remoteInfos, targetDownlinkBitrate) {\n        const subscribedRate = this.calculateSubscribeRate(this.optimalReceiveStreams);\n        const optimalReceiveSet = {\n            targetBitrate: targetDownlinkBitrate,\n            subscribedRate: subscribedRate,\n            probeState: this.rateProbeState,\n            startupPeriod: this.startupPeriod,\n        };\n        // Reduced remote info logging:\n        let remoteInfoStr = `remoteInfos: [`;\n        for (const info of remoteInfos) {\n            remoteInfoStr += `{grpId:${info.groupId} strId:${info.streamId} maxBr:${info.maxBitrateKbps} avgBr:${info.avgBitrateKbps}}, `;\n        }\n        remoteInfoStr += `]`;\n        let logString = `bwe: optimalReceiveSet ${JSON.stringify(optimalReceiveSet)}\\n` +\n            `bwe:   prev ${JSON.stringify(this.prevDownlinkStats)}\\n` +\n            `bwe:   now  ${JSON.stringify(this.downlinkStats)}\\n` +\n            `bwe:   ${remoteInfoStr}\\n`;\n        if (this.pausedStreamIds.size() > 0 || this.pausedBwAttendeeIds.size > 0) {\n            logString += `bwe:   paused: app stream ids ${JSON.stringify(this.pausedStreamIds)}  bw attendees { ${Array.from(this.pausedBwAttendeeIds).join(' ')} }\\n`;\n        }\n        if (this.videoPreferences) {\n            logString += `bwe:   preferences: ${JSON.stringify(this.videoPreferences)}`;\n        }\n        else {\n            logString += `bwe:   default preferences: ${JSON.stringify(this.defaultVideoPreferences)}`;\n        }\n        return logString;\n    }\n    getCurrentVideoPreferences() {\n        return this.videoPreferences || this.defaultVideoPreferences;\n    }\n    getServerSideNetworkAdaption() {\n        return this.serverSideNetworkAdaption;\n    }\n    setServerSideNetworkAdaption(adaption) {\n        this.serverSideNetworkAdaption = adaption;\n        this.setProbeState(\"Not Probing\" /* NotProbing */); // In case we were probing\n    }\n    supportedServerSideNetworkAdaptions() {\n        return [ServerSideNetworkAdaption_1.default.None, ServerSideNetworkAdaption_1.default.BandwidthProbing];\n    }\n    getVideoPreferences() {\n        let preferences = this.getCurrentVideoPreferences();\n        if (!preferences) {\n            const dummyPreferences = VideoPreferences_1.VideoPreferences.prepare();\n            // Can't be undefined, occasionally the audio video controller\n            // will call this function before the first index is received\n            preferences = dummyPreferences.build();\n        }\n        return preferences;\n    }\n}\nexports.default = VideoPriorityBasedPolicy;\nVideoPriorityBasedPolicy.DEFAULT_BANDWIDTH_KBPS = 2800;\nVideoPriorityBasedPolicy.STARTUP_PERIOD_MS = 6000;\nVideoPriorityBasedPolicy.LARGE_RATE_CHANGE_TRIGGER_PERCENT = 20;\nVideoPriorityBasedPolicy.TARGET_RATE_CHANGE_TRIGGER_PERCENT = 15;\nVideoPriorityBasedPolicy.LOW_BITRATE_THRESHOLD_KBPS = 300;\nVideoPriorityBasedPolicy.MIN_TIME_BETWEEN_PROBE_MS = 5000;\nVideoPriorityBasedPolicy.MIN_TIME_BETWEEN_SUBSCRIBE_MS = 2000;\n// We apply exponentional backoff to probe attempts if they do not\n// succeed, so we need to set a reasonable maximum.\nVideoPriorityBasedPolicy.MAX_HOLD_BEFORE_PROBE_MS = 30000;\nVideoPriorityBasedPolicy.MAX_ALLOWED_PROBE_TIME_MS = 60000;\n// Occasionally we see that on unpause or upgrade we see a single packet lost\n// or two, even in completely unconstrained scenarios. We should look into\n// why this occurs on the backend, but for now we require a non-trivial\n// amount of packets lost to fail the probe. These could also be from\n// other senders given we don't yet use TWCC.\nVideoPriorityBasedPolicy.SPURIOUS_PACKET_LOST_THRESHOLD = 2;\n// See usage\nVideoPriorityBasedPolicy.USED_BANDWIDTH_OVERRIDE_BUFFER_KBPS = 100;\n//# sourceMappingURL=VideoPriorityBasedPolicy.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ContentShareConstants_1 = require(\"../contentsharecontroller/ContentShareConstants\");\nconst VideoPreference_1 = require(\"./VideoPreference\");\nconst VideoPreferences_1 = require(\"./VideoPreferences\");\nconst VideoPriorityBasedPolicy_1 = require(\"./VideoPriorityBasedPolicy\");\nclass VideoAdaptiveProbePolicy extends VideoPriorityBasedPolicy_1.default {\n    constructor(logger) {\n        super(logger);\n        this.logger = logger;\n        super.shouldPauseTiles = false;\n        this.videoPreferences = undefined;\n    }\n    reset() {\n        super.reset();\n        super.shouldPauseTiles = false;\n        this.videoPreferences = undefined;\n    }\n    updateIndex(videoIndex) {\n        super.updateIndex(videoIndex);\n        const newPreferences = VideoPreferences_1.VideoPreferences.prepare();\n        let containsContent = false;\n        const remoteInfos = videoIndex.remoteStreamDescriptions();\n        // If there is active content then set that as high priority, and the rest at lower\n        for (const info of remoteInfos) {\n            // I don't know why we need to do this duplicate check.\n            if (!newPreferences.some(preference => preference.attendeeId === info.attendeeId)) {\n                // For now always subscribe to content even if higher bandwidth then target\n                if (info.attendeeId.endsWith(ContentShareConstants_1.default.Modality)) {\n                    newPreferences.add(new VideoPreference_1.default(info.attendeeId, 1));\n                    containsContent = true;\n                }\n                else {\n                    newPreferences.add(new VideoPreference_1.default(info.attendeeId, 2));\n                }\n            }\n        }\n        if (containsContent) {\n            this.videoPreferences = newPreferences.build();\n            this.videoPreferencesUpdated = true;\n        }\n        else {\n            this.videoPreferences = undefined;\n        }\n    }\n    /**\n     * [[VideoAdaptiveProbePolicy]] does not allow setting video preferences and this function\n     * will be a no-op.  Please use [[VideoPriorityBasedPolicy]] directly if you would like to set\n     * preferences.\n     */\n    chooseRemoteVideoSources(_preferences) {\n        this.logger.error('chooseRemoteVideoSources should not be called by VideoAdaptiveProbePolicy');\n        return;\n    }\n}\nexports.default = VideoAdaptiveProbePolicy;\n//# sourceMappingURL=VideoAdaptiveProbePolicy.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nclass VideoStreamDescription {\n    constructor(attendeeId, groupId, streamId, maxBitrateKbps, avgBitrateKbps) {\n        this.attendeeId = '';\n        this.groupId = 0;\n        this.streamId = 0;\n        this.ssrc = 0;\n        this.trackLabel = '';\n        this.maxBitrateKbps = 0;\n        // average bitrate is updated every 2 seconds via bitrates messages\n        this.avgBitrateKbps = 0;\n        this.maxFrameRate = 0;\n        this.timeEnabled = 0;\n        this.disabledByWebRTC = false;\n        this.disabledByUplinkPolicy = false;\n        this.attendeeId = attendeeId;\n        this.groupId = groupId;\n        this.streamId = streamId;\n        this.maxBitrateKbps = maxBitrateKbps;\n        this.avgBitrateKbps = avgBitrateKbps;\n    }\n    clone() {\n        const newInfo = new VideoStreamDescription();\n        newInfo.attendeeId = this.attendeeId;\n        newInfo.groupId = this.groupId;\n        newInfo.streamId = this.streamId;\n        newInfo.ssrc = this.ssrc;\n        newInfo.trackLabel = this.trackLabel;\n        newInfo.maxBitrateKbps = this.maxBitrateKbps;\n        newInfo.avgBitrateKbps = this.avgBitrateKbps;\n        newInfo.maxFrameRate = this.maxFrameRate;\n        newInfo.timeEnabled = this.timeEnabled;\n        newInfo.disabledByWebRTC = this.disabledByWebRTC;\n        newInfo.disabledByUplinkPolicy = this.disabledByUplinkPolicy;\n        return newInfo;\n    }\n    toStreamDescriptor() {\n        const descriptor = SignalingProtocol_js_1.SdkStreamDescriptor.create();\n        descriptor.mediaType = SignalingProtocol_js_1.SdkStreamMediaType.VIDEO;\n        descriptor.trackLabel = this.trackLabel;\n        descriptor.attendeeId = this.attendeeId;\n        descriptor.streamId = this.streamId;\n        descriptor.groupId = this.groupId;\n        descriptor.framerate = this.maxFrameRate;\n        descriptor.maxBitrateKbps =\n            this.disabledByUplinkPolicy || this.disabledByWebRTC ? 0 : this.maxBitrateKbps;\n        descriptor.avgBitrateBps = this.avgBitrateKbps;\n        return descriptor;\n    }\n}\nexports.default = VideoStreamDescription;\n//# sourceMappingURL=VideoStreamDescription.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nconst DefaultVideoStreamIdSet_1 = require(\"../videostreamidset/DefaultVideoStreamIdSet\");\nconst VideoStreamDescription_1 = require(\"./VideoStreamDescription\");\n/**\n * [[DefaultVideoStreamIndex]] implements [[VideoStreamIndex]] to facilitate video stream subscription\n * and includes query functions for stream id and attendee id.\n */\nclass DefaultVideoStreamIndex {\n    constructor(logger) {\n        this.logger = logger;\n        this.currentIndex = null;\n        this.indexForSubscribe = null;\n        this.currentSubscribeAck = null;\n        // These are based on the index at the time of the last Subscribe Ack\n        this.subscribeTrackToStreamMap = null;\n        this.subscribeStreamToAttendeeMap = null;\n        this.subscribeStreamToExternalUserIdMap = null;\n        this.subscribeSsrcToStreamMap = null;\n        // These are based on the most up to date index\n        this.streamToAttendeeMap = null;\n        this.streamToExternalUserIdMap = null;\n        this.videoStreamDescription = new VideoStreamDescription_1.default();\n        this.videoStreamDescription.trackLabel = 'AmazonChimeExpressVideo';\n        this.videoStreamDescription.streamId = 2;\n        this.videoStreamDescription.groupId = 2;\n    }\n    localStreamDescriptions() {\n        // localStreamDescriptions are used to construct IndexFrame\n        // old behavior for single video is to have streamId and groupId trackLabel fixed as the follows\n        return [this.videoStreamDescription.clone()];\n    }\n    convertBpsToKbps(avgBitrateBps) {\n        if (avgBitrateBps > 0 && avgBitrateBps < 1000) {\n            return 1;\n        }\n        else {\n            return Math.trunc(avgBitrateBps / 1000);\n        }\n    }\n    remoteStreamDescriptions() {\n        if (!this.currentIndex || !this.currentIndex.sources) {\n            return [];\n        }\n        const streamInfos = [];\n        this.currentIndex.sources.forEach(source => {\n            const description = new VideoStreamDescription_1.default();\n            description.attendeeId = source.attendeeId;\n            description.groupId = source.groupId;\n            description.streamId = source.streamId;\n            description.maxBitrateKbps = source.maxBitrateKbps;\n            description.avgBitrateKbps = this.convertBpsToKbps(source.avgBitrateBps);\n            streamInfos.push(description);\n        });\n        return streamInfos;\n    }\n    integrateUplinkPolicyDecision(param) {\n        if (!!param && param.length) {\n            const encodingParam = param[0];\n            this.videoStreamDescription.maxBitrateKbps = encodingParam.maxBitrate / 1000;\n            this.videoStreamDescription.maxFrameRate = encodingParam.maxFramerate;\n        }\n    }\n    integrateIndexFrame(indexFrame) {\n        this.currentIndex = indexFrame;\n        // In the Amazon Chime SDKs, we assume a one to one mapping of group ID to profile ID when creating\n        // video tiles (multiple video sources are supported through applying a `Modality` to a given profile/session token)\n        //\n        // We enforce this here to mitigate any possible duplicate group IDs left from a reconnection where the previous\n        // signal channel hasn't been timed out yet.  To guarantee we receive the latest stream we use the highest group ID\n        // since they are monotonically increasing.\n        const attendeeIdToMainGroupIdMap = new Map();\n        // Improve performance by not filtering sources unless\n        // we know the list will actually change\n        let attendeeWithMultipleGroupIdsExists = false;\n        for (const source of indexFrame.sources) {\n            if (!attendeeIdToMainGroupIdMap.has(source.attendeeId)) {\n                // We haven't see this attendee ID so just keep track of it\n                attendeeIdToMainGroupIdMap.set(source.attendeeId, source.groupId);\n                continue;\n            }\n            // Otherwise see if we should use the group ID corresponding to this source (we prefer the highest for each attendee)\n            const currentGroupId = attendeeIdToMainGroupIdMap.get(source.attendeeId);\n            if (currentGroupId < source.groupId) {\n                this.logger.warn(`Old group ID ${currentGroupId} found for attendee ID ${source.attendeeId}, replacing with newer group ID ${source.groupId}`);\n                attendeeIdToMainGroupIdMap.set(source.attendeeId, source.groupId);\n            }\n            attendeeWithMultipleGroupIdsExists = true;\n        }\n        if (attendeeWithMultipleGroupIdsExists) {\n            // Only use the sources corresponding to the main group IDs for the given attendee ID\n            this.currentIndex.sources = this.currentIndex.sources.filter(source => attendeeIdToMainGroupIdMap.get(source.attendeeId) === source.groupId);\n        }\n        // Null out cached maps, these will be recreated on demand\n        this.streamToAttendeeMap = null;\n        this.streamToExternalUserIdMap = null;\n    }\n    subscribeFrameSent() {\n        // This is called just as a Subscribe is being sent.  Save corresponding Index\n        this.indexForSubscribe = this.currentIndex;\n    }\n    integrateSubscribeAckFrame(subscribeAck) {\n        this.currentSubscribeAck = subscribeAck;\n        // These are valid until the next Subscribe Ack even if the index is updated\n        this.subscribeTrackToStreamMap = this.buildTrackToStreamMap(this.currentSubscribeAck);\n        this.subscribeSsrcToStreamMap = this.buildSSRCToStreamMap(this.currentSubscribeAck);\n        this.subscribeStreamToAttendeeMap = this.buildStreamToAttendeeMap(this.indexForSubscribe);\n        this.subscribeStreamToExternalUserIdMap = this.buildStreamExternalUserIdMap(this.indexForSubscribe);\n    }\n    integrateBitratesFrame(bitrates) {\n        if (this.currentIndex) {\n            for (const bitrate of bitrates.bitrates) {\n                const source = this.currentIndex.sources.find(source => source.streamId === bitrate.sourceStreamId);\n                if (source !== undefined) {\n                    source.avgBitrateBps = bitrate.avgBitrateBps;\n                }\n            }\n        }\n    }\n    allStreams() {\n        const set = new DefaultVideoStreamIdSet_1.default();\n        if (this.currentIndex) {\n            for (const source of this.currentIndex.sources) {\n                set.add(source.streamId);\n            }\n        }\n        return set;\n    }\n    allVideoSendingSourcesExcludingSelf(selfAttendeeId) {\n        const videoSources = [];\n        const attendeeSet = new Set();\n        if (this.currentIndex) {\n            if (this.currentIndex.sources && this.currentIndex.sources.length) {\n                for (const stream of this.currentIndex.sources) {\n                    const { attendeeId, externalUserId, mediaType } = stream;\n                    if (attendeeId !== selfAttendeeId && mediaType === SignalingProtocol_js_1.SdkStreamMediaType.VIDEO) {\n                        if (!attendeeSet.has(attendeeId)) {\n                            videoSources.push({ attendee: { attendeeId, externalUserId } });\n                            attendeeSet.add(attendeeId);\n                        }\n                    }\n                }\n            }\n        }\n        return videoSources;\n    }\n    streamSelectionUnderBandwidthConstraint(selfAttendeeId, largeTileAttendeeIds, smallTileAttendeeIds, bandwidthKbps) {\n        const newAttendees = new Set();\n        if (this.currentIndex) {\n            for (const stream of this.currentIndex.sources) {\n                if (stream.attendeeId === selfAttendeeId || stream.mediaType !== SignalingProtocol_js_1.SdkStreamMediaType.VIDEO) {\n                    continue;\n                }\n                if (!largeTileAttendeeIds.has(stream.attendeeId) &&\n                    !smallTileAttendeeIds.has(stream.attendeeId)) {\n                    newAttendees.add(stream.attendeeId);\n                }\n            }\n        }\n        const attendeeToStreamDescriptorMap = this.buildAttendeeToSortedStreamDescriptorMapExcludingSelf(selfAttendeeId);\n        const selectionMap = new Map();\n        let usage = 0;\n        attendeeToStreamDescriptorMap.forEach((streams, attendeeId) => {\n            selectionMap.set(attendeeId, streams[0]);\n            usage += streams[0].maxBitrateKbps;\n        });\n        usage = this.trySelectHighBitrateForAttendees(attendeeToStreamDescriptorMap, largeTileAttendeeIds, usage, bandwidthKbps, selectionMap);\n        this.trySelectHighBitrateForAttendees(attendeeToStreamDescriptorMap, newAttendees, usage, bandwidthKbps, selectionMap);\n        const streamSelectionSet = new DefaultVideoStreamIdSet_1.default();\n        for (const source of selectionMap.values()) {\n            streamSelectionSet.add(source.streamId);\n        }\n        return streamSelectionSet;\n    }\n    highestQualityStreamFromEachGroupExcludingSelf(selfAttendeeId) {\n        const set = new DefaultVideoStreamIdSet_1.default();\n        if (this.currentIndex) {\n            const maxes = new Map();\n            for (const source of this.currentIndex.sources) {\n                if (source.attendeeId === selfAttendeeId || source.mediaType !== SignalingProtocol_js_1.SdkStreamMediaType.VIDEO) {\n                    continue;\n                }\n                if (!maxes.has(source.groupId) ||\n                    source.maxBitrateKbps > maxes.get(source.groupId).maxBitrateKbps) {\n                    maxes.set(source.groupId, source);\n                }\n            }\n            for (const source of maxes.values()) {\n                set.add(source.streamId);\n            }\n        }\n        return set;\n    }\n    numberOfVideoPublishingParticipantsExcludingSelf(selfAttendeeId) {\n        return this.highestQualityStreamFromEachGroupExcludingSelf(selfAttendeeId).array().length;\n    }\n    numberOfParticipants() {\n        if (!!this.currentIndex.numParticipants) {\n            return this.currentIndex.numParticipants;\n        }\n        return -1;\n    }\n    attendeeIdForTrack(trackId) {\n        const streamId = this.streamIdForTrack(trackId);\n        if (streamId === undefined || !this.subscribeStreamToAttendeeMap) {\n            this.logger.warn(`no attendee found for track ${trackId}`);\n            return '';\n        }\n        const attendeeId = this.subscribeStreamToAttendeeMap.get(streamId);\n        if (!attendeeId) {\n            this.logger.info(`track ${trackId} (stream ${streamId}) does not correspond to a known attendee`);\n            return '';\n        }\n        return attendeeId;\n    }\n    externalUserIdForTrack(trackId) {\n        const streamId = this.streamIdForTrack(trackId);\n        if (streamId === undefined || !this.subscribeStreamToExternalUserIdMap) {\n            this.logger.warn(`no external user id found for track ${trackId}`);\n            return '';\n        }\n        const externalUserId = this.subscribeStreamToExternalUserIdMap.get(streamId);\n        if (!externalUserId) {\n            this.logger.info(`track ${trackId} (stream ${streamId}) does not correspond to a known externalUserId`);\n            return '';\n        }\n        return externalUserId;\n    }\n    attendeeIdForStreamId(streamId) {\n        if (!this.streamToAttendeeMap) {\n            if (this.currentIndex) {\n                this.streamToAttendeeMap = this.buildStreamToAttendeeMap(this.currentIndex);\n            }\n            else {\n                return '';\n            }\n        }\n        const attendeeId = this.streamToAttendeeMap.get(streamId);\n        if (!attendeeId) {\n            this.logger.info(`stream ${streamId}) does not correspond to a known attendee`);\n            return '';\n        }\n        return attendeeId;\n    }\n    groupIdForStreamId(streamId) {\n        if (!this.currentIndex || !this.currentIndex.sources) {\n            return undefined;\n        }\n        for (const source of this.currentIndex.sources) {\n            if (source.streamId === streamId) {\n                return source.groupId;\n            }\n        }\n        // If wasn't found in current index, then it could be in index used in last subscribe\n        if (!!this.indexForSubscribe) {\n            for (const source of this.indexForSubscribe.sources) {\n                if (source.streamId === streamId) {\n                    return source.groupId;\n                }\n            }\n        }\n        return undefined;\n    }\n    StreamIdsInSameGroup(streamId1, streamId2) {\n        if (this.groupIdForStreamId(streamId1) === this.groupIdForStreamId(streamId2)) {\n            return true;\n        }\n        return false;\n    }\n    streamIdForTrack(trackId) {\n        if (!this.subscribeTrackToStreamMap) {\n            return undefined;\n        }\n        return this.subscribeTrackToStreamMap.get(trackId);\n    }\n    streamIdForSSRC(ssrcId) {\n        if (!this.subscribeSsrcToStreamMap) {\n            return undefined;\n        }\n        return this.subscribeSsrcToStreamMap.get(ssrcId);\n    }\n    overrideStreamIdMappings(previous, current) {\n        if (this.subscribeTrackToStreamMap) {\n            for (const [track, streamId] of this.subscribeTrackToStreamMap.entries()) {\n                if (previous === streamId) {\n                    this.subscribeTrackToStreamMap.set(track, current);\n                    break;\n                }\n            }\n        }\n        if (this.subscribeSsrcToStreamMap) {\n            for (const [ssrc, streamId] of this.subscribeSsrcToStreamMap.entries()) {\n                if (previous === streamId) {\n                    this.subscribeSsrcToStreamMap.set(ssrc, current);\n                    break;\n                }\n            }\n        }\n    }\n    streamsPausedAtSource() {\n        const paused = new DefaultVideoStreamIdSet_1.default();\n        if (this.currentIndex) {\n            for (const streamId of this.currentIndex.pausedAtSourceIds) {\n                paused.add(streamId);\n            }\n        }\n        return paused;\n    }\n    buildTrackToStreamMap(subscribeAck) {\n        const map = new Map();\n        this.logger.debug(() => `trackMap ${JSON.stringify(subscribeAck.tracks)}`);\n        for (const trackMapping of subscribeAck.tracks) {\n            if (trackMapping.trackLabel.length > 0 && trackMapping.streamId > 0) {\n                map.set(trackMapping.trackLabel, trackMapping.streamId);\n            }\n        }\n        return map;\n    }\n    buildSSRCToStreamMap(subscribeAck) {\n        const map = new Map();\n        this.logger.debug(() => `ssrcMap ${JSON.stringify(subscribeAck.tracks)}`);\n        for (const trackMapping of subscribeAck.tracks) {\n            if (trackMapping.trackLabel.length > 0 && trackMapping.streamId > 0) {\n                map.set(trackMapping.ssrc, trackMapping.streamId);\n            }\n        }\n        return map;\n    }\n    buildStreamToAttendeeMap(indexFrame) {\n        const map = new Map();\n        if (indexFrame) {\n            for (const source of indexFrame.sources) {\n                map.set(source.streamId, source.attendeeId);\n            }\n        }\n        return map;\n    }\n    buildStreamExternalUserIdMap(indexFrame) {\n        const map = new Map();\n        if (indexFrame) {\n            for (const source of indexFrame.sources) {\n                if (!!source.externalUserId) {\n                    map.set(source.streamId, source.externalUserId);\n                }\n            }\n        }\n        return map;\n    }\n    trySelectHighBitrateForAttendees(attendeeToStreamDescriptorMap, highAttendees, currentUsage, bandwidthKbps, currentSelectionRef) {\n        for (const attendeeId of highAttendees) {\n            if (currentUsage >= bandwidthKbps) {\n                break;\n            }\n            if (attendeeToStreamDescriptorMap.has(attendeeId)) {\n                const streams = attendeeToStreamDescriptorMap.get(attendeeId);\n                for (const l of streams.reverse()) {\n                    if (currentUsage - currentSelectionRef.get(attendeeId).maxBitrateKbps + l.maxBitrateKbps <\n                        bandwidthKbps) {\n                        currentUsage =\n                            currentUsage - currentSelectionRef.get(attendeeId).maxBitrateKbps + l.maxBitrateKbps;\n                        currentSelectionRef.set(attendeeId, l);\n                        break;\n                    }\n                }\n            }\n        }\n        return currentUsage;\n    }\n    buildAttendeeToSortedStreamDescriptorMapExcludingSelf(selfAttendeeId) {\n        const attendeeToStreamDescriptorMap = new Map();\n        if (this.currentIndex) {\n            for (const source of this.currentIndex.sources) {\n                if (source.attendeeId === selfAttendeeId || source.mediaType !== SignalingProtocol_js_1.SdkStreamMediaType.VIDEO) {\n                    continue;\n                }\n                if (attendeeToStreamDescriptorMap.has(source.attendeeId)) {\n                    attendeeToStreamDescriptorMap.get(source.attendeeId).push(source);\n                }\n                else {\n                    attendeeToStreamDescriptorMap.set(source.attendeeId, [source]);\n                }\n            }\n        }\n        attendeeToStreamDescriptorMap.forEach((streams, _attendeeId) => {\n            streams.sort((stream1, stream2) => {\n                if (stream1.maxBitrateKbps > stream2.maxBitrateKbps) {\n                    return 1;\n                }\n                else if (stream1.maxBitrateKbps < stream2.maxBitrateKbps) {\n                    return -1;\n                }\n                else {\n                    return 0;\n                }\n            });\n        });\n        return attendeeToStreamDescriptorMap;\n    }\n}\nexports.default = DefaultVideoStreamIndex;\n//# sourceMappingURL=DefaultVideoStreamIndex.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nconst DefaultVideoStreamIndex_1 = require(\"./DefaultVideoStreamIndex\");\nconst VideoStreamDescription_1 = require(\"./VideoStreamDescription\");\n/**\n * [[SimulcastTransceiverController]] implements [[VideoStreamIndex]] to facilitate video stream\n * subscription and includes query functions for stream id and attendee id.\n */\nclass SimulcastVideoStreamIndex extends DefaultVideoStreamIndex_1.default {\n    constructor(logger) {\n        super(logger);\n        this.streamIdToBitrateKbpsMap = new Map();\n        this._localStreamInfos = [];\n        this._lastBitRateMsgTime = Date.now();\n    }\n    localStreamDescriptions() {\n        const clonedDescriptions = [];\n        this._localStreamInfos.forEach(desc => {\n            clonedDescriptions.push(desc.clone());\n        });\n        return clonedDescriptions;\n    }\n    integrateUplinkPolicyDecision(encodingParams) {\n        // Reuse local streams (that might already have stream IDs allocated) until\n        // there are no more and then add as many new local streams as needed\n        let hasStreamsToReuse = true;\n        let localStreamIndex = 0;\n        for (let i = 0; i < encodingParams.length; i++) {\n            const targetMaxBitrateKbps = encodingParams[i].maxBitrate / 1000;\n            const targetMaxFrameRate = encodingParams[i].maxFramerate;\n            if (!hasStreamsToReuse || i === this._localStreamInfos.length) {\n                hasStreamsToReuse = false;\n                const newInfo = new VideoStreamDescription_1.default();\n                newInfo.maxBitrateKbps = targetMaxBitrateKbps;\n                newInfo.maxFrameRate = targetMaxFrameRate;\n                newInfo.disabledByUplinkPolicy = targetMaxBitrateKbps === 0 ? true : false;\n                if (targetMaxBitrateKbps !== 0) {\n                    newInfo.timeEnabled = Date.now();\n                }\n                this._localStreamInfos.push(newInfo);\n                localStreamIndex++;\n                continue;\n            }\n            if (this._localStreamInfos[localStreamIndex].maxBitrateKbps === 0 &&\n                targetMaxBitrateKbps > 0) {\n                this._localStreamInfos[localStreamIndex].timeEnabled = Date.now();\n            }\n            this._localStreamInfos[localStreamIndex].maxBitrateKbps = targetMaxBitrateKbps;\n            this._localStreamInfos[localStreamIndex].maxFrameRate = targetMaxFrameRate;\n            this._localStreamInfos[localStreamIndex].disabledByUplinkPolicy =\n                targetMaxBitrateKbps === 0 ? true : false;\n            if (this._localStreamInfos[localStreamIndex].disabledByUplinkPolicy === true) {\n                this._localStreamInfos[localStreamIndex].disabledByWebRTC = false;\n            }\n            localStreamIndex++;\n        }\n        if (hasStreamsToReuse) {\n            // splice is zero-based, remove stream starting from localStreamIndex\n            this._localStreamInfos.splice(localStreamIndex);\n        }\n    }\n    integrateBitratesFrame(bitrateFrame) {\n        super.integrateBitratesFrame(bitrateFrame);\n        const stillSending = new Set();\n        const existingSet = new Set(this.streamIdToBitrateKbpsMap.keys());\n        for (const bitrateMsg of bitrateFrame.bitrates) {\n            stillSending.add(bitrateMsg.sourceStreamId);\n            this.streamIdToBitrateKbpsMap.set(bitrateMsg.sourceStreamId, this.convertBpsToKbps(bitrateMsg.avgBitrateBps));\n        }\n        for (const id of existingSet) {\n            if (!stillSending.has(id)) {\n                const avgBitrateBps = this.streamIdToBitrateKbpsMap.get(id);\n                if (avgBitrateBps === SimulcastVideoStreamIndex.UNSEEN_STREAM_BITRATE) {\n                    this.streamIdToBitrateKbpsMap.set(id, SimulcastVideoStreamIndex.RECENTLY_INACTIVE_STREAM_BITRATE);\n                }\n                else {\n                    this.streamIdToBitrateKbpsMap.set(id, SimulcastVideoStreamIndex.NOT_SENDING_STREAM_BITRATE);\n                }\n            }\n        }\n        for (let i = 0; i < this._localStreamInfos.length; i++) {\n            this._localStreamInfos[i].disabledByWebRTC = false;\n            const streamId = this._localStreamInfos[i].streamId;\n            if (this._localStreamInfos[i].disabledByUplinkPolicy) {\n                continue;\n            }\n            if (this.streamIdToBitrateKbpsMap.has(streamId)) {\n                const avgBitrateKbps = this.streamIdToBitrateKbpsMap.get(streamId);\n                if (avgBitrateKbps === SimulcastVideoStreamIndex.NOT_SENDING_STREAM_BITRATE &&\n                    this._lastBitRateMsgTime - this._localStreamInfos[i].timeEnabled >\n                        SimulcastVideoStreamIndex.BitratesMsgFrequencyMs) {\n                    this._localStreamInfos[i].disabledByWebRTC = true;\n                }\n            }\n            else {\n                // Do not flag as disabled if it was recently enabled\n                if (this._lastBitRateMsgTime - this._localStreamInfos[i].timeEnabled >\n                    SimulcastVideoStreamIndex.BitratesMsgFrequencyMs) {\n                    this._localStreamInfos[i].disabledByWebRTC = true;\n                }\n            }\n        }\n        this._lastBitRateMsgTime = Date.now();\n        this.logLocalStreamDescriptions();\n    }\n    logLocalStreamDescriptions() {\n        let msg = '';\n        for (const desc of this._localStreamInfos) {\n            msg += `streamId=${desc.streamId} maxBitrate=${desc.maxBitrateKbps} disabledByWebRTC=${desc.disabledByWebRTC} disabledByUplink=${desc.disabledByUplinkPolicy}\\n`;\n        }\n        this.logger.debug(() => {\n            return msg;\n        });\n    }\n    integrateIndexFrame(indexFrame) {\n        super.integrateIndexFrame(indexFrame);\n        const newIndexStreamIdSet = new Set();\n        const existingSet = new Set(this.streamIdToBitrateKbpsMap.keys());\n        for (const stream of this.currentIndex.sources) {\n            if (stream.mediaType !== SignalingProtocol_js_1.SdkStreamMediaType.VIDEO) {\n                continue;\n            }\n            newIndexStreamIdSet.add(stream.streamId);\n            if (!this.streamIdToBitrateKbpsMap.has(stream.streamId)) {\n                this.streamIdToBitrateKbpsMap.set(stream.streamId, SimulcastVideoStreamIndex.UNSEEN_STREAM_BITRATE);\n            }\n        }\n        for (const id of existingSet) {\n            if (!newIndexStreamIdSet.has(id)) {\n                this.streamIdToBitrateKbpsMap.delete(id);\n            }\n        }\n    }\n    integrateSubscribeAckFrame(subscribeAck) {\n        super.integrateSubscribeAckFrame(subscribeAck);\n        if (!subscribeAck.allocations || subscribeAck.allocations === undefined) {\n            return;\n        }\n        let localStreamStartIndex = 0;\n        for (const allocation of subscribeAck.allocations) {\n            // track label is what we offered to the server\n            if (this._localStreamInfos.length < localStreamStartIndex + 1) {\n                this.logger.info('simulcast: allocation has more than number of local streams');\n                break;\n            }\n            this._localStreamInfos[localStreamStartIndex].groupId = allocation.groupId;\n            this._localStreamInfos[localStreamStartIndex].streamId = allocation.streamId;\n            if (!this.streamIdToBitrateKbpsMap.has(allocation.streamId)) {\n                this.streamIdToBitrateKbpsMap.set(allocation.streamId, SimulcastVideoStreamIndex.UNSEEN_STREAM_BITRATE);\n            }\n            localStreamStartIndex++;\n        }\n    }\n}\nexports.default = SimulcastVideoStreamIndex;\n// First time when the bitrate of a stream id is missing from bitrate message, mark it as UNSEEN\nSimulcastVideoStreamIndex.UNSEEN_STREAM_BITRATE = -2;\n// Second time when the bitrate is missing, mark it as recently inactive\nSimulcastVideoStreamIndex.RECENTLY_INACTIVE_STREAM_BITRATE = -1;\n// Third time when bitrate is missing, mark it as not sending\nSimulcastVideoStreamIndex.NOT_SENDING_STREAM_BITRATE = 0;\nSimulcastVideoStreamIndex.BitratesMsgFrequencyMs = 4000;\n//# sourceMappingURL=SimulcastVideoStreamIndex.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass DefaultDevicePixelRatioMonitor {\n    constructor(devicePixelRatioSource, logger) {\n        this.devicePixelRatioSource = devicePixelRatioSource;\n        this.observerQueue = new Set();\n        this.mediaQueryListener = () => {\n            this.observerQueue.forEach(tileObserver => {\n                tileObserver.devicePixelRatioChanged(this.devicePixelRatioSource.devicePixelRatio());\n            });\n        };\n        if (typeof window === 'undefined') {\n            return;\n        }\n        const mediaQueryList = matchMedia(`(resolution: ${this.devicePixelRatioSource.devicePixelRatio()}dppx)`);\n        if (typeof mediaQueryList.addEventListener === 'function') {\n            mediaQueryList.addEventListener('change', this.mediaQueryListener);\n            this.mediaQueryList = mediaQueryList;\n        }\n        else if (typeof mediaQueryList.addListener === 'function') {\n            mediaQueryList.addListener(this.mediaQueryListener);\n            this.mediaQueryList = mediaQueryList;\n        }\n        else {\n            logger.warn('ignoring DefaultDevicePixelRatioMonitor');\n        }\n    }\n    destroy() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.mediaQueryList) {\n                if (typeof this.mediaQueryList.addEventListener === 'function') {\n                    this.mediaQueryList.removeEventListener('change', this.mediaQueryListener);\n                }\n                else {\n                    this.mediaQueryList.removeListener(this.mediaQueryListener);\n                }\n            }\n            delete this.mediaQueryListener;\n            this.observerQueue.clear();\n        });\n    }\n    registerObserver(observer) {\n        this.observerQueue.add(observer);\n        observer.devicePixelRatioChanged(this.devicePixelRatioSource.devicePixelRatio());\n    }\n    removeObserver(observer) {\n        this.observerQueue.delete(observer);\n    }\n}\nexports.default = DefaultDevicePixelRatioMonitor;\n//# sourceMappingURL=DefaultDevicePixelRatioMonitor.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass DevicePixelRatioWindowSource {\n    devicePixelRatio() {\n        if (typeof window === 'undefined' || !window || !window.devicePixelRatio) {\n            return 1;\n        }\n        return window.devicePixelRatio;\n    }\n}\nexports.default = DevicePixelRatioWindowSource;\n//# sourceMappingURL=DevicePixelRatioWindowSource.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultDevicePixelRatioMonitor_1 = require(\"../devicepixelratiomonitor/DefaultDevicePixelRatioMonitor\");\nconst DevicePixelRatioWindowSource_1 = require(\"../devicepixelratiosource/DevicePixelRatioWindowSource\");\nconst Types_1 = require(\"../utils/Types\");\nconst DefaultVideoTile_1 = require(\"../videotile/DefaultVideoTile\");\nclass DefaultVideoTileController {\n    constructor(tileFactory, audioVideoController, logger) {\n        this.tileFactory = tileFactory;\n        this.audioVideoController = audioVideoController;\n        this.logger = logger;\n        this.tileMap = new Map();\n        this.nextTileId = 1;\n        this.currentLocalTile = null;\n        this.currentPausedTilesByIds = new Set();\n        this.keepLastFrameWhenPaused = false;\n        this.keepLastFrameWhenPaused = audioVideoController.configuration.keepLastFrameWhenPaused;\n    }\n    createDevicePixelRatioMonitorIfNeeded() {\n        if (this.devicePixelRatioMonitor) {\n            return;\n        }\n        this.devicePixelRatioMonitor = new DefaultDevicePixelRatioMonitor_1.default(new DevicePixelRatioWindowSource_1.default(), this.logger);\n    }\n    discardDevicePixelRatioMonitorIfNotNeeded() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.tileMap.size || !this.devicePixelRatioMonitor) {\n                return;\n            }\n            const monitor = this.devicePixelRatioMonitor;\n            this.devicePixelRatioMonitor = undefined;\n            return monitor.destroy();\n        });\n    }\n    bindVideoElement(tileId, videoElement) {\n        const tile = this.getVideoTile(tileId);\n        if (tile === null) {\n            this.logger.warn(`Ignoring video element binding for unknown tile id ${tileId}`);\n            return;\n        }\n        tile.bindVideoElement(videoElement);\n    }\n    unbindVideoElement(tileId, cleanUpVideoElement = true) {\n        const tile = this.getVideoTile(tileId);\n        if (tile === null) {\n            this.logger.warn(`Ignoring video element unbinding for unknown tile id ${tileId}`);\n            return;\n        }\n        this.logger.info('Unbinding the video element');\n        const videoElement = tile.stateRef().boundVideoElement;\n        tile.bindVideoElement(null);\n        if (cleanUpVideoElement) {\n            this.logger.info('Cleaning up the video element');\n            DefaultVideoTile_1.default.disconnectVideoStreamFromVideoElement(videoElement, false);\n        }\n    }\n    startLocalVideoTile() {\n        const tile = this.findOrCreateLocalVideoTile();\n        this.currentLocalTile.stateRef().localTileStarted = true;\n        this.audioVideoController.update({ needsRenegotiation: true });\n        return tile.id();\n    }\n    stopLocalVideoTile() {\n        if (!this.currentLocalTile) {\n            return;\n        }\n        this.currentLocalTile.stateRef().localTileStarted = false;\n        this.currentLocalTile.bindVideoStream(this.audioVideoController.configuration.credentials.attendeeId, true, null, null, null, null, this.audioVideoController.configuration.credentials.externalUserId);\n        this.audioVideoController.update({ needsRenegotiation: true });\n    }\n    hasStartedLocalVideoTile() {\n        return !!(this.currentLocalTile && this.currentLocalTile.stateRef().localTileStarted);\n    }\n    removeLocalVideoTile() {\n        if (this.currentLocalTile) {\n            this.removeVideoTile(this.currentLocalTile.id());\n        }\n    }\n    getLocalVideoTile() {\n        return this.currentLocalTile;\n    }\n    pauseVideoTile(tileId) {\n        const tile = this.getVideoTile(tileId);\n        if (tile) {\n            if (!this.currentPausedTilesByIds.has(tileId)) {\n                this.audioVideoController.pauseReceivingStream(tile.stateRef().streamId);\n                this.currentPausedTilesByIds.add(tileId);\n            }\n            tile.pause();\n        }\n    }\n    unpauseVideoTile(tileId) {\n        const tile = this.getVideoTile(tileId);\n        if (tile) {\n            if (this.currentPausedTilesByIds.has(tileId)) {\n                this.audioVideoController.resumeReceivingStream(tile.stateRef().streamId);\n                this.currentPausedTilesByIds.delete(tileId);\n            }\n            tile.unpause();\n        }\n    }\n    getVideoTile(tileId) {\n        return this.tileMap.has(tileId) ? this.tileMap.get(tileId) : null;\n    }\n    getVideoTileArea(tile) {\n        const state = tile.state();\n        let tileHeight = 0;\n        let tileWidth = 0;\n        if (state.boundVideoElement) {\n            tileHeight = state.boundVideoElement.clientHeight * state.devicePixelRatio;\n            tileWidth = state.boundVideoElement.clientWidth * state.devicePixelRatio;\n        }\n        return tileHeight * tileWidth;\n    }\n    getAllRemoteVideoTiles() {\n        const result = new Array();\n        this.tileMap.forEach((tile, tileId) => {\n            if (!this.currentLocalTile || tileId !== this.currentLocalTile.id()) {\n                result.push(tile);\n            }\n        });\n        return result;\n    }\n    getAllVideoTiles() {\n        return Array.from(this.tileMap.values());\n    }\n    addVideoTile(localTile = false) {\n        const tileId = this.nextTileId;\n        this.nextTileId += 1;\n        this.createDevicePixelRatioMonitorIfNeeded();\n        const tile = this.tileFactory.makeTile(tileId, localTile, this, this.devicePixelRatioMonitor);\n        this.tileMap.set(tileId, tile);\n        return tile;\n    }\n    removeVideoTile(tileId) {\n        if (!this.tileMap.has(tileId)) {\n            return;\n        }\n        const tile = this.tileMap.get(tileId);\n        if (this.currentLocalTile === tile) {\n            this.currentLocalTile = null;\n        }\n        tile.destroy();\n        this.tileMap.delete(tileId);\n        this.audioVideoController.forEachObserver((observer) => {\n            Types_1.Maybe.of(observer.videoTileWasRemoved).map(f => f.bind(observer)(tileId));\n        });\n        this.discardDevicePixelRatioMonitorIfNotNeeded();\n    }\n    removeVideoTilesByAttendeeId(attendeeId) {\n        const tilesRemoved = [];\n        for (const tile of this.getAllVideoTiles()) {\n            const state = tile.state();\n            if (state.boundAttendeeId === attendeeId) {\n                this.removeVideoTile(state.tileId);\n                tilesRemoved.push(state.tileId);\n            }\n        }\n        return tilesRemoved;\n    }\n    removeAllVideoTiles() {\n        const tileIds = Array.from(this.tileMap.keys());\n        for (const tileId of tileIds) {\n            this.removeVideoTile(tileId);\n        }\n    }\n    sendTileStateUpdate(tileState) {\n        this.audioVideoController.forEachObserver((observer) => {\n            Types_1.Maybe.of(observer.videoTileDidUpdate).map(f => f.bind(observer)(tileState));\n        });\n    }\n    haveVideoTilesWithStreams() {\n        for (const tile of this.getAllVideoTiles()) {\n            if (tile.state().boundVideoStream) {\n                return true;\n            }\n        }\n        return false;\n    }\n    haveVideoTileForAttendeeId(attendeeId) {\n        return !!this.getVideoTileForAttendeeId(attendeeId);\n    }\n    getVideoTileForAttendeeId(attendeeId) {\n        for (const tile of this.getAllVideoTiles()) {\n            const state = tile.state();\n            if (state.boundAttendeeId === attendeeId) {\n                return tile;\n            }\n        }\n        return undefined;\n    }\n    captureVideoTile(tileId) {\n        const tile = this.getVideoTile(tileId);\n        if (!tile) {\n            return null;\n        }\n        return tile.capture();\n    }\n    findOrCreateLocalVideoTile() {\n        if (this.currentLocalTile) {\n            return this.currentLocalTile;\n        }\n        this.currentLocalTile = this.addVideoTile(true);\n        this.currentLocalTile.bindVideoStream(this.audioVideoController.configuration.credentials.attendeeId, true, null, null, null, null, this.audioVideoController.configuration.credentials.externalUserId);\n        return this.currentLocalTile;\n    }\n}\nexports.default = DefaultVideoTileController;\n//# sourceMappingURL=DefaultVideoTileController.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultVideoTile_1 = require(\"../videotile/DefaultVideoTile\");\nclass DefaultVideoTileFactory {\n    makeTile(tileId, localTile, tileController, devicePixelRatioMonitor) {\n        return new DefaultVideoTile_1.default(tileId, localTile, tileController, devicePixelRatioMonitor);\n    }\n}\nexports.default = DefaultVideoTileFactory;\n//# sourceMappingURL=DefaultVideoTileFactory.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SimulcastLayers = void 0;\n/**\n * [[SimulcastLayers]] represents simulcast layers for selected simulcast video streams.\n */\nvar SimulcastLayers;\n(function (SimulcastLayers) {\n    /**\n     * Low resolution video stream.\n     */\n    SimulcastLayers[SimulcastLayers[\"Low\"] = 0] = \"Low\";\n    /**\n     * Low and medium resolution video streams.\n     */\n    SimulcastLayers[SimulcastLayers[\"LowAndMedium\"] = 1] = \"LowAndMedium\";\n    /**\n     * Low and high resolution video streams.\n     */\n    SimulcastLayers[SimulcastLayers[\"LowAndHigh\"] = 2] = \"LowAndHigh\";\n    /**\n     * Medium resolution video stream.\n     */\n    SimulcastLayers[SimulcastLayers[\"Medium\"] = 3] = \"Medium\";\n    /**\n     * Medium and high resolution video streams.\n     */\n    SimulcastLayers[SimulcastLayers[\"MediumAndHigh\"] = 4] = \"MediumAndHigh\";\n    /**\n     * High resolution video stream.\n     */\n    SimulcastLayers[SimulcastLayers[\"High\"] = 5] = \"High\";\n})(SimulcastLayers = exports.SimulcastLayers || (exports.SimulcastLayers = {}));\nexports.default = SimulcastLayers;\n//# sourceMappingURL=SimulcastLayers.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SimulcastLayers_1 = require(\"../simulcastlayers/SimulcastLayers\");\nconst SimulcastTransceiverController_1 = require(\"../transceivercontroller/SimulcastTransceiverController\");\nconst Types_1 = require(\"../utils/Types\");\nconst DefaultVideoCaptureAndEncodeParameter_1 = require(\"../videocaptureandencodeparameter/DefaultVideoCaptureAndEncodeParameter\");\nconst BitrateParameters_1 = require(\"./BitrateParameters\");\n/**\n * [[DefaultSimulcastUplinkPolicy]] determines capture and encode\n *  parameters that reacts to estimated uplink bandwidth\n */\nclass DefaultSimulcastUplinkPolicy {\n    constructor(selfAttendeeId, logger) {\n        this.selfAttendeeId = selfAttendeeId;\n        this.logger = logger;\n        this.numSenders = 0;\n        // Simulcast is disabled when there are only 2 or fewer attendees, because in that case the backend will forward REMBs from\n        // receiver to sender. Therefore there is no need for simulcast based adaption.\n        this.shouldDisableSimulcast = false;\n        this.newQualityMap = new Map();\n        this.currentQualityMap = new Map();\n        this.newActiveStreams = 1 /* kHiAndLow */;\n        this.currentActiveStreams = 1 /* kHiAndLow */;\n        this.lastUplinkBandwidthKbps = DefaultSimulcastUplinkPolicy.defaultUplinkBandwidthKbps;\n        this.startTimeMs = 0;\n        this.lastUpdatedMs = Date.now();\n        this.videoIndex = null;\n        this.currLocalDescriptions = [];\n        this.nextLocalDescriptions = [];\n        this.observerQueue = new Set();\n        this.optimalParameters = new DefaultVideoCaptureAndEncodeParameter_1.default(0, 0, 0, 0, true);\n        this.parametersInEffect = new DefaultVideoCaptureAndEncodeParameter_1.default(0, 0, 0, 0, true);\n        this.lastUplinkBandwidthKbps = DefaultSimulcastUplinkPolicy.defaultUplinkBandwidthKbps;\n        this.currentQualityMap = this.fillEncodingParamWithBitrates([300, 0, 1200]);\n        this.newQualityMap = this.fillEncodingParamWithBitrates([300, 0, 1200]);\n    }\n    updateConnectionMetric({ uplinkKbps = 0 }) {\n        if (isNaN(uplinkKbps)) {\n            return;\n        }\n        // Check if startup period in order to ignore estimate when video first enabled.\n        // If only audio was active then the estimate will be very low\n        if (this.startTimeMs === 0) {\n            this.startTimeMs = Date.now();\n        }\n        if (Date.now() - this.startTimeMs < DefaultSimulcastUplinkPolicy.startupDurationMs) {\n            this.lastUplinkBandwidthKbps = DefaultSimulcastUplinkPolicy.defaultUplinkBandwidthKbps;\n        }\n        else {\n            this.lastUplinkBandwidthKbps = uplinkKbps;\n        }\n        this.logger.debug(() => {\n            return `simulcast: uplink policy update metrics ${this.lastUplinkBandwidthKbps}`;\n        });\n        let holdTime = DefaultSimulcastUplinkPolicy.holdDownDurationMs;\n        if (this.currentActiveStreams === 3 /* kLow */) {\n            holdTime = DefaultSimulcastUplinkPolicy.holdDownDurationMs * 2;\n        }\n        else if ((this.currentActiveStreams === 2 /* kMidAndLow */ &&\n            uplinkKbps <= DefaultSimulcastUplinkPolicy.kMidDisabledRate) ||\n            (this.currentActiveStreams === 1 /* kHiAndLow */ &&\n                uplinkKbps <= DefaultSimulcastUplinkPolicy.kHiDisabledRate)) {\n            holdTime = DefaultSimulcastUplinkPolicy.holdDownDurationMs / 2;\n        }\n        if (Date.now() < this.lastUpdatedMs + holdTime) {\n            return;\n        }\n        this.newQualityMap = this.calculateEncodingParameters(false);\n    }\n    calculateEncodingParameters(numSendersChanged) {\n        // bitrates parameter min is not used for now\n        const newBitrates = [\n            new BitrateParameters_1.default(),\n            new BitrateParameters_1.default(),\n            new BitrateParameters_1.default(),\n        ];\n        let hysteresisIncrease = 0, hysteresisDecrease = 0;\n        if (this.currentActiveStreams === 0 /* kHi */) {\n            // Don't trigger redetermination based on rate if only one simulcast stream\n            hysteresisIncrease = this.lastUplinkBandwidthKbps + 1;\n            hysteresisDecrease = 0;\n        }\n        else if (this.currentActiveStreams === 1 /* kHiAndLow */) {\n            hysteresisIncrease = 2400;\n            hysteresisDecrease = DefaultSimulcastUplinkPolicy.kHiDisabledRate;\n        }\n        else if (this.currentActiveStreams === 2 /* kMidAndLow */) {\n            hysteresisIncrease = 1000;\n            hysteresisDecrease = DefaultSimulcastUplinkPolicy.kMidDisabledRate;\n        }\n        else {\n            hysteresisIncrease = 300;\n            hysteresisDecrease = 0;\n        }\n        if (numSendersChanged ||\n            this.lastUplinkBandwidthKbps >= hysteresisIncrease ||\n            this.lastUplinkBandwidthKbps <= hysteresisDecrease) {\n            if (this.shouldDisableSimulcast) {\n                // See comment above `shouldDisableSimulcast` for usage.\n                //\n                // The value of `newActiveStreams` is somewhat irrelevant since in one to one calls\n                // we forward REMBs, so this single stream will adapt anywhere from < 100 kbps to 1200 kbps\n                // based on both sender and receiver network conditions. E.g. A receiver may calculate it's\n                // receive BWE as 300 kbps, send that in a REMB which is forwarded, and on receipt the sender\n                // will set its own BWE at 300 kbps, and start sending that as well (again, only for one-to-one\n                // calls). Additionally the value `kHi` is only relevant to the send side (via\n                // `encodingSimulcastLayersDidChange`) as it is not transmitted in anyform to the receiver.\n                //\n                // We use middle layer here to work around a bug in Chromium where\n                // it seems when a transceiver is created when BWE is low (e.g. on a reconnection),\n                // it will never reset the encoder even when `setParameters` is called.  WebRTC bug\n                // #12788 seems to call a similar issue out as fixed for VP8, it's not clear if this\n                // is the same issue for H.264. Additionally we are not able to force a keyframe\n                // request from the backend since it will only be sending padding (which also\n                // don't have MID due to #10822). Since we don't scale when simulcast is disabled\n                // this doesn't have any end-user effect.\n                //\n                // Note that this still relies on a little bit (5-6 packets) of padding on reconnect\n                // and that technically the browser will still eventually try to send all 3 streams.\n                //\n                // Also note that due to some uninvestigated logic in bitrate allocation, Chromium\n                // will skip the bottom layer if we try setting it to 1200 kbps instead so it will\n                // still take a while to recover (as it needs to send padding until it reaches around\n                // 1000 kbps).\n                this.newActiveStreams = 0 /* kHi */;\n                newBitrates[0].maxBitrateKbps = 0;\n                newBitrates[1].maxBitrateKbps = 1200;\n                newBitrates[2].maxBitrateKbps = 0;\n            }\n            else if (this.numSenders <= 4 &&\n                this.lastUplinkBandwidthKbps >= DefaultSimulcastUplinkPolicy.kHiDisabledRate) {\n                // 320x192+ (640x384)  + 1280x768\n                this.newActiveStreams = 1 /* kHiAndLow */;\n                newBitrates[0].maxBitrateKbps = 300;\n                newBitrates[1].maxBitrateKbps = 0;\n                newBitrates[2].maxBitrateKbps = 1200;\n            }\n            else if (this.lastUplinkBandwidthKbps >= DefaultSimulcastUplinkPolicy.kMidDisabledRate) {\n                // 320x192 + 640x384 + (1280x768)\n                this.newActiveStreams = 2 /* kMidAndLow */;\n                newBitrates[0].maxBitrateKbps = this.lastUplinkBandwidthKbps >= 350 ? 200 : 150;\n                newBitrates[1].maxBitrateKbps = this.numSenders <= 6 ? 600 : 350;\n                newBitrates[2].maxBitrateKbps = 0;\n            }\n            else {\n                // 320x192 + 640x384 + (1280x768)\n                this.newActiveStreams = 3 /* kLow */;\n                newBitrates[0].maxBitrateKbps = 300;\n                newBitrates[1].maxBitrateKbps = 0;\n                newBitrates[2].maxBitrateKbps = 0;\n            }\n            const bitrates = newBitrates.map((v, _i, _a) => {\n                return v.maxBitrateKbps;\n            });\n            this.newQualityMap = this.fillEncodingParamWithBitrates(bitrates);\n            if (!this.encodingParametersEqual()) {\n                this.logger.info(`simulcast: policy:calculateEncodingParameters bw:${this.lastUplinkBandwidthKbps} numSources:${this.numSenders} shouldDisableSimulcast:${this.shouldDisableSimulcast} newQualityMap: ${this.getQualityMapString(this.newQualityMap)}`);\n            }\n        }\n        return this.newQualityMap;\n    }\n    chooseMediaTrackConstraints() {\n        // Changing MediaTrackConstraints causes a restart of video input and possible small\n        // scaling changes.  Always use 720p for now\n        const trackConstraint = {\n            width: { ideal: 1280 },\n            height: { ideal: 768 },\n            frameRate: { ideal: 15 },\n        };\n        return trackConstraint;\n    }\n    chooseEncodingParameters() {\n        this.currentQualityMap = this.newQualityMap;\n        this.currentActiveStreams = this.newActiveStreams;\n        if (this.activeStreamsToPublish !== this.newActiveStreams) {\n            this.activeStreamsToPublish = this.newActiveStreams;\n            this.publishEncodingSimulcastLayer();\n        }\n        return this.currentQualityMap;\n    }\n    updateIndex(videoIndex) {\n        // the +1 for self is assuming that we intend to send video, since\n        // the context here is VideoUplinkBandwidthPolicy\n        const numSenders = videoIndex.numberOfVideoPublishingParticipantsExcludingSelf(this.selfAttendeeId) + 1;\n        const numSendersChanged = numSenders !== this.numSenders;\n        // See comment above `shouldDisableSimulcast`\n        const numParticipants = videoIndex.numberOfParticipants();\n        const newShouldDisableSimulcast = numParticipants >= 0 && numParticipants <= 2;\n        const shouldDisableSimulcastChanged = this.shouldDisableSimulcast !== newShouldDisableSimulcast;\n        this.numSenders = numSenders;\n        this.shouldDisableSimulcast = newShouldDisableSimulcast;\n        this.optimalParameters = new DefaultVideoCaptureAndEncodeParameter_1.default(this.captureWidth(), this.captureHeight(), this.captureFrameRate(), this.maxBandwidthKbps(), false);\n        this.videoIndex = videoIndex;\n        this.newQualityMap = this.calculateEncodingParameters(numSendersChanged || shouldDisableSimulcastChanged);\n    }\n    wantsResubscribe() {\n        let constraintDiff = !this.encodingParametersEqual();\n        this.nextLocalDescriptions = this.videoIndex.localStreamDescriptions();\n        for (let i = 0; i < this.nextLocalDescriptions.length; i++) {\n            const streamId = this.nextLocalDescriptions[i].streamId;\n            if (streamId !== 0 && !!streamId) {\n                const prevIndex = this.currLocalDescriptions.findIndex(val => {\n                    return val.streamId === streamId;\n                });\n                if (prevIndex !== -1) {\n                    if (this.nextLocalDescriptions[i].disabledByWebRTC !==\n                        this.currLocalDescriptions[prevIndex].disabledByWebRTC) {\n                        constraintDiff = true;\n                    }\n                }\n            }\n        }\n        if (constraintDiff) {\n            this.lastUpdatedMs = Date.now();\n        }\n        this.currLocalDescriptions = this.nextLocalDescriptions;\n        return constraintDiff;\n    }\n    compareEncodingParameter(encoding1, encoding2) {\n        return JSON.stringify(encoding1) === JSON.stringify(encoding2);\n    }\n    encodingParametersEqual() {\n        let different = false;\n        for (const ridName of SimulcastTransceiverController_1.default.NAME_ARR_ASCENDING) {\n            different =\n                different ||\n                    !this.compareEncodingParameter(this.newQualityMap.get(ridName), this.currentQualityMap.get(ridName));\n            if (different) {\n                break;\n            }\n        }\n        return !different;\n    }\n    chooseCaptureAndEncodeParameters() {\n        // should deprecate in this policy\n        this.parametersInEffect = this.optimalParameters.clone();\n        return this.parametersInEffect.clone();\n    }\n    captureWidth() {\n        // should deprecate in this policy\n        const width = 1280;\n        return width;\n    }\n    captureHeight() {\n        // should deprecate in this policy\n        const height = 768;\n        return height;\n    }\n    captureFrameRate() {\n        // should deprecate in this policy\n        return 15;\n    }\n    maxBandwidthKbps() {\n        // should deprecate in this policy\n        return 1400;\n    }\n    setIdealMaxBandwidthKbps(_idealMaxBandwidthKbps) {\n        // should deprecate in this policy\n    }\n    setHasBandwidthPriority(_hasBandwidthPriority) {\n        // should deprecate in this policy\n    }\n    fillEncodingParamWithBitrates(bitratesKbps) {\n        const newMap = new Map();\n        const toBps = 1000;\n        const nameArr = SimulcastTransceiverController_1.default.NAME_ARR_ASCENDING;\n        const bitrateArr = bitratesKbps;\n        // Don't scale the single simulcast stream regardless of its layer.\n        let scale = this.shouldDisableSimulcast ? 1 : 4;\n        for (let i = 0; i < nameArr.length; i++) {\n            const ridName = nameArr[i];\n            newMap.set(ridName, {\n                rid: ridName,\n                active: bitrateArr[i] > 0 ? true : false,\n                scaleResolutionDownBy: Math.max(scale, 1),\n                maxBitrate: bitrateArr[i] * toBps,\n            });\n            scale = scale / 2;\n        }\n        return newMap;\n    }\n    getQualityMapString(params) {\n        let qualityString = '';\n        const localDescriptions = this.videoIndex.localStreamDescriptions();\n        if (localDescriptions.length === 3) {\n            params.forEach((value) => {\n                let disabledByWebRTC = false;\n                if (value.rid === 'low')\n                    disabledByWebRTC = localDescriptions[0].disabledByWebRTC;\n                else if (value.rid === 'mid')\n                    disabledByWebRTC = localDescriptions[1].disabledByWebRTC;\n                else\n                    disabledByWebRTC = localDescriptions[2].disabledByWebRTC;\n                qualityString += `{ rid: ${value.rid} active:${value.active} disabledByWebRTC: ${disabledByWebRTC} maxBitrate:${value.maxBitrate}}`;\n            });\n        }\n        return qualityString;\n    }\n    getEncodingSimulcastLayer(activeStreams) {\n        switch (activeStreams) {\n            case 0 /* kHi */:\n                return SimulcastLayers_1.default.High;\n            case 1 /* kHiAndLow */:\n                return SimulcastLayers_1.default.LowAndHigh;\n            case 2 /* kMidAndLow */:\n                return SimulcastLayers_1.default.LowAndMedium;\n            case 3 /* kLow */:\n                return SimulcastLayers_1.default.Low;\n        }\n    }\n    publishEncodingSimulcastLayer() {\n        const simulcastLayers = this.getEncodingSimulcastLayer(this.activeStreamsToPublish);\n        this.forEachObserver(observer => {\n            Types_1.Maybe.of(observer.encodingSimulcastLayersDidChange).map(f => f.bind(observer)(simulcastLayers));\n        });\n    }\n    addObserver(observer) {\n        this.logger.info('adding simulcast uplink observer');\n        this.observerQueue.add(observer);\n    }\n    removeObserver(observer) {\n        this.logger.info('removing simulcast uplink observer');\n        this.observerQueue.delete(observer);\n    }\n    forEachObserver(observerFunc) {\n        for (const observer of this.observerQueue) {\n            observerFunc(observer);\n        }\n    }\n}\nexports.default = DefaultSimulcastUplinkPolicy;\nDefaultSimulcastUplinkPolicy.defaultUplinkBandwidthKbps = 1200;\nDefaultSimulcastUplinkPolicy.startupDurationMs = 6000;\nDefaultSimulcastUplinkPolicy.holdDownDurationMs = 4000;\nDefaultSimulcastUplinkPolicy.defaultMaxFrameRate = 15;\n// Current rough estimates where webrtc disables streams\nDefaultSimulcastUplinkPolicy.kHiDisabledRate = 700;\nDefaultSimulcastUplinkPolicy.kMidDisabledRate = 240;\n//# sourceMappingURL=DefaultSimulcastUplinkPolicy.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultVideoCaptureAndEncodeParameter_1 = require(\"../videocaptureandencodeparameter/DefaultVideoCaptureAndEncodeParameter\");\n/** NScaleVideoUplinkBandwidthPolicy implements capture and encode\n *  parameters that are nearly equivalent to those chosen by the\n *  traditional native clients, except for a modification to\n *  maxBandwidthKbps and scaleResolutionDownBy described below. */\nclass NScaleVideoUplinkBandwidthPolicy {\n    constructor(selfAttendeeId, scaleResolution = true, logger = undefined, browserBehavior = undefined) {\n        this.selfAttendeeId = selfAttendeeId;\n        this.scaleResolution = scaleResolution;\n        this.logger = logger;\n        this.browserBehavior = browserBehavior;\n        this.numberOfPublishedVideoSources = 0;\n        this.idealMaxBandwidthKbps = 1400;\n        this.hasBandwidthPriority = false;\n        this.encodingParamMap = new Map();\n        this.reset();\n    }\n    reset() {\n        // Don't reset `idealMaxBandwidthKbps` or `hasBandwidthPriority` which are set via builder API paths\n        this.numberOfPublishedVideoSources = 0;\n        this.optimalParameters = new DefaultVideoCaptureAndEncodeParameter_1.default(0, 0, 0, 0, false);\n        this.parametersInEffect = new DefaultVideoCaptureAndEncodeParameter_1.default(0, 0, 0, 0, false);\n        this.encodingParamMap.set(NScaleVideoUplinkBandwidthPolicy.encodingMapKey, {\n            maxBitrate: 0,\n        });\n    }\n    updateConnectionMetric(_metrics) {\n        return;\n    }\n    chooseMediaTrackConstraints() {\n        return {};\n    }\n    chooseEncodingParameters() {\n        return new Map();\n    }\n    updateIndex(videoIndex) {\n        var _a;\n        let hasLocalVideo = true;\n        let scale = 1;\n        if (this.transceiverController) {\n            hasLocalVideo = this.transceiverController.hasVideoInput();\n        }\n        // the +1 for self is assuming that we intend to send video, since\n        // the context here is VideoUplinkBandwidthPolicy\n        const numberOfPublishedVideoSources = videoIndex.numberOfVideoPublishingParticipantsExcludingSelf(this.selfAttendeeId) +\n            (hasLocalVideo ? 1 : 0);\n        if (this.numberOfPublishedVideoSources === numberOfPublishedVideoSources) {\n            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.debug('Skipping update index; Number of participants has not changed');\n            return;\n        }\n        this.numberOfPublishedVideoSources = numberOfPublishedVideoSources;\n        if (this.transceiverController) {\n            const settings = this.getStreamCaptureSetting();\n            if (settings) {\n                const encodingParams = this.calculateEncodingParameters(settings);\n                scale = encodingParams.scaleResolutionDownBy;\n            }\n        }\n        this.optimalParameters = new DefaultVideoCaptureAndEncodeParameter_1.default(this.captureWidth(), this.captureHeight(), this.captureFrameRate(), this.maxBandwidthKbps(), false, scale);\n    }\n    wantsResubscribe() {\n        return !this.parametersInEffect.equal(this.optimalParameters);\n    }\n    chooseCaptureAndEncodeParameters() {\n        this.parametersInEffect = this.optimalParameters.clone();\n        return this.parametersInEffect.clone();\n    }\n    captureWidth() {\n        let width = 640;\n        if (this.getNumberOfPublishedVideoSources() > 4) {\n            width = 320;\n        }\n        return width;\n    }\n    captureHeight() {\n        let height = 384;\n        if (this.getNumberOfPublishedVideoSources() > 4) {\n            height = 192;\n        }\n        return height;\n    }\n    captureFrameRate() {\n        return 15;\n    }\n    maxBandwidthKbps() {\n        if (this.hasBandwidthPriority) {\n            return Math.trunc(this.idealMaxBandwidthKbps);\n        }\n        let rate = 0;\n        if (this.getNumberOfPublishedVideoSources() <= 2) {\n            rate = this.idealMaxBandwidthKbps;\n        }\n        else if (this.getNumberOfPublishedVideoSources() <= 4) {\n            rate = (this.idealMaxBandwidthKbps * 2) / 3;\n        }\n        else {\n            rate =\n                ((544 / 11 + 14880 / (11 * this.getNumberOfPublishedVideoSources())) / 600) *\n                    this.idealMaxBandwidthKbps;\n        }\n        return Math.trunc(rate);\n    }\n    setIdealMaxBandwidthKbps(idealMaxBandwidthKbps) {\n        this.idealMaxBandwidthKbps = idealMaxBandwidthKbps;\n    }\n    setHasBandwidthPriority(hasBandwidthPriority) {\n        this.hasBandwidthPriority = hasBandwidthPriority;\n    }\n    setTransceiverController(transceiverController) {\n        this.transceiverController = transceiverController;\n    }\n    updateTransceiverController() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const settings = this.getStreamCaptureSetting();\n            if (!settings) {\n                return;\n            }\n            const encodingParams = this.calculateEncodingParameters(settings);\n            if (this.shouldUpdateEndcodingParameters(encodingParams)) {\n                this.encodingParamMap.set(NScaleVideoUplinkBandwidthPolicy.encodingMapKey, encodingParams);\n                this.transceiverController.setEncodingParameters(this.encodingParamMap);\n            }\n        });\n    }\n    shouldUpdateEndcodingParameters(encoding) {\n        var _a, _b;\n        const transceiverEncoding = (_b = (_a = this.transceiverController\n            .localVideoTransceiver()\n            .sender.getParameters()) === null || _a === void 0 ? void 0 : _a.encodings) === null || _b === void 0 ? void 0 : _b[0];\n        /* istanbul ignore next: transceiverEncoding?.scaleResolutionDownBy cannot be covered */\n        return (encoding.maxBitrate !== (transceiverEncoding === null || transceiverEncoding === void 0 ? void 0 : transceiverEncoding.maxBitrate) ||\n            encoding.scaleResolutionDownBy !== (transceiverEncoding === null || transceiverEncoding === void 0 ? void 0 : transceiverEncoding.scaleResolutionDownBy));\n    }\n    calculateEncodingParameters(setting) {\n        var _a, _b;\n        const maxBitrate = this.maxBandwidthKbps() * 1000;\n        let scale = 1;\n        if (setting.height !== undefined &&\n            setting.width !== undefined &&\n            this.scaleResolution &&\n            !this.hasBandwidthPriority &&\n            this.getNumberOfPublishedVideoSources() > 2) {\n            let targetHeight = NScaleVideoUplinkBandwidthPolicy.targetHeightArray[Math.min(this.getNumberOfPublishedVideoSources(), NScaleVideoUplinkBandwidthPolicy.targetHeightArray.length - 1)];\n            //Workaround for issue https://github.com/aws/amazon-chime-sdk-js/issues/2002\n            if (targetHeight === 480 && ((_a = this.browserBehavior) === null || _a === void 0 ? void 0 : _a.disable480pResolutionScaleDown())) {\n                targetHeight = 360;\n            }\n            scale = Math.max(Math.min(setting.height, setting.width) / targetHeight, 1);\n            (_b = this.logger) === null || _b === void 0 ? void 0 : _b.info(`Resolution scale factor is ${scale} for capture resolution ${setting.width}x${setting.height}. New dimension is ${setting.width / scale}x${setting.height / scale}`);\n        }\n        return {\n            scaleResolutionDownBy: scale,\n            maxBitrate: maxBitrate,\n        };\n    }\n    getStreamCaptureSetting() {\n        var _a, _b, _c, _d;\n        return (_d = (_c = (_b = (_a = this.transceiverController) === null || _a === void 0 ? void 0 : _a.localVideoTransceiver()) === null || _b === void 0 ? void 0 : _b.sender) === null || _c === void 0 ? void 0 : _c.track) === null || _d === void 0 ? void 0 : _d.getSettings();\n    }\n    getNumberOfPublishedVideoSources() {\n        var _a;\n        /* istanbul ignore next: policy calculation is dependent on index so this is never undefined at time of use */\n        return (_a = this.numberOfPublishedVideoSources) !== null && _a !== void 0 ? _a : 0;\n    }\n}\nexports.default = NScaleVideoUplinkBandwidthPolicy;\nNScaleVideoUplinkBandwidthPolicy.encodingMapKey = 'video';\n// 0, 1, 2 have dummy value as we keep the original resolution if we have less than 2 videos.\nNScaleVideoUplinkBandwidthPolicy.targetHeightArray = [\n    0,\n    0,\n    0,\n    540,\n    540,\n    480,\n    480,\n    480,\n    480,\n    360,\n    360,\n    360,\n    360,\n    270,\n    270,\n    270,\n    270,\n    180,\n    180,\n    180,\n    180,\n    180,\n    180,\n    180,\n    180,\n    180,\n];\n//# sourceMappingURL=NScaleVideoUplinkBandwidthPolicy.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass DefaultVolumeIndicatorAdapter {\n    constructor(logger, realtimeController, minVolumeDecibels, maxVolumeDecibels, selfAttendeeId) {\n        this.logger = logger;\n        this.realtimeController = realtimeController;\n        this.minVolumeDecibels = minVolumeDecibels;\n        this.maxVolumeDecibels = maxVolumeDecibels;\n        this.selfAttendeeId = selfAttendeeId;\n        this.streamIdToAttendeeId = {};\n        this.streamIdToExternalUserId = {};\n        this.warnedAboutMissingStreamIdMapping = {};\n        this.attendeeIdToStreamId = {};\n        this.sessionReconnected = false;\n    }\n    onReconnect() {\n        this.sessionReconnected = true;\n    }\n    sendRealtimeUpdatesForAudioStreamIdInfo(info) {\n        let streamIndex = 0;\n        for (const stream of info.streams) {\n            const hasAttendeeId = !!stream.attendeeId;\n            const hasExternalUserId = !!stream.externalUserId;\n            const hasMuted = stream.hasOwnProperty('muted');\n            const hasDropped = !!stream.dropped;\n            if (hasAttendeeId) {\n                if (!!this.attendeeIdToStreamId[stream.attendeeId] &&\n                    this.attendeeIdToStreamId[stream.attendeeId] < stream.audioStreamId) {\n                    delete this.attendeeIdToStreamId[stream.attendeeId];\n                }\n                this.streamIdToAttendeeId[stream.audioStreamId] = stream.attendeeId;\n                const externalUserId = hasExternalUserId ? stream.externalUserId : stream.attendeeId;\n                this.streamIdToExternalUserId[stream.audioStreamId] = externalUserId;\n                this.attendeeIdToStreamId[stream.attendeeId] = stream.audioStreamId;\n                this.realtimeController.realtimeSetAttendeeIdPresence(stream.attendeeId, true, externalUserId, false, { attendeeIndex: streamIndex++, attendeesInFrame: info.streams.length });\n            }\n            if (hasMuted) {\n                const attendeeId = this.streamIdToAttendeeId[stream.audioStreamId];\n                const externalUserId = this.streamIdToExternalUserId[stream.audioStreamId];\n                this.realtimeController.realtimeUpdateVolumeIndicator(attendeeId, null, stream.muted, null, externalUserId);\n            }\n            if (!hasAttendeeId && !hasMuted) {\n                const attendeeId = this.streamIdToAttendeeId[stream.audioStreamId];\n                if (attendeeId) {\n                    const externalUserId = this.streamIdToExternalUserId[stream.audioStreamId];\n                    delete this.streamIdToAttendeeId[stream.audioStreamId];\n                    delete this.streamIdToExternalUserId[stream.audioStreamId];\n                    delete this.warnedAboutMissingStreamIdMapping[stream.audioStreamId];\n                    if (this.attendeeIdToStreamId[attendeeId] === stream.audioStreamId) {\n                        delete this.attendeeIdToStreamId[attendeeId];\n                    }\n                    let attendeeHasNewStreamId = false;\n                    for (const otherStreamId of Object.keys(this.streamIdToAttendeeId)) {\n                        const otherStreamIdNumber = parseInt(otherStreamId);\n                        if (otherStreamIdNumber > stream.audioStreamId &&\n                            this.streamIdToAttendeeId[otherStreamIdNumber] === attendeeId) {\n                            attendeeHasNewStreamId = true;\n                            break;\n                        }\n                    }\n                    if (!attendeeHasNewStreamId) {\n                        this.realtimeController.realtimeSetAttendeeIdPresence(attendeeId, false, externalUserId, hasDropped, { attendeeIndex: streamIndex++, attendeesInFrame: info.streams.length });\n                    }\n                }\n            }\n        }\n        if (this.sessionReconnected) {\n            this.cleanUpState(info);\n            this.sessionReconnected = false;\n        }\n    }\n    cleanUpState(info) {\n        const localAttendeeIds = Object.values(this.streamIdToAttendeeId);\n        const remoteAttendeeIds = info.streams.map(stream => stream.attendeeId);\n        const deletedAttendeeIds = localAttendeeIds.filter(id => {\n            return !remoteAttendeeIds.includes(id);\n        });\n        for (const [index, deletedAttendeeId] of deletedAttendeeIds.entries()) {\n            const streamId = this.attendeeIdToStreamId[deletedAttendeeId];\n            const externalUserId = this.streamIdToExternalUserId[streamId];\n            delete this.streamIdToAttendeeId[streamId];\n            delete this.streamIdToExternalUserId[streamId];\n            delete this.warnedAboutMissingStreamIdMapping[streamId];\n            delete this.attendeeIdToStreamId[deletedAttendeeId];\n            // During reconnection, the audio info frame might not include self attendee.\n            // However, if that happens, there would be another audio info frame with the self attendee after reconnection.\n            // So we should not send leave event here for self attendee.\n            if (deletedAttendeeId === this.selfAttendeeId) {\n                this.logger.warn(`the volume indicator adapter cleans up the current attendee (presence = false) after reconnection`);\n                continue;\n            }\n            // The reconnect event does not have information whether the attendee is dropped/left.\n            // Defaulting to attendee leaving the meeting\n            this.realtimeController.realtimeSetAttendeeIdPresence(deletedAttendeeId, false, externalUserId, false, { attendeeIndex: index, attendeesInFrame: deletedAttendeeId.length });\n        }\n    }\n    sendRealtimeUpdatesForAudioMetadata(metadata) {\n        let volumes = null;\n        let signalStrengths = null;\n        for (const state of metadata.attendeeStates) {\n            const attendeeId = this.attendeeIdForStreamId(state.audioStreamId);\n            if (state.hasOwnProperty('volume')) {\n                if (volumes === null) {\n                    volumes = {};\n                }\n                if (attendeeId !== null) {\n                    // @ts-ignore: TODO fix this protobufjs issue\n                    volumes[attendeeId] = this.normalizedVolume(state);\n                }\n            }\n            if (state.hasOwnProperty('signalStrength')) {\n                if (signalStrengths === null) {\n                    signalStrengths = {};\n                }\n                if (attendeeId !== null) {\n                    // @ts-ignore: TODO fix this protobufjs issue\n                    signalStrengths[attendeeId] = this.normalizedSignalStrength(state);\n                }\n            }\n        }\n        this.applyRealtimeUpdatesForAudioMetadata(volumes, signalStrengths);\n    }\n    normalizedVolume(state) {\n        const dBVolume = -state.volume;\n        const normalized = 1.0 - (dBVolume - this.maxVolumeDecibels) / (this.minVolumeDecibels - this.maxVolumeDecibels);\n        const clipped = Math.min(Math.max(normalized, 0.0), 1.0);\n        return clipped;\n    }\n    normalizedSignalStrength(state) {\n        const normalized = state.signalStrength / DefaultVolumeIndicatorAdapter.MAX_SIGNAL_STRENGTH_LEVELS;\n        const clipped = Math.min(Math.max(normalized, 0.0), 1.0);\n        return clipped;\n    }\n    applyRealtimeUpdatesForAudioMetadata(volumes, signalStrengths) {\n        for (const streamId in this.streamIdToAttendeeId) {\n            const attendeeId = this.streamIdToAttendeeId[streamId];\n            const externalUserId = this.streamIdToExternalUserId[streamId];\n            let volumeUpdate = null;\n            let signalStrengthUpdate = null;\n            if (volumes !== null) {\n                if (volumes.hasOwnProperty(attendeeId)) {\n                    volumeUpdate = volumes[attendeeId];\n                }\n                else {\n                    volumeUpdate = DefaultVolumeIndicatorAdapter.IMPLICIT_VOLUME;\n                }\n            }\n            if (signalStrengths !== null) {\n                if (signalStrengths.hasOwnProperty(attendeeId)) {\n                    signalStrengthUpdate = signalStrengths[attendeeId];\n                }\n                else {\n                    signalStrengthUpdate = DefaultVolumeIndicatorAdapter.IMPLICIT_SIGNAL_STRENGTH;\n                }\n            }\n            if (volumeUpdate !== null || signalStrengthUpdate !== null) {\n                this.realtimeController.realtimeUpdateVolumeIndicator(attendeeId, volumeUpdate, null, signalStrengthUpdate, externalUserId);\n            }\n        }\n    }\n    attendeeIdForStreamId(streamId) {\n        if (streamId === 0) {\n            return null;\n        }\n        const attendeeId = this.streamIdToAttendeeId[streamId];\n        if (attendeeId) {\n            return attendeeId;\n        }\n        if (!this.warnedAboutMissingStreamIdMapping[streamId]) {\n            this.warnedAboutMissingStreamIdMapping[streamId] = true;\n            this.logger.warn(`volume indicator stream id ${streamId} seen before being defined`);\n        }\n        return null;\n    }\n}\nexports.default = DefaultVolumeIndicatorAdapter;\nDefaultVolumeIndicatorAdapter.MAX_SIGNAL_STRENGTH_LEVELS = 2;\nDefaultVolumeIndicatorAdapter.IMPLICIT_VOLUME = 0;\nDefaultVolumeIndicatorAdapter.IMPLICIT_SIGNAL_STRENGTH = 1;\n//# sourceMappingURL=DefaultVolumeIndicatorAdapter.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultActiveSpeakerDetector_1 = require(\"../activespeakerdetector/DefaultActiveSpeakerDetector\");\nconst DefaultAudioMixController_1 = require(\"../audiomixcontroller/DefaultAudioMixController\");\nconst AudioProfile_1 = require(\"../audioprofile/AudioProfile\");\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\nconst ConnectionHealthData_1 = require(\"../connectionhealthpolicy/ConnectionHealthData\");\nconst SignalingAndMetricsConnectionMonitor_1 = require(\"../connectionmonitor/SignalingAndMetricsConnectionMonitor\");\nconst MeetingSessionStatus_1 = require(\"../meetingsession/MeetingSessionStatus\");\nconst MeetingSessionStatusCode_1 = require(\"../meetingsession/MeetingSessionStatusCode\");\nconst MeetingSessionVideoAvailability_1 = require(\"../meetingsession/MeetingSessionVideoAvailability\");\nconst DefaultModality_1 = require(\"../modality/DefaultModality\");\nconst DefaultPingPong_1 = require(\"../pingpong/DefaultPingPong\");\nconst DefaultRealtimeController_1 = require(\"../realtimecontroller/DefaultRealtimeController\");\nconst AsyncScheduler_1 = require(\"../scheduler/AsyncScheduler\");\nconst DefaultSessionStateController_1 = require(\"../sessionstatecontroller/DefaultSessionStateController\");\nconst SessionStateControllerAction_1 = require(\"../sessionstatecontroller/SessionStateControllerAction\");\nconst SessionStateControllerState_1 = require(\"../sessionstatecontroller/SessionStateControllerState\");\nconst SessionStateControllerTransitionResult_1 = require(\"../sessionstatecontroller/SessionStateControllerTransitionResult\");\nconst DefaultSignalingClient_1 = require(\"../signalingclient/DefaultSignalingClient\");\nconst SignalingClientEventType_1 = require(\"../signalingclient/SignalingClientEventType\");\nconst SignalingClientVideoSubscriptionConfiguration_1 = require(\"../signalingclient/SignalingClientVideoSubscriptionConfiguration\");\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nconst StatsCollector_1 = require(\"../statscollector/StatsCollector\");\nconst AttachMediaInputTask_1 = require(\"../task/AttachMediaInputTask\");\nconst CleanRestartedSessionTask_1 = require(\"../task/CleanRestartedSessionTask\");\nconst CleanStoppedSessionTask_1 = require(\"../task/CleanStoppedSessionTask\");\nconst CreatePeerConnectionTask_1 = require(\"../task/CreatePeerConnectionTask\");\nconst CreateSDPTask_1 = require(\"../task/CreateSDPTask\");\nconst FinishGatheringICECandidatesTask_1 = require(\"../task/FinishGatheringICECandidatesTask\");\nconst JoinAndReceiveIndexTask_1 = require(\"../task/JoinAndReceiveIndexTask\");\nconst LeaveAndReceiveLeaveAckTask_1 = require(\"../task/LeaveAndReceiveLeaveAckTask\");\nconst ListenForVolumeIndicatorsTask_1 = require(\"../task/ListenForVolumeIndicatorsTask\");\nconst MonitorTask_1 = require(\"../task/MonitorTask\");\nconst OpenSignalingConnectionTask_1 = require(\"../task/OpenSignalingConnectionTask\");\nconst ParallelGroupTask_1 = require(\"../task/ParallelGroupTask\");\nconst PromoteToPrimaryMeetingTask_1 = require(\"../task/PromoteToPrimaryMeetingTask\");\nconst ReceiveAudioInputTask_1 = require(\"../task/ReceiveAudioInputTask\");\nconst ReceiveTURNCredentialsTask_1 = require(\"../task/ReceiveTURNCredentialsTask\");\nconst ReceiveVideoInputTask_1 = require(\"../task/ReceiveVideoInputTask\");\nconst ReceiveVideoStreamIndexTask_1 = require(\"../task/ReceiveVideoStreamIndexTask\");\nconst SendAndReceiveDataMessagesTask_1 = require(\"../task/SendAndReceiveDataMessagesTask\");\nconst SerialGroupTask_1 = require(\"../task/SerialGroupTask\");\nconst SetLocalDescriptionTask_1 = require(\"../task/SetLocalDescriptionTask\");\nconst SetRemoteDescriptionTask_1 = require(\"../task/SetRemoteDescriptionTask\");\nconst SubscribeAndReceiveSubscribeAckTask_1 = require(\"../task/SubscribeAndReceiveSubscribeAckTask\");\nconst TimeoutTask_1 = require(\"../task/TimeoutTask\");\nconst WaitForAttendeePresenceTask_1 = require(\"../task/WaitForAttendeePresenceTask\");\nconst DefaultTransceiverController_1 = require(\"../transceivercontroller/DefaultTransceiverController\");\nconst SimulcastContentShareTransceiverController_1 = require(\"../transceivercontroller/SimulcastContentShareTransceiverController\");\nconst SimulcastTransceiverController_1 = require(\"../transceivercontroller/SimulcastTransceiverController\");\nconst VideoOnlyTransceiverController_1 = require(\"../transceivercontroller/VideoOnlyTransceiverController\");\nconst Types_1 = require(\"../utils/Types\");\nconst DefaultVideoCaptureAndEncodeParameter_1 = require(\"../videocaptureandencodeparameter/DefaultVideoCaptureAndEncodeParameter\");\nconst AllHighestVideoBandwidthPolicy_1 = require(\"../videodownlinkbandwidthpolicy/AllHighestVideoBandwidthPolicy\");\nconst VideoAdaptiveProbePolicy_1 = require(\"../videodownlinkbandwidthpolicy/VideoAdaptiveProbePolicy\");\nconst DefaultVideoStreamIdSet_1 = require(\"../videostreamidset/DefaultVideoStreamIdSet\");\nconst DefaultVideoStreamIndex_1 = require(\"../videostreamindex/DefaultVideoStreamIndex\");\nconst SimulcastVideoStreamIndex_1 = require(\"../videostreamindex/SimulcastVideoStreamIndex\");\nconst DefaultVideoTileController_1 = require(\"../videotilecontroller/DefaultVideoTileController\");\nconst DefaultVideoTileFactory_1 = require(\"../videotilefactory/DefaultVideoTileFactory\");\nconst DefaultSimulcastUplinkPolicy_1 = require(\"../videouplinkbandwidthpolicy/DefaultSimulcastUplinkPolicy\");\nconst NScaleVideoUplinkBandwidthPolicy_1 = require(\"../videouplinkbandwidthpolicy/NScaleVideoUplinkBandwidthPolicy\");\nconst DefaultVolumeIndicatorAdapter_1 = require(\"../volumeindicatoradapter/DefaultVolumeIndicatorAdapter\");\nconst AudioVideoControllerState_1 = require(\"./AudioVideoControllerState\");\nclass DefaultAudioVideoController {\n    constructor(configuration, logger, webSocketAdapter, mediaStreamBroker, reconnectController, eventController) {\n        this._audioProfile = new AudioProfile_1.default();\n        this.connectionHealthData = new ConnectionHealthData_1.default();\n        this.observerQueue = new Set();\n        this.meetingSessionContext = new AudioVideoControllerState_1.default();\n        this.enableSimulcast = false;\n        this.useUpdateTransceiverControllerForUplink = false;\n        this.totalRetryCount = 0;\n        this.startAudioVideoTimestamp = 0;\n        this.mayNeedRenegotiationForSimulcastLayerChange = false;\n        // Stored solely to trigger demotion callback on disconnection (expected behavior).\n        //\n        // We otherwise intentionally do not use this for any other behavior to avoid the complexity\n        // of the added state.\n        this.promotedToPrimaryMeeting = false;\n        this.hasGetRTCPeerConnectionStatsDeprecationMessageBeenSent = false;\n        // `connectWithPromises`, `connectWithTasks`, and `actionUpdateWithRenegotiation` all\n        // contains a significant portion of asynchronous tasks, so we need to explicitly defer\n        // any task operation which may be performed on the event queue that may modify\n        // mutable state in `MeetingSessionContext`, as this mutable state needs to be consistent over the course of the update.\n        //\n        // Currently this includes\n        // * `ReceiveVideoStreamIndexTask` which updates `videosToReceive` and `videoCaptureAndEncodeParameter`\n        // * `MonitorTask` which updates `videosToReceive`\n        this.receiveIndexTask = undefined;\n        this.monitorTask = undefined;\n        this.destroyed = false;\n        /** @internal */\n        this.usePromises = true;\n        this._logger = logger;\n        this.sessionStateController = new DefaultSessionStateController_1.default(this._logger);\n        this._configuration = configuration;\n        this._webSocketAdapter = webSocketAdapter;\n        this._realtimeController = new DefaultRealtimeController_1.default(mediaStreamBroker);\n        this._realtimeController.realtimeSetLocalAttendeeId(configuration.credentials.attendeeId, configuration.credentials.externalUserId);\n        this._mediaStreamBroker = mediaStreamBroker;\n        this._reconnectController = reconnectController;\n        this._videoTileController = new DefaultVideoTileController_1.default(new DefaultVideoTileFactory_1.default(), this, this._logger);\n        this._audioMixController = new DefaultAudioMixController_1.default(this._logger);\n        this._mediaStreamBroker.addMediaStreamBrokerObserver(this._audioMixController);\n        this.meetingSessionContext.logger = this._logger;\n        this._eventController = eventController;\n    }\n    destroy() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.observerQueue.clear();\n            this._mediaStreamBroker.removeMediaStreamBrokerObserver(this._audioMixController);\n            this.destroyed = true;\n        });\n    }\n    get configuration() {\n        return this._configuration;\n    }\n    get realtimeController() {\n        return this._realtimeController;\n    }\n    get activeSpeakerDetector() {\n        // Lazy init.\n        if (!this._activeSpeakerDetector) {\n            this._activeSpeakerDetector = new DefaultActiveSpeakerDetector_1.default(this._realtimeController, this._configuration.credentials.attendeeId, this.handleHasBandwidthPriority.bind(this));\n        }\n        return this._activeSpeakerDetector;\n    }\n    get videoTileController() {\n        return this._videoTileController;\n    }\n    get audioMixController() {\n        return this._audioMixController;\n    }\n    get logger() {\n        return this._logger;\n    }\n    get rtcPeerConnection() {\n        return (this.meetingSessionContext && this.meetingSessionContext.peer) || null;\n    }\n    get mediaStreamBroker() {\n        return this._mediaStreamBroker;\n    }\n    get eventController() {\n        return this._eventController;\n    }\n    /**\n     * This API will be deprecated in favor of `ClientMetricReport.getRTCStatsReport()`.\n     *\n     * It makes an additional call to the `getStats` API and therefore may cause slight performance degradation.\n     *\n     * Please subscribe to `metricsDidReceive(clientMetricReport: ClientMetricReport)` callback,\n     * and get the raw `RTCStatsReport` via `clientMetricReport.getRTCStatsReport()`.\n     */\n    getRTCPeerConnectionStats(selector) {\n        /* istanbul ignore else */\n        if (!this.hasGetRTCPeerConnectionStatsDeprecationMessageBeenSent) {\n            this.logger.warn('The `getRTCPeerConnectionStats()` is on its way to be deprecated. It makes an additional call to the `getStats` API and therefore may cause slight performance degradation. Please use the new API `clientMetricReport.getRTCStatsReport()` returned by `metricsDidReceive(clientMetricReport)` callback instead.');\n            this.hasGetRTCPeerConnectionStatsDeprecationMessageBeenSent = true;\n        }\n        if (!this.rtcPeerConnection) {\n            return null;\n        }\n        return this.rtcPeerConnection.getStats(selector);\n    }\n    setAudioProfile(audioProfile) {\n        this._audioProfile = audioProfile;\n    }\n    addObserver(observer) {\n        this.logger.info('adding meeting observer');\n        this.observerQueue.add(observer);\n    }\n    removeObserver(observer) {\n        this.logger.info('removing meeting observer');\n        this.observerQueue.delete(observer);\n    }\n    forEachObserver(observerFunc) {\n        for (const observer of this.observerQueue) {\n            AsyncScheduler_1.default.nextTick(() => {\n                if (this.observerQueue.has(observer)) {\n                    observerFunc(observer);\n                }\n            });\n        }\n    }\n    initSignalingClient() {\n        this.connectionHealthData.reset();\n        if (this.meetingSessionContext.signalingClient) {\n            return;\n        }\n        this.meetingSessionContext = new AudioVideoControllerState_1.default();\n        this.meetingSessionContext.logger = this.logger;\n        this.meetingSessionContext.eventController = this.eventController;\n        this.meetingSessionContext.browserBehavior = new DefaultBrowserBehavior_1.default();\n        this.meetingSessionContext.videoSendCodecPreferences = this.videoSendCodecPreferences;\n        this.meetingSessionContext.meetingSessionConfiguration = this.configuration;\n        this.meetingSessionContext.signalingClient = new DefaultSignalingClient_1.default(this._webSocketAdapter, this.logger);\n    }\n    uninstallPreStartObserver() {\n        this.meetingSessionContext.signalingClient.removeObserver(this.preStartObserver);\n        this.preStartObserver = undefined;\n    }\n    prestart() {\n        this.logger.info('Pre-connecting signaling connection.');\n        return this.createOrReuseSignalingTask()\n            .run()\n            .then(() => {\n            const handleClosed = () => __awaiter(this, void 0, void 0, function* () {\n                this.logger.info('Early connection closed; discarding signaling task.');\n                this.signalingTask = undefined;\n                this.uninstallPreStartObserver();\n            });\n            this.preStartObserver = {\n                handleSignalingClientEvent(event) {\n                    if (event.type === SignalingClientEventType_1.default.WebSocketClosed) {\n                        handleClosed();\n                    }\n                },\n            };\n            this.meetingSessionContext.signalingClient.registerObserver(this.preStartObserver);\n        })\n            .catch(e => {\n            this.logger.error(`Signaling task pre-start failed: ${e}`);\n            // Clean up just in case a subsequent attempt will succeed.\n            this.signalingTask = undefined;\n        });\n    }\n    start(options) {\n        this.startReturningPromise(options)\n            .then(() => {\n            this.logger.info('start completed');\n        })\n            // Just-in-case error handling.\n            .catch(\n        /* istanbul ignore next */\n        e => {\n            this.logger.error(`start failed: ${e}`);\n        });\n    }\n    // This is public (albeit marked internal) for tests only.\n    /* @internal */\n    startReturningPromise(options) {\n        if ((options === null || options === void 0 ? void 0 : options.signalingOnly) === true) {\n            return this.prestart();\n        }\n        // For side-effects: lazy getter.\n        this.activeSpeakerDetector;\n        return new Promise((resolve, reject) => {\n            this.sessionStateController.perform(SessionStateControllerAction_1.default.Connect, () => {\n                this.actionConnect(false).then(resolve).catch(reject);\n            });\n        });\n    }\n    // @ts-ignore\n    connectWithPromises(needsToWaitForAttendeePresence) {\n        const context = this.meetingSessionContext;\n        // Syntactic sugar.\n        const timeout = (timeoutMs, task) => {\n            return new TimeoutTask_1.default(this.logger, task, timeoutMs);\n        };\n        // First layer.\n        this.monitorTask = new MonitorTask_1.default(context, this.configuration.connectionHealthPolicyConfiguration, this.connectionHealthData);\n        const monitor = this.monitorTask.once();\n        // Second layer.\n        const receiveAudioInput = new ReceiveAudioInputTask_1.default(context).once();\n        this.receiveIndexTask = new ReceiveVideoStreamIndexTask_1.default(context);\n        // See declaration (unpaused in actionFinishConnecting)\n        this.monitorTask.pauseResubscribeCheck();\n        this.receiveIndexTask.pauseIngestion();\n        const signaling = new SerialGroupTask_1.default(this.logger, 'Signaling', [\n            // If pre-connecting, this will be an existing task that has already been run.\n            this.createOrReuseSignalingTask(),\n            new ListenForVolumeIndicatorsTask_1.default(context),\n            new SendAndReceiveDataMessagesTask_1.default(context),\n            new JoinAndReceiveIndexTask_1.default(context),\n            new ReceiveTURNCredentialsTask_1.default(context),\n            this.receiveIndexTask,\n        ]).once();\n        // Third layer.\n        const createPeerConnection = new CreatePeerConnectionTask_1.default(context).once(signaling);\n        const attachMediaInput = new AttachMediaInputTask_1.default(context).once(createPeerConnection, receiveAudioInput);\n        // Mostly serial section -- kept as promises to allow for finer-grained breakdown.\n        const createSDP = new CreateSDPTask_1.default(context).once(attachMediaInput);\n        const setLocalDescription = new SetLocalDescriptionTask_1.default(context).once(createSDP);\n        const ice = new FinishGatheringICECandidatesTask_1.default(context).once(setLocalDescription);\n        const subscribeAck = new SubscribeAndReceiveSubscribeAckTask_1.default(context).once(ice);\n        // The ending is a delicate time: we need the connection as a whole to have a timeout,\n        // and for the attendee presence timer to not start ticking until after the subscribe/ack.\n        return new SerialGroupTask_1.default(this.logger, this.wrapTaskName('AudioVideoStart'), [\n            monitor,\n            timeout(this.configuration.connectionTimeoutMs, new SerialGroupTask_1.default(this.logger, 'Peer', [\n                // The order of these two matters. If canceled, the first one that's still running\n                // will contribute any special rejection, and we don't want that to be \"attendee not found\"!\n                subscribeAck,\n                needsToWaitForAttendeePresence\n                    ? new TimeoutTask_1.default(this.logger, new ParallelGroupTask_1.default(this.logger, 'FinalizeConnection', [\n                        new WaitForAttendeePresenceTask_1.default(context),\n                        new SetRemoteDescriptionTask_1.default(context),\n                    ]), this.meetingSessionContext.meetingSessionConfiguration.attendeePresenceTimeoutMs)\n                    : /* istanbul ignore next */ new SetRemoteDescriptionTask_1.default(context),\n            ])),\n        ]);\n    }\n    connectWithTasks(needsToWaitForAttendeePresence) {\n        this.receiveIndexTask = new ReceiveVideoStreamIndexTask_1.default(this.meetingSessionContext);\n        this.monitorTask = new MonitorTask_1.default(this.meetingSessionContext, this.configuration.connectionHealthPolicyConfiguration, this.connectionHealthData);\n        // See declaration (unpaused in actionFinishConnecting)\n        this.receiveIndexTask.pauseIngestion();\n        this.monitorTask.pauseResubscribeCheck();\n        return new SerialGroupTask_1.default(this.logger, this.wrapTaskName('AudioVideoStart'), [\n            this.monitorTask,\n            new ReceiveAudioInputTask_1.default(this.meetingSessionContext),\n            new TimeoutTask_1.default(this.logger, new SerialGroupTask_1.default(this.logger, 'Media', [\n                new SerialGroupTask_1.default(this.logger, 'Signaling', [\n                    new OpenSignalingConnectionTask_1.default(this.meetingSessionContext),\n                    new ListenForVolumeIndicatorsTask_1.default(this.meetingSessionContext),\n                    new SendAndReceiveDataMessagesTask_1.default(this.meetingSessionContext),\n                    new JoinAndReceiveIndexTask_1.default(this.meetingSessionContext),\n                    new ReceiveTURNCredentialsTask_1.default(this.meetingSessionContext),\n                    this.receiveIndexTask,\n                ]),\n                new SerialGroupTask_1.default(this.logger, 'Peer', [\n                    new CreatePeerConnectionTask_1.default(this.meetingSessionContext),\n                    new AttachMediaInputTask_1.default(this.meetingSessionContext),\n                    new CreateSDPTask_1.default(this.meetingSessionContext),\n                    new SetLocalDescriptionTask_1.default(this.meetingSessionContext),\n                    new FinishGatheringICECandidatesTask_1.default(this.meetingSessionContext),\n                    new SubscribeAndReceiveSubscribeAckTask_1.default(this.meetingSessionContext),\n                    needsToWaitForAttendeePresence\n                        ? new TimeoutTask_1.default(this.logger, new ParallelGroupTask_1.default(this.logger, 'FinalizeConnection', [\n                            new WaitForAttendeePresenceTask_1.default(this.meetingSessionContext),\n                            new SetRemoteDescriptionTask_1.default(this.meetingSessionContext),\n                        ]), this.meetingSessionContext.meetingSessionConfiguration.attendeePresenceTimeoutMs)\n                        : /* istanbul ignore next */ new SetRemoteDescriptionTask_1.default(this.meetingSessionContext),\n                ]),\n            ]), this.configuration.connectionTimeoutMs),\n        ]);\n    }\n    actionConnect(reconnecting) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            this.initSignalingClient();\n            // We no longer need to watch for the early connection dropping; we're back where\n            // we otherwise would have been had we not pre-started.\n            this.uninstallPreStartObserver();\n            // Note that some of the assignments in this function exist to clean up previous connections.\n            // All future 'clean up' assignments should go in `AudioVideoControllerState.resetConnectionSpecificState`\n            // for consolidation purposes.\n            this.meetingSessionContext.mediaStreamBroker = this._mediaStreamBroker;\n            this.meetingSessionContext.realtimeController = this._realtimeController;\n            this.meetingSessionContext.audioMixController = this._audioMixController;\n            this.meetingSessionContext.audioVideoController = this;\n            this.enableSimulcast =\n                this.configuration.enableSimulcastForUnifiedPlanChromiumBasedBrowsers &&\n                    new DefaultBrowserBehavior_1.default().hasChromiumWebRTC();\n            const useAudioConnection = !!this.configuration.urls.audioHostURL;\n            if (!useAudioConnection) {\n                this.logger.info(`Using video only transceiver controller`);\n                this.meetingSessionContext.transceiverController = new VideoOnlyTransceiverController_1.default(this.logger, this.meetingSessionContext.browserBehavior);\n            }\n            else if (this.enableSimulcast) {\n                this.logger.info(`Using transceiver controller with simulcast support`);\n                if (new DefaultModality_1.default(this.configuration.credentials.attendeeId).hasModality(DefaultModality_1.default.MODALITY_CONTENT)) {\n                    this.meetingSessionContext.transceiverController = new SimulcastContentShareTransceiverController_1.default(this.logger, this.meetingSessionContext.browserBehavior);\n                }\n                else {\n                    this.meetingSessionContext.transceiverController = new SimulcastTransceiverController_1.default(this.logger, this.meetingSessionContext.browserBehavior);\n                }\n            }\n            else {\n                this.logger.info(`Using default transceiver controller`);\n                this.meetingSessionContext.transceiverController = new DefaultTransceiverController_1.default(this.logger, this.meetingSessionContext.browserBehavior);\n            }\n            this.meetingSessionContext.volumeIndicatorAdapter = new DefaultVolumeIndicatorAdapter_1.default(this.logger, this._realtimeController, DefaultAudioVideoController.MIN_VOLUME_DECIBELS, DefaultAudioVideoController.MAX_VOLUME_DECIBELS, this.configuration.credentials.attendeeId);\n            this.meetingSessionContext.videoTileController = this._videoTileController;\n            this.meetingSessionContext.videoDownlinkBandwidthPolicy = this.configuration.videoDownlinkBandwidthPolicy;\n            this.meetingSessionContext.videoUplinkBandwidthPolicy = this.configuration.videoUplinkBandwidthPolicy;\n            this.meetingSessionContext.enableSimulcast = this.enableSimulcast;\n            if (this.enableSimulcast) {\n                let simulcastPolicy = this.meetingSessionContext\n                    .videoUplinkBandwidthPolicy;\n                if (!simulcastPolicy) {\n                    simulcastPolicy = new DefaultSimulcastUplinkPolicy_1.default(this.configuration.credentials.attendeeId, this.meetingSessionContext.logger);\n                    this.meetingSessionContext.videoUplinkBandwidthPolicy = simulcastPolicy;\n                }\n                simulcastPolicy.addObserver(this);\n                if (!this.meetingSessionContext.videoDownlinkBandwidthPolicy) {\n                    this.meetingSessionContext.videoDownlinkBandwidthPolicy = new VideoAdaptiveProbePolicy_1.default(this.meetingSessionContext.logger);\n                }\n                this.meetingSessionContext.videoStreamIndex = new SimulcastVideoStreamIndex_1.default(this.logger);\n            }\n            else {\n                this.meetingSessionContext.enableSimulcast = false;\n                this.meetingSessionContext.videoStreamIndex = new DefaultVideoStreamIndex_1.default(this.logger);\n                if (!this.meetingSessionContext.videoUplinkBandwidthPolicy) {\n                    this.meetingSessionContext.videoUplinkBandwidthPolicy = new NScaleVideoUplinkBandwidthPolicy_1.default(this.configuration.credentials.attendeeId, !this.meetingSessionContext.browserBehavior.disableResolutionScaleDown(), this.meetingSessionContext.logger, this.meetingSessionContext.browserBehavior);\n                }\n                if (!this.meetingSessionContext.videoDownlinkBandwidthPolicy) {\n                    this.meetingSessionContext.videoDownlinkBandwidthPolicy = new AllHighestVideoBandwidthPolicy_1.default(this.configuration.credentials.attendeeId);\n                }\n                if (this.meetingSessionContext.videoUplinkBandwidthPolicy.setTransceiverController &&\n                    this.meetingSessionContext.videoUplinkBandwidthPolicy.updateTransceiverController) {\n                    this.useUpdateTransceiverControllerForUplink = true;\n                    this.meetingSessionContext.videoUplinkBandwidthPolicy.setTransceiverController(this.meetingSessionContext.transceiverController);\n                }\n                this.meetingSessionContext.audioProfile = this._audioProfile;\n            }\n            if (this.meetingSessionContext.videoUplinkBandwidthPolicy && this.maxUplinkBandwidthKbps) {\n                this.meetingSessionContext.videoUplinkBandwidthPolicy.setIdealMaxBandwidthKbps(this.maxUplinkBandwidthKbps);\n            }\n            if (this.meetingSessionContext.videoDownlinkBandwidthPolicy.bindToTileController) {\n                this.meetingSessionContext.videoDownlinkBandwidthPolicy.bindToTileController(this._videoTileController);\n            }\n            this.meetingSessionContext.lastKnownVideoAvailability = new MeetingSessionVideoAvailability_1.default();\n            this.meetingSessionContext.videoCaptureAndEncodeParameter = new DefaultVideoCaptureAndEncodeParameter_1.default(0, 0, 0, 0, false);\n            this.meetingSessionContext.videosToReceive = new DefaultVideoStreamIdSet_1.default();\n            this.meetingSessionContext.videosPaused = new DefaultVideoStreamIdSet_1.default();\n            this.meetingSessionContext.statsCollector = new StatsCollector_1.default(this, this.logger);\n            this.meetingSessionContext.connectionMonitor = new SignalingAndMetricsConnectionMonitor_1.default(this, this._realtimeController, this.connectionHealthData, new DefaultPingPong_1.default(this.meetingSessionContext.signalingClient, DefaultAudioVideoController.PING_PONG_INTERVAL_MS, this.logger), this.meetingSessionContext.statsCollector);\n            this.meetingSessionContext.reconnectController = this._reconnectController;\n            this.meetingSessionContext.videoDeviceInformation = {};\n            if (!reconnecting) {\n                this.totalRetryCount = 0;\n                this._reconnectController.reset();\n                this.startAudioVideoTimestamp = Date.now();\n                this.forEachObserver(observer => {\n                    Types_1.Maybe.of(observer.audioVideoDidStartConnecting).map(f => f.bind(observer)(false));\n                });\n                (_a = this.eventController) === null || _a === void 0 ? void 0 : _a.publishEvent('meetingStartRequested');\n            }\n            this.meetingSessionContext.startAudioVideoTimestamp = this.startAudioVideoTimestamp;\n            if (this._reconnectController.hasStartedConnectionAttempt()) {\n                // This does not reset the reconnect deadline, but declare it's not the first connection.\n                this._reconnectController.startedConnectionAttempt(false);\n            }\n            else {\n                this._reconnectController.startedConnectionAttempt(true);\n            }\n            // No attendee presence event will be triggered if there is no audio connection.\n            // Waiting for attendee presence is explicitly executed\n            // if `attendeePresenceTimeoutMs` is configured to larger than 0.\n            const needsToWaitForAttendeePresence = useAudioConnection &&\n                this.meetingSessionContext.meetingSessionConfiguration.attendeePresenceTimeoutMs > 0;\n            this.logger.info('Needs to wait for attendee presence? ' + needsToWaitForAttendeePresence);\n            let connect;\n            if (this.usePromises) {\n                connect = this.connectWithPromises(needsToWaitForAttendeePresence);\n            }\n            else {\n                connect = this.connectWithTasks(needsToWaitForAttendeePresence);\n            }\n            // The rest.\n            try {\n                yield connect.run();\n                this.connectionHealthData.setConnectionStartTime();\n                this._mediaStreamBroker.addMediaStreamBrokerObserver(this);\n                this.sessionStateController.perform(SessionStateControllerAction_1.default.FinishConnecting, () => {\n                    /* istanbul ignore else */\n                    if (this.eventController) {\n                        this.meetingSessionContext.meetingStartDurationMs =\n                            Date.now() - this.startAudioVideoTimestamp;\n                        this.eventController.publishEvent('meetingStartSucceeded', {\n                            maxVideoTileCount: this.meetingSessionContext.maxVideoTileCount,\n                            poorConnectionCount: this.meetingSessionContext.poorConnectionCount,\n                            retryCount: this.totalRetryCount,\n                            signalingOpenDurationMs: this.meetingSessionContext.signalingOpenDurationMs,\n                            iceGatheringDurationMs: this.meetingSessionContext.iceGatheringDurationMs,\n                            meetingStartDurationMs: this.meetingSessionContext.meetingStartDurationMs,\n                        });\n                    }\n                    this.meetingSessionContext.startTimeMs = Date.now();\n                    this.actionFinishConnecting();\n                });\n            }\n            catch (error) {\n                this.signalingTask = undefined;\n                const status = new MeetingSessionStatus_1.default(this.getMeetingStatusCode(error) || MeetingSessionStatusCode_1.default.TaskFailed);\n                this.logger.info(`Start failed: ${status} due to error ${error}.`);\n                // I am not able to successfully reach this state in the test suite with mock\n                // websockets -- it always ends up in 'Disconnecting' instead. As such, this\n                // has to be marked for Istanbul.\n                /* istanbul ignore if */\n                if (this.sessionStateController.state() === SessionStateControllerState_1.default.NotConnected) {\n                    // There's no point trying to 'disconnect', because we're not connected.\n                    // The session state controller will bail.\n                    this.logger.info('Start failed and not connected. Not cleaning up.');\n                    return;\n                }\n                this.sessionStateController.perform(SessionStateControllerAction_1.default.Fail, () => __awaiter(this, void 0, void 0, function* () {\n                    yield this.actionDisconnect(status, true, error);\n                    if (!this.handleMeetingSessionStatus(status, error)) {\n                        this.notifyStop(status, error);\n                    }\n                }));\n            }\n        });\n    }\n    createOrReuseSignalingTask() {\n        if (!this.signalingTask) {\n            this.initSignalingClient();\n            this.signalingTask = new TimeoutTask_1.default(this.logger, new OpenSignalingConnectionTask_1.default(this.meetingSessionContext), this.configuration.connectionTimeoutMs).once();\n        }\n        return this.signalingTask;\n    }\n    actionFinishConnecting() {\n        this.signalingTask = undefined;\n        this.meetingSessionContext.videoDuplexMode = SignalingProtocol_js_1.SdkStreamServiceType.RX;\n        if (!this.meetingSessionContext.enableSimulcast) {\n            if (this.useUpdateTransceiverControllerForUplink) {\n                this.meetingSessionContext.videoUplinkBandwidthPolicy.updateTransceiverController();\n            }\n            else {\n                this.enforceBandwidthLimitationForSender(this.meetingSessionContext.videoCaptureAndEncodeParameter.encodeBitrates()[0]);\n            }\n        }\n        this.forEachObserver(observer => {\n            Types_1.Maybe.of(observer.audioVideoDidStart).map(f => f.bind(observer)());\n        });\n        this._reconnectController.reset();\n        // `receiveIndexTask` needs to be resumed first so it can set `remoteStreamDescriptions`\n        this.receiveIndexTask.resumeIngestion();\n        this.monitorTask.resumeResubscribeCheck();\n    }\n    /* @internal */\n    stopReturningPromise() {\n        var _a;\n        // In order to avoid breaking backward compatibility, when only the\n        // signaling connection is established we appear to not be connected.\n        // We handle this by simply disconnecting the websocket directly.\n        if (this.sessionStateController.state() === SessionStateControllerState_1.default.NotConnected) {\n            // Unfortunately, this does not return a promise.\n            (_a = this.meetingSessionContext.signalingClient) === null || _a === void 0 ? void 0 : _a.closeConnection();\n            this.cleanUpMediaStreamsAfterStop();\n            return Promise.resolve();\n        }\n        /*\n          Stops the current audio video meeting session.\n          The stop method execution is deferred and executed after\n          the current reconnection attempt completes.\n          It disables any further reconnection attempts.\n          Upon completion, AudioVideoObserver's `audioVideoDidStop`\n          callback function is called with `MeetingSessionStatusCode.Left`.\n        */\n        return new Promise((resolve, reject) => {\n            this.sessionStateController.perform(SessionStateControllerAction_1.default.Disconnect, () => {\n                this._reconnectController.disableReconnect();\n                this.logger.info('attendee left meeting, session will not be reconnected');\n                this.actionDisconnect(new MeetingSessionStatus_1.default(MeetingSessionStatusCode_1.default.Left), false, null)\n                    .then(resolve)\n                    .catch(reject);\n            });\n        });\n    }\n    stop() {\n        this.stopReturningPromise();\n    }\n    actionDisconnect(status, reconnecting, error) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield new SerialGroupTask_1.default(this.logger, this.wrapTaskName('AudioVideoStop'), [\n                    new TimeoutTask_1.default(this.logger, new LeaveAndReceiveLeaveAckTask_1.default(this.meetingSessionContext), this.configuration.connectionTimeoutMs),\n                ]).run();\n            }\n            catch (stopError) {\n                this.logger.info('fail to stop');\n            }\n            try {\n                const subtasks = [\n                    new TimeoutTask_1.default(this.logger, new CleanStoppedSessionTask_1.default(this.meetingSessionContext), this.configuration.connectionTimeoutMs),\n                ];\n                this.cleanUpMediaStreamsAfterStop();\n                yield new SerialGroupTask_1.default(this.logger, this.wrapTaskName('AudioVideoClean'), subtasks).run();\n            }\n            catch (cleanError) {\n                /* istanbul ignore next */\n                this.logger.info('fail to clean');\n            }\n            this.sessionStateController.perform(SessionStateControllerAction_1.default.FinishDisconnecting, () => {\n                if (!reconnecting) {\n                    this.notifyStop(status, error);\n                }\n            });\n        });\n    }\n    update(options = { needsRenegotiation: true }) {\n        let needsRenegotiation = options.needsRenegotiation;\n        // Check in case this function has been called before peer connection is set up\n        // since that is necessary to try to update remote videos without the full resubscribe path\n        needsRenegotiation || (needsRenegotiation = this.meetingSessionContext.peer === undefined);\n        // If updating local or remote video without negotiation fails, fall back to renegotiation\n        needsRenegotiation || (needsRenegotiation = !this.updateRemoteVideosFromLastVideosToReceive());\n        needsRenegotiation || (needsRenegotiation = !this.updateLocalVideoFromPolicy());\n        // `MeetingSessionContext.lastVideosToReceive` needs to be updated regardless\n        this.meetingSessionContext.lastVideosToReceive = this.meetingSessionContext.videosToReceive;\n        if (!needsRenegotiation) {\n            this.logger.info('Update request does not require resubscribe');\n            // Call `actionFinishUpdating` to apply the new encoding parameters that may have been set in `updateLocalVideoFromPolicy`.\n            this.actionFinishUpdating();\n            return true; // Skip the subscribe!\n        }\n        this.logger.info('Update request requires resubscribe');\n        const result = this.sessionStateController.perform(SessionStateControllerAction_1.default.Update, () => {\n            this.actionUpdateWithRenegotiation(true);\n        });\n        return (result === SessionStateControllerTransitionResult_1.default.Transitioned ||\n            result === SessionStateControllerTransitionResult_1.default.DeferredTransition);\n    }\n    // This function will try to use the diff between `this.meetingSessionContext.lastVideosToReceive`\n    // and `this.meetingSessionContext.videosToReceive` to determine if the changes can be accomplished\n    // through `SignalingClient.remoteVideoUpdate` rather then the full subscribe.\n    //\n    // It requires the caller to manage `this.meetingSessionContext.lastVideosToReceive`\n    // and `this.meetingSessionContext.videosToReceive` so that `this.meetingSessionContext.lastVideosToReceive`\n    // contains the stream IDs from either last time a subscribe was set, or last time this function was set.\n    //\n    // It will return true if succesful, if false the caller must fall back to a full renegotiation\n    updateRemoteVideosFromLastVideosToReceive() {\n        var _a, _b;\n        const context = this.meetingSessionContext;\n        if (((_a = context.videosToReceive) === null || _a === void 0 ? void 0 : _a.empty()) || ((_b = context.lastVideosToReceive) === null || _b === void 0 ? void 0 : _b.empty())) {\n            return false;\n        }\n        // Check existence of all required dependencies and requisite functions\n        if (!context.transceiverController ||\n            !context.transceiverController.getMidForStreamId ||\n            !context.transceiverController.setStreamIdForMid ||\n            !context.videosToReceive.forEach ||\n            !context.signalingClient.remoteVideoUpdate ||\n            !context.videoStreamIndex.overrideStreamIdMappings) {\n            return false;\n        }\n        let added = [];\n        const simulcastStreamUpdates = new Map();\n        let removed = [];\n        if (context.lastVideosToReceive === null) {\n            added = context.videosToReceive.array();\n        }\n        else {\n            const index = context.videoStreamIndex;\n            context.videosToReceive.forEach((currentId) => {\n                if (context.lastVideosToReceive.contain(currentId)) {\n                    return;\n                }\n                // Check if group ID exists in previous set (i.e. simulcast stream switch)\n                let foundUpdatedPreviousStreamId = false;\n                context.lastVideosToReceive.forEach((previousId) => {\n                    if (foundUpdatedPreviousStreamId) {\n                        return; // Short circuit since we have already found it\n                    }\n                    if (index.StreamIdsInSameGroup(previousId, currentId)) {\n                        simulcastStreamUpdates.set(previousId, currentId);\n                        foundUpdatedPreviousStreamId = true;\n                    }\n                });\n                if (!foundUpdatedPreviousStreamId) {\n                    // Otherwise this must be a new stream\n                    added.push(currentId);\n                }\n            });\n            removed = context.lastVideosToReceive.array().filter(idFromPrevious => {\n                const stillReceiving = context.videosToReceive.contain(idFromPrevious);\n                const isUpdated = simulcastStreamUpdates.has(idFromPrevious);\n                return !stillReceiving && !isUpdated;\n            });\n        }\n        this.logger.info(`Request to update remote videos with added: ${added}, updated: ${[\n            ...simulcastStreamUpdates.entries(),\n        ]}, removed: ${removed}`);\n        const updatedVideoSubscriptionConfigurations = [];\n        for (const [previousId, currentId] of simulcastStreamUpdates.entries()) {\n            const updatedConfig = new SignalingClientVideoSubscriptionConfiguration_1.default();\n            updatedConfig.streamId = currentId;\n            updatedConfig.attendeeId = context.videoStreamIndex.attendeeIdForStreamId(currentId);\n            updatedConfig.mid = context.transceiverController.getMidForStreamId(previousId);\n            if (updatedConfig.mid === undefined) {\n                this.logger.info(`No MID found for stream ID ${previousId}, cannot update stream without renegotiation`);\n                return false;\n            }\n            updatedVideoSubscriptionConfigurations.push(updatedConfig);\n            // We need to override some other components dependent on the subscribe paths for certain functionality\n            context.transceiverController.setStreamIdForMid(updatedConfig.mid, currentId);\n            context.videoStreamIndex.overrideStreamIdMappings(previousId, currentId);\n            if (context.videoTileController.haveVideoTileForAttendeeId(updatedConfig.attendeeId)) {\n                const tile = context.videoTileController.getVideoTileForAttendeeId(updatedConfig.attendeeId);\n                if (!tile.setStreamId) {\n                    // Required function\n                    return false;\n                }\n                tile.setStreamId(currentId);\n            }\n        }\n        if (updatedVideoSubscriptionConfigurations.length !== 0) {\n            context.signalingClient.remoteVideoUpdate(updatedVideoSubscriptionConfigurations, []);\n        }\n        // Only simulcast stream switches (i.e. not add/remove/source switches) are possible currently\n        if (added.length !== 0 || removed.length !== 0) {\n            return false;\n        }\n        // `updateRemoteVideosFromLastVideosToReceive` does not actually send a subscribe but it uses\n        // `subscribeFrameSent` to cache the previous index so that we are able to do switches (not add/removes)\n        // for simulcast stream layer changes. See `subscribeFrameSent` for more details.\n        context.videoStreamIndex.subscribeFrameSent();\n        return true;\n    }\n    updateLocalVideoFromPolicy() {\n        // Try updating parameters without renegotiation\n        if (this.meetingSessionContext.enableSimulcast) {\n            // The following may result in `this.mayNeedRenegotiationForSimulcastLayerChange` being switched on\n            const encodingParam = this.meetingSessionContext.videoUplinkBandwidthPolicy.chooseEncodingParameters();\n            if (this.mayNeedRenegotiationForSimulcastLayerChange &&\n                !this.negotiatedBitrateLayersAllocationRtpHeaderExtension()) {\n                this.logger.info('Needs regenotiation for local video simulcast layer change');\n                this.mayNeedRenegotiationForSimulcastLayerChange = false;\n                return false;\n            }\n            this.meetingSessionContext.transceiverController.setEncodingParameters(encodingParam);\n        }\n        else {\n            this.meetingSessionContext.videoCaptureAndEncodeParameter = this.meetingSessionContext.videoUplinkBandwidthPolicy.chooseCaptureAndEncodeParameters();\n            // Bitrate will be set in `actionFinishUpdating`. This should never need a resubscribe.\n        }\n        this.logger.info('Updated local video from policy without renegotiation');\n        return true;\n    }\n    negotiatedBitrateLayersAllocationRtpHeaderExtension() {\n        if (!this.meetingSessionContext.transceiverController.localVideoTransceiver()) {\n            return false;\n        }\n        const parameters = this.meetingSessionContext.transceiverController\n            .localVideoTransceiver()\n            .sender.getParameters();\n        if (!parameters || !parameters.headerExtensions) {\n            return false;\n        }\n        return parameters.headerExtensions.some(extension => extension.uri === 'http://www.webrtc.org/experiments/rtp-hdrext/video-layers-allocation00');\n    }\n    restartLocalVideo(callback) {\n        const restartVideo = () => __awaiter(this, void 0, void 0, function* () {\n            if (this._videoTileController.hasStartedLocalVideoTile()) {\n                this.logger.info('stopping local video tile prior to local video restart');\n                this._videoTileController.stopLocalVideoTile();\n                this.logger.info('preparing local video restart update');\n                yield this.actionUpdateWithRenegotiation(false);\n                this.logger.info('starting local video tile for local video restart');\n                this._videoTileController.startLocalVideoTile();\n            }\n            this.logger.info('finalizing local video restart update');\n            yield this.actionUpdateWithRenegotiation(true);\n            callback();\n        });\n        const result = this.sessionStateController.perform(SessionStateControllerAction_1.default.Update, () => {\n            restartVideo();\n        });\n        return (result === SessionStateControllerTransitionResult_1.default.Transitioned ||\n            result === SessionStateControllerTransitionResult_1.default.DeferredTransition);\n    }\n    replaceLocalVideo(videoStream) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!videoStream || videoStream.getVideoTracks().length < 1) {\n                throw new Error('could not acquire video track');\n            }\n            if (!this.meetingSessionContext || !this.meetingSessionContext.peer) {\n                throw new Error('no active meeting and peer connection');\n            }\n            // if there is a local tile, a video tile update event should be fired.\n            const localTile = this.meetingSessionContext.videoTileController.getLocalVideoTile();\n            if (localTile) {\n                const state = localTile.state();\n                const settings = videoStream.getVideoTracks()[0].getSettings();\n                // so tile update wil be fired.\n                localTile.bindVideoStream(state.boundAttendeeId, true, videoStream, settings.width, settings.height, state.streamId, state.boundExternalUserId);\n            }\n            yield this.meetingSessionContext.transceiverController.setVideoInput(videoStream.getVideoTracks()[0]);\n            // Update the active video input on subscription context to match what we just changed\n            // so that subsequent meeting actions can reuse and destroy it.\n            this.meetingSessionContext.activeVideoInput = videoStream;\n            this.logger.info('Local video input is updated');\n        });\n    }\n    replaceLocalAudio(audioStream) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!audioStream || audioStream.getAudioTracks().length < 1) {\n                throw new Error('could not acquire audio track');\n            }\n            if (!this.meetingSessionContext || !this.meetingSessionContext.peer) {\n                throw new Error('no active meeting and peer connection');\n            }\n            this.connectionHealthData.reset();\n            this.connectionHealthData.setConnectionStartTime();\n            const replaceTrackSuccess = yield this.meetingSessionContext.transceiverController.replaceAudioTrack(audioStream.getAudioTracks()[0]);\n            if (!replaceTrackSuccess) {\n                throw new Error('Failed to replace audio track');\n            }\n            this.meetingSessionContext.activeAudioInput = audioStream;\n            this.logger.info('Local audio input is updated');\n        });\n    }\n    actionUpdateWithRenegotiation(notify) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // See declaration (unpaused in actionFinishUpdating)\n            // The operations in `update` do not need this protection because they are synchronous.\n            this.monitorTask.pauseResubscribeCheck();\n            this.receiveIndexTask.pauseIngestion();\n            // TODO: do not block other updates while waiting for video input\n            try {\n                yield new SerialGroupTask_1.default(this.logger, this.wrapTaskName('AudioVideoUpdate'), [\n                    new ReceiveVideoInputTask_1.default(this.meetingSessionContext),\n                    new TimeoutTask_1.default(this.logger, new SerialGroupTask_1.default(this.logger, 'UpdateSession', [\n                        new AttachMediaInputTask_1.default(this.meetingSessionContext),\n                        new CreateSDPTask_1.default(this.meetingSessionContext),\n                        new SetLocalDescriptionTask_1.default(this.meetingSessionContext),\n                        new FinishGatheringICECandidatesTask_1.default(this.meetingSessionContext),\n                        new SubscribeAndReceiveSubscribeAckTask_1.default(this.meetingSessionContext),\n                        new SetRemoteDescriptionTask_1.default(this.meetingSessionContext),\n                    ]), this.configuration.connectionTimeoutMs),\n                ]).run();\n                if (notify) {\n                    this.sessionStateController.perform(SessionStateControllerAction_1.default.FinishUpdating, () => {\n                        this.actionFinishUpdating();\n                    });\n                }\n            }\n            catch (error) {\n                this.sessionStateController.perform(SessionStateControllerAction_1.default.FinishUpdating, () => {\n                    const status = new MeetingSessionStatus_1.default(this.getMeetingStatusCode(error) || MeetingSessionStatusCode_1.default.TaskFailed);\n                    if (status.statusCode() !== MeetingSessionStatusCode_1.default.IncompatibleSDP) {\n                        this.logger.info('failed to update audio-video session');\n                    }\n                    this.handleMeetingSessionStatus(status, error);\n                });\n            }\n        });\n    }\n    notifyStop(status, error) {\n        var _a;\n        this.forEachObserver(observer => {\n            Types_1.Maybe.of(observer.audioVideoDidStop).map(f => f.bind(observer)(status));\n        });\n        if (this.promotedToPrimaryMeeting && error) {\n            this.forEachObserver(observer => {\n                this.promotedToPrimaryMeeting = false;\n                Types_1.Maybe.of(observer.audioVideoWasDemotedFromPrimaryMeeting).map(f => f.bind(observer)(new MeetingSessionStatus_1.default(MeetingSessionStatusCode_1.default.SignalingInternalServerError)));\n            });\n        }\n        /* istanbul ignore else */\n        if (this.eventController) {\n            const { signalingOpenDurationMs, poorConnectionCount, startTimeMs, iceGatheringDurationMs, attendeePresenceDurationMs, meetingStartDurationMs, } = this.meetingSessionContext;\n            const attributes = {\n                maxVideoTileCount: this.meetingSessionContext.maxVideoTileCount,\n                meetingDurationMs: startTimeMs === null ? 0 : Math.round(Date.now() - startTimeMs),\n                meetingStatus: MeetingSessionStatusCode_1.default[status.statusCode()],\n                signalingOpenDurationMs,\n                iceGatheringDurationMs,\n                attendeePresenceDurationMs,\n                poorConnectionCount,\n                meetingStartDurationMs,\n                retryCount: this.totalRetryCount,\n            };\n            /* istanbul ignore next: toString is optional */\n            const meetingErrorMessage = (error && error.message) || ((_a = status.toString) === null || _a === void 0 ? void 0 : _a.call(status)) || '';\n            if (attributes.meetingDurationMs === 0) {\n                attributes.meetingErrorMessage = meetingErrorMessage;\n                delete attributes.meetingDurationMs;\n                delete attributes.attendeePresenceDurationMs;\n                delete attributes.meetingStartDurationMs;\n                this.eventController.publishEvent('meetingStartFailed', attributes);\n            }\n            else if (status.isFailure() || status.isAudioConnectionFailure()) {\n                attributes.meetingErrorMessage = meetingErrorMessage;\n                this.eventController.publishEvent('meetingFailed', attributes);\n            }\n            else {\n                this.eventController.publishEvent('meetingEnded', attributes);\n            }\n        }\n    }\n    actionFinishUpdating() {\n        // we do not update parameter for simulcast since they are updated in AttachMediaInputTask\n        if (!this.meetingSessionContext.enableSimulcast) {\n            if (this.useUpdateTransceiverControllerForUplink) {\n                this.meetingSessionContext.videoUplinkBandwidthPolicy.updateTransceiverController();\n            }\n            else {\n                const maxBitrateKbps = this.meetingSessionContext.videoCaptureAndEncodeParameter.encodeBitrates()[0];\n                this.enforceBandwidthLimitationForSender(maxBitrateKbps);\n            }\n        }\n        this.monitorTask.resumeResubscribeCheck();\n        this.receiveIndexTask.resumeIngestion();\n        this.logger.info('updated audio-video session');\n    }\n    reconnect(status, error) {\n        const willRetry = this._reconnectController.retryWithBackoff(() => __awaiter(this, void 0, void 0, function* () {\n            if (this.sessionStateController.state() === SessionStateControllerState_1.default.NotConnected) {\n                this.sessionStateController.perform(SessionStateControllerAction_1.default.Connect, () => {\n                    this.actionConnect(true);\n                });\n            }\n            else {\n                this.sessionStateController.perform(SessionStateControllerAction_1.default.Reconnect, () => {\n                    this.actionReconnect(status);\n                });\n            }\n            this.totalRetryCount += 1;\n        }), () => {\n            this.logger.info('canceled retry');\n        });\n        if (!willRetry) {\n            this.sessionStateController.perform(SessionStateControllerAction_1.default.Fail, () => {\n                this.actionDisconnect(status, false, error);\n            });\n        }\n        return willRetry;\n    }\n    actionReconnect(status) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._reconnectController.hasStartedConnectionAttempt()) {\n                this._reconnectController.startedConnectionAttempt(false);\n                this.forEachObserver(observer => {\n                    Types_1.Maybe.of(observer.audioVideoDidStartConnecting).map(f => f.bind(observer)(true));\n                });\n            }\n            this.meetingSessionContext.volumeIndicatorAdapter.onReconnect();\n            this.connectionHealthData.reset();\n            try {\n                yield new SerialGroupTask_1.default(this.logger, this.wrapTaskName('AudioVideoReconnect'), [\n                    new TimeoutTask_1.default(this.logger, new SerialGroupTask_1.default(this.logger, 'Media', [\n                        new CleanRestartedSessionTask_1.default(this.meetingSessionContext),\n                        new SerialGroupTask_1.default(this.logger, 'Signaling', [\n                            new OpenSignalingConnectionTask_1.default(this.meetingSessionContext),\n                            new JoinAndReceiveIndexTask_1.default(this.meetingSessionContext),\n                            new ReceiveTURNCredentialsTask_1.default(this.meetingSessionContext),\n                        ]),\n                        new CreatePeerConnectionTask_1.default(this.meetingSessionContext),\n                    ]), this.configuration.connectionTimeoutMs),\n                    // TODO: Do we need ReceiveVideoInputTask in the reconnect operation?\n                    new ReceiveVideoInputTask_1.default(this.meetingSessionContext),\n                    new TimeoutTask_1.default(this.logger, new SerialGroupTask_1.default(this.logger, 'UpdateSession', [\n                        new AttachMediaInputTask_1.default(this.meetingSessionContext),\n                        new CreateSDPTask_1.default(this.meetingSessionContext),\n                        new SetLocalDescriptionTask_1.default(this.meetingSessionContext),\n                        new FinishGatheringICECandidatesTask_1.default(this.meetingSessionContext),\n                        new SubscribeAndReceiveSubscribeAckTask_1.default(this.meetingSessionContext),\n                        new SetRemoteDescriptionTask_1.default(this.meetingSessionContext),\n                    ]), this.configuration.connectionTimeoutMs),\n                ]).run();\n                this.sessionStateController.perform(SessionStateControllerAction_1.default.FinishConnecting, () => {\n                    /* istanbul ignore else */\n                    if (this.eventController) {\n                        const { signalingOpenDurationMs, poorConnectionCount, startTimeMs, iceGatheringDurationMs, attendeePresenceDurationMs, meetingStartDurationMs, } = this.meetingSessionContext;\n                        const attributes = {\n                            maxVideoTileCount: this.meetingSessionContext.maxVideoTileCount,\n                            meetingDurationMs: Math.round(Date.now() - startTimeMs),\n                            meetingStatus: MeetingSessionStatusCode_1.default[status.statusCode()],\n                            signalingOpenDurationMs,\n                            iceGatheringDurationMs,\n                            attendeePresenceDurationMs,\n                            poorConnectionCount,\n                            meetingStartDurationMs,\n                            retryCount: this.totalRetryCount,\n                        };\n                        this.eventController.publishEvent('meetingReconnected', attributes);\n                    }\n                    this.actionFinishConnecting();\n                });\n            }\n            catch (error) {\n                // To perform the \"Reconnect\" action again, the session should be in the \"Connected\" state.\n                this.sessionStateController.perform(SessionStateControllerAction_1.default.FinishConnecting, () => {\n                    this.logger.info('failed to reconnect audio-video session');\n                    const status = new MeetingSessionStatus_1.default(this.getMeetingStatusCode(error) || MeetingSessionStatusCode_1.default.TaskFailed);\n                    this.handleMeetingSessionStatus(status, error);\n                });\n            }\n            this.connectionHealthData.setConnectionStartTime();\n        });\n    }\n    wrapTaskName(taskName) {\n        return `${taskName}/${this.configuration.meetingId}/${this.configuration.credentials.attendeeId}`;\n    }\n    cleanUpMediaStreamsAfterStop() {\n        this._mediaStreamBroker.removeMediaStreamBrokerObserver(this);\n        this.meetingSessionContext.activeAudioInput = undefined;\n        this.meetingSessionContext.activeVideoInput = undefined;\n    }\n    // Extract the meeting status from `Error.message`, relying on specific phrasing\n    // 'the meeting status code ${CODE}`.\n    //\n    // e.g. reject(new Error(\n    //        `canceling ${this.name()} due to the meeting status code: ${MeetingSessionStatusCode.MeetingEnded}`));\n    getMeetingStatusCode(error) {\n        const matched = /the meeting status code: (\\d+)/.exec(error && error.message);\n        if (matched && matched.length > 1) {\n            return Number.parseInt(matched[1], 10);\n        }\n        return null;\n    }\n    enforceBandwidthLimitationForSender(maxBitrateKbps) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.meetingSessionContext.transceiverController.setVideoSendingBitrateKbps(maxBitrateKbps);\n        });\n    }\n    handleMeetingSessionStatus(status, error) {\n        this.logger.info(`handling status: ${MeetingSessionStatusCode_1.default[status.statusCode()]}`);\n        if (!status.isTerminal()) {\n            if (this.meetingSessionContext.statsCollector) {\n                this.meetingSessionContext.statsCollector.logMeetingSessionStatus(status);\n            }\n        }\n        if (status.statusCode() === MeetingSessionStatusCode_1.default.IncompatibleSDP) {\n            this.restartLocalVideo(() => {\n                this.logger.info('handled incompatible SDP by attempting to restart video');\n            });\n            return true;\n        }\n        if (status.statusCode() === MeetingSessionStatusCode_1.default.VideoCallSwitchToViewOnly) {\n            this._videoTileController.removeLocalVideoTile();\n            this.forEachObserver((observer) => {\n                Types_1.Maybe.of(observer.videoSendDidBecomeUnavailable).map(f => f.bind(observer)());\n            });\n            return false;\n        }\n        if (status.statusCode() === MeetingSessionStatusCode_1.default.AudioVideoWasRemovedFromPrimaryMeeting) {\n            this.forEachObserver((observer) => {\n                Types_1.Maybe.of(observer.audioVideoWasDemotedFromPrimaryMeeting).map(f => f.bind(observer)(status));\n            });\n            return false;\n        }\n        if (status.isTerminal()) {\n            this.logger.error('session will not be reconnected');\n            if (this.meetingSessionContext.reconnectController) {\n                this.meetingSessionContext.reconnectController.disableReconnect();\n            }\n        }\n        if (status.isFailure() || status.isTerminal()) {\n            if (this.meetingSessionContext.reconnectController) {\n                const willRetry = this.reconnect(status, error);\n                if (willRetry) {\n                    this.logger.warn(`will retry due to status code ${MeetingSessionStatusCode_1.default[status.statusCode()]}${error ? ` and error: ${error.message}` : ``}`);\n                }\n                else {\n                    this.logger.error(`failed with status code ${MeetingSessionStatusCode_1.default[status.statusCode()]}${error ? ` and error: ${error.message}` : ``}`);\n                }\n                return willRetry;\n            }\n        }\n        return false;\n    }\n    setVideoMaxBandwidthKbps(maxBandwidthKbps) {\n        if (maxBandwidthKbps <= 0) {\n            throw new Error('Max bandwidth kbps has to be greater than 0');\n        }\n        if (this.meetingSessionContext && this.meetingSessionContext.videoUplinkBandwidthPolicy) {\n            this.logger.info(`video send has ideal max bandwidth ${maxBandwidthKbps} kbps`);\n            this.meetingSessionContext.videoUplinkBandwidthPolicy.setIdealMaxBandwidthKbps(maxBandwidthKbps);\n        }\n        this.maxUplinkBandwidthKbps = maxBandwidthKbps;\n    }\n    handleHasBandwidthPriority(hasBandwidthPriority) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.meetingSessionContext &&\n                this.meetingSessionContext.videoUplinkBandwidthPolicy &&\n                !this.meetingSessionContext.enableSimulcast) {\n                if (this.useUpdateTransceiverControllerForUplink) {\n                    this.meetingSessionContext.videoUplinkBandwidthPolicy.setHasBandwidthPriority(hasBandwidthPriority);\n                    yield this.meetingSessionContext.videoUplinkBandwidthPolicy.updateTransceiverController();\n                    return;\n                }\n                const oldMaxBandwidth = this.meetingSessionContext.videoUplinkBandwidthPolicy.maxBandwidthKbps();\n                this.meetingSessionContext.videoUplinkBandwidthPolicy.setHasBandwidthPriority(hasBandwidthPriority);\n                const newMaxBandwidth = this.meetingSessionContext.videoUplinkBandwidthPolicy.maxBandwidthKbps();\n                if (oldMaxBandwidth !== newMaxBandwidth) {\n                    this.logger.info(`video send bandwidth priority ${hasBandwidthPriority} max has changed from ${oldMaxBandwidth} kbps to ${newMaxBandwidth} kbps`);\n                    yield this.enforceBandwidthLimitationForSender(newMaxBandwidth);\n                }\n            }\n        });\n    }\n    pauseReceivingStream(streamId) {\n        if (!!this.meetingSessionContext && this.meetingSessionContext.signalingClient) {\n            this.meetingSessionContext.signalingClient.pause([streamId]);\n        }\n    }\n    resumeReceivingStream(streamId) {\n        if (!!this.meetingSessionContext && this.meetingSessionContext.signalingClient) {\n            this.meetingSessionContext.signalingClient.resume([streamId]);\n        }\n    }\n    setVideoCodecSendPreferences(preferences) {\n        this.videoSendCodecPreferences = preferences; // In case we haven't called `initSignalingClient` yet\n        this.meetingSessionContext.videoSendCodecPreferences = preferences;\n        this.update({ needsRenegotiation: true });\n    }\n    getRemoteVideoSources() {\n        const { videoStreamIndex } = this.meetingSessionContext;\n        if (!videoStreamIndex) {\n            this.logger.info('meeting has not started');\n            return [];\n        }\n        const selfAttendeeId = this.configuration.credentials.attendeeId;\n        return videoStreamIndex.allVideoSendingSourcesExcludingSelf(selfAttendeeId);\n    }\n    encodingSimulcastLayersDidChange(simulcastLayers) {\n        this.mayNeedRenegotiationForSimulcastLayerChange = true;\n        this.forEachObserver(observer => {\n            Types_1.Maybe.of(observer.encodingSimulcastLayersDidChange).map(f => f.bind(observer)(simulcastLayers));\n        });\n    }\n    promoteToPrimaryMeeting(credentials) {\n        return this.actionPromoteToPrimaryMeeting(credentials);\n    }\n    actionPromoteToPrimaryMeeting(credentials) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resultingStatus = new MeetingSessionStatus_1.default(MeetingSessionStatusCode_1.default.SignalingRequestFailed);\n            yield new SerialGroupTask_1.default(this.logger, this.wrapTaskName('PromoteToPrimaryMeeting'), [\n                new TimeoutTask_1.default(this.logger, new PromoteToPrimaryMeetingTask_1.default(this.meetingSessionContext, credentials, (status) => {\n                    resultingStatus = status;\n                }), this.configuration.connectionTimeoutMs),\n            ]).run();\n            this.promotedToPrimaryMeeting = resultingStatus.statusCode() === MeetingSessionStatusCode_1.default.OK;\n            return resultingStatus;\n        });\n    }\n    demoteFromPrimaryMeeting() {\n        this.meetingSessionContext.signalingClient.demoteFromPrimaryMeeting();\n        this.forEachObserver(observer => {\n            Types_1.Maybe.of(observer.audioVideoWasDemotedFromPrimaryMeeting).map(f => f.bind(observer)(new MeetingSessionStatus_1.default(MeetingSessionStatusCode_1.default.OK)));\n        });\n    }\n    videoInputDidChange(videoStream) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.logger.info('Receive a video input change event');\n            // No active meeting, there is nothing to do\n            if (!this.meetingSessionContext || !this.meetingSessionContext.peer) {\n                this.logger.info('Skip updating video input because there is no active meeting and peer connection');\n                return;\n            }\n            if (this._videoTileController.hasStartedLocalVideoTile()) {\n                if (videoStream) {\n                    yield this.replaceLocalVideo(videoStream);\n                }\n                else {\n                    this._videoTileController.stopLocalVideoTile();\n                }\n            }\n        });\n    }\n    audioInputDidChange(audioStream) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.logger.info('Receive an audio input change event');\n            // No active meeting, there is nothing to do\n            if (!this.meetingSessionContext || !this.meetingSessionContext.peer) {\n                this.logger.info('Skip updating audio input because there is no active meeting and peer connection');\n                return;\n            }\n            if (!audioStream) {\n                // If audio input stream stopped, try to get empty audio device from media stream broker\n                try {\n                    audioStream = yield this.mediaStreamBroker.acquireAudioInputStream();\n                }\n                catch (error) {\n                    this.logger.error('Could not acquire audio track from mediaStreamBroker');\n                    return;\n                }\n            }\n            yield this.replaceLocalAudio(audioStream);\n        });\n    }\n}\nexports.default = DefaultAudioVideoController;\nDefaultAudioVideoController.MIN_VOLUME_DECIBELS = -42;\nDefaultAudioVideoController.MAX_VOLUME_DECIBELS = -14;\nDefaultAudioVideoController.PING_PONG_INTERVAL_MS = 10000;\n//# sourceMappingURL=DefaultAudioVideoController.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst VideoTransformDevice_1 = require(\"../devicecontroller/VideoTransformDevice\");\nclass DefaultAudioVideoFacade {\n    constructor(audioVideoController, videoTileController, realtimeController, audioMixController, deviceController, contentShareController) {\n        this.audioVideoController = audioVideoController;\n        this.videoTileController = videoTileController;\n        this.realtimeController = realtimeController;\n        this.audioMixController = audioMixController;\n        this.deviceController = deviceController;\n        this.contentShareController = contentShareController;\n    }\n    addObserver(observer) {\n        this.audioVideoController.addObserver(observer);\n        this.trace('addObserver');\n    }\n    removeObserver(observer) {\n        this.audioVideoController.removeObserver(observer);\n        this.trace('removeObserver');\n    }\n    setAudioProfile(audioProfile) {\n        this.trace('setAudioProfile', audioProfile);\n        this.audioVideoController.setAudioProfile(audioProfile);\n    }\n    start(options) {\n        this.audioVideoController.start(options);\n        this.trace('start');\n    }\n    stop() {\n        this.audioVideoController.stop();\n        this.trace('stop');\n    }\n    /**\n     * This API will be deprecated in favor of `ClientMetricReport.getRTCStatsReport()`.\n     *\n     * It makes an additional call to the `getStats` API and therefore may cause slight performance degradation.\n     *\n     * Please subscribe to `metricsDidReceive(clientMetricReport: ClientMetricReport)` callback,\n     * and get the raw `RTCStatsReport` via `clientMetricReport.getRTCStatsReport()`.\n     */\n    getRTCPeerConnectionStats(selector) {\n        this.trace('getRTCPeerConnectionStats', selector ? selector.id : null);\n        return this.audioVideoController.getRTCPeerConnectionStats(selector);\n    }\n    bindAudioElement(element) {\n        const result = this.audioMixController.bindAudioElement(element);\n        this.trace('bindAudioElement', element.id, result);\n        return result;\n    }\n    unbindAudioElement() {\n        this.audioMixController.unbindAudioElement();\n        this.trace('unbindAudioElement');\n    }\n    getCurrentMeetingAudioStream() {\n        this.trace('getCurrentConferenceStream');\n        return this.audioMixController.getCurrentMeetingAudioStream();\n    }\n    addAudioMixObserver(observer) {\n        this.trace('addAudioMixObserver');\n        this.audioMixController.addAudioMixObserver(observer);\n    }\n    removeAudioMixObserver(observer) {\n        this.trace('removeAudioMixObserver');\n        this.audioMixController.removeAudioMixObserver(observer);\n    }\n    bindVideoElement(tileId, videoElement) {\n        this.videoTileController.bindVideoElement(tileId, videoElement);\n        this.trace('bindVideoElement', { tileId: tileId, videoElementId: videoElement.id });\n    }\n    unbindVideoElement(tileId, cleanUpVideoElement = true) {\n        this.videoTileController.unbindVideoElement(tileId, cleanUpVideoElement);\n        this.trace('unbindVideoElement', { tileId: tileId, cleanUpVideoElement: cleanUpVideoElement });\n    }\n    startLocalVideoTile() {\n        const result = this.videoTileController.startLocalVideoTile();\n        this.trace('startLocalVideoTile', null, result);\n        return result;\n    }\n    stopLocalVideoTile() {\n        this.videoTileController.stopLocalVideoTile();\n        this.trace('stopLocalVideoTile');\n    }\n    hasStartedLocalVideoTile() {\n        const result = this.videoTileController.hasStartedLocalVideoTile();\n        this.trace('hasStartedLocalVideoTile', null, result);\n        return result;\n    }\n    removeLocalVideoTile() {\n        this.videoTileController.removeLocalVideoTile();\n        this.trace('removeLocalVideoTile');\n    }\n    getLocalVideoTile() {\n        const result = this.videoTileController.getLocalVideoTile();\n        this.trace('getLocalVideoTile');\n        return result;\n    }\n    pauseVideoTile(tileId) {\n        this.videoTileController.pauseVideoTile(tileId);\n        this.trace('pauseVideoTile', tileId);\n    }\n    unpauseVideoTile(tileId) {\n        this.videoTileController.unpauseVideoTile(tileId);\n        this.trace('unpauseVideoTile', tileId);\n    }\n    getVideoTile(tileId) {\n        const result = this.videoTileController.getVideoTile(tileId);\n        this.trace('getVideoTile', tileId);\n        return result;\n    }\n    getAllRemoteVideoTiles() {\n        const result = this.videoTileController.getAllRemoteVideoTiles();\n        this.trace('getAllRemoteVideoTiles');\n        return result;\n    }\n    getAllVideoTiles() {\n        const result = this.videoTileController.getAllVideoTiles();\n        this.trace('getAllVideoTiles');\n        return result;\n    }\n    addVideoTile() {\n        const result = this.videoTileController.addVideoTile();\n        this.trace('addVideoTile', null, result.state());\n        return result;\n    }\n    removeVideoTile(tileId) {\n        this.videoTileController.removeVideoTile(tileId);\n        this.trace('removeVideoTile', tileId);\n    }\n    removeVideoTilesByAttendeeId(attendeeId) {\n        const result = this.videoTileController.removeVideoTilesByAttendeeId(attendeeId);\n        this.trace('removeVideoTilesByAttendeeId', attendeeId, result);\n        return result;\n    }\n    removeAllVideoTiles() {\n        this.videoTileController.removeAllVideoTiles();\n        this.trace('removeAllVideoTiles');\n    }\n    captureVideoTile(tileId) {\n        const result = this.videoTileController.captureVideoTile(tileId);\n        this.trace('captureVideoTile', tileId);\n        return result;\n    }\n    realtimeSubscribeToAttendeeIdPresence(callback) {\n        this.realtimeController.realtimeSubscribeToAttendeeIdPresence(callback);\n        this.trace('realtimeSubscribeToAttendeeIdPresence');\n    }\n    realtimeUnsubscribeToAttendeeIdPresence(callback) {\n        this.realtimeController.realtimeUnsubscribeToAttendeeIdPresence(callback);\n        this.trace('realtimeUnsubscribeToAttendeeIdPresence');\n    }\n    realtimeSetCanUnmuteLocalAudio(canUnmute) {\n        this.realtimeController.realtimeSetCanUnmuteLocalAudio(canUnmute);\n        this.trace('realtimeSetCanUnmuteLocalAudio', canUnmute);\n    }\n    realtimeSubscribeToSetCanUnmuteLocalAudio(callback) {\n        this.realtimeController.realtimeSubscribeToSetCanUnmuteLocalAudio(callback);\n        this.trace('realtimeSubscribeToSetCanUnmuteLocalAudio');\n    }\n    realtimeUnsubscribeToSetCanUnmuteLocalAudio(callback) {\n        this.realtimeController.realtimeUnsubscribeToSetCanUnmuteLocalAudio(callback);\n        this.trace('realtimeUnsubscribeToSetCanUnmuteLocalAudio');\n    }\n    realtimeCanUnmuteLocalAudio() {\n        const result = this.realtimeController.realtimeCanUnmuteLocalAudio();\n        this.trace('realtimeCanUnmuteLocalAudio', null, result);\n        return result;\n    }\n    realtimeMuteLocalAudio() {\n        this.realtimeController.realtimeMuteLocalAudio();\n        this.trace('realtimeMuteLocalAudio');\n    }\n    realtimeUnmuteLocalAudio() {\n        const result = this.realtimeController.realtimeUnmuteLocalAudio();\n        this.trace('realtimeUnmuteLocalAudio');\n        return result;\n    }\n    realtimeSubscribeToMuteAndUnmuteLocalAudio(callback) {\n        this.realtimeController.realtimeSubscribeToMuteAndUnmuteLocalAudio(callback);\n        this.trace('realtimeSubscribeToMuteAndUnmuteLocalAudio');\n    }\n    realtimeUnsubscribeToMuteAndUnmuteLocalAudio(callback) {\n        this.realtimeController.realtimeUnsubscribeToMuteAndUnmuteLocalAudio(callback);\n        this.trace('realtimeUnsubscribeToMuteAndUnmuteLocalAudio');\n    }\n    realtimeIsLocalAudioMuted() {\n        const result = this.realtimeController.realtimeIsLocalAudioMuted();\n        this.trace('realtimeIsLocalAudioMuted');\n        return result;\n    }\n    realtimeSubscribeToVolumeIndicator(attendeeId, callback) {\n        this.realtimeController.realtimeSubscribeToVolumeIndicator(attendeeId, callback);\n        this.trace('realtimeSubscribeToVolumeIndicator', attendeeId);\n    }\n    realtimeUnsubscribeFromVolumeIndicator(attendeeId, callback) {\n        this.realtimeController.realtimeUnsubscribeFromVolumeIndicator(attendeeId, callback);\n        this.trace('realtimeUnsubscribeFromVolumeIndicator', attendeeId, callback);\n    }\n    realtimeSubscribeToLocalSignalStrengthChange(callback) {\n        this.realtimeController.realtimeSubscribeToLocalSignalStrengthChange(callback);\n        this.trace('realtimeSubscribeToLocalSignalStrengthChange');\n    }\n    realtimeUnsubscribeToLocalSignalStrengthChange(callback) {\n        this.realtimeController.realtimeUnsubscribeToLocalSignalStrengthChange(callback);\n        this.trace('realtimeUnsubscribeToLocalSignalStrengthChange');\n    }\n    realtimeSendDataMessage(topic, // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data, lifetimeMs) {\n        this.realtimeController.realtimeSendDataMessage(topic, data, lifetimeMs);\n        this.trace('realtimeSendDataMessage');\n    }\n    realtimeSubscribeToReceiveDataMessage(topic, callback) {\n        this.realtimeController.realtimeSubscribeToReceiveDataMessage(topic, callback);\n        this.trace('realtimeSubscribeToReceiveDataMessage');\n    }\n    realtimeUnsubscribeFromReceiveDataMessage(topic) {\n        this.realtimeController.realtimeUnsubscribeFromReceiveDataMessage(topic);\n        this.trace('realtimeUnsubscribeFromReceiveDataMessage');\n    }\n    realtimeSubscribeToFatalError(callback) {\n        this.realtimeController.realtimeSubscribeToFatalError(callback);\n        this.trace('realtimeSubscribeToFatalError');\n    }\n    realtimeUnsubscribeToFatalError(callback) {\n        this.realtimeController.realtimeUnsubscribeToFatalError(callback);\n        this.trace('realtimeUnsubscribeToFatalError');\n    }\n    subscribeToActiveSpeakerDetector(policy, callback, scoresCallback, scoresCallbackIntervalMs) {\n        this.audioVideoController.activeSpeakerDetector.subscribe(policy, callback, scoresCallback, scoresCallbackIntervalMs);\n        this.trace('subscribeToActiveSpeakerDetector');\n    }\n    unsubscribeFromActiveSpeakerDetector(callback) {\n        this.audioVideoController.activeSpeakerDetector.unsubscribe(callback);\n        this.trace('unsubscribeFromActiveSpeakerDetector');\n    }\n    listAudioInputDevices(forceUpdate = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.deviceController.listAudioInputDevices(forceUpdate);\n            this.trace('listAudioInputDevices', forceUpdate, result);\n            return result;\n        });\n    }\n    listVideoInputDevices(forceUpdate = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.deviceController.listVideoInputDevices(forceUpdate);\n            this.trace('listVideoInputDevices', forceUpdate, result);\n            return result;\n        });\n    }\n    listAudioOutputDevices(forceUpdate = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.deviceController.listAudioOutputDevices(forceUpdate);\n            this.trace('listAudioOutputDevices', forceUpdate, result);\n            return result;\n        });\n    }\n    startAudioInput(device) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.trace('startAudioInput', device);\n            return this.deviceController.startAudioInput(device);\n        });\n    }\n    stopAudioInput() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.trace('stopAudioInput');\n            return this.deviceController.stopAudioInput();\n        });\n    }\n    startVideoInput(device) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (VideoTransformDevice_1.isVideoTransformDevice(device)) {\n                // Don't stringify the device to avoid failures when cyclic object references are present.\n                this.trace('startVideoInput with transform device');\n            }\n            else {\n                this.trace('startVideoInput', device);\n            }\n            return this.deviceController.startVideoInput(device);\n        });\n    }\n    stopVideoInput() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.trace('stopVideoInput');\n            return this.deviceController.stopVideoInput();\n        });\n    }\n    chooseAudioOutput(deviceId) {\n        const result = this.deviceController.chooseAudioOutput(deviceId);\n        this.trace('chooseAudioOutput', deviceId);\n        return result;\n    }\n    addDeviceChangeObserver(observer) {\n        this.deviceController.addDeviceChangeObserver(observer);\n        this.trace('addDeviceChangeObserver');\n    }\n    removeDeviceChangeObserver(observer) {\n        this.deviceController.removeDeviceChangeObserver(observer);\n        this.trace('removeDeviceChangeObserver');\n    }\n    createAnalyserNodeForAudioInput() {\n        const result = this.deviceController.createAnalyserNodeForAudioInput();\n        this.trace('createAnalyserNodeForAudioInput');\n        return result;\n    }\n    startVideoPreviewForVideoInput(element) {\n        this.deviceController.startVideoPreviewForVideoInput(element);\n        this.trace('startVideoPreviewForVideoInput', element.id);\n    }\n    stopVideoPreviewForVideoInput(element) {\n        this.deviceController.stopVideoPreviewForVideoInput(element);\n        this.trace('stopVideoPreviewForVideoInput', element.id);\n    }\n    setDeviceLabelTrigger(trigger) {\n        this.deviceController.setDeviceLabelTrigger(trigger);\n        this.trace('setDeviceLabelTrigger');\n    }\n    mixIntoAudioInput(stream) {\n        const result = this.deviceController.mixIntoAudioInput(stream);\n        this.trace('mixIntoAudioInput', stream.id);\n        return result;\n    }\n    chooseVideoInputQuality(width, height, frameRate) {\n        this.deviceController.chooseVideoInputQuality(width, height, frameRate);\n        this.trace('chooseVideoInputQuality', {\n            width: width,\n            height: height,\n            frameRate: frameRate,\n        });\n    }\n    setVideoMaxBandwidthKbps(maxBandwidthKbps) {\n        this.audioVideoController.setVideoMaxBandwidthKbps(maxBandwidthKbps);\n        this.trace('setVideoMaxBandwidthKbps', maxBandwidthKbps);\n    }\n    setVideoCodecSendPreferences(preferences) {\n        this.audioVideoController.setVideoCodecSendPreferences(preferences);\n        this.trace('setVideoCodecSendPreferences', preferences);\n    }\n    getVideoInputQualitySettings() {\n        const result = this.deviceController.getVideoInputQualitySettings();\n        this.trace('getVideoInputQualitySettings');\n        return result;\n    }\n    setContentAudioProfile(audioProfile) {\n        this.trace('setContentAudioProfile', audioProfile);\n        this.contentShareController.setContentAudioProfile(audioProfile);\n    }\n    enableSimulcastForContentShare(enable, encodingParams) {\n        this.trace('enableSimulcastForContentShare');\n        this.contentShareController.enableSimulcastForContentShare(enable, encodingParams);\n    }\n    startContentShare(stream) {\n        const result = this.contentShareController.startContentShare(stream);\n        this.trace('startContentShare');\n        return result;\n    }\n    startContentShareFromScreenCapture(sourceId, frameRate) {\n        const result = this.contentShareController.startContentShareFromScreenCapture(sourceId, frameRate);\n        this.trace('startContentShareFromScreenCapture');\n        return result;\n    }\n    pauseContentShare() {\n        this.contentShareController.pauseContentShare();\n        this.trace('pauseContentShare');\n    }\n    unpauseContentShare() {\n        this.contentShareController.unpauseContentShare();\n        this.trace('unpauseContentShare');\n    }\n    stopContentShare() {\n        this.contentShareController.stopContentShare();\n        this.trace('stopContentShare');\n    }\n    addContentShareObserver(observer) {\n        this.contentShareController.addContentShareObserver(observer);\n        this.trace('addContentShareObserver');\n    }\n    removeContentShareObserver(observer) {\n        this.contentShareController.removeContentShareObserver(observer);\n        this.trace('removeContentShareObserver');\n    }\n    setContentShareVideoCodecPreferences(preferences) {\n        this.contentShareController.setContentShareVideoCodecPreferences(preferences);\n        this.trace('setContentShareVideoCodecPreferences');\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    trace(name, input, output) {\n        const meetingId = this.audioVideoController.configuration.meetingId;\n        const attendeeId = this.audioVideoController.configuration.credentials.attendeeId;\n        let s = `API/DefaultAudioVideoFacade/${meetingId}/${attendeeId}/${name}`;\n        if (typeof input !== 'undefined') {\n            s += ` ${JSON.stringify(input)}`;\n        }\n        if (typeof output !== 'undefined') {\n            s += ` -> ${JSON.stringify(output)}`;\n        }\n        this.audioVideoController.logger.info(s);\n    }\n    getRemoteVideoSources() {\n        const result = this.audioVideoController.getRemoteVideoSources();\n        this.trace('getRemoteVideoSources', null, result);\n        return result;\n    }\n    get transcriptionController() {\n        return this.realtimeController.transcriptionController;\n    }\n    promoteToPrimaryMeeting(credentials) {\n        this.audioVideoController.removeObserver(this); // Avoid adding multiple times\n        this.audioVideoController.addObserver(this); // See note in `audioVideoWasDemotedFromPrimaryMeeting`\n        const result = this.audioVideoController.promoteToPrimaryMeeting(credentials);\n        this.trace('promoteToPrimaryMeeting', null, result); // Don't trace credentials\n        return result;\n    }\n    demoteFromPrimaryMeeting() {\n        this.trace('demoteFromPrimaryMeeting');\n        this.audioVideoController.demoteFromPrimaryMeeting();\n    }\n    audioVideoWasDemotedFromPrimaryMeeting(_) {\n        // `DefaultContentShareController` currently does not respond to the connection ending\n        // so `contentShareDidStop` will not be called even if backend cleans up the connection.\n        // Thus we try to pre-emptively clean up on client side.\n        this.contentShareController.stopContentShare();\n        this.audioVideoController.removeObserver(this);\n    }\n}\nexports.default = DefaultAudioVideoFacade;\n//# sourceMappingURL=DefaultAudioVideoFacade.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toLowerCasePropertyNames = exports.isIFramed = exports.wait = void 0;\nfunction wait(waitTimeMs) {\n    return new Promise(resolve => setTimeout(resolve, waitTimeMs));\n}\nexports.wait = wait;\n// This is impossible to adequately test in Node, so Istanbul ignore.\n/* istanbul ignore next */\nfunction isIFramed() {\n    var _a;\n    // Same-origin iframes can check `nodeName`.\n    // We can also check whether the parent window and the top window are the same.\n    // Cross-origin iframes will throw on the `parent` check, so catch here.\n    try {\n        return ((_a = window.frameElement) === null || _a === void 0 ? void 0 : _a.nodeName) === 'IFRAME' || parent !== top;\n    }\n    catch (e) {\n        // Very likely to be a cross-origin iframe.\n        return true;\n    }\n}\nexports.isIFramed = isIFramed;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction toLowerCasePropertyNames(input) {\n    if (input === null) {\n        return null;\n    }\n    else if (typeof input !== 'object') {\n        return input;\n    }\n    else if (Array.isArray(input)) {\n        return input.map(toLowerCasePropertyNames);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return Object.keys(input).reduce((result, key) => {\n        const value = input[key];\n        const newValue = typeof value === 'object' ? toLowerCasePropertyNames(value) : value;\n        result[key.toLowerCase()] = newValue;\n        return result;\n    }, {});\n}\nexports.toLowerCasePropertyNames = toLowerCasePropertyNames;\n//# sourceMappingURL=Utils.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[MeetingSessionCredentials]] includes the credentials used to authenticate\n * the attendee on the meeting\n */\nclass MeetingSessionCredentials {\n    constructor() {\n        /**\n         * The attendee id for these credentials.\n         */\n        this.attendeeId = null;\n        /**\n         * The external user id associated with the attendee.\n         */\n        this.externalUserId = null;\n        /**\n         * If set, the session will be authenticated with a join token.\n         */\n        this.joinToken = null;\n    }\n    /**\n     * Overrides JSON serialization so that join token is redacted.\n     */\n    toJSON() {\n        return {\n            attendeeId: this.attendeeId,\n            joinToken: this.joinToken === null ? null : '<redacted>',\n        };\n    }\n}\nexports.default = MeetingSessionCredentials;\n//# sourceMappingURL=MeetingSessionCredentials.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[MeetingSessionURLs]] contains the URLs that will be used to reach the\n * meeting service.\n */\nclass MeetingSessionURLs {\n    constructor() {\n        /**\n         * The audio host URL of the session\n         */\n        this._audioHostURL = null;\n        /**\n         * The signaling URL of the session\n         */\n        this._signalingURL = null;\n        /**\n         * The TURN control URL of the session\n         */\n        this._turnControlURL = null;\n        /**\n         * The event ingestion URL to send the meeting events.\n         */\n        this._eventIngestionURL = null;\n        /**\n         * Function to transform URLs. Use this to rewrite URLs to traverse proxies.\n         * The default implementation returns the original URL unchanged.\n         */\n        this.urlRewriter = (url) => {\n            return url;\n        };\n    }\n    /**\n     * Gets or sets the audio host URL with gets reflecting the result of the {@link MeetingSessionURLs.urlRewriter} function.\n     */\n    get audioHostURL() {\n        return this.urlRewriter(this._audioHostURL);\n    }\n    set audioHostURL(value) {\n        this._audioHostURL = value;\n    }\n    /**\n     * Gets or sets the signaling URL with gets reflecting the result of the {@link MeetingSessionURLs.urlRewriter} function.\n     */\n    get signalingURL() {\n        return this.urlRewriter(this._signalingURL);\n    }\n    set signalingURL(value) {\n        this._signalingURL = value;\n    }\n    /**\n     * Gets or sets the TURN control URL with gets reflecting the result of the {@link MeetingSessionURLs.urlRewriter} function.\n     */\n    get turnControlURL() {\n        return this.urlRewriter(this._turnControlURL);\n    }\n    set turnControlURL(value) {\n        this._turnControlURL = value;\n    }\n    /**\n     * Gets or sets the events ingestion URL with gets reflecting the result of the {@link MeetingSessionURLs.urlRewriter} function.\n     */\n    get eventIngestionURL() {\n        return this.urlRewriter(this._eventIngestionURL);\n    }\n    set eventIngestionURL(value) {\n        this._eventIngestionURL = value;\n    }\n}\nexports.default = MeetingSessionURLs;\n//# sourceMappingURL=MeetingSessionURLs.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ConnectionHealthPolicyConfiguration_1 = require(\"../connectionhealthpolicy/ConnectionHealthPolicyConfiguration\");\nconst Utils_1 = require(\"../utils/Utils\");\nconst MeetingSessionCredentials_1 = require(\"./MeetingSessionCredentials\");\nconst MeetingSessionURLs_1 = require(\"./MeetingSessionURLs\");\n/**\n * [[MeetingSessionConfiguration]] contains the information necessary to start\n * a session.\n */\nclass MeetingSessionConfiguration {\n    /**\n     * Constructs a MeetingSessionConfiguration optionally with a chime:CreateMeeting and\n     * chime:CreateAttendee response. You can pass in either a JSON object containing the\n     * responses, or a JSON object containing the information in the Meeting and Attendee\n     * root-level fields. Examples:\n     *\n     * ```\n     * const configuration = new MeetingSessionConfiguration({\n     *   \"Meeting\": {\n     *      \"MeetingId\": \"...\",\n     *      \"MediaPlacement\": {\n     *        \"AudioHostUrl\": \"...\",\n     *        \"SignalingUrl\": \"...\",\n     *        \"TurnControlUrl\": \"...\"\n     *      }\n     *    }\n     *   }\n     * }, {\n     *   \"Attendee\": {\n     *     \"ExternalUserId\": \"...\",\n     *     \"AttendeeId\": \"...\",\n     *     \"JoinToken\": \"...\"\n     *   }\n     * });\n     * ```\n     *\n     * ```\n     * const configuration = new MeetingSessionConfiguration({\n     *   \"MeetingId\": \"...\",\n     *   \"MediaPlacement\": {\n     *     \"AudioHostUrl\": \"...\",\n     *     \"SignalingUrl\": \"...\",\n     *     \"TurnControlUrl\": \"...\"\n     *   }\n     * }, {\n     *   \"ExternalUserId\": \"...\",\n     *   \"AttendeeId\": \"...\",\n     *   \"JoinToken\": \"...\"\n     * });\n     * ```\n     */\n    constructor(createMeetingResponse, createAttendeeResponse) {\n        /**\n         * The id of the meeting the session is joining.\n         */\n        this.meetingId = null;\n        /**\n         * The external meeting id of the meeting the session is joining.\n         */\n        this.externalMeetingId = null;\n        /**\n         * The credentials used to authenticate the session.\n         */\n        this.credentials = null;\n        /**\n         * The URLs the session uses to reach the meeting service.\n         */\n        this.urls = null;\n        /**\n         * Maximum amount of time in milliseconds to allow for connecting.\n         */\n        this.connectionTimeoutMs = 15000;\n        /**\n         * Maximum amount of time in milliseconds to wait for the current attendee to be present\n         * after initial connection.\n         */\n        this.attendeePresenceTimeoutMs = 0;\n        /**\n         * Configuration for connection health policies: reconnection, unusable audio warning connection,\n         * and signal strength bars connection.\n         */\n        this.connectionHealthPolicyConfiguration = new ConnectionHealthPolicyConfiguration_1.default();\n        /**\n         * Maximum amount of time in milliseconds to allow for reconnecting.\n         */\n        this.reconnectTimeoutMs = 120 * 1000;\n        /**\n         * Fixed wait amount in milliseconds between reconnecting attempts.\n         */\n        this.reconnectFixedWaitMs = 0;\n        /**\n         * The short back-off time in milliseconds between reconnecting attempts.\n         */\n        this.reconnectShortBackOffMs = 1 * 1000;\n        /**\n         * The long back-off time in milliseconds between reconnecting attempts.\n         */\n        this.reconnectLongBackOffMs = 5 * 1000;\n        /**\n         * Feature flag to enable Simulcast\n         */\n        this.enableSimulcastForUnifiedPlanChromiumBasedBrowsers = false;\n        /**\n         * Video downlink bandwidth policy to determine which remote videos\n         * are subscribed to.\n         */\n        this.videoDownlinkBandwidthPolicy = null;\n        /**\n         * Video uplink bandwidth policy to determine the bandwidth constraints\n         * of the local video.\n         */\n        this.videoUplinkBandwidthPolicy = null;\n        /**\n         * Keep the last frame of the video when a remote video is paused via the pauseVideoTile API.\n         * This is done by not clearing the srcObject property of the videoElement.\n         */\n        this.keepLastFrameWhenPaused = false;\n        /**\n         * The Amazon Chime SDK media backends currently send a keyframe request to content share senders every 10 seconds to help mitigate\n         * decoder issues on receivers. This flag requests the backed to disable that feature.\n         *\n         * Setting this flag to true may or may not lead to issues with content received for your application, as it depends on browsers used\n         * and whether they have fixed previous issues leading to the introduction of this periodic keyframe request. It will however\n         * reduce CPU consumption on content senders which no longer have to generate as many expensive keyframes.\n         */\n        this.disablePeriodicKeyframeRequestOnContentSender = false;\n        if (createMeetingResponse) {\n            createMeetingResponse = Utils_1.toLowerCasePropertyNames(createMeetingResponse);\n            if (createMeetingResponse.meeting) {\n                createMeetingResponse = createMeetingResponse.meeting;\n            }\n            this.meetingId = createMeetingResponse.meetingid;\n            this.externalMeetingId = createMeetingResponse.externalmeetingid;\n            this.urls = new MeetingSessionURLs_1.default();\n            this.urls.audioHostURL = createMeetingResponse.mediaplacement.audiohosturl;\n            this.urls.signalingURL = createMeetingResponse.mediaplacement.signalingurl;\n            this.urls.turnControlURL = createMeetingResponse.mediaplacement.turncontrolurl;\n            if (createMeetingResponse.mediaplacement.eventingestionurl) {\n                this.urls.eventIngestionURL = createMeetingResponse.mediaplacement.eventingestionurl;\n            }\n        }\n        if (createAttendeeResponse) {\n            createAttendeeResponse = Utils_1.toLowerCasePropertyNames(createAttendeeResponse);\n            if (createAttendeeResponse.attendee) {\n                createAttendeeResponse = createAttendeeResponse.attendee;\n            }\n            this.credentials = new MeetingSessionCredentials_1.default();\n            this.credentials.attendeeId = createAttendeeResponse.attendeeid;\n            this.credentials.externalUserId = createAttendeeResponse.externaluserid;\n            this.credentials.joinToken = createAttendeeResponse.jointoken;\n        }\n    }\n}\nexports.default = MeetingSessionConfiguration;\n//# sourceMappingURL=MeetingSessionConfiguration.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SimulcastContentShareTransceiverController_1 = require(\"../transceivercontroller/SimulcastContentShareTransceiverController\");\n/**\n * [[DefaultSimulcastUplinkPolicyForContentShare]] sets the capture and encode\n *  parameters based on constructor input parameters\n */\nclass DefaultSimulcastUplinkPolicyForContentShare {\n    constructor(logger, encodingParams) {\n        this.logger = logger;\n        this.encodingParams = encodingParams;\n        this.videoIndex = null;\n        this.currLocalDescriptions = [];\n        this.nextLocalDescriptions = [];\n    }\n    updateConnectionMetric(_metrics) {\n        // Noop\n    }\n    chooseMediaTrackConstraints() {\n        // Changing MediaTrackConstraints causes a restart of video input and possible small\n        // scaling changes.  Always use 720p for now\n        return undefined;\n    }\n    chooseEncodingParameters() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n        const newMap = new Map();\n        const toBps = 1000;\n        const nameArr = SimulcastContentShareTransceiverController_1.default.NAME_ARR_ASCENDING;\n        newMap.set(nameArr[0], {\n            rid: nameArr[0],\n            active: true,\n            scaleResolutionDownBy: ((_b = (_a = this.encodingParams) === null || _a === void 0 ? void 0 : _a.low) === null || _b === void 0 ? void 0 : _b.scaleResolutionDownBy) || 2,\n            maxBitrate: (((_d = (_c = this.encodingParams) === null || _c === void 0 ? void 0 : _c.low) === null || _d === void 0 ? void 0 : _d.maxBitrateKbps) || 300) * toBps,\n            maxFramerate: ((_f = (_e = this.encodingParams) === null || _e === void 0 ? void 0 : _e.low) === null || _f === void 0 ? void 0 : _f.maxFramerate) || 5,\n        });\n        newMap.set(nameArr[1], {\n            rid: nameArr[1],\n            active: true,\n            scaleResolutionDownBy: ((_h = (_g = this.encodingParams) === null || _g === void 0 ? void 0 : _g.high) === null || _h === void 0 ? void 0 : _h.scaleResolutionDownBy) || 1,\n            maxBitrate: (((_k = (_j = this.encodingParams) === null || _j === void 0 ? void 0 : _j.high) === null || _k === void 0 ? void 0 : _k.maxBitrateKbps) || 1200) * toBps,\n            maxFramerate: (_m = (_l = this.encodingParams) === null || _l === void 0 ? void 0 : _l.high) === null || _m === void 0 ? void 0 : _m.maxFramerate,\n        });\n        this.getQualityMapString(newMap);\n        return newMap;\n    }\n    updateIndex(videoIndex) {\n        this.videoIndex = videoIndex;\n    }\n    wantsResubscribe() {\n        var _a, _b;\n        let constraintDiff = false;\n        this.nextLocalDescriptions = (_a = this.videoIndex) === null || _a === void 0 ? void 0 : _a.localStreamDescriptions();\n        for (let i = 0; i < ((_b = this.nextLocalDescriptions) === null || _b === void 0 ? void 0 : _b.length); i++) {\n            const streamId = this.nextLocalDescriptions[i].streamId;\n            if (streamId !== 0 && !!streamId) {\n                const prevIndex = this.currLocalDescriptions.findIndex(val => {\n                    return val.streamId === streamId;\n                });\n                if (prevIndex !== -1) {\n                    if (this.nextLocalDescriptions[i].disabledByWebRTC !==\n                        this.currLocalDescriptions[prevIndex].disabledByWebRTC) {\n                        constraintDiff = true;\n                    }\n                }\n            }\n        }\n        this.currLocalDescriptions = this.nextLocalDescriptions;\n        return constraintDiff;\n    }\n    chooseCaptureAndEncodeParameters() {\n        // should deprecate in this policy\n        return undefined;\n    }\n    maxBandwidthKbps() {\n        // should deprecate in this policy\n        return 1200;\n    }\n    setIdealMaxBandwidthKbps(_idealMaxBandwidthKbps) {\n        // should deprecate in this policy\n    }\n    setHasBandwidthPriority(_hasBandwidthPriority) {\n        // should deprecate in this policy\n    }\n    getQualityMapString(params) {\n        var _a;\n        let qualityString = '';\n        const localDescriptions = (_a = this.videoIndex) === null || _a === void 0 ? void 0 : _a.localStreamDescriptions();\n        if ((localDescriptions === null || localDescriptions === void 0 ? void 0 : localDescriptions.length) > 0) {\n            params.forEach((value) => {\n                let disabledByWebRTC = false;\n                if (value.rid === 'low')\n                    disabledByWebRTC = localDescriptions[0].disabledByWebRTC;\n                else\n                    disabledByWebRTC = localDescriptions[1].disabledByWebRTC;\n                qualityString += `{ rid: ${value.rid} active:${value.active} disabledByWebRTC: ${disabledByWebRTC} maxBitrate:${value.maxBitrate} scaleResolutionDownBy:${value.scaleResolutionDownBy} maxFrameRate:${value.maxFramerate}`;\n            });\n            this.logger.info(`simulcast: content policy:chooseEncodingParameters newQualityMap: ${qualityString}`);\n        }\n    }\n    addObserver(_observer) { }\n    removeObserver(_observer) { }\n    forEachObserver(_observerFunc) { }\n}\nexports.default = DefaultSimulcastUplinkPolicyForContentShare;\n//# sourceMappingURL=DefaultSimulcastUplinkPolicyForContentShare.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MeetingSessionConfiguration_1 = require(\"../meetingsession/MeetingSessionConfiguration\");\nconst MeetingSessionCredentials_1 = require(\"../meetingsession/MeetingSessionCredentials\");\nconst DefaultModality_1 = require(\"../modality/DefaultModality\");\nconst AsyncScheduler_1 = require(\"../scheduler/AsyncScheduler\");\nconst Types_1 = require(\"../utils/Types\");\nconst DefaultSimulcastUplinkPolicyForContentShare_1 = require(\"../videouplinkbandwidthpolicy/DefaultSimulcastUplinkPolicyForContentShare\");\nconst ContentShareConstants_1 = require(\"./ContentShareConstants\");\nclass DefaultContentShareController {\n    constructor(mediaStreamBroker, contentAudioVideo, attendeeAudioVideo) {\n        this.mediaStreamBroker = mediaStreamBroker;\n        this.contentAudioVideo = contentAudioVideo;\n        this.attendeeAudioVideo = attendeeAudioVideo;\n        this.observerQueue = new Set();\n        this.destroyed = false;\n        this.contentAudioVideo.addObserver(this);\n        this.setupContentShareEvents();\n    }\n    static createContentShareMeetingSessionConfigure(configuration) {\n        const contentShareConfiguration = new MeetingSessionConfiguration_1.default();\n        contentShareConfiguration.meetingId = configuration.meetingId;\n        contentShareConfiguration.externalMeetingId = configuration.externalMeetingId;\n        contentShareConfiguration.urls = configuration.urls;\n        contentShareConfiguration.disablePeriodicKeyframeRequestOnContentSender =\n            configuration.disablePeriodicKeyframeRequestOnContentSender;\n        contentShareConfiguration.credentials = new MeetingSessionCredentials_1.default();\n        contentShareConfiguration.credentials.attendeeId =\n            configuration.credentials.attendeeId + ContentShareConstants_1.default.Modality;\n        contentShareConfiguration.credentials.externalUserId = configuration.credentials.externalUserId;\n        contentShareConfiguration.credentials.joinToken =\n            configuration.credentials.joinToken + ContentShareConstants_1.default.Modality;\n        return contentShareConfiguration;\n    }\n    setContentAudioProfile(audioProfile) {\n        this.contentAudioVideo.setAudioProfile(audioProfile);\n    }\n    enableSimulcastForContentShare(enable, encodingParams) {\n        if (enable) {\n            this.contentAudioVideo.configuration.enableSimulcastForUnifiedPlanChromiumBasedBrowsers = true;\n            this.contentAudioVideo.configuration.videoUplinkBandwidthPolicy = new DefaultSimulcastUplinkPolicyForContentShare_1.default(this.contentAudioVideo.logger, encodingParams);\n        }\n        else {\n            this.contentAudioVideo.configuration.enableSimulcastForUnifiedPlanChromiumBasedBrowsers = false;\n            this.contentAudioVideo.configuration.videoUplinkBandwidthPolicy = undefined;\n        }\n    }\n    startContentShare(stream) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!stream) {\n                return;\n            }\n            this.mediaStreamBroker.mediaStream = stream;\n            for (let i = 0; i < this.mediaStreamBroker.mediaStream.getTracks().length; i++) {\n                this.mediaStreamBroker.mediaStream.getTracks()[i].addEventListener('ended', () => {\n                    this.stopContentShare();\n                });\n            }\n            this.contentAudioVideo.start();\n        });\n    }\n    startContentShareFromScreenCapture(sourceId, frameRate) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const mediaStream = yield this.mediaStreamBroker.acquireScreenCaptureDisplayInputStream(sourceId, frameRate);\n            yield this.startContentShare(mediaStream);\n            return mediaStream;\n        });\n    }\n    pauseContentShare() {\n        if (this.mediaStreamBroker.toggleMediaStream(false)) {\n            this.forEachContentShareObserver(observer => {\n                Types_1.Maybe.of(observer.contentShareDidPause).map(f => f.call(observer));\n            });\n        }\n    }\n    unpauseContentShare() {\n        if (this.mediaStreamBroker.toggleMediaStream(true)) {\n            this.forEachContentShareObserver(observer => {\n                Types_1.Maybe.of(observer.contentShareDidUnpause).map(f => f.call(observer));\n            });\n        }\n    }\n    setContentShareVideoCodecPreferences(preferences) {\n        this.contentAudioVideo.setVideoCodecSendPreferences(preferences);\n    }\n    destroy() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Idempotency.\n            /* istanbul ignore if */\n            if (!this.contentAudioVideo) {\n                return;\n            }\n            this.destroyed = true;\n            this.contentAudioVideo.removeObserver(this);\n            this.stopContentShare();\n            this.observerQueue.clear();\n            this.contentAudioVideo = undefined;\n            this.attendeeAudioVideo = undefined;\n            this.mediaStreamBroker = undefined;\n        });\n    }\n    stopContentShare() {\n        this.contentAudioVideo.stop();\n        this.mediaStreamBroker.cleanup();\n    }\n    addContentShareObserver(observer) {\n        this.observerQueue.add(observer);\n    }\n    removeContentShareObserver(observer) {\n        this.observerQueue.delete(observer);\n    }\n    forEachContentShareObserver(observerFunc) {\n        for (const observer of this.observerQueue) {\n            AsyncScheduler_1.default.nextTick(() => {\n                if (this.observerQueue.has(observer)) {\n                    observerFunc(observer);\n                }\n            });\n        }\n    }\n    audioVideoDidStart() {\n        if (this.mediaStreamBroker.mediaStream.getVideoTracks().length > 0) {\n            this.contentAudioVideo.videoTileController.startLocalVideoTile();\n        }\n    }\n    audioVideoDidStop(_sessionStatus) {\n        // If the content attendee got dropped or could not connect, stopContentShare will not be called\n        // so make sure to clean up the media stream.\n        this.mediaStreamBroker.cleanup();\n        if (this.contentShareTile) {\n            this.attendeeAudioVideo.videoTileController.removeVideoTile(this.contentShareTile.id());\n            this.contentShareTile = null;\n        }\n        this.forEachContentShareObserver(observer => {\n            Types_1.Maybe.of(observer.contentShareDidStop).map(f => f.call(observer));\n        });\n    }\n    setupContentShareEvents() {\n        // We use realtimeSubscribeToAttendeeIdPresence instead of audioVideoDidStart because audioVideoDidStart fires\n        // before the capacity check in Tincan while when realtimeSubscribeToAttendeeIdPresence fires, we know the\n        // content attendee has been able to pass the capacity check and join the call so we can start the local\n        // content share video\n        this.attendeeAudioVideo.realtimeController.realtimeSubscribeToAttendeeIdPresence((attendeeId, present, _externalUserId, _dropped) => {\n            const isContentAttendee = new DefaultModality_1.default(attendeeId).hasModality(DefaultModality_1.default.MODALITY_CONTENT);\n            const isSelfAttendee = new DefaultModality_1.default(attendeeId).base() ===\n                this.attendeeAudioVideo.configuration.credentials.attendeeId;\n            if (!isContentAttendee || !isSelfAttendee || !present || this.contentShareTile) {\n                return;\n            }\n            const stream = this.mediaStreamBroker.mediaStream;\n            if (stream === null || stream === void 0 ? void 0 : stream.getVideoTracks().length) {\n                this.contentShareTile = this.attendeeAudioVideo.videoTileController.addVideoTile();\n                const track = stream.getVideoTracks()[0];\n                let width, height;\n                if (track.getSettings) {\n                    const cap = track.getSettings();\n                    width = cap.width;\n                    height = cap.height;\n                }\n                else {\n                    const cap = track.getCapabilities();\n                    width = cap.width;\n                    height = cap.height;\n                }\n                this.contentShareTile.bindVideoStream(this.contentAudioVideo.configuration.credentials.attendeeId, false, stream, width, height, null, this.contentAudioVideo.configuration.credentials.externalUserId);\n            }\n            this.forEachContentShareObserver(observer => {\n                Types_1.Maybe.of(observer.contentShareDidStart).map(f => f.call(observer));\n            });\n        });\n    }\n}\nexports.default = DefaultContentShareController;\n//# sourceMappingURL=DefaultContentShareController.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isDestroyable = void 0;\n/**\n * Type guard for `Destroyable`.\n *\n * @param x A value that might implement the `Destroyable` interface.\n * @returns Whether the value implements `Destroyable`.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isDestroyable(x) {\n    return x && 'destroy' in x;\n}\nexports.isDestroyable = isDestroyable;\n//# sourceMappingURL=Destroyable.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[EventBufferConfiguration]] contains necessary information to\n * configure buffer.\n */\nclass EventBufferConfiguration {\n    constructor(flushIntervalMs = 5000, flushSize = 2, maxBufferCapacityKb = 64, totalBufferItems = 100, retryCountLimit = 15) {\n        this.flushIntervalMs = flushIntervalMs;\n        this.flushSize = flushSize;\n        this.maxBufferCapacityKb = maxBufferCapacityKb;\n        this.totalBufferItems = totalBufferItems;\n        this.retryCountLimit = retryCountLimit;\n    }\n}\nexports.default = EventBufferConfiguration;\n//# sourceMappingURL=EventBufferConfiguration.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst EventBufferConfiguration_1 = require(\"../eventbufferconfiguration/EventBufferConfiguration\");\n/**\n * [[EventIngestionConfiguration]] contains necessary information to\n * report events to the ingestion service.\n */\nclass EventIngestionConfiguration {\n    constructor(eventsClientConfiguration, ingestionURL, eventBufferConfiguration = new EventBufferConfiguration_1.default()) {\n        this.eventsClientConfiguration = eventsClientConfiguration;\n        this.ingestionURL = ingestionURL;\n        this.eventBufferConfiguration = eventBufferConfiguration;\n    }\n}\nexports.default = EventIngestionConfiguration;\n//# sourceMappingURL=EventIngestionConfiguration.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Implements the [Full Jitter algorithm](\n * https://aws.amazon.com/blogs/architecture/exponential-backoff-and-jitter/)\n * and also allows for specifying a fixed wait added to the full jitter backoff\n * (which can be zero).\n */\nclass FullJitterBackoff {\n    constructor(fixedWaitMs, shortBackoffMs, longBackoffMs) {\n        this.fixedWaitMs = fixedWaitMs;\n        this.shortBackoffMs = shortBackoffMs;\n        this.longBackoffMs = longBackoffMs;\n        this.currentRetry = 0;\n        if (this.fixedWaitMs < 0) {\n            this.fixedWaitMs = 0;\n        }\n        if (this.shortBackoffMs < 0) {\n            this.shortBackoffMs = 0;\n        }\n        if (this.longBackoffMs < 0) {\n            this.longBackoffMs = 0;\n        }\n        this.reset();\n    }\n    reset() {\n        this.currentRetry = 0;\n    }\n    nextBackoffAmountMs() {\n        const fullJitterMs = Math.random() *\n            Math.min(this.longBackoffMs, this.shortBackoffMs * Math.pow(2.0, this.currentRetry)) +\n            this.fixedWaitMs;\n        this.currentRetry += 1;\n        return fullJitterMs;\n    }\n}\nexports.default = FullJitterBackoff;\n//# sourceMappingURL=FullJitterBackoff.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Use \"ua-parser-js\" over \"detect-browser\" to get more detailed information.\nconst ua_parser_js_1 = require(\"ua-parser-js\");\nconst Versioning_1 = require(\"../versioning/Versioning\");\n/**\n * [[DefaultUserAgentParser]] uses UAParser to parse the browser's user agent.\n * It is responsible to hold and provide browser, OS and device specific information.\n */\nclass DefaultUserAgentParser {\n    constructor(logger) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        try {\n            this.parserResult =\n                navigator && navigator.userAgent\n                    ? new ua_parser_js_1.UAParser(navigator.userAgent).getResult()\n                    : undefined;\n        }\n        catch (error) {\n            /* istanbul ignore next */\n            logger.error(error.message);\n        }\n        this.browserMajorVersion =\n            ((_c = (_b = (_a = this.parserResult) === null || _a === void 0 ? void 0 : _a.browser) === null || _b === void 0 ? void 0 : _b.version) === null || _c === void 0 ? void 0 : _c.split('.')[0]) || DefaultUserAgentParser.UNAVAILABLE;\n        this.browserName = ((_d = this.parserResult) === null || _d === void 0 ? void 0 : _d.browser.name) || DefaultUserAgentParser.UNAVAILABLE;\n        this.browserVersion = ((_e = this.parserResult) === null || _e === void 0 ? void 0 : _e.browser.version) || DefaultUserAgentParser.UNAVAILABLE;\n        this.deviceName =\n            [((_f = this.parserResult) === null || _f === void 0 ? void 0 : _f.device.vendor) || '', ((_g = this.parserResult) === null || _g === void 0 ? void 0 : _g.device.model) || '']\n                .join(' ')\n                .trim() || DefaultUserAgentParser.UNAVAILABLE;\n    }\n    getParserResult() {\n        var _a, _b;\n        return {\n            browserMajorVersion: this.browserMajorVersion,\n            browserName: this.browserName,\n            browserVersion: this.browserVersion,\n            deviceName: this.deviceName,\n            osName: ((_a = this.parserResult) === null || _a === void 0 ? void 0 : _a.os.name) || DefaultUserAgentParser.UNAVAILABLE,\n            osVersion: ((_b = this.parserResult) === null || _b === void 0 ? void 0 : _b.os.version) || DefaultUserAgentParser.UNAVAILABLE,\n            sdkVersion: Versioning_1.default.sdkVersion,\n            sdkName: Versioning_1.default.sdkName,\n        };\n    }\n}\nexports.default = DefaultUserAgentParser;\nDefaultUserAgentParser.UNAVAILABLE = 'Unavailable';\n//# sourceMappingURL=DefaultUserAgentParser.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst FullJitterBackoff_1 = require(\"../backoff/FullJitterBackoff\");\nconst IntervalScheduler_1 = require(\"../scheduler/IntervalScheduler\");\nconst DefaultUserAgentParser_1 = require(\"../useragentparser/DefaultUserAgentParser\");\nconst Utils_1 = require(\"../utils/Utils\");\n/**\n * [[InMemoryJSONEventBuffer]] is an in-memory implementation for buffering and\n * sending events. It buffers events based on number of events and its size whichever reaches\n * first. Events are sent out at an scheduled interval where important events are sent immediately.\n * It also retries sending events if failed upto the retry count limit. It implements\n * beaconing mechanism based on 'pagehide' and 'visibilitychange' to beacon all events as a last attempt.\n */\nclass InMemoryJSONEventBuffer {\n    constructor(eventBufferConfiguration, eventsClientConfiguration, ingestionURL, importantEvents, logger) {\n        this.buffer = [];\n        this.bufferSize = 0;\n        this.maxBufferItemCapacityBytes = 0;\n        this.ingestionEventSize = 0;\n        this.flushIntervalMs = 0;\n        this.flushSize = 0;\n        this.failedIngestionEvents = [];\n        this.retryCountLimit = 15;\n        this.lock = false;\n        this.cancellableEvents = new Map();\n        this.attributesToFilter = ['externalUserId', 'externalMeetingId', 'timestampMs'];\n        this.deepCopyCurrentIngestionEvent = (event) => {\n            const newEvent = {\n                type: event.type,\n                v: event.v,\n                payloads: [...event.payloads],\n            };\n            return newEvent;\n        };\n        this.sendEvents = () => __awaiter(this, void 0, void 0, function* () {\n            if (this.lock) {\n                return;\n            }\n            const batch = this.getItems(this.flushSize);\n            if (batch.length === 0) {\n                return;\n            }\n            this.lock = true;\n            const body = this.makeRequestBody(batch);\n            let failed = false;\n            // If a page re-directs, in Safari and Chrome, the network\n            // request shows cancelled but the data reaches the ingestion endpoint.\n            // In Firefox, the request errors out with 'NS_BINDING_ABORT' state. Hence, add the event\n            // to cancellable events to try with `sendBeacon` lastly.\n            const timestamp = Date.now();\n            if (this.metadata.browserName.toLowerCase() === 'firefox') {\n                this.cancellableEvents.set(timestamp, batch);\n            }\n            try {\n                this.logger.debug(`Event Reporting - InMemoryJSONEventBuffer - sendEvents - sending body ${body}`);\n                const response = yield this.send(body);\n                this.cancellableEvents.delete(timestamp);\n                if (!response.ok) {\n                    this.logger.error(`Event Reporting - InMemoryJSONEventBuffer - sendEvents - Failed to send events ${body} with response status ${response.status}`);\n                    failed = true;\n                }\n                else {\n                    try {\n                        const data = yield response.json();\n                        this.logger.debug(`Event Reporting - InMemoryJSONEventBuffer - sendEvents - send successful events: ${body} message: ${JSON.stringify(data)}`);\n                    }\n                    catch (err) {\n                        /* istanbul ignore next */\n                        this.logger.warn(`Event Reporting - InMemoryJSONEventBuffer - sendEvents error reading OK response ${err} for events ${body}`);\n                    }\n                }\n            }\n            catch (error) {\n                failed = true;\n                this.logger.warn(`Event Reporting - InMemoryJSONEventBuffer - sendEvents - Error in sending events ${body} to the ingestion endpoint ${error}`);\n            }\n            finally {\n                this.lock = false;\n            }\n            if (failed) {\n                this.cancellableEvents.delete(timestamp);\n                this.failedIngestionEvents.push(...batch);\n            }\n        });\n        const userAgentParserResult = new DefaultUserAgentParser_1.default(logger).getParserResult();\n        const { browserMajorVersion: _browserMajorVersion } = userAgentParserResult, clientMetadata = __rest(userAgentParserResult, [\"browserMajorVersion\"]);\n        const _a = eventsClientConfiguration.toJSON(), { type, v } = _a, rest = __rest(_a, [\"type\", \"v\"]);\n        this.authenticationToken = eventsClientConfiguration.getAuthenticationToken();\n        this.metadata = Object.assign(Object.assign({}, clientMetadata), rest);\n        Object.keys(this.metadata).forEach(key => this.attributesToFilter.push(key));\n        this.type = type;\n        this.v = v;\n        this.ingestionURL = ingestionURL;\n        this.logger = logger;\n        this.importantEvents = new Set(importantEvents);\n        const { maxBufferCapacityKb, totalBufferItems, flushSize, flushIntervalMs, retryCountLimit, } = eventBufferConfiguration;\n        this.maxBufferCapacityBytes = maxBufferCapacityKb * 1024;\n        this.totalBufferItems = totalBufferItems;\n        this.maxBufferItemCapacityBytes = Math.round(this.maxBufferCapacityBytes / totalBufferItems);\n        this.flushIntervalMs = flushIntervalMs;\n        this.flushSize = flushSize;\n        this.retryCountLimit = retryCountLimit;\n        this.currentIngestionEvent = this.initializeAndGetCurrentIngestionEvent();\n        this.beaconEventListener = (e) => this.beaconEventHandler(e);\n        this.addEventListeners();\n    }\n    addEventListeners() {\n        if (!this.beaconEventListener ||\n            !('window' in global) ||\n            !window.addEventListener ||\n            !('document' in global) ||\n            !document.addEventListener) {\n            return;\n        }\n        this.logger.debug(`Event Reporting - InMemoryJSONEventBuffer - addEventListeners - adding pagehide and visibility change event listeners`);\n        window.addEventListener('pagehide', this.beaconEventListener);\n        document.addEventListener('visibilitychange', this.beaconEventListener);\n    }\n    beaconEventHandler(e) {\n        /* istanbul ignore else */\n        if ((e.type === 'visibilitychange' && document.visibilityState === 'hidden') ||\n            e.type === 'pagehide') {\n            this.logger.debug(`Event Reporting - InMemoryJSONEventBuffer - beaconEventHandler is triggered calling sendBeacon`);\n            this.sendBeacon();\n        }\n    }\n    removeEventListeners() {\n        if (!this.beaconEventListener ||\n            !('window' in global) ||\n            !window.removeEventListener ||\n            !('document' in global) ||\n            !document.removeEventListener) {\n            return;\n        }\n        window.removeEventListener('pagehide', this.beaconEventListener);\n        document.removeEventListener('visibilitychange', this.beaconEventListener);\n        this.logger.debug(`Event Reporting - InMemoryJSONEventBuffer - removeEventListeners - removing pagehide and visibility change event listeners`);\n    }\n    start() {\n        var _a;\n        this.removeEventListeners();\n        this.addEventListeners();\n        (_a = this.intervalScheduler) === null || _a === void 0 ? void 0 : _a.stop();\n        this.intervalScheduler = new IntervalScheduler_1.default(this.flushIntervalMs);\n        this.intervalScheduler.start(() => this.sendEvents());\n    }\n    stop() {\n        var _a;\n        (_a = this.intervalScheduler) === null || _a === void 0 ? void 0 : _a.stop();\n        this.intervalScheduler = undefined;\n        this.sendBeacon();\n        this.removeEventListeners();\n    }\n    addItem(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.logger.debug(`Event Reporting - InMemoryJSONEventBuffer - addItem - received event ${JSON.stringify(item)}`);\n            const { name, ts, attributes } = item;\n            // Filter out PII and redundant attributes.\n            const filteredAttributes = attributes && this.filterAttributes(attributes, this.attributesToFilter);\n            const event = Object.assign({ name, ts }, filteredAttributes);\n            this.logger.debug(`Event Reporting - InMemoryJSONEventBuffer - addItem - event after filtering attributes ${JSON.stringify(event)}`);\n            const size = this.getSize(event);\n            if (size > InMemoryJSONEventBuffer.MAX_ITEM_SIZE_BYTES_ALLOWED) {\n                throw new Error(`Event Reporting - Item to be added has size ${size} bytes. Item cannot exceed max item size allowed of ${InMemoryJSONEventBuffer.MAX_ITEM_SIZE_BYTES_ALLOWED} bytes.`);\n            }\n            if (this.importantEvents.has(name)) {\n                // Send immediate events and asyncly retry.\n                this.logger.debug(`Event Reporting - InMemoryJSONEventBuffer - addItem - sending important event ${JSON.stringify(event)}`);\n                this.sendEventImmediately({ name, ts, attributes: filteredAttributes });\n                return;\n            }\n            if (this.isFull()) {\n                this.logger.warn('Event Reporting - Event buffer is full');\n                throw new Error('Buffer full');\n            }\n            this.currentIngestionEvent.payloads.push(event);\n            this.ingestionEventSize += size;\n            if (this.bufferItemThresholdReached(size)) {\n                const currentEvent = this.deepCopyCurrentIngestionEvent(this.currentIngestionEvent);\n                this.buffer.push(currentEvent);\n                this.bufferSize += this.ingestionEventSize;\n                this.currentIngestionEvent = this.initializeAndGetCurrentIngestionEvent();\n                this.logger.debug(`Event Reporting - InMemoryJSONEventBuffer - addItem - buffer item threshold reached updated buffer ${JSON.stringify(this.buffer)}`);\n            }\n        });\n    }\n    filterAttributes(attributes, attributesToFilter) {\n        const attributesToFilterSet = new Set(attributesToFilter);\n        const keysToFilterOut = Object.keys(attributes).filter(key => attributesToFilterSet.has(key));\n        keysToFilterOut.forEach(key => delete attributes[key]);\n        return attributes;\n    }\n    initializeAndGetCurrentIngestionEvent() {\n        const bufferItem = {\n            type: this.type,\n            v: this.v,\n            payloads: [],\n        };\n        this.ingestionEventSize = this.getSize(bufferItem);\n        return bufferItem;\n    }\n    bufferItemThresholdReached(size) {\n        return (size + this.ingestionEventSize >= this.maxBufferItemCapacityBytes ||\n            this.currentIngestionEvent.payloads.length === InMemoryJSONEventBuffer.MAX_PAYLOAD_ITEMS);\n    }\n    getSize(item) {\n        let bytes = 0;\n        if (typeof item === 'object') {\n            for (const [key, value] of Object.entries(item)) {\n                bytes += this.getPrimitiveSize(key);\n                bytes += this.getSize(value);\n            }\n        }\n        else {\n            bytes += this.getPrimitiveSize(item);\n        }\n        return bytes;\n    }\n    getPrimitiveSize(item) {\n        let bytes = 0;\n        /* istanbul ignore else */\n        if (typeof item === 'string') {\n            bytes += item.length * 2;\n        }\n        else if (typeof item === 'number') {\n            bytes += 8;\n        }\n        return bytes;\n    }\n    isFull() {\n        return (this.bufferSize === this.maxBufferCapacityBytes ||\n            this.buffer.length === this.totalBufferItems);\n    }\n    isEmpty() {\n        return this.buffer.length === 0 || this.bufferSize === 0;\n    }\n    getItems(end, start = 0) {\n        if (this.isEmpty()) {\n            return [];\n        }\n        end = Math.min(this.buffer.length, end + 1);\n        const items = this.buffer.splice(start, end);\n        return items;\n    }\n    makeBeaconRequestBody(batchEvents) {\n        const ingestionRecord = {\n            metadata: this.metadata,\n            events: batchEvents,\n            authorization: this.authenticationToken,\n        };\n        return JSON.stringify(ingestionRecord);\n    }\n    makeRequestBody(batchEvents) {\n        const ingestionRecord = {\n            metadata: this.metadata,\n            events: batchEvents,\n        };\n        return JSON.stringify(ingestionRecord);\n    }\n    sendEventImmediately(item) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.logger.debug(`Event Reporting - InMemoryJSONEventBuffer - sendEventImmediately - important event received ${JSON.stringify(item)}`);\n            const { name, ts, attributes } = item;\n            const event = {\n                type: this.type,\n                v: this.v,\n                payloads: [\n                    Object.assign({ name,\n                        ts }, attributes),\n                ],\n            };\n            let failed = false;\n            let response = null;\n            const body = this.makeRequestBody([event]);\n            try {\n                response = yield this.send(body);\n                if (response.ok) {\n                    try {\n                        const data = yield response.json();\n                        this.logger.debug(`Event Reporting - InMemoryJSONEventBuffer - sendEventImmediately - send successful event: ${body}, message: ${JSON.stringify(data)}`);\n                    }\n                    catch (err) {\n                        /* istanbul ignore next */\n                        this.logger.warn(`Event Reporting - InMemoryJSONEventBuffer - sendEventImmediately - Error reading OK response ${err} for event ${body}`);\n                    }\n                    return;\n                }\n                else {\n                    this.logger.error(`Event Reporting - InMemoryJSONEventBuffer - sendEventImmediately - Failed to send an important event ${body} with response status ${response.status}`);\n                    failed = true;\n                }\n            }\n            catch (error) {\n                this.logger.warn(`Event Reporting - There may be a failure in sending an important event ${body} to the ingestion endpoint ${error}.`);\n                failed = true;\n                try {\n                    /**\n                     * Important events like meetingEnded, meetingStartFailed may result into page-redirects.\n                     * In such a case, Firefox aborts the fetch request with 'NS_BINDING_ABORT' state.\n                     * Chrome and Safari show fetch request as cancelled and the fetch failure is catched, but,\n                     * events appear at ingestion backend. Chrome and Safari behavior is unreliable, but Firefox consistently fails,\n                     * hence, we beacon data as a last resort when using Firefox.\n                     * During the page-redirect, we do not have access to check fetch's response to handle Chrome and Safari behavior,\n                     * hence, event ingestion may fail.\n                     *\n                     */\n                    if (this.metadata.browserName.toLowerCase() === 'firefox') {\n                        const body = this.makeBeaconRequestBody([event]);\n                        this.logger.debug(`Event Reporting - InMemoryJSONEventBuffer - sendEventImmediately - beaconing data out ${body}`);\n                        if (!navigator.sendBeacon(`${this.ingestionURL}?beacon=1`, body)) {\n                            failed = true;\n                        }\n                        else {\n                            failed = false;\n                        }\n                    }\n                }\n                catch (error) {\n                    this.logger.warn(`Event Reporting - Error sending beacon for an important event ${body}`);\n                    failed = true;\n                }\n            }\n            /* istanbul ignore else */\n            if (failed) {\n                this.logger.debug(`Event Reporting - InMemoryJSONEventBuffer - sendEventImmediately - pushing to failed events ${body}`);\n                this.failedIngestionEvents.push(event);\n            }\n        });\n    }\n    send(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const backoff = new FullJitterBackoff_1.default(InMemoryJSONEventBuffer.RETRY_FIXED_BACKOFF_WAIT_MS, InMemoryJSONEventBuffer.RETRY_SHORT_BACKOFF_MS, InMemoryJSONEventBuffer.RETRY_LONG_BACKOFF_MS);\n            try {\n                let retryCount = 0;\n                while (retryCount < this.retryCountLimit) {\n                    const response = yield fetch(this.ingestionURL, {\n                        method: 'POST',\n                        headers: {\n                            Authorization: `Bearer ${this.authenticationToken}`,\n                        },\n                        body: data,\n                    });\n                    if (response.ok || !InMemoryJSONEventBuffer.SENDING_FAILURE_CODES.has(response.status)) {\n                        return response;\n                    }\n                    else {\n                        this.logger.warn(`Will retry sending failure for ${data} due to status code ${response.status}.`);\n                        retryCount++;\n                        /* istanbul ignore else */\n                        if (retryCount < this.retryCountLimit) {\n                            const backoffTime = backoff.nextBackoffAmountMs();\n                            yield Utils_1.wait(backoffTime);\n                        }\n                    }\n                }\n                /* istanbul ignore else */\n                if (retryCount === this.retryCountLimit) {\n                    throw new Error(`Retry count limit reached for ${data}`);\n                }\n            }\n            catch (error) {\n                throw error;\n            }\n        });\n    }\n    sendBeacon() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Any pending events from buffer.\n            const events = this.buffer;\n            this.logger.debug(`Event Reporting - InMemoryJSONEventBuffer - sendBeacon - clearing out buffer events ${JSON.stringify(events)}`);\n            this.buffer = [];\n            // Any pending event in current ingestion event.\n            if (this.currentIngestionEvent.payloads.length > 0) {\n                const clearCurrenIngestionEvent = this.deepCopyCurrentIngestionEvent(this.currentIngestionEvent);\n                events.push(clearCurrenIngestionEvent);\n                this.logger.debug(`Event Reporting - InMemoryJSONEventBuffer - sendBeacon - clearing out current ingestion event ${JSON.stringify(clearCurrenIngestionEvent)}`);\n                this.currentIngestionEvent = this.initializeAndGetCurrentIngestionEvent();\n            }\n            // Any failed ingestion events which were sent before.\n            if (this.failedIngestionEvents.length > 0) {\n                const failedRecordsCopy = this.failedIngestionEvents.map(record => this.deepCopyCurrentIngestionEvent(record));\n                events.push(...failedRecordsCopy);\n                this.logger.debug(`Event Reporting - InMemoryJSONEventBuffer - sendBeacon - clearing out any failed ingestion event ${JSON.stringify(failedRecordsCopy)}`);\n                this.failedIngestionEvents = [];\n            }\n            // Any cancelled requests due to page-redirects.\n            if (this.cancellableEvents.size > 0) {\n                this.cancellableEvents.forEach(value => {\n                    events.push(...value);\n                    this.logger.debug(`Event Reporting - InMemoryJSONEventBuffer - sendBeacon - clearing out each cancellable event ${JSON.stringify(value)}`);\n                });\n                this.cancellableEvents.clear();\n            }\n            if (events.length === 0) {\n                return;\n            }\n            const beaconData = this.makeBeaconRequestBody(events);\n            this.logger.debug(`Event Reporting - InMemoryJSONEventBuffer - sendBeacon - beacon data to send ${beaconData}`);\n            try {\n                /* istanbul ignore else */\n                if (!navigator.sendBeacon(`${this.ingestionURL}?beacon=1`, beaconData)) {\n                    this.logger.warn(`Event Reporting - Browser failed to queue beacon data ${beaconData}`);\n                }\n            }\n            catch (error) {\n                this.logger.warn(`Event Reporting - Sending beacon data ${beaconData} failed with error ${error}`);\n            }\n        });\n    }\n    reset() {\n        this.maxBufferCapacityBytes = 0;\n        this.totalBufferItems = 0;\n        this.buffer = [];\n        this.bufferSize = 0;\n        this.maxBufferItemCapacityBytes = 0;\n        this.ingestionEventSize = 0;\n        this.flushIntervalMs = 0;\n        this.flushSize = 0;\n        this.failedIngestionEvents = [];\n        this.lock = false;\n        this.beaconEventListener = undefined;\n        this.cancellableEvents.clear();\n    }\n    destroy() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.stop();\n            this.reset();\n        });\n    }\n}\nexports.default = InMemoryJSONEventBuffer;\nInMemoryJSONEventBuffer.SENDING_FAILURE_CODES = new Set([\n    408,\n    429,\n    500,\n    502,\n    503,\n    504, // Gateway Timeout.\n]);\nInMemoryJSONEventBuffer.RETRY_FIXED_BACKOFF_WAIT_MS = 0;\nInMemoryJSONEventBuffer.RETRY_SHORT_BACKOFF_MS = 1000;\nInMemoryJSONEventBuffer.RETRY_LONG_BACKOFF_MS = 15000;\nInMemoryJSONEventBuffer.MAX_PAYLOAD_ITEMS = 2;\nInMemoryJSONEventBuffer.MAX_ITEM_SIZE_BYTES_ALLOWED = 3000;\n//# sourceMappingURL=InMemoryJSONEventBuffer.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Destroyable_1 = require(\"../destroyable/Destroyable\");\nconst InMemoryJSONEventBuffer_1 = require(\"../eventbuffer/InMemoryJSONEventBuffer\");\nclass DefaultMeetingEventReporter {\n    constructor(eventIngestionConfiguration, logger) {\n        this.reportingEvents = false;\n        this.importantEvents = [\n            'meetingEnded',\n            'meetingFailed',\n            'meetingStartFailed',\n            'audioInputFailed',\n            'videoInputFailed',\n            'meetingStartSucceeded',\n        ];\n        this.destroyed = false;\n        const { eventsClientConfiguration, ingestionURL, eventBufferConfiguration, } = eventIngestionConfiguration;\n        const { eventsToIgnore } = eventsClientConfiguration;\n        this.eventBuffer = new InMemoryJSONEventBuffer_1.default(eventBufferConfiguration, eventsClientConfiguration, ingestionURL, this.importantEvents, logger);\n        this.logger = logger;\n        this.eventsToIgnore = eventsToIgnore;\n        this.start();\n    }\n    start() {\n        if (this.reportingEvents) {\n            return;\n        }\n        try {\n            this.eventBuffer.start();\n            this.logger.info('Event reporting started');\n            this.reportingEvents = true;\n        }\n        catch (error) {\n            /* istanbul ignore next */\n            this.logger.error(`Event Reporting - Error starting the event buffer ${error}`);\n        }\n    }\n    stop() {\n        if (!this.reportingEvents) {\n            return;\n        }\n        try {\n            this.eventBuffer.stop();\n            this.logger.info('Event reporting stopped');\n            this.reportingEvents = false;\n        }\n        catch (error) {\n            /* istanbul ignore next */\n            this.logger.error(`Event Reporting - Error stopping the event buffer ${error}`);\n        }\n    }\n    reportEvent(ts, name, attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.logger.debug(`Event Reporting - DefaultMeetingEventReporter - event received in reportEvent ${ts}, ${name}, ${JSON.stringify(attributes)}`);\n            if (this.eventsToIgnore.includes(name)) {\n                this.logger.debug(`Event Reporting - DefaultMeetingEventReporter - ${name} event will be ignored as it is in events to ignore`);\n                return;\n            }\n            try {\n                this.logger.debug(`Event Reporting - DefaultMeetingEventReporter - adding item to event buffer`);\n                yield this.eventBuffer.addItem({ ts, name, attributes });\n            }\n            catch (error) {\n                this.logger.error(`Event Reporting - Error adding event to buffer ${error}`);\n            }\n        });\n    }\n    destroy() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.destroyed = true;\n            this.stop();\n            /* istanbul ignore else */\n            if (Destroyable_1.isDestroyable(this.eventBuffer)) {\n                this.eventBuffer.destroy();\n            }\n            this.eventBuffer = undefined;\n        });\n    }\n}\nexports.default = DefaultMeetingEventReporter;\n//# sourceMappingURL=DefaultMeetingEventReporter.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[MeetingEventsClientConfiguration]] contains necessary information to\n * report meeting events metadata to each event while sending events to the ingestion service.\n */\nclass MeetingEventsClientConfiguration {\n    constructor(meetingId, attendeeId, authenticationToken, eventsToIgnore = []) {\n        this.type = 'Meet';\n        this.v = 1;\n        this.meetingId = meetingId;\n        this.attendeeId = attendeeId;\n        this.eventsToIgnore = eventsToIgnore;\n        this.authenticationToken = authenticationToken;\n    }\n    getAuthenticationToken() {\n        return this.authenticationToken;\n    }\n    toJSON() {\n        const attributes = {};\n        attributes.type = this.type;\n        attributes.v = this.v;\n        attributes.meetingId = this.meetingId;\n        attributes.attendeeId = this.attendeeId;\n        return attributes;\n    }\n}\nexports.default = MeetingEventsClientConfiguration;\n//# sourceMappingURL=MeetingEventsClientConfiguration.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n *\n * @param attributes Event attributes to flatten.\n * @returns flattened event attributes.\n * Note: This function needs to be extended to support 'Array', 'object'\n * as value types within the event attributes if added later.\n */\nconst flattenEventAttributes = (attributes) => {\n    const flattenedAttributes = {};\n    for (const [key, value] of Object.entries(attributes)) {\n        if (value === null || value === undefined || value === '') {\n            continue;\n        }\n        else if (typeof value === 'number' || typeof value === 'string') {\n            flattenedAttributes[key] = value;\n        }\n        else {\n            throw new TypeError('Unhandled type received while flattening attributes.');\n        }\n    }\n    return flattenedAttributes;\n};\nexports.default = flattenEventAttributes;\n//# sourceMappingURL=flattenEventAttributes.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ua_parser_js_1 = require(\"ua-parser-js\");\nconst Destroyable_1 = require(\"../destroyable/Destroyable\");\nconst EventIngestionConfiguration_1 = require(\"../eventingestionconfiguration/EventIngestionConfiguration\");\nconst DefaultMeetingEventReporter_1 = require(\"../eventreporter/DefaultMeetingEventReporter\");\nconst MeetingEventsClientConfiguration_1 = require(\"../eventsclientconfiguration/MeetingEventsClientConfiguration\");\nconst AsyncScheduler_1 = require(\"../scheduler/AsyncScheduler\");\nconst Versioning_1 = require(\"../versioning/Versioning\");\nconst flattenEventAttributes_1 = require(\"./flattenEventAttributes\");\nclass DefaultEventController {\n    constructor(configuration, logger, eventReporter) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        this.meetingHistoryStates = [];\n        this.observerSet = new Set();\n        this.destroyed = false;\n        this.logger = logger;\n        this.configuration = configuration;\n        this.setupEventReporter(configuration, logger, eventReporter);\n        try {\n            this.parserResult =\n                navigator && navigator.userAgent ? new ua_parser_js_1.UAParser(navigator.userAgent).getResult() : null;\n        }\n        catch (error) {\n            // This seems to never happen with ua-parser-js in reality, even with malformed strings.\n            /* istanbul ignore next */\n            this.logger.error(error.message);\n        }\n        this.browserMajorVersion =\n            ((_c = (_b = (_a = this.parserResult) === null || _a === void 0 ? void 0 : _a.browser) === null || _b === void 0 ? void 0 : _b.version) === null || _c === void 0 ? void 0 : _c.split('.')[0]) || DefaultEventController.UNAVAILABLE;\n        this.browserName = ((_d = this.parserResult) === null || _d === void 0 ? void 0 : _d.browser.name) || DefaultEventController.UNAVAILABLE;\n        this.browserVersion = ((_e = this.parserResult) === null || _e === void 0 ? void 0 : _e.browser.version) || DefaultEventController.UNAVAILABLE;\n        this.deviceName =\n            [((_f = this.parserResult) === null || _f === void 0 ? void 0 : _f.device.vendor) || '', ((_g = this.parserResult) === null || _g === void 0 ? void 0 : _g.device.model) || '']\n                .join(' ')\n                .trim() || DefaultEventController.UNAVAILABLE;\n    }\n    addObserver(observer) {\n        this.observerSet.add(observer);\n    }\n    removeObserver(observer) {\n        this.observerSet.delete(observer);\n    }\n    forEachObserver(observerFunc) {\n        for (const observer of this.observerSet) {\n            AsyncScheduler_1.default.nextTick(() => {\n                /* istanbul ignore else */\n                if (this.observerSet.has(observer)) {\n                    observerFunc(observer);\n                }\n            });\n        }\n    }\n    publishEvent(name, attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const timestampMs = Date.now();\n            this.meetingHistoryStates.push({\n                name,\n                timestampMs,\n            });\n            // Make a single frozen copy of the event, reusing the object returned by\n            // `getAttributes` to avoid copying too much.\n            const eventAttributes = Object.freeze(Object.assign(this.getAttributes(timestampMs), attributes));\n            // Publishes event to observers\n            this.forEachObserver((observer) => {\n                observer.eventDidReceive(name, eventAttributes);\n            });\n            // Reports event to the ingestion service\n            this.reportEvent(name, timestampMs, attributes);\n        });\n    }\n    reportEvent(name, timestampMs, attributes) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            let flattenedAttributes;\n            try {\n                if (attributes) {\n                    flattenedAttributes = flattenEventAttributes_1.default(attributes);\n                }\n                yield ((_a = this.eventReporter) === null || _a === void 0 ? void 0 : _a.reportEvent(timestampMs, name, flattenedAttributes));\n            }\n            catch (error) {\n                /* istanbul ignore next */\n                this.logger.error(`Error reporting event ${error}`);\n            }\n        });\n    }\n    setupEventReporter(configuration, logger, eventReporter) {\n        if (eventReporter) {\n            this._eventReporter = eventReporter;\n        }\n        else if (configuration.urls) {\n            // Attempts to set up a event reporter using the meeting configuration if one is not provided\n            const eventIngestionURL = configuration.urls.eventIngestionURL;\n            if (eventIngestionURL) {\n                this.logger.info(`Event ingestion URL is present in the configuration`);\n                const { meetingId, credentials: { attendeeId, joinToken }, } = configuration;\n                const meetingEventsClientConfiguration = new MeetingEventsClientConfiguration_1.default(meetingId, attendeeId, joinToken);\n                const eventIngestionConfiguration = new EventIngestionConfiguration_1.default(meetingEventsClientConfiguration, eventIngestionURL);\n                this._eventReporter = new DefaultMeetingEventReporter_1.default(eventIngestionConfiguration, logger);\n            }\n        }\n    }\n    getAttributes(timestampMs) {\n        var _a, _b;\n        return {\n            attendeeId: this.configuration.credentials.attendeeId,\n            browserMajorVersion: this.browserMajorVersion,\n            browserName: this.browserName,\n            browserVersion: this.browserVersion,\n            deviceName: this.deviceName,\n            externalMeetingId: typeof this.configuration.externalMeetingId === 'string'\n                ? this.configuration.externalMeetingId\n                : '',\n            externalUserId: this.configuration.credentials.externalUserId,\n            meetingHistory: this.meetingHistoryStates,\n            meetingId: this.configuration.meetingId,\n            osName: ((_a = this.parserResult) === null || _a === void 0 ? void 0 : _a.os.name) || DefaultEventController.UNAVAILABLE,\n            osVersion: ((_b = this.parserResult) === null || _b === void 0 ? void 0 : _b.os.version) || DefaultEventController.UNAVAILABLE,\n            sdkVersion: Versioning_1.default.sdkVersion,\n            sdkName: Versioning_1.default.sdkName,\n            timestampMs,\n        };\n    }\n    get eventReporter() {\n        return this._eventReporter;\n    }\n    /**\n     * Clean up this instance and resources that it created.\n     *\n     * After calling `destroy`, internal fields like `eventReporter` will be unavailable.\n     */\n    destroy() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (Destroyable_1.isDestroyable(this.eventReporter)) {\n                yield this.eventReporter.destroy();\n            }\n            this.logger = undefined;\n            this.configuration = undefined;\n            this._eventReporter = undefined;\n            this.destroyed = true;\n        });\n    }\n}\nexports.default = DefaultEventController;\nDefaultEventController.UNAVAILABLE = 'Unavailable';\n//# sourceMappingURL=DefaultEventController.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[MeetingReadinessCheckerConfiguration]] includes custom settings used for MeetingReadinessChecker\n */\nclass MeetingReadinessCheckerConfiguration {\n    constructor() {\n        /**\n         * Specify how long to wait for each check in a test.\n         * If null, it will use the default value.\n         */\n        this.timeoutMs = 10000;\n        /**\n         * Specify the wait time before checking again when a check condition is not met.\n         * If null, it will use the default value.\n         */\n        this.waitDurationMs = 3000;\n        /**\n         * Specify the frequency of oscillation in hertz for the audio output test.\n         */\n        this.audioOutputFrequency = 440;\n        /**\n         * Specify the gain value from 0 to 1.0 for the audio output test.\n         */\n        this.audioOutputGain = 0.1;\n    }\n}\nexports.default = MeetingReadinessCheckerConfiguration;\n//# sourceMappingURL=MeetingReadinessCheckerConfiguration.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultAudioMixController_1 = require(\"../audiomixcontroller/DefaultAudioMixController\");\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\nconst DefaultDeviceController_1 = require(\"../devicecontroller/DefaultDeviceController\");\nconst PermissionDeniedError_1 = require(\"../devicecontroller/PermissionDeniedError\");\nconst BaseTask_1 = require(\"../task/BaseTask\");\nconst TimeoutTask_1 = require(\"../task/TimeoutTask\");\nconst CheckAudioConnectivityFeedback_1 = require(\"./CheckAudioConnectivityFeedback\");\nconst CheckAudioInputFeedback_1 = require(\"./CheckAudioInputFeedback\");\nconst CheckAudioOutputFeedback_1 = require(\"./CheckAudioOutputFeedback\");\nconst CheckCameraResolutionFeedback_1 = require(\"./CheckCameraResolutionFeedback\");\nconst CheckContentShareConnectivityFeedback_1 = require(\"./CheckContentShareConnectivityFeedback\");\nconst CheckNetworkTCPConnectivityFeedback_1 = require(\"./CheckNetworkTCPConnectivityFeedback\");\nconst CheckNetworkUDPConnectivityFeedback_1 = require(\"./CheckNetworkUDPConnectivityFeedback\");\nconst CheckVideoConnectivityFeedback_1 = require(\"./CheckVideoConnectivityFeedback\");\nconst CheckVideoInputFeedback_1 = require(\"./CheckVideoInputFeedback\");\nconst MeetingReadinessCheckerConfiguration_1 = require(\"./MeetingReadinessCheckerConfiguration\");\nclass DefaultMeetingReadinessChecker {\n    constructor(logger, meetingSession, configuration = new MeetingReadinessCheckerConfiguration_1.default()) {\n        this.logger = logger;\n        this.meetingSession = meetingSession;\n        this.configuration = configuration;\n        this.browserBehavior = new DefaultBrowserBehavior_1.default();\n    }\n    static delay(timeoutMs) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise(resolve => setTimeout(resolve, timeoutMs));\n        });\n    }\n    checkAudioInput(audioInputDevice) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.meetingSession.audioVideo.startAudioInput(audioInputDevice);\n                yield this.meetingSession.audioVideo.stopAudioInput();\n                return CheckAudioInputFeedback_1.default.Succeeded;\n            }\n            catch (error) {\n                this.logger.error(`MeetingReadinessChecker: Audio input check failed with error ${error}`);\n                if (error instanceof PermissionDeniedError_1.default) {\n                    return CheckAudioInputFeedback_1.default.PermissionDenied;\n                }\n                return CheckAudioInputFeedback_1.default.Failed;\n            }\n        });\n    }\n    checkAudioOutput(audioOutputDeviceInfo, audioOutputVerificationCallback, audioElement = null) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const audioOutputDeviceId = audioOutputDeviceInfo\n                    ? DefaultDeviceController_1.default.getIntrinsicDeviceId(audioOutputDeviceInfo)\n                    : '';\n                yield this.playTone(audioOutputDeviceId, this.configuration.audioOutputFrequency, audioElement);\n                const userFeedback = yield audioOutputVerificationCallback();\n                if (userFeedback) {\n                    return CheckAudioOutputFeedback_1.default.Succeeded;\n                }\n                return CheckAudioOutputFeedback_1.default.Failed;\n            }\n            catch (error) {\n                this.logger.error(`MeetingReadinessChecker: Audio output check failed with error: ${error}`);\n                return CheckAudioOutputFeedback_1.default.Failed;\n            }\n            finally {\n                this.stopTone();\n            }\n        });\n    }\n    playTone(sinkId, frequency, audioElement) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const rampSec = 0.1;\n            const maxGainValue = this.configuration.audioOutputGain;\n            if (this.oscillatorNode) {\n                this.stopTone();\n            }\n            this.audioContext = DefaultDeviceController_1.default.getAudioContext();\n            this.gainNode = this.audioContext.createGain();\n            this.gainNode.gain.value = 0;\n            this.oscillatorNode = this.audioContext.createOscillator();\n            this.oscillatorNode.frequency.value = frequency;\n            this.oscillatorNode.connect(this.gainNode);\n            this.destinationStream = this.audioContext.createMediaStreamDestination();\n            this.gainNode.connect(this.destinationStream);\n            const currentTime = this.audioContext.currentTime;\n            const startTime = currentTime + 0.1;\n            this.gainNode.gain.linearRampToValueAtTime(0, startTime);\n            this.gainNode.gain.linearRampToValueAtTime(maxGainValue, startTime + rampSec);\n            this.oscillatorNode.start();\n            // Because we always use `DefaultAudioMixController`, and both this class\n            // and DAMC use `DefaultBrowserBehavior`, it is not possible for the `bindAudioDevice` call here to throw.\n            // Nevertheless, we `catch` here and disable code coverage.\n            const audioMixController = new DefaultAudioMixController_1.default(this.logger);\n            try {\n                if (this.browserBehavior.supportsSetSinkId()) {\n                    yield audioMixController.bindAudioDevice({ deviceId: sinkId });\n                }\n            }\n            catch (e) {\n                /* istanbul ignore next */\n                this.logger.error(`Failed to bind audio device: ${e}`);\n            }\n            try {\n                yield audioMixController.bindAudioElement(audioElement || new Audio());\n            }\n            catch (e) {\n                this.logger.error(`Failed to bind audio element: ${e}`);\n            }\n            yield audioMixController.bindAudioStream(this.destinationStream.stream);\n        });\n    }\n    stopTone() {\n        if (!this.audioContext || !this.gainNode || !this.oscillatorNode || !this.destinationStream) {\n            return;\n        }\n        const durationSec = 1;\n        const rampSec = 0.1;\n        const maxGainValue = this.configuration.audioOutputGain;\n        const currentTime = this.audioContext.currentTime;\n        this.gainNode.gain.linearRampToValueAtTime(maxGainValue, currentTime + rampSec + durationSec);\n        this.gainNode.gain.linearRampToValueAtTime(0, currentTime + rampSec * 2 + durationSec);\n        this.oscillatorNode.stop();\n        this.oscillatorNode.disconnect(this.gainNode);\n        this.gainNode.disconnect(this.destinationStream);\n        this.oscillatorNode = null;\n        this.gainNode = null;\n        this.destinationStream = null;\n    }\n    checkVideoInput(videoInputDevice) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.meetingSession.audioVideo.startVideoInput(videoInputDevice);\n                yield this.meetingSession.audioVideo.stopVideoInput();\n                return CheckVideoInputFeedback_1.default.Succeeded;\n            }\n            catch (error) {\n                this.logger.error(`MeetingReadinessChecker: Video check failed with error ${error}`);\n                if (error instanceof PermissionDeniedError_1.default) {\n                    return CheckVideoInputFeedback_1.default.PermissionDenied;\n                }\n                return CheckVideoInputFeedback_1.default.Failed;\n            }\n        });\n    }\n    checkCameraResolution(videoInputDevice, width, height) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let stream;\n            try {\n                const videoInputDeviceId = DefaultDeviceController_1.default.getIntrinsicDeviceId(videoInputDevice);\n                const videoConstraint = {\n                    video: this.calculateVideoConstraint(videoInputDeviceId, width, height),\n                };\n                stream = yield navigator.mediaDevices.getUserMedia(videoConstraint);\n            }\n            catch (error) {\n                this.logger.error(`MeetingReadinessChecker: Camera resolution check with width: ${width} height ${height} failed with error ${error}`);\n                if (error && error.name === 'OverconstrainedError') {\n                    return CheckCameraResolutionFeedback_1.default.ResolutionNotSupported;\n                }\n                if (error && error.name === 'NotAllowedError') {\n                    return CheckCameraResolutionFeedback_1.default.PermissionDenied;\n                }\n                return CheckCameraResolutionFeedback_1.default.Failed;\n            }\n            finally {\n                if (stream) {\n                    stream.getTracks().forEach(function (track) {\n                        track.stop();\n                    });\n                }\n            }\n            return CheckCameraResolutionFeedback_1.default.Succeeded;\n        });\n    }\n    calculateVideoConstraint(videoInputDeviceId, width, height) {\n        const dimension = this.browserBehavior.requiresResolutionAlignment(width, height);\n        const trackConstraints = {};\n        if (this.browserBehavior.requiresNoExactMediaStreamConstraints()) {\n            trackConstraints.deviceId = videoInputDeviceId;\n            trackConstraints.width = width;\n            trackConstraints.height = height;\n        }\n        else {\n            trackConstraints.deviceId = { exact: videoInputDeviceId };\n            trackConstraints.width = { exact: dimension[0] };\n            trackConstraints.height = { exact: dimension[1] };\n        }\n        return trackConstraints;\n    }\n    checkContentShareConnectivity(sourceId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let isContentShareStarted = false;\n            let isAudioVideoStarted = false;\n            const contentShareObserver = {\n                contentShareDidStart: () => {\n                    isContentShareStarted = true;\n                },\n            };\n            const observer = {\n                audioVideoDidStart: () => {\n                    isAudioVideoStarted = true;\n                },\n            };\n            try {\n                this.meetingSession.audioVideo.addObserver(observer);\n                this.meetingSession.audioVideo.start();\n                this.meetingSession.audioVideo.addContentShareObserver(contentShareObserver);\n                yield this.meetingSession.audioVideo.startContentShareFromScreenCapture(sourceId);\n                yield this.executeTimeoutTask(() => __awaiter(this, void 0, void 0, function* () {\n                    return isAudioVideoStarted && isContentShareStarted;\n                }));\n                if (!isAudioVideoStarted) {\n                    return CheckContentShareConnectivityFeedback_1.default.ConnectionFailed;\n                }\n                yield this.stopMeeting();\n                return isContentShareStarted\n                    ? CheckContentShareConnectivityFeedback_1.default.Succeeded\n                    : CheckContentShareConnectivityFeedback_1.default.TimedOut;\n            }\n            catch (error) {\n                this.logger.error(`MeetingReadinessChecker: Content share check failed with error ${error}`);\n                if (error.name === 'NotAllowedError') {\n                    return CheckContentShareConnectivityFeedback_1.default.PermissionDenied;\n                }\n                else {\n                    return CheckContentShareConnectivityFeedback_1.default.Failed;\n                }\n            }\n            finally {\n                this.meetingSession.audioVideo.removeObserver(observer);\n                this.meetingSession.audioVideo.stopContentShare();\n                this.meetingSession.audioVideo.removeContentShareObserver(contentShareObserver);\n            }\n        });\n    }\n    checkAudioConnectivity(audioInputDevice) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let audioPresence = false;\n            const audioConnectivityMetrics = {\n                packetsReceived: 0,\n            };\n            const audioVideo = this.meetingSession.audioVideo;\n            const checkAudioConnectivityMetricsObserver = {\n                metricsDidReceive(clientMetricReport) {\n                    clientMetricReport.getRTCStatsReport().forEach(report => {\n                        if (report.type === 'inbound-rtp' && report.mediaType === 'audio') {\n                            audioConnectivityMetrics.packetsReceived = report.packetsReceived;\n                        }\n                    });\n                },\n            };\n            const attendeePresenceHandler = (attendeeId, present, _externalUserId, _dropped) => {\n                if (attendeeId === this.meetingSession.configuration.credentials.attendeeId && present) {\n                    audioPresence = true;\n                }\n            };\n            try {\n                yield audioVideo.startAudioInput(audioInputDevice);\n            }\n            catch (error) {\n                this.logger.error(`MeetingReadinessChecker: Failed to get audio input device with error ${error}`);\n                if (error instanceof PermissionDeniedError_1.default) {\n                    return CheckAudioConnectivityFeedback_1.default.AudioInputPermissionDenied;\n                }\n                return CheckAudioConnectivityFeedback_1.default.AudioInputRequestFailed;\n            }\n            audioVideo.realtimeSubscribeToAttendeeIdPresence(attendeePresenceHandler);\n            audioVideo.addObserver(checkAudioConnectivityMetricsObserver);\n            if (!(yield this.startMeeting())) {\n                audioVideo.removeObserver(checkAudioConnectivityMetricsObserver);\n                audioVideo.realtimeUnsubscribeToAttendeeIdPresence(attendeePresenceHandler);\n                yield this.meetingSession.audioVideo.stopAudioInput();\n                return CheckAudioConnectivityFeedback_1.default.ConnectionFailed;\n            }\n            yield this.executeTimeoutTask(() => __awaiter(this, void 0, void 0, function* () {\n                return this.isAudioConnectionSuccessful(audioPresence, audioConnectivityMetrics);\n            }));\n            audioVideo.removeObserver(checkAudioConnectivityMetricsObserver);\n            audioVideo.realtimeUnsubscribeToAttendeeIdPresence(attendeePresenceHandler);\n            yield this.stopMeeting();\n            yield this.meetingSession.audioVideo.stopAudioInput();\n            return this.isAudioConnectionSuccessful(audioPresence, audioConnectivityMetrics)\n                ? CheckAudioConnectivityFeedback_1.default.Succeeded\n                : CheckAudioConnectivityFeedback_1.default.AudioNotReceived;\n        });\n    }\n    checkVideoConnectivity(videoInputDevice) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const audioVideo = this.meetingSession.audioVideo;\n            let packetsSent = 0;\n            const observer = {\n                metricsDidReceive(clientMetricReport) {\n                    const rawStats = clientMetricReport.getRTCStatsReport();\n                    rawStats.forEach(report => {\n                        if (report.type === 'outbound-rtp' && report.mediaType === 'video') {\n                            packetsSent = report.packetsSent;\n                        }\n                    });\n                },\n            };\n            try {\n                yield audioVideo.startVideoInput(videoInputDevice);\n            }\n            catch (error) {\n                this.logger.error(`MeetingReadinessChecker: Failed to get video input device with error ${error}`);\n                if (error instanceof PermissionDeniedError_1.default) {\n                    return CheckVideoConnectivityFeedback_1.default.VideoInputPermissionDenied;\n                }\n                return CheckVideoConnectivityFeedback_1.default.VideoInputRequestFailed;\n            }\n            audioVideo.addObserver(observer);\n            if (!(yield this.startMeeting())) {\n                return CheckVideoConnectivityFeedback_1.default.ConnectionFailed;\n            }\n            audioVideo.startLocalVideoTile();\n            yield this.executeTimeoutTask(() => __awaiter(this, void 0, void 0, function* () {\n                return packetsSent > 0;\n            }));\n            yield audioVideo.stopVideoInput();\n            yield this.stopMeeting();\n            audioVideo.removeObserver(observer);\n            if (packetsSent <= 0) {\n                return CheckVideoConnectivityFeedback_1.default.VideoNotSent;\n            }\n            return CheckVideoConnectivityFeedback_1.default.Succeeded;\n        });\n    }\n    checkNetworkUDPConnectivity() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let candidatePairSucceed = false;\n            const observer = {\n                metricsDidReceive(clientMetricReport) {\n                    const rawStats = clientMetricReport.getRTCStatsReport();\n                    rawStats.forEach(report => {\n                        if (report.type === 'candidate-pair' && report.state === 'succeeded') {\n                            candidatePairSucceed = true;\n                        }\n                    });\n                },\n            };\n            try {\n                this.originalURLRewriter = this.meetingSession.configuration.urls.urlRewriter;\n            }\n            catch (error) {\n                this.logger.error(`MeetingSessionConfiguration.urls doesn't exist. Error: ${error}`);\n                return CheckNetworkUDPConnectivityFeedback_1.default.MeetingSessionURLsNotInitialized;\n            }\n            this.meetingSession.configuration.urls.urlRewriter = (uri) => {\n                const transformedUri = this.originalURLRewriter(uri);\n                if (transformedUri.includes('transport=tcp')) {\n                    return '';\n                }\n                return transformedUri;\n            };\n            const audioVideo = this.meetingSession.audioVideo;\n            audioVideo.addObserver(observer);\n            if (!(yield this.startMeeting())) {\n                this.meetingSession.configuration.urls.urlRewriter = this.originalURLRewriter;\n                return CheckNetworkUDPConnectivityFeedback_1.default.ConnectionFailed;\n            }\n            yield this.executeTimeoutTask(() => __awaiter(this, void 0, void 0, function* () {\n                return candidatePairSucceed;\n            }));\n            this.meetingSession.configuration.urls.urlRewriter = this.originalURLRewriter;\n            yield this.stopMeeting();\n            audioVideo.removeObserver(observer);\n            if (!candidatePairSucceed) {\n                return CheckNetworkUDPConnectivityFeedback_1.default.ICENegotiationFailed;\n            }\n            return CheckNetworkUDPConnectivityFeedback_1.default.Succeeded;\n        });\n    }\n    checkNetworkTCPConnectivity() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let candidatePairSucceed = false;\n            const observer = {\n                metricsDidReceive(clientMetricReport) {\n                    const rawStats = clientMetricReport.getRTCStatsReport();\n                    rawStats.forEach(report => {\n                        if (report.type === 'candidate-pair' && report.state === 'succeeded') {\n                            candidatePairSucceed = true;\n                        }\n                    });\n                },\n            };\n            try {\n                this.originalURLRewriter = this.meetingSession.configuration.urls.urlRewriter;\n            }\n            catch (error) {\n                this.logger.error(`MeetingSessionConfiguration.urls doesn't exist. Error: ${error}`);\n                return CheckNetworkTCPConnectivityFeedback_1.default.MeetingSessionURLsNotInitialized;\n            }\n            this.meetingSession.configuration.urls.urlRewriter = (uri) => {\n                const transformedUri = this.originalURLRewriter(uri);\n                if (transformedUri.includes('transport=udp')) {\n                    return '';\n                }\n                return transformedUri;\n            };\n            const audioVideo = this.meetingSession.audioVideo;\n            audioVideo.addObserver(observer);\n            if (!(yield this.startMeeting())) {\n                this.meetingSession.configuration.urls.urlRewriter = this.originalURLRewriter;\n                return CheckNetworkTCPConnectivityFeedback_1.default.ConnectionFailed;\n            }\n            yield this.executeTimeoutTask(() => __awaiter(this, void 0, void 0, function* () {\n                return candidatePairSucceed;\n            }));\n            this.meetingSession.configuration.urls.urlRewriter = this.originalURLRewriter;\n            yield this.stopMeeting();\n            audioVideo.removeObserver(observer);\n            if (!candidatePairSucceed) {\n                return CheckNetworkTCPConnectivityFeedback_1.default.ICENegotiationFailed;\n            }\n            return CheckNetworkTCPConnectivityFeedback_1.default.Succeeded;\n        });\n    }\n    startMeeting() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let isStarted = false;\n            const observer = {\n                audioVideoDidStart: () => {\n                    isStarted = true;\n                },\n            };\n            this.meetingSession.audioVideo.addObserver(observer);\n            this.meetingSession.audioVideo.start();\n            yield this.executeTimeoutTask(() => __awaiter(this, void 0, void 0, function* () {\n                return isStarted;\n            }));\n            this.meetingSession.audioVideo.removeObserver(observer);\n            return isStarted;\n        });\n    }\n    stopMeeting() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let isStopped = false;\n            const observer = {\n                audioVideoDidStop: (_sessionStatus) => {\n                    isStopped = true;\n                },\n            };\n            this.meetingSession.audioVideo.addObserver(observer);\n            this.meetingSession.audioVideo.stop();\n            yield this.executeTimeoutTask(() => __awaiter(this, void 0, void 0, function* () {\n                return isStopped;\n            }));\n            this.meetingSession.audioVideo.removeObserver(observer);\n            return isStopped;\n        });\n    }\n    executeTimeoutTask(conditionCheck) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let isSuccess = false;\n            class CheckForConditionTask extends BaseTask_1.default {\n                constructor(logger, waitDurationMs) {\n                    super(logger);\n                    this.waitDurationMs = waitDurationMs;\n                    this.isCancelled = false;\n                }\n                cancel() {\n                    this.isCancelled = true;\n                }\n                run() {\n                    return __awaiter(this, void 0, void 0, function* () {\n                        while (!this.isCancelled) {\n                            if (yield conditionCheck()) {\n                                isSuccess = true;\n                                break;\n                            }\n                            yield DefaultMeetingReadinessChecker.delay(this.waitDurationMs);\n                        }\n                    });\n                }\n            }\n            const timeoutTask = new TimeoutTask_1.default(this.logger, new CheckForConditionTask(this.logger, this.configuration.waitDurationMs), this.configuration.timeoutMs);\n            yield timeoutTask.run();\n            return isSuccess;\n        });\n    }\n    isAudioConnectionSuccessful(audioPresence, audioConnectivityMetrics) {\n        return audioPresence && audioConnectivityMetrics.packetsReceived > 0;\n    }\n}\nexports.default = DefaultMeetingReadinessChecker;\n//# sourceMappingURL=DefaultMeetingReadinessChecker.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst TimeoutScheduler_1 = require(\"../scheduler/TimeoutScheduler\");\nclass DefaultReconnectController {\n    constructor(reconnectTimeoutMs, backoffPolicy) {\n        this.reconnectTimeoutMs = reconnectTimeoutMs;\n        this.backoffPolicy = backoffPolicy;\n        this.shouldReconnect = true;\n        this.onlyRestartPeerConnection = false;\n        this.firstConnectionAttempted = false;\n        this.firstConnectionAttemptTimestampMs = 0;\n        this.lastActiveTimestampMs = Infinity;\n        this._isFirstConnection = true;\n        this.backoffTimer = null;\n        this.backoffCancel = null;\n        this.reset();\n    }\n    timeSpentReconnectingMs() {\n        if (!this.firstConnectionAttempted) {\n            return 0;\n        }\n        return Date.now() - this.firstConnectionAttemptTimestampMs;\n    }\n    hasPastReconnectDeadline() {\n        if (Date.now() - this.lastActiveTimestampMs >= this.reconnectTimeoutMs) {\n            return true;\n        }\n        return this.timeSpentReconnectingMs() >= this.reconnectTimeoutMs;\n    }\n    reset() {\n        this.cancel();\n        this.shouldReconnect = true;\n        this.onlyRestartPeerConnection = false;\n        this.firstConnectionAttempted = false;\n        this.firstConnectionAttemptTimestampMs = 0;\n        this.lastActiveTimestampMs = Infinity;\n        this.backoffPolicy.reset();\n    }\n    startedConnectionAttempt(isFirstConnection) {\n        this._isFirstConnection = isFirstConnection;\n        if (!this.firstConnectionAttempted) {\n            this.firstConnectionAttempted = true;\n            this.firstConnectionAttemptTimestampMs = Date.now();\n        }\n    }\n    hasStartedConnectionAttempt() {\n        return this.firstConnectionAttempted;\n    }\n    isFirstConnection() {\n        return this._isFirstConnection;\n    }\n    disableReconnect() {\n        this.shouldReconnect = false;\n    }\n    enableRestartPeerConnection() {\n        this.onlyRestartPeerConnection = true;\n    }\n    cancel() {\n        this.disableReconnect();\n        if (this.backoffTimer) {\n            this.backoffTimer.stop();\n            if (this.backoffCancel) {\n                this.backoffCancel();\n                this.backoffCancel = null;\n            }\n        }\n    }\n    retryWithBackoff(retryFunc, cancelFunc) {\n        const willRetry = this.shouldReconnect && !this.hasPastReconnectDeadline();\n        if (willRetry) {\n            this.backoffCancel = cancelFunc;\n            this.backoffTimer = new TimeoutScheduler_1.default(this.backoffPolicy.nextBackoffAmountMs());\n            this.backoffTimer.start(() => {\n                this.backoffCancel = null;\n                retryFunc();\n            });\n        }\n        return willRetry;\n    }\n    shouldOnlyRestartPeerConnection() {\n        return this.onlyRestartPeerConnection;\n    }\n    clone() {\n        return new DefaultReconnectController(this.reconnectTimeoutMs, this.backoffPolicy);\n    }\n    setLastActiveTimestampMs(timestampMs) {\n        this.lastActiveTimestampMs = timestampMs;\n    }\n}\nexports.default = DefaultReconnectController;\n//# sourceMappingURL=DefaultReconnectController.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Versioning_1 = require(\"../versioning/Versioning\");\nconst WebSocketReadyState_1 = require(\"./WebSocketReadyState\");\nclass DefaultWebSocketAdapter {\n    constructor(logger) {\n        this.logger = logger;\n    }\n    create(url, protocols, isSignedUrl) {\n        this.connection = new WebSocket(isSignedUrl ? url : Versioning_1.default.urlWithVersion(url), protocols);\n        this.connection.binaryType = 'arraybuffer';\n    }\n    send(message) {\n        if (!this.connection) {\n            this.logger.error('WebSocket not yet created or already destroyed.');\n            return false;\n        }\n        try {\n            if (message instanceof Uint8Array) {\n                this.connection.send(message.buffer);\n            }\n            else {\n                this.connection.send(message);\n            }\n            return true;\n        }\n        catch (err) {\n            this.logger.debug(() => `send error: ${err.message}, websocket state=${WebSocketReadyState_1.default[this.readyState()]}`);\n            return false;\n        }\n    }\n    close(code, reason) {\n        var _a;\n        (_a = this.connection) === null || _a === void 0 ? void 0 : _a.close(code, reason);\n    }\n    destroy() {\n        this.connection = undefined;\n    }\n    addEventListener(handler, eventListener) {\n        /* istanbul ignore if */\n        if (!this.connection) {\n            this.logger.warn('Cannot add event listener with no WebSocket connection.');\n            return;\n        }\n        this.connection.addEventListener(handler, eventListener);\n    }\n    removeEventListener(handler, eventListener) {\n        var _a;\n        (_a = this.connection) === null || _a === void 0 ? void 0 : _a.removeEventListener(handler, eventListener);\n    }\n    readyState() {\n        if (!this.connection) {\n            return WebSocketReadyState_1.default.None;\n        }\n        switch (this.connection.readyState) {\n            case WebSocket.CONNECTING:\n                return WebSocketReadyState_1.default.Connecting;\n            case WebSocket.OPEN:\n                return WebSocketReadyState_1.default.Open;\n            case WebSocket.CLOSING:\n                return WebSocketReadyState_1.default.Closing;\n            case WebSocket.CLOSED:\n                return WebSocketReadyState_1.default.Closed;\n        }\n    }\n}\nexports.default = DefaultWebSocketAdapter;\n//# sourceMappingURL=DefaultWebSocketAdapter.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultAudioVideoController_1 = require(\"../audiovideocontroller/DefaultAudioVideoController\");\nconst DefaultAudioVideoFacade_1 = require(\"../audiovideofacade/DefaultAudioVideoFacade\");\nconst FullJitterBackoff_1 = require(\"../backoff/FullJitterBackoff\");\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\nconst ContentShareMediaStreamBroker_1 = require(\"../contentsharecontroller/ContentShareMediaStreamBroker\");\nconst DefaultContentShareController_1 = require(\"../contentsharecontroller/DefaultContentShareController\");\nconst CSPMonitor_1 = require(\"../cspmonitor/CSPMonitor\");\nconst Destroyable_1 = require(\"../destroyable/Destroyable\");\nconst DefaultEventController_1 = require(\"../eventcontroller/DefaultEventController\");\nconst DefaultReconnectController_1 = require(\"../reconnectcontroller/DefaultReconnectController\");\nconst DefaultWebSocketAdapter_1 = require(\"../websocketadapter/DefaultWebSocketAdapter\");\nclass DefaultMeetingSession {\n    constructor(configuration, logger, deviceController, _eventController) {\n        this._eventController = _eventController;\n        this._configuration = configuration;\n        this._logger = logger;\n        this.checkBrowserSupportAndFeatureConfiguration();\n        CSPMonitor_1.default.addLogger(this._logger);\n        CSPMonitor_1.default.register();\n        if (!this._eventController) {\n            this._eventController = new DefaultEventController_1.default(configuration, logger);\n        }\n        /* istanbul ignore else */\n        if (!deviceController.eventController) {\n            deviceController.eventController = this.eventController;\n        }\n        this.audioVideoController = new DefaultAudioVideoController_1.default(this._configuration, this._logger, new DefaultWebSocketAdapter_1.default(this._logger), deviceController, new DefaultReconnectController_1.default(this._configuration.reconnectTimeoutMs, new FullJitterBackoff_1.default(this._configuration.reconnectFixedWaitMs, this._configuration.reconnectShortBackOffMs, this._configuration.reconnectLongBackOffMs)), this.eventController);\n        this._deviceController = deviceController;\n        const contentShareMediaStreamBroker = new ContentShareMediaStreamBroker_1.default(this._logger);\n        this.contentShareController = new DefaultContentShareController_1.default(contentShareMediaStreamBroker, new DefaultAudioVideoController_1.default(DefaultContentShareController_1.default.createContentShareMeetingSessionConfigure(this._configuration), this._logger, new DefaultWebSocketAdapter_1.default(this._logger), contentShareMediaStreamBroker, new DefaultReconnectController_1.default(this._configuration.reconnectTimeoutMs, new FullJitterBackoff_1.default(this._configuration.reconnectFixedWaitMs, this._configuration.reconnectShortBackOffMs, this._configuration.reconnectLongBackOffMs))), this.audioVideoController);\n        this.audioVideoFacade = new DefaultAudioVideoFacade_1.default(this.audioVideoController, this.audioVideoController.videoTileController, this.audioVideoController.realtimeController, this.audioVideoController.audioMixController, this._deviceController, this.contentShareController);\n    }\n    get configuration() {\n        return this._configuration;\n    }\n    get logger() {\n        return this._logger;\n    }\n    get audioVideo() {\n        return this.audioVideoFacade;\n    }\n    get contentShare() {\n        return this.contentShareController;\n    }\n    get deviceController() {\n        return this._deviceController;\n    }\n    get eventController() {\n        return this._eventController;\n    }\n    /**\n     * Clean up this instance and resources that it created.\n     *\n     * After calling `destroy`, internal fields like `audioVideoController` will be unavailable.\n     */\n    destroy() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (Destroyable_1.isDestroyable(this.contentShareController)) {\n                yield this.contentShareController.destroy();\n            }\n            if (Destroyable_1.isDestroyable(this.audioVideoController)) {\n                yield this.audioVideoController.destroy();\n            }\n            if (Destroyable_1.isDestroyable(this.eventController)) {\n                yield this.eventController.destroy();\n            }\n            CSPMonitor_1.default.removeLogger(this._logger);\n            this._logger = undefined;\n            this._configuration = undefined;\n            this._deviceController = undefined;\n            this.audioVideoFacade = undefined;\n            this.audioVideoController = undefined;\n            this.contentShareController = undefined;\n            this._eventController = undefined;\n        });\n    }\n    checkBrowserSupportAndFeatureConfiguration() {\n        const browserBehavior = new DefaultBrowserBehavior_1.default();\n        const browser = `${browserBehavior.name()} ${browserBehavior.majorVersion()} (${browserBehavior.version()})`;\n        this.logger.info(`browser is ${browser}`);\n        if (!browserBehavior.isSupported()) {\n            this.logger.warn('this browser is not currently supported. ' +\n                'Stability may suffer. ' +\n                `Supported browsers are: ${browserBehavior.supportString()}.`);\n        }\n        // Validation if a custom video uplink policy is specified\n        if (this._configuration.videoUplinkBandwidthPolicy) {\n            if (this.isSimulcastUplinkPolicy(this._configuration.videoUplinkBandwidthPolicy)) {\n                if (!browserBehavior.hasChromiumWebRTC()) {\n                    throw new Error('Simulcast is only supported on Chromium-based browsers');\n                }\n                this._configuration.enableSimulcastForUnifiedPlanChromiumBasedBrowsers = true;\n            }\n            else {\n                this._configuration.enableSimulcastForUnifiedPlanChromiumBasedBrowsers = false;\n            }\n        }\n        if (this._configuration.enableSimulcastForUnifiedPlanChromiumBasedBrowsers) {\n            if (browserBehavior.hasChromiumWebRTC()) {\n                this.logger.info(`Simulcast is enabled for ${browserBehavior.name()}`);\n            }\n            else {\n                this._configuration.enableSimulcastForUnifiedPlanChromiumBasedBrowsers = false;\n                this.logger.info('Simulcast is only supported on Chromium-based browsers');\n            }\n        }\n    }\n    isSimulcastUplinkPolicy(policy) {\n        return !!(policy && policy.addObserver);\n    }\n}\nexports.default = DefaultMeetingSession;\n//# sourceMappingURL=DefaultMeetingSession.js.map","export var SelectorType;\n(function (SelectorType) {\n    SelectorType[\"ENV\"] = \"env\";\n    SelectorType[\"CONFIG\"] = \"shared config entry\";\n})(SelectorType || (SelectorType = {}));\nexport const booleanSelector = (obj, key, type) => {\n    if (!(key in obj))\n        return undefined;\n    if (obj[key] === \"true\")\n        return true;\n    if (obj[key] === \"false\")\n        return false;\n    throw new Error(`Cannot load ${type} \"${key}\". Expected \"true\" or \"false\", got ${obj[key]}.`);\n};\n","import { booleanSelector, SelectorType } from \"@aws-sdk/util-config-provider\";\nexport const ENV_USE_DUALSTACK_ENDPOINT = \"AWS_USE_DUALSTACK_ENDPOINT\";\nexport const CONFIG_USE_DUALSTACK_ENDPOINT = \"use_dualstack_endpoint\";\nexport const DEFAULT_USE_DUALSTACK_ENDPOINT = false;\nexport const NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => booleanSelector(env, ENV_USE_DUALSTACK_ENDPOINT, SelectorType.ENV),\n    configFileSelector: (profile) => booleanSelector(profile, CONFIG_USE_DUALSTACK_ENDPOINT, SelectorType.CONFIG),\n    default: false,\n};\n","import { booleanSelector, SelectorType } from \"@aws-sdk/util-config-provider\";\nexport const ENV_USE_FIPS_ENDPOINT = \"AWS_USE_FIPS_ENDPOINT\";\nexport const CONFIG_USE_FIPS_ENDPOINT = \"use_fips_endpoint\";\nexport const DEFAULT_USE_FIPS_ENDPOINT = false;\nexport const NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => booleanSelector(env, ENV_USE_FIPS_ENDPOINT, SelectorType.ENV),\n    configFileSelector: (profile) => booleanSelector(profile, CONFIG_USE_FIPS_ENDPOINT, SelectorType.CONFIG),\n    default: false,\n};\n","export const normalizeProvider = (input) => {\n    if (typeof input === \"function\")\n        return input;\n    const promisified = Promise.resolve(input);\n    return () => promisified;\n};\n","export const isFipsRegion = (region) => typeof region === \"string\" && (region.startsWith(\"fips-\") || region.endsWith(\"-fips\"));\n","import { isFipsRegion } from \"./isFipsRegion\";\nexport const getRealRegion = (region) => isFipsRegion(region)\n    ? [\"fips-aws-global\", \"aws-fips\"].includes(region)\n        ? \"us-east-1\"\n        : region.replace(/fips-(dkr-|prod-)?|-fips/, \"\")\n    : region;\n","import { getRealRegion } from \"./getRealRegion\";\nimport { isFipsRegion } from \"./isFipsRegion\";\nexport const resolveRegionConfig = (input) => {\n    const { region, useFipsEndpoint } = input;\n    if (!region) {\n        throw new Error(\"Region is missing\");\n    }\n    return {\n        ...input,\n        region: async () => {\n            if (typeof region === \"string\") {\n                return getRealRegion(region);\n            }\n            const providedRegion = await region();\n            return getRealRegion(providedRegion);\n        },\n        useFipsEndpoint: async () => {\n            const providedRegion = typeof region === \"string\" ? region : await region();\n            if (isFipsRegion(providedRegion)) {\n                return true;\n            }\n            return typeof useFipsEndpoint !== \"function\" ? Promise.resolve(!!useFipsEndpoint) : useFipsEndpoint();\n        },\n    };\n};\n","export class HttpRequest {\n    constructor(options) {\n        this.method = options.method || \"GET\";\n        this.hostname = options.hostname || \"localhost\";\n        this.port = options.port;\n        this.query = options.query || {};\n        this.headers = options.headers || {};\n        this.body = options.body;\n        this.protocol = options.protocol\n            ? options.protocol.slice(-1) !== \":\"\n                ? `${options.protocol}:`\n                : options.protocol\n            : \"https:\";\n        this.path = options.path ? (options.path.charAt(0) !== \"/\" ? `/${options.path}` : options.path) : \"/\";\n    }\n    static isInstance(request) {\n        if (!request)\n            return false;\n        const req = request;\n        return (\"method\" in req &&\n            \"protocol\" in req &&\n            \"hostname\" in req &&\n            \"path\" in req &&\n            typeof req[\"query\"] === \"object\" &&\n            typeof req[\"headers\"] === \"object\");\n    }\n    clone() {\n        const cloned = new HttpRequest({\n            ...this,\n            headers: { ...this.headers },\n        });\n        if (cloned.query)\n            cloned.query = cloneQuery(cloned.query);\n        return cloned;\n    }\n}\nfunction cloneQuery(query) {\n    return Object.keys(query).reduce((carry, paramName) => {\n        const param = query[paramName];\n        return {\n            ...carry,\n            [paramName]: Array.isArray(param) ? [...param] : param,\n        };\n    }, {});\n}\n","export class HttpResponse {\n    constructor(options) {\n        this.statusCode = options.statusCode;\n        this.headers = options.headers || {};\n        this.body = options.body;\n    }\n    static isInstance(response) {\n        if (!response)\n            return false;\n        const resp = response;\n        return typeof resp.statusCode === \"number\" && typeof resp.headers === \"object\";\n    }\n}\n","import { HttpRequest } from \"@aws-sdk/protocol-http\";\nconst CONTENT_LENGTH_HEADER = \"content-length\";\nexport function contentLengthMiddleware(bodyLengthChecker) {\n    return (next) => async (args) => {\n        const request = args.request;\n        if (HttpRequest.isInstance(request)) {\n            const { body, headers } = request;\n            if (body &&\n                Object.keys(headers)\n                    .map((str) => str.toLowerCase())\n                    .indexOf(CONTENT_LENGTH_HEADER) === -1) {\n                try {\n                    const length = bodyLengthChecker(body);\n                    request.headers = {\n                        ...request.headers,\n                        [CONTENT_LENGTH_HEADER]: String(length),\n                    };\n                }\n                catch (error) {\n                }\n            }\n        }\n        return next({\n            ...args,\n            request,\n        });\n    };\n}\nexport const contentLengthMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"SET_CONTENT_LENGTH\", \"CONTENT_LENGTH\"],\n    name: \"contentLengthMiddleware\",\n    override: true,\n};\nexport const getContentLengthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), contentLengthMiddlewareOptions);\n    },\n});\n","export const resolveParamsForS3 = async (endpointParams) => {\n    const bucket = endpointParams?.Bucket || \"\";\n    if (typeof endpointParams.Bucket === \"string\") {\n        endpointParams.Bucket = bucket.replace(/#/g, encodeURIComponent(\"#\")).replace(/\\?/g, encodeURIComponent(\"?\"));\n    }\n    if (isArnBucketName(bucket)) {\n        if (endpointParams.ForcePathStyle === true) {\n            throw new Error(\"Path-style addressing cannot be used with ARN buckets\");\n        }\n    }\n    else if (!isDnsCompatibleBucketName(bucket) ||\n        (bucket.indexOf(\".\") !== -1 && !String(endpointParams.Endpoint).startsWith(\"http:\")) ||\n        bucket.toLowerCase() !== bucket ||\n        bucket.length < 3) {\n        endpointParams.ForcePathStyle = true;\n    }\n    if (endpointParams.DisableMultiRegionAccessPoints) {\n        endpointParams.disableMultiRegionAccessPoints = true;\n        endpointParams.DisableMRAP = true;\n    }\n    return endpointParams;\n};\nconst DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\\.\\-]{1,61}[a-z0-9]$/;\nconst IP_ADDRESS_PATTERN = /(\\d+\\.){3}\\d+/;\nconst DOTS_PATTERN = /\\.\\./;\nexport const DOT_PATTERN = /\\./;\nexport const S3_HOSTNAME_PATTERN = /^(.+\\.)?s3(-fips)?(\\.dualstack)?[.-]([a-z0-9-]+)\\./;\nexport const isDnsCompatibleBucketName = (bucketName) => DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);\nexport const isArnBucketName = (bucketName) => {\n    const [arn, partition, service, region, account, typeOrId] = bucketName.split(\":\");\n    const isArn = arn === \"arn\" && bucketName.split(\":\").length >= 6;\n    const isValidArn = [arn, partition, service, account, typeOrId].filter(Boolean).length === 5;\n    if (isArn && !isValidArn) {\n        throw new Error(`Invalid ARN: ${bucketName} was an invalid ARN.`);\n    }\n    return arn === \"arn\" && !!partition && !!service && !!account && !!typeOrId;\n};\n","export const createConfigValueProvider = (configKey, canonicalEndpointParamKey, config) => {\n    const configProvider = async () => {\n        const configValue = config[configKey] ?? config[canonicalEndpointParamKey];\n        if (typeof configValue === \"function\") {\n            return configValue();\n        }\n        return configValue;\n    };\n    if (configKey === \"endpoint\" || canonicalEndpointParamKey === \"endpoint\") {\n        return async () => {\n            const endpoint = await configProvider();\n            if (endpoint && typeof endpoint === \"object\") {\n                if (\"url\" in endpoint) {\n                    return endpoint.url.href;\n                }\n                if (\"hostname\" in endpoint) {\n                    const { protocol, hostname, port, path } = endpoint;\n                    return `${protocol}//${hostname}${port ? \":\" + port : \"\"}${path}`;\n                }\n            }\n            return endpoint;\n        };\n    }\n    return configProvider;\n};\n","import { resolveParamsForS3 } from \"../service-customizations\";\nimport { createConfigValueProvider } from \"./createConfigValueProvider\";\nexport const getEndpointFromInstructions = async (commandInput, instructionsSupplier, clientConfig, context) => {\n    const endpointParams = await resolveParams(commandInput, instructionsSupplier, clientConfig);\n    if (typeof clientConfig.endpointProvider !== \"function\") {\n        throw new Error(\"config.endpointProvider is not set.\");\n    }\n    const endpoint = clientConfig.endpointProvider(endpointParams, context);\n    return endpoint;\n};\nexport const resolveParams = async (commandInput, instructionsSupplier, clientConfig) => {\n    const endpointParams = {};\n    const instructions = instructionsSupplier?.getEndpointParameterInstructions?.() || {};\n    for (const [name, instruction] of Object.entries(instructions)) {\n        switch (instruction.type) {\n            case \"staticContextParams\":\n                endpointParams[name] = instruction.value;\n                break;\n            case \"contextParams\":\n                endpointParams[name] = commandInput[instruction.name];\n                break;\n            case \"clientContextParams\":\n            case \"builtInParams\":\n                endpointParams[name] = await createConfigValueProvider(instruction.name, name, clientConfig)();\n                break;\n            default:\n                throw new Error(\"Unrecognized endpoint parameter instruction: \" + JSON.stringify(instruction));\n        }\n    }\n    if (Object.keys(instructions).length === 0) {\n        Object.assign(endpointParams, clientConfig);\n    }\n    if (String(clientConfig.serviceId).toLowerCase() === \"s3\") {\n        await resolveParamsForS3(endpointParams);\n    }\n    return endpointParams;\n};\n","export function parseQueryString(querystring) {\n    const query = {};\n    querystring = querystring.replace(/^\\?/, \"\");\n    if (querystring) {\n        for (const pair of querystring.split(\"&\")) {\n            let [key, value = null] = pair.split(\"=\");\n            key = decodeURIComponent(key);\n            if (value) {\n                value = decodeURIComponent(value);\n            }\n            if (!(key in query)) {\n                query[key] = value;\n            }\n            else if (Array.isArray(query[key])) {\n                query[key].push(value);\n            }\n            else {\n                query[key] = [query[key], value];\n            }\n        }\n    }\n    return query;\n}\n","import { parseQueryString } from \"@aws-sdk/querystring-parser\";\nexport const parseUrl = (url) => {\n    if (typeof url === \"string\") {\n        return parseUrl(new URL(url));\n    }\n    const { hostname, pathname, port, protocol, search } = url;\n    let query;\n    if (search) {\n        query = parseQueryString(search);\n    }\n    return {\n        hostname,\n        port: port ? parseInt(port) : undefined,\n        protocol,\n        path: pathname,\n        query,\n    };\n};\n","import { parseUrl } from \"@aws-sdk/url-parser\";\nexport const toEndpointV1 = (endpoint) => {\n    if (typeof endpoint === \"object\") {\n        if (\"url\" in endpoint) {\n            return parseUrl(endpoint.url);\n        }\n        return endpoint;\n    }\n    return parseUrl(endpoint);\n};\n","import { getEndpointFromInstructions } from \"./adaptors/getEndpointFromInstructions\";\nexport const endpointMiddleware = ({ config, instructions, }) => {\n    return (next, context) => async (args) => {\n        const endpoint = await getEndpointFromInstructions(args.input, {\n            getEndpointParameterInstructions() {\n                return instructions;\n            },\n        }, { ...config }, context);\n        context.endpointV2 = endpoint;\n        context.authSchemes = endpoint.properties?.authSchemes;\n        const authScheme = context.authSchemes?.[0];\n        if (authScheme) {\n            context[\"signing_region\"] = authScheme.signingRegion;\n            context[\"signing_service\"] = authScheme.signingName;\n        }\n        return next({\n            ...args,\n        });\n    };\n};\n","export const deserializerMiddleware = (options, deserializer) => (next, context) => async (args) => {\n    const { response } = await next(args);\n    try {\n        const parsed = await deserializer(response, options);\n        return {\n            response,\n            output: parsed,\n        };\n    }\n    catch (error) {\n        Object.defineProperty(error, \"$response\", {\n            value: response,\n        });\n        throw error;\n    }\n};\n","export const serializerMiddleware = (options, serializer) => (next, context) => async (args) => {\n    const endpoint = context.endpointV2?.url && options.urlParser\n        ? async () => options.urlParser(context.endpointV2.url)\n        : options.endpoint;\n    if (!endpoint) {\n        throw new Error(\"No valid endpoint provider available.\");\n    }\n    const request = await serializer(args.input, { ...options, endpoint });\n    return next({\n        ...args,\n        request,\n    });\n};\n","import { deserializerMiddleware } from \"./deserializerMiddleware\";\nimport { serializerMiddleware } from \"./serializerMiddleware\";\nexport const deserializerMiddlewareOption = {\n    name: \"deserializerMiddleware\",\n    step: \"deserialize\",\n    tags: [\"DESERIALIZER\"],\n    override: true,\n};\nexport const serializerMiddlewareOption = {\n    name: \"serializerMiddleware\",\n    step: \"serialize\",\n    tags: [\"SERIALIZER\"],\n    override: true,\n};\nexport function getSerdePlugin(config, serializer, deserializer) {\n    return {\n        applyToStack: (commandStack) => {\n            commandStack.add(deserializerMiddleware(config, deserializer), deserializerMiddlewareOption);\n            commandStack.add(serializerMiddleware(config, serializer), serializerMiddlewareOption);\n        },\n    };\n}\n","import { serializerMiddlewareOption } from \"@aws-sdk/middleware-serde\";\nimport { endpointMiddleware } from \"./endpointMiddleware\";\nexport const endpointMiddlewareOptions = {\n    step: \"serialize\",\n    tags: [\"ENDPOINT_PARAMETERS\", \"ENDPOINT_V2\", \"ENDPOINT\"],\n    name: \"endpointV2Middleware\",\n    override: true,\n    relation: \"before\",\n    toMiddleware: serializerMiddlewareOption.name,\n};\nexport const getEndpointPlugin = (config, instructions) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(endpointMiddleware({\n            config,\n            instructions,\n        }), endpointMiddlewareOptions);\n    },\n});\n","import { normalizeProvider } from \"@aws-sdk/util-middleware\";\nimport { toEndpointV1 } from \"./adaptors/toEndpointV1\";\nexport const resolveEndpointConfig = (input) => {\n    const tls = input.tls ?? true;\n    const { endpoint } = input;\n    const customEndpointProvider = endpoint != null ? async () => toEndpointV1(await normalizeProvider(endpoint)()) : undefined;\n    const isCustomEndpoint = !!endpoint;\n    return {\n        ...input,\n        endpoint: customEndpointProvider,\n        tls,\n        isCustomEndpoint,\n        useDualstackEndpoint: normalizeProvider(input.useDualstackEndpoint ?? false),\n        useFipsEndpoint: normalizeProvider(input.useFipsEndpoint ?? false),\n    };\n};\n","import { HttpRequest } from \"@aws-sdk/protocol-http\";\nexport function resolveHostHeaderConfig(input) {\n    return input;\n}\nexport const hostHeaderMiddleware = (options) => (next) => async (args) => {\n    if (!HttpRequest.isInstance(args.request))\n        return next(args);\n    const { request } = args;\n    const { handlerProtocol = \"\" } = options.requestHandler.metadata || {};\n    if (handlerProtocol.indexOf(\"h2\") >= 0 && !request.headers[\":authority\"]) {\n        delete request.headers[\"host\"];\n        request.headers[\":authority\"] = \"\";\n    }\n    else if (!request.headers[\"host\"]) {\n        request.headers[\"host\"] = request.hostname;\n    }\n    return next(args);\n};\nexport const hostHeaderMiddlewareOptions = {\n    name: \"hostHeaderMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"HOST\"],\n    override: true,\n};\nexport const getHostHeaderPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(hostHeaderMiddleware(options), hostHeaderMiddlewareOptions);\n    },\n});\n","export const loggerMiddleware = () => (next, context) => async (args) => {\n    const response = await next(args);\n    const { clientName, commandName, logger, inputFilterSensitiveLog, outputFilterSensitiveLog, dynamoDbDocumentClientOptions = {}, } = context;\n    const { overrideInputFilterSensitiveLog, overrideOutputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n    if (!logger) {\n        return response;\n    }\n    if (typeof logger.info === \"function\") {\n        const { $metadata, ...outputWithoutMetadata } = response.output;\n        logger.info({\n            clientName,\n            commandName,\n            input: (overrideInputFilterSensitiveLog ?? inputFilterSensitiveLog)(args.input),\n            output: (overrideOutputFilterSensitiveLog ?? outputFilterSensitiveLog)(outputWithoutMetadata),\n            metadata: $metadata,\n        });\n    }\n    return response;\n};\nexport const loggerMiddlewareOptions = {\n    name: \"loggerMiddleware\",\n    tags: [\"LOGGER\"],\n    step: \"initialize\",\n    override: true,\n};\nexport const getLoggerPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n    },\n});\n","import { HttpRequest } from \"@aws-sdk/protocol-http\";\nconst TRACE_ID_HEADER_NAME = \"X-Amzn-Trace-Id\";\nconst ENV_LAMBDA_FUNCTION_NAME = \"AWS_LAMBDA_FUNCTION_NAME\";\nconst ENV_TRACE_ID = \"_X_AMZN_TRACE_ID\";\nexport const recursionDetectionMiddleware = (options) => (next) => async (args) => {\n    const { request } = args;\n    if (!HttpRequest.isInstance(request) ||\n        options.runtime !== \"node\" ||\n        request.headers.hasOwnProperty(TRACE_ID_HEADER_NAME)) {\n        return next(args);\n    }\n    const functionName = process.env[ENV_LAMBDA_FUNCTION_NAME];\n    const traceId = process.env[ENV_TRACE_ID];\n    const nonEmptyString = (str) => typeof str === \"string\" && str.length > 0;\n    if (nonEmptyString(functionName) && nonEmptyString(traceId)) {\n        request.headers[TRACE_ID_HEADER_NAME] = traceId;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nexport const addRecursionDetectionMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"RECURSION_DETECTION\"],\n    name: \"recursionDetectionMiddleware\",\n    override: true,\n    priority: \"low\",\n};\nexport const getRecursionDetectionPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(recursionDetectionMiddleware(options), addRecursionDetectionMiddlewareOptions);\n    },\n});\n","export var RETRY_MODES;\n(function (RETRY_MODES) {\n    RETRY_MODES[\"STANDARD\"] = \"standard\";\n    RETRY_MODES[\"ADAPTIVE\"] = \"adaptive\";\n})(RETRY_MODES || (RETRY_MODES = {}));\nexport const DEFAULT_MAX_ATTEMPTS = 3;\nexport const DEFAULT_RETRY_MODE = \"STANDARD\";\n","export const CLOCK_SKEW_ERROR_CODES = [\n    \"AuthFailure\",\n    \"InvalidSignatureException\",\n    \"RequestExpired\",\n    \"RequestInTheFuture\",\n    \"RequestTimeTooSkewed\",\n    \"SignatureDoesNotMatch\",\n];\nexport const THROTTLING_ERROR_CODES = [\n    \"BandwidthLimitExceeded\",\n    \"EC2ThrottledException\",\n    \"LimitExceededException\",\n    \"PriorRequestNotComplete\",\n    \"ProvisionedThroughputExceededException\",\n    \"RequestLimitExceeded\",\n    \"RequestThrottled\",\n    \"RequestThrottledException\",\n    \"SlowDown\",\n    \"ThrottledException\",\n    \"Throttling\",\n    \"ThrottlingException\",\n    \"TooManyRequestsException\",\n    \"TransactionInProgressException\",\n];\nexport const TRANSIENT_ERROR_CODES = [\"AbortError\", \"TimeoutError\", \"RequestTimeout\", \"RequestTimeoutException\"];\nexport const TRANSIENT_ERROR_STATUS_CODES = [500, 502, 503, 504];\nexport const NODEJS_TIMEOUT_ERROR_CODES = [\"ECONNRESET\", \"EPIPE\", \"ETIMEDOUT\"];\n","import { CLOCK_SKEW_ERROR_CODES, NODEJS_TIMEOUT_ERROR_CODES, THROTTLING_ERROR_CODES, TRANSIENT_ERROR_CODES, TRANSIENT_ERROR_STATUS_CODES, } from \"./constants\";\nexport const isRetryableByTrait = (error) => error.$retryable !== undefined;\nexport const isClockSkewError = (error) => CLOCK_SKEW_ERROR_CODES.includes(error.name);\nexport const isThrottlingError = (error) => error.$metadata?.httpStatusCode === 429 ||\n    THROTTLING_ERROR_CODES.includes(error.name) ||\n    error.$retryable?.throttling == true;\nexport const isTransientError = (error) => TRANSIENT_ERROR_CODES.includes(error.name) ||\n    NODEJS_TIMEOUT_ERROR_CODES.includes(error?.code || \"\") ||\n    TRANSIENT_ERROR_STATUS_CODES.includes(error.$metadata?.httpStatusCode || 0);\nexport const isServerError = (error) => {\n    if (error.$metadata?.httpStatusCode !== undefined) {\n        const statusCode = error.$metadata.httpStatusCode;\n        if (500 <= statusCode && statusCode <= 599 && !isTransientError(error)) {\n            return true;\n        }\n        return false;\n    }\n    return false;\n};\n","import { isThrottlingError } from \"@aws-sdk/service-error-classification\";\nexport class DefaultRateLimiter {\n    constructor(options) {\n        this.currentCapacity = 0;\n        this.enabled = false;\n        this.lastMaxRate = 0;\n        this.measuredTxRate = 0;\n        this.requestCount = 0;\n        this.lastTimestamp = 0;\n        this.timeWindow = 0;\n        this.beta = options?.beta ?? 0.7;\n        this.minCapacity = options?.minCapacity ?? 1;\n        this.minFillRate = options?.minFillRate ?? 0.5;\n        this.scaleConstant = options?.scaleConstant ?? 0.4;\n        this.smooth = options?.smooth ?? 0.8;\n        const currentTimeInSeconds = this.getCurrentTimeInSeconds();\n        this.lastThrottleTime = currentTimeInSeconds;\n        this.lastTxRateBucket = Math.floor(this.getCurrentTimeInSeconds());\n        this.fillRate = this.minFillRate;\n        this.maxCapacity = this.minCapacity;\n    }\n    getCurrentTimeInSeconds() {\n        return Date.now() / 1000;\n    }\n    async getSendToken() {\n        return this.acquireTokenBucket(1);\n    }\n    async acquireTokenBucket(amount) {\n        if (!this.enabled) {\n            return;\n        }\n        this.refillTokenBucket();\n        if (amount > this.currentCapacity) {\n            const delay = ((amount - this.currentCapacity) / this.fillRate) * 1000;\n            await new Promise((resolve) => setTimeout(resolve, delay));\n        }\n        this.currentCapacity = this.currentCapacity - amount;\n    }\n    refillTokenBucket() {\n        const timestamp = this.getCurrentTimeInSeconds();\n        if (!this.lastTimestamp) {\n            this.lastTimestamp = timestamp;\n            return;\n        }\n        const fillAmount = (timestamp - this.lastTimestamp) * this.fillRate;\n        this.currentCapacity = Math.min(this.maxCapacity, this.currentCapacity + fillAmount);\n        this.lastTimestamp = timestamp;\n    }\n    updateClientSendingRate(response) {\n        let calculatedRate;\n        this.updateMeasuredRate();\n        if (isThrottlingError(response)) {\n            const rateToUse = !this.enabled ? this.measuredTxRate : Math.min(this.measuredTxRate, this.fillRate);\n            this.lastMaxRate = rateToUse;\n            this.calculateTimeWindow();\n            this.lastThrottleTime = this.getCurrentTimeInSeconds();\n            calculatedRate = this.cubicThrottle(rateToUse);\n            this.enableTokenBucket();\n        }\n        else {\n            this.calculateTimeWindow();\n            calculatedRate = this.cubicSuccess(this.getCurrentTimeInSeconds());\n        }\n        const newRate = Math.min(calculatedRate, 2 * this.measuredTxRate);\n        this.updateTokenBucketRate(newRate);\n    }\n    calculateTimeWindow() {\n        this.timeWindow = this.getPrecise(Math.pow((this.lastMaxRate * (1 - this.beta)) / this.scaleConstant, 1 / 3));\n    }\n    cubicThrottle(rateToUse) {\n        return this.getPrecise(rateToUse * this.beta);\n    }\n    cubicSuccess(timestamp) {\n        return this.getPrecise(this.scaleConstant * Math.pow(timestamp - this.lastThrottleTime - this.timeWindow, 3) + this.lastMaxRate);\n    }\n    enableTokenBucket() {\n        this.enabled = true;\n    }\n    updateTokenBucketRate(newRate) {\n        this.refillTokenBucket();\n        this.fillRate = Math.max(newRate, this.minFillRate);\n        this.maxCapacity = Math.max(newRate, this.minCapacity);\n        this.currentCapacity = Math.min(this.currentCapacity, this.maxCapacity);\n    }\n    updateMeasuredRate() {\n        const t = this.getCurrentTimeInSeconds();\n        const timeBucket = Math.floor(t * 2) / 2;\n        this.requestCount++;\n        if (timeBucket > this.lastTxRateBucket) {\n            const currentRate = this.requestCount / (timeBucket - this.lastTxRateBucket);\n            this.measuredTxRate = this.getPrecise(currentRate * this.smooth + this.measuredTxRate * (1 - this.smooth));\n            this.requestCount = 0;\n            this.lastTxRateBucket = timeBucket;\n        }\n    }\n    getPrecise(num) {\n        return parseFloat(num.toFixed(8));\n    }\n}\n","export const DEFAULT_RETRY_DELAY_BASE = 100;\nexport const MAXIMUM_RETRY_DELAY = 20 * 1000;\nexport const THROTTLING_RETRY_DELAY_BASE = 500;\nexport const INITIAL_RETRY_TOKENS = 500;\nexport const RETRY_COST = 5;\nexport const TIMEOUT_RETRY_COST = 10;\nexport const NO_RETRY_INCREMENT = 1;\nexport const INVOCATION_ID_HEADER = \"amz-sdk-invocation-id\";\nexport const REQUEST_HEADER = \"amz-sdk-request\";\n","import { DEFAULT_RETRY_DELAY_BASE, MAXIMUM_RETRY_DELAY } from \"./constants\";\nexport const getDefaultRetryBackoffStrategy = () => {\n    let delayBase = DEFAULT_RETRY_DELAY_BASE;\n    const computeNextBackoffDelay = (attempts) => {\n        return Math.floor(Math.min(MAXIMUM_RETRY_DELAY, Math.random() * 2 ** attempts * delayBase));\n    };\n    const setDelayBase = (delay) => {\n        delayBase = delay;\n    };\n    return {\n        computeNextBackoffDelay,\n        setDelayBase,\n    };\n};\n","import { DEFAULT_RETRY_DELAY_BASE, MAXIMUM_RETRY_DELAY, NO_RETRY_INCREMENT, RETRY_COST, THROTTLING_RETRY_DELAY_BASE, TIMEOUT_RETRY_COST, } from \"./constants\";\nimport { getDefaultRetryBackoffStrategy } from \"./defaultRetryBackoffStrategy\";\nexport const getDefaultRetryToken = (initialRetryTokens, initialRetryDelay, initialRetryCount, options) => {\n    const MAX_CAPACITY = initialRetryTokens;\n    const retryCost = options?.retryCost ?? RETRY_COST;\n    const timeoutRetryCost = options?.timeoutRetryCost ?? TIMEOUT_RETRY_COST;\n    const retryBackoffStrategy = options?.retryBackoffStrategy ?? getDefaultRetryBackoffStrategy();\n    let availableCapacity = initialRetryTokens;\n    let retryDelay = Math.min(MAXIMUM_RETRY_DELAY, initialRetryDelay);\n    let lastRetryCost = undefined;\n    let retryCount = initialRetryCount ?? 0;\n    const getCapacityAmount = (errorType) => (errorType === \"TRANSIENT\" ? timeoutRetryCost : retryCost);\n    const getRetryCount = () => retryCount;\n    const getRetryDelay = () => retryDelay;\n    const getLastRetryCost = () => lastRetryCost;\n    const hasRetryTokens = (errorType) => getCapacityAmount(errorType) <= availableCapacity;\n    const getRetryTokenCount = (errorInfo) => {\n        const errorType = errorInfo.errorType;\n        if (!hasRetryTokens(errorType)) {\n            throw new Error(\"No retry token available\");\n        }\n        const capacityAmount = getCapacityAmount(errorType);\n        const delayBase = errorType === \"THROTTLING\" ? THROTTLING_RETRY_DELAY_BASE : DEFAULT_RETRY_DELAY_BASE;\n        retryBackoffStrategy.setDelayBase(delayBase);\n        const delayFromErrorType = retryBackoffStrategy.computeNextBackoffDelay(retryCount);\n        if (errorInfo.retryAfterHint) {\n            const delayFromRetryAfterHint = errorInfo.retryAfterHint.getTime() - Date.now();\n            retryDelay = Math.max(delayFromRetryAfterHint || 0, delayFromErrorType);\n        }\n        else {\n            retryDelay = delayFromErrorType;\n        }\n        retryCount++;\n        lastRetryCost = capacityAmount;\n        availableCapacity -= capacityAmount;\n        return capacityAmount;\n    };\n    const releaseRetryTokens = (releaseAmount) => {\n        availableCapacity += releaseAmount ?? NO_RETRY_INCREMENT;\n        availableCapacity = Math.min(availableCapacity, MAX_CAPACITY);\n    };\n    return {\n        getRetryCount,\n        getRetryDelay,\n        getLastRetryCost,\n        hasRetryTokens,\n        getRetryTokenCount,\n        releaseRetryTokens,\n    };\n};\n","import { DEFAULT_MAX_ATTEMPTS, RETRY_MODES } from \"./config\";\nimport { DEFAULT_RETRY_DELAY_BASE, INITIAL_RETRY_TOKENS } from \"./constants\";\nimport { getDefaultRetryToken } from \"./defaultRetryToken\";\nexport class StandardRetryStrategy {\n    constructor(maxAttemptsProvider) {\n        this.maxAttemptsProvider = maxAttemptsProvider;\n        this.mode = RETRY_MODES.STANDARD;\n        this.retryToken = getDefaultRetryToken(INITIAL_RETRY_TOKENS, DEFAULT_RETRY_DELAY_BASE);\n        this.maxAttemptsProvider = maxAttemptsProvider;\n    }\n    async acquireInitialRetryToken(retryTokenScope) {\n        return this.retryToken;\n    }\n    async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {\n        const maxAttempts = await this.getMaxAttempts();\n        if (this.shouldRetry(tokenToRenew, errorInfo, maxAttempts)) {\n            tokenToRenew.getRetryTokenCount(errorInfo);\n            return tokenToRenew;\n        }\n        throw new Error(\"No retry token available\");\n    }\n    recordSuccess(token) {\n        this.retryToken.releaseRetryTokens(token.getLastRetryCost());\n    }\n    async getMaxAttempts() {\n        let maxAttempts;\n        try {\n            return await this.maxAttemptsProvider();\n        }\n        catch (error) {\n            console.warn(`Max attempts provider could not resolve. Using default of ${DEFAULT_MAX_ATTEMPTS}`);\n            return DEFAULT_MAX_ATTEMPTS;\n        }\n    }\n    shouldRetry(tokenToRenew, errorInfo, maxAttempts) {\n        const attempts = tokenToRenew.getRetryCount();\n        return (attempts < maxAttempts &&\n            tokenToRenew.hasRetryTokens(errorInfo.errorType) &&\n            this.isRetryableError(errorInfo.errorType));\n    }\n    isRetryableError(errorType) {\n        return errorType === \"THROTTLING\" || errorType === \"TRANSIENT\";\n    }\n}\n","import { RETRY_MODES } from \"./config\";\nimport { DefaultRateLimiter } from \"./DefaultRateLimiter\";\nimport { StandardRetryStrategy } from \"./StandardRetryStrategy\";\nexport class AdaptiveRetryStrategy {\n    constructor(maxAttemptsProvider, options) {\n        this.maxAttemptsProvider = maxAttemptsProvider;\n        this.mode = RETRY_MODES.ADAPTIVE;\n        const { rateLimiter } = options ?? {};\n        this.rateLimiter = rateLimiter ?? new DefaultRateLimiter();\n        this.standardRetryStrategy = new StandardRetryStrategy(maxAttemptsProvider);\n    }\n    async acquireInitialRetryToken(retryTokenScope) {\n        await this.rateLimiter.getSendToken();\n        return this.standardRetryStrategy.acquireInitialRetryToken(retryTokenScope);\n    }\n    async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {\n        this.rateLimiter.updateClientSendingRate(errorInfo);\n        return this.standardRetryStrategy.refreshRetryTokenForRetry(tokenToRenew, errorInfo);\n    }\n    recordSuccess(token) {\n        this.rateLimiter.updateClientSendingRate({});\n        this.standardRetryStrategy.recordSuccess(token);\n    }\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","export const asSdkError = (error) => {\n    if (error instanceof Error)\n        return error;\n    if (error instanceof Object)\n        return Object.assign(new Error(), error);\n    if (typeof error === \"string\")\n        return new Error(error);\n    return new Error(`AWS SDK error wrapper for ${error}`);\n};\n","import { normalizeProvider } from \"@aws-sdk/util-middleware\";\nimport { AdaptiveRetryStrategy, DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE, RETRY_MODES, StandardRetryStrategy, } from \"@aws-sdk/util-retry\";\nexport const ENV_MAX_ATTEMPTS = \"AWS_MAX_ATTEMPTS\";\nexport const CONFIG_MAX_ATTEMPTS = \"max_attempts\";\nexport const NODE_MAX_ATTEMPT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => {\n        const value = env[ENV_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Environment variable ${ENV_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    configFileSelector: (profile) => {\n        const value = profile[CONFIG_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Shared config file entry ${CONFIG_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    default: DEFAULT_MAX_ATTEMPTS,\n};\nexport const resolveRetryConfig = (input) => {\n    const { retryStrategy } = input;\n    const maxAttempts = normalizeProvider(input.maxAttempts ?? DEFAULT_MAX_ATTEMPTS);\n    return {\n        ...input,\n        maxAttempts,\n        retryStrategy: async () => {\n            if (retryStrategy) {\n                return retryStrategy;\n            }\n            const retryMode = await normalizeProvider(input.retryMode)();\n            if (retryMode === RETRY_MODES.ADAPTIVE) {\n                return new AdaptiveRetryStrategy(maxAttempts);\n            }\n            return new StandardRetryStrategy(maxAttempts);\n        },\n    };\n};\nexport const ENV_RETRY_MODE = \"AWS_RETRY_MODE\";\nexport const CONFIG_RETRY_MODE = \"retry_mode\";\nexport const NODE_RETRY_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[ENV_RETRY_MODE],\n    configFileSelector: (profile) => profile[CONFIG_RETRY_MODE],\n    default: DEFAULT_RETRY_MODE,\n};\n","import { HttpRequest, HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { isServerError, isThrottlingError, isTransientError } from \"@aws-sdk/service-error-classification\";\nimport { INVOCATION_ID_HEADER, REQUEST_HEADER } from \"@aws-sdk/util-retry\";\nimport { v4 } from \"uuid\";\nimport { asSdkError } from \"./util\";\nexport const retryMiddleware = (options) => (next, context) => async (args) => {\n    let retryStrategy = await options.retryStrategy();\n    const maxAttempts = await options.maxAttempts();\n    if (isRetryStrategyV2(retryStrategy)) {\n        retryStrategy = retryStrategy;\n        let retryToken = await retryStrategy.acquireInitialRetryToken(context[\"partition_id\"]);\n        let lastError = new Error();\n        let attempts = 0;\n        let totalRetryDelay = 0;\n        const { request } = args;\n        if (HttpRequest.isInstance(request)) {\n            request.headers[INVOCATION_ID_HEADER] = v4();\n        }\n        while (true) {\n            try {\n                if (HttpRequest.isInstance(request)) {\n                    request.headers[REQUEST_HEADER] = `attempt=${attempts + 1}; max=${maxAttempts}`;\n                }\n                const { response, output } = await next(args);\n                retryStrategy.recordSuccess(retryToken);\n                output.$metadata.attempts = attempts + 1;\n                output.$metadata.totalRetryDelay = totalRetryDelay;\n                return { response, output };\n            }\n            catch (e) {\n                const retryErrorInfo = getRetyErrorInto(e);\n                lastError = asSdkError(e);\n                try {\n                    retryToken = await retryStrategy.refreshRetryTokenForRetry(retryToken, retryErrorInfo);\n                }\n                catch (refreshError) {\n                    if (!lastError.$metadata) {\n                        lastError.$metadata = {};\n                    }\n                    lastError.$metadata.attempts = attempts + 1;\n                    lastError.$metadata.totalRetryDelay = totalRetryDelay;\n                    throw lastError;\n                }\n                attempts = retryToken.getRetryCount();\n                const delay = retryToken.getRetryDelay();\n                totalRetryDelay += delay;\n                await new Promise((resolve) => setTimeout(resolve, delay));\n            }\n        }\n    }\n    else {\n        retryStrategy = retryStrategy;\n        if (retryStrategy?.mode)\n            context.userAgent = [...(context.userAgent || []), [\"cfg/retry-mode\", retryStrategy.mode]];\n        return retryStrategy.retry(next, args);\n    }\n};\nconst isRetryStrategyV2 = (retryStrategy) => typeof retryStrategy.acquireInitialRetryToken !== \"undefined\" &&\n    typeof retryStrategy.refreshRetryTokenForRetry !== \"undefined\" &&\n    typeof retryStrategy.recordSuccess !== \"undefined\";\nconst getRetyErrorInto = (error) => {\n    const errorInfo = {\n        errorType: getRetryErrorType(error),\n    };\n    const retryAfterHint = getRetryAfterHint(error.$response);\n    if (retryAfterHint) {\n        errorInfo.retryAfterHint = retryAfterHint;\n    }\n    return errorInfo;\n};\nconst getRetryErrorType = (error) => {\n    if (isThrottlingError(error))\n        return \"THROTTLING\";\n    if (isTransientError(error))\n        return \"TRANSIENT\";\n    if (isServerError(error))\n        return \"SERVER_ERROR\";\n    return \"CLIENT_ERROR\";\n};\nexport const retryMiddlewareOptions = {\n    name: \"retryMiddleware\",\n    tags: [\"RETRY\"],\n    step: \"finalizeRequest\",\n    priority: \"high\",\n    override: true,\n};\nexport const getRetryPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n    },\n});\nexport const getRetryAfterHint = (response) => {\n    if (!HttpResponse.isInstance(response))\n        return;\n    const retryAfterHeaderName = Object.keys(response.headers).find((key) => key.toLowerCase() === \"retry-after\");\n    if (!retryAfterHeaderName)\n        return;\n    const retryAfter = response.headers[retryAfterHeaderName];\n    const retryAfterSeconds = Number(retryAfter);\n    if (!Number.isNaN(retryAfterSeconds))\n        return new Date(retryAfterSeconds * 1000);\n    const retryAfterDate = new Date(retryAfter);\n    return retryAfterDate;\n};\n","export const memoize = (provider, isExpired, requiresRefresh) => {\n    let resolved;\n    let pending;\n    let hasResult;\n    let isConstant = false;\n    const coalesceProvider = async () => {\n        if (!pending) {\n            pending = provider();\n        }\n        try {\n            resolved = await pending;\n            hasResult = true;\n            isConstant = false;\n        }\n        finally {\n            pending = undefined;\n        }\n        return resolved;\n    };\n    if (isExpired === undefined) {\n        return async (options) => {\n            if (!hasResult || options?.forceRefresh) {\n                resolved = await coalesceProvider();\n            }\n            return resolved;\n        };\n    }\n    return async (options) => {\n        if (!hasResult || options?.forceRefresh) {\n            resolved = await coalesceProvider();\n        }\n        if (isConstant) {\n            return resolved;\n        }\n        if (requiresRefresh && !requiresRefresh(resolved)) {\n            isConstant = true;\n            return resolved;\n        }\n        if (isExpired(resolved)) {\n            await coalesceProvider();\n            return resolved;\n        }\n        return resolved;\n    };\n};\n","const SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\nexport function fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error(\"Hex encoded strings must have an even number length\");\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n}\nexport function toHex(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\n","export const fromUtf8 = (input) => new TextEncoder().encode(input);\n","import { fromUtf8 } from \"./fromUtf8\";\nexport const toUint8Array = (data) => {\n    if (typeof data === \"string\") {\n        return fromUtf8(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n};\n","export const toUtf8 = (input) => new TextDecoder(\"utf-8\").decode(input);\n","export const ALGORITHM_QUERY_PARAM = \"X-Amz-Algorithm\";\nexport const CREDENTIAL_QUERY_PARAM = \"X-Amz-Credential\";\nexport const AMZ_DATE_QUERY_PARAM = \"X-Amz-Date\";\nexport const SIGNED_HEADERS_QUERY_PARAM = \"X-Amz-SignedHeaders\";\nexport const EXPIRES_QUERY_PARAM = \"X-Amz-Expires\";\nexport const SIGNATURE_QUERY_PARAM = \"X-Amz-Signature\";\nexport const TOKEN_QUERY_PARAM = \"X-Amz-Security-Token\";\nexport const REGION_SET_PARAM = \"X-Amz-Region-Set\";\nexport const AUTH_HEADER = \"authorization\";\nexport const AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();\nexport const DATE_HEADER = \"date\";\nexport const GENERATED_HEADERS = [AUTH_HEADER, AMZ_DATE_HEADER, DATE_HEADER];\nexport const SIGNATURE_HEADER = SIGNATURE_QUERY_PARAM.toLowerCase();\nexport const SHA256_HEADER = \"x-amz-content-sha256\";\nexport const TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();\nexport const HOST_HEADER = \"host\";\nexport const ALWAYS_UNSIGNABLE_HEADERS = {\n    authorization: true,\n    \"cache-control\": true,\n    connection: true,\n    expect: true,\n    from: true,\n    \"keep-alive\": true,\n    \"max-forwards\": true,\n    pragma: true,\n    referer: true,\n    te: true,\n    trailer: true,\n    \"transfer-encoding\": true,\n    upgrade: true,\n    \"user-agent\": true,\n    \"x-amzn-trace-id\": true,\n};\nexport const PROXY_HEADER_PATTERN = /^proxy-/;\nexport const SEC_HEADER_PATTERN = /^sec-/;\nexport const UNSIGNABLE_PATTERNS = [/^proxy-/i, /^sec-/i];\nexport const ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256\";\nexport const ALGORITHM_IDENTIFIER_V4A = \"AWS4-ECDSA-P256-SHA256\";\nexport const EVENT_ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256-PAYLOAD\";\nexport const UNSIGNED_PAYLOAD = \"UNSIGNED-PAYLOAD\";\nexport const MAX_CACHE_SIZE = 50;\nexport const KEY_TYPE_IDENTIFIER = \"aws4_request\";\nexport const MAX_PRESIGNED_TTL = 60 * 60 * 24 * 7;\n","import { toHex } from \"@aws-sdk/util-hex-encoding\";\nimport { toUint8Array } from \"@aws-sdk/util-utf8\";\nimport { KEY_TYPE_IDENTIFIER, MAX_CACHE_SIZE } from \"./constants\";\nconst signingKeyCache = {};\nconst cacheQueue = [];\nexport const createScope = (shortDate, region, service) => `${shortDate}/${region}/${service}/${KEY_TYPE_IDENTIFIER}`;\nexport const getSigningKey = async (sha256Constructor, credentials, shortDate, region, service) => {\n    const credsHash = await hmac(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId);\n    const cacheKey = `${shortDate}:${region}:${service}:${toHex(credsHash)}:${credentials.sessionToken}`;\n    if (cacheKey in signingKeyCache) {\n        return signingKeyCache[cacheKey];\n    }\n    cacheQueue.push(cacheKey);\n    while (cacheQueue.length > MAX_CACHE_SIZE) {\n        delete signingKeyCache[cacheQueue.shift()];\n    }\n    let key = `AWS4${credentials.secretAccessKey}`;\n    for (const signable of [shortDate, region, service, KEY_TYPE_IDENTIFIER]) {\n        key = await hmac(sha256Constructor, key, signable);\n    }\n    return (signingKeyCache[cacheKey] = key);\n};\nexport const clearCredentialCache = () => {\n    cacheQueue.length = 0;\n    Object.keys(signingKeyCache).forEach((cacheKey) => {\n        delete signingKeyCache[cacheKey];\n    });\n};\nconst hmac = (ctor, secret, data) => {\n    const hash = new ctor(secret);\n    hash.update(toUint8Array(data));\n    return hash.digest();\n};\n","import { ALWAYS_UNSIGNABLE_HEADERS, PROXY_HEADER_PATTERN, SEC_HEADER_PATTERN } from \"./constants\";\nexport const getCanonicalHeaders = ({ headers }, unsignableHeaders, signableHeaders) => {\n    const canonical = {};\n    for (const headerName of Object.keys(headers).sort()) {\n        if (headers[headerName] == undefined) {\n            continue;\n        }\n        const canonicalHeaderName = headerName.toLowerCase();\n        if (canonicalHeaderName in ALWAYS_UNSIGNABLE_HEADERS ||\n            unsignableHeaders?.has(canonicalHeaderName) ||\n            PROXY_HEADER_PATTERN.test(canonicalHeaderName) ||\n            SEC_HEADER_PATTERN.test(canonicalHeaderName)) {\n            if (!signableHeaders || (signableHeaders && !signableHeaders.has(canonicalHeaderName))) {\n                continue;\n            }\n        }\n        canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\n    }\n    return canonical;\n};\n","export const escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n","import { escapeUri } from \"@aws-sdk/util-uri-escape\";\nimport { SIGNATURE_HEADER } from \"./constants\";\nexport const getCanonicalQuery = ({ query = {} }) => {\n    const keys = [];\n    const serialized = {};\n    for (const key of Object.keys(query).sort()) {\n        if (key.toLowerCase() === SIGNATURE_HEADER) {\n            continue;\n        }\n        keys.push(key);\n        const value = query[key];\n        if (typeof value === \"string\") {\n            serialized[key] = `${escapeUri(key)}=${escapeUri(value)}`;\n        }\n        else if (Array.isArray(value)) {\n            serialized[key] = value\n                .slice(0)\n                .sort()\n                .reduce((encoded, value) => encoded.concat([`${escapeUri(key)}=${escapeUri(value)}`]), [])\n                .join(\"&\");\n        }\n    }\n    return keys\n        .map((key) => serialized[key])\n        .filter((serialized) => serialized)\n        .join(\"&\");\n};\n","export const isArrayBuffer = (arg) => (typeof ArrayBuffer === \"function\" && arg instanceof ArrayBuffer) ||\n    Object.prototype.toString.call(arg) === \"[object ArrayBuffer]\";\n","import { isArrayBuffer } from \"@aws-sdk/is-array-buffer\";\nimport { toHex } from \"@aws-sdk/util-hex-encoding\";\nimport { toUint8Array } from \"@aws-sdk/util-utf8\";\nimport { SHA256_HEADER, UNSIGNED_PAYLOAD } from \"./constants\";\nexport const getPayloadHash = async ({ headers, body }, hashConstructor) => {\n    for (const headerName of Object.keys(headers)) {\n        if (headerName.toLowerCase() === SHA256_HEADER) {\n            return headers[headerName];\n        }\n    }\n    if (body == undefined) {\n        return \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n    }\n    else if (typeof body === \"string\" || ArrayBuffer.isView(body) || isArrayBuffer(body)) {\n        const hashCtor = new hashConstructor();\n        hashCtor.update(toUint8Array(body));\n        return toHex(await hashCtor.digest());\n    }\n    return UNSIGNED_PAYLOAD;\n};\n","export const hasHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return true;\n        }\n    }\n    return false;\n};\nexport const getHeaderValue = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return headers[headerName];\n        }\n    }\n    return undefined;\n};\nexport const deleteHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            delete headers[headerName];\n        }\n    }\n};\n","export const cloneRequest = ({ headers, query, ...rest }) => ({\n    ...rest,\n    headers: { ...headers },\n    query: query ? cloneQuery(query) : undefined,\n});\nexport const cloneQuery = (query) => Object.keys(query).reduce((carry, paramName) => {\n    const param = query[paramName];\n    return {\n        ...carry,\n        [paramName]: Array.isArray(param) ? [...param] : param,\n    };\n}, {});\n","import { cloneRequest } from \"./cloneRequest\";\nexport const moveHeadersToQuery = (request, options = {}) => {\n    const { headers, query = {} } = typeof request.clone === \"function\" ? request.clone() : cloneRequest(request);\n    for (const name of Object.keys(headers)) {\n        const lname = name.toLowerCase();\n        if (lname.slice(0, 6) === \"x-amz-\" && !options.unhoistableHeaders?.has(lname)) {\n            query[name] = headers[name];\n            delete headers[name];\n        }\n    }\n    return {\n        ...request,\n        headers,\n        query,\n    };\n};\n","import { cloneRequest } from \"./cloneRequest\";\nimport { GENERATED_HEADERS } from \"./constants\";\nexport const prepareRequest = (request) => {\n    request = typeof request.clone === \"function\" ? request.clone() : cloneRequest(request);\n    for (const headerName of Object.keys(request.headers)) {\n        if (GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\n            delete request.headers[headerName];\n        }\n    }\n    return request;\n};\n","export const iso8601 = (time) => toDate(time)\n    .toISOString()\n    .replace(/\\.\\d{3}Z$/, \"Z\");\nexport const toDate = (time) => {\n    if (typeof time === \"number\") {\n        return new Date(time * 1000);\n    }\n    if (typeof time === \"string\") {\n        if (Number(time)) {\n            return new Date(Number(time) * 1000);\n        }\n        return new Date(time);\n    }\n    return time;\n};\n","import { toHex } from \"@aws-sdk/util-hex-encoding\";\nimport { normalizeProvider } from \"@aws-sdk/util-middleware\";\nimport { toUint8Array } from \"@aws-sdk/util-utf8\";\nimport { ALGORITHM_IDENTIFIER, ALGORITHM_QUERY_PARAM, AMZ_DATE_HEADER, AMZ_DATE_QUERY_PARAM, AUTH_HEADER, CREDENTIAL_QUERY_PARAM, EVENT_ALGORITHM_IDENTIFIER, EXPIRES_QUERY_PARAM, MAX_PRESIGNED_TTL, SHA256_HEADER, SIGNATURE_QUERY_PARAM, SIGNED_HEADERS_QUERY_PARAM, TOKEN_HEADER, TOKEN_QUERY_PARAM, } from \"./constants\";\nimport { createScope, getSigningKey } from \"./credentialDerivation\";\nimport { getCanonicalHeaders } from \"./getCanonicalHeaders\";\nimport { getCanonicalQuery } from \"./getCanonicalQuery\";\nimport { getPayloadHash } from \"./getPayloadHash\";\nimport { hasHeader } from \"./headerUtil\";\nimport { moveHeadersToQuery } from \"./moveHeadersToQuery\";\nimport { prepareRequest } from \"./prepareRequest\";\nimport { iso8601 } from \"./utilDate\";\nexport class SignatureV4 {\n    constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true, }) {\n        this.service = service;\n        this.sha256 = sha256;\n        this.uriEscapePath = uriEscapePath;\n        this.applyChecksum = typeof applyChecksum === \"boolean\" ? applyChecksum : true;\n        this.regionProvider = normalizeProvider(region);\n        this.credentialProvider = normalizeProvider(credentials);\n    }\n    async presign(originalRequest, options = {}) {\n        const { signingDate = new Date(), expiresIn = 3600, unsignableHeaders, unhoistableHeaders, signableHeaders, signingRegion, signingService, } = options;\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const { longDate, shortDate } = formatDate(signingDate);\n        if (expiresIn > MAX_PRESIGNED_TTL) {\n            return Promise.reject(\"Signature version 4 presigned URLs\" + \" must have an expiration date less than one week in\" + \" the future\");\n        }\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        const request = moveHeadersToQuery(prepareRequest(originalRequest), { unhoistableHeaders });\n        if (credentials.sessionToken) {\n            request.query[TOKEN_QUERY_PARAM] = credentials.sessionToken;\n        }\n        request.query[ALGORITHM_QUERY_PARAM] = ALGORITHM_IDENTIFIER;\n        request.query[CREDENTIAL_QUERY_PARAM] = `${credentials.accessKeyId}/${scope}`;\n        request.query[AMZ_DATE_QUERY_PARAM] = longDate;\n        request.query[EXPIRES_QUERY_PARAM] = expiresIn.toString(10);\n        const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        request.query[SIGNED_HEADERS_QUERY_PARAM] = getCanonicalHeaderList(canonicalHeaders);\n        request.query[SIGNATURE_QUERY_PARAM] = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, await getPayloadHash(originalRequest, this.sha256)));\n        return request;\n    }\n    async sign(toSign, options) {\n        if (typeof toSign === \"string\") {\n            return this.signString(toSign, options);\n        }\n        else if (toSign.headers && toSign.payload) {\n            return this.signEvent(toSign, options);\n        }\n        else {\n            return this.signRequest(toSign, options);\n        }\n    }\n    async signEvent({ headers, payload }, { signingDate = new Date(), priorSignature, signingRegion, signingService }) {\n        const region = signingRegion ?? (await this.regionProvider());\n        const { shortDate, longDate } = formatDate(signingDate);\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        const hashedPayload = await getPayloadHash({ headers: {}, body: payload }, this.sha256);\n        const hash = new this.sha256();\n        hash.update(headers);\n        const hashedHeaders = toHex(await hash.digest());\n        const stringToSign = [\n            EVENT_ALGORITHM_IDENTIFIER,\n            longDate,\n            scope,\n            priorSignature,\n            hashedHeaders,\n            hashedPayload,\n        ].join(\"\\n\");\n        return this.signString(stringToSign, { signingDate, signingRegion: region, signingService });\n    }\n    async signString(stringToSign, { signingDate = new Date(), signingRegion, signingService } = {}) {\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const { shortDate } = formatDate(signingDate);\n        const hash = new this.sha256(await this.getSigningKey(credentials, region, shortDate, signingService));\n        hash.update(toUint8Array(stringToSign));\n        return toHex(await hash.digest());\n    }\n    async signRequest(requestToSign, { signingDate = new Date(), signableHeaders, unsignableHeaders, signingRegion, signingService, } = {}) {\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const request = prepareRequest(requestToSign);\n        const { longDate, shortDate } = formatDate(signingDate);\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        request.headers[AMZ_DATE_HEADER] = longDate;\n        if (credentials.sessionToken) {\n            request.headers[TOKEN_HEADER] = credentials.sessionToken;\n        }\n        const payloadHash = await getPayloadHash(request, this.sha256);\n        if (!hasHeader(SHA256_HEADER, request.headers) && this.applyChecksum) {\n            request.headers[SHA256_HEADER] = payloadHash;\n        }\n        const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        const signature = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, payloadHash));\n        request.headers[AUTH_HEADER] =\n            `${ALGORITHM_IDENTIFIER} ` +\n                `Credential=${credentials.accessKeyId}/${scope}, ` +\n                `SignedHeaders=${getCanonicalHeaderList(canonicalHeaders)}, ` +\n                `Signature=${signature}`;\n        return request;\n    }\n    createCanonicalRequest(request, canonicalHeaders, payloadHash) {\n        const sortedHeaders = Object.keys(canonicalHeaders).sort();\n        return `${request.method}\n${this.getCanonicalPath(request)}\n${getCanonicalQuery(request)}\n${sortedHeaders.map((name) => `${name}:${canonicalHeaders[name]}`).join(\"\\n\")}\n\n${sortedHeaders.join(\";\")}\n${payloadHash}`;\n    }\n    async createStringToSign(longDate, credentialScope, canonicalRequest) {\n        const hash = new this.sha256();\n        hash.update(toUint8Array(canonicalRequest));\n        const hashedRequest = await hash.digest();\n        return `${ALGORITHM_IDENTIFIER}\n${longDate}\n${credentialScope}\n${toHex(hashedRequest)}`;\n    }\n    getCanonicalPath({ path }) {\n        if (this.uriEscapePath) {\n            const normalizedPathSegments = [];\n            for (const pathSegment of path.split(\"/\")) {\n                if (pathSegment?.length === 0)\n                    continue;\n                if (pathSegment === \".\")\n                    continue;\n                if (pathSegment === \"..\") {\n                    normalizedPathSegments.pop();\n                }\n                else {\n                    normalizedPathSegments.push(pathSegment);\n                }\n            }\n            const normalizedPath = `${path?.startsWith(\"/\") ? \"/\" : \"\"}${normalizedPathSegments.join(\"/\")}${normalizedPathSegments.length > 0 && path?.endsWith(\"/\") ? \"/\" : \"\"}`;\n            const doubleEncoded = encodeURIComponent(normalizedPath);\n            return doubleEncoded.replace(/%2F/g, \"/\");\n        }\n        return path;\n    }\n    async getSignature(longDate, credentialScope, keyPromise, canonicalRequest) {\n        const stringToSign = await this.createStringToSign(longDate, credentialScope, canonicalRequest);\n        const hash = new this.sha256(await keyPromise);\n        hash.update(toUint8Array(stringToSign));\n        return toHex(await hash.digest());\n    }\n    getSigningKey(credentials, region, shortDate, service) {\n        return getSigningKey(this.sha256, credentials, shortDate, region, service || this.service);\n    }\n    validateResolvedCredentials(credentials) {\n        if (typeof credentials !== \"object\" ||\n            typeof credentials.accessKeyId !== \"string\" ||\n            typeof credentials.secretAccessKey !== \"string\") {\n            throw new Error(\"Resolved credential object is not valid\");\n        }\n    }\n}\nconst formatDate = (now) => {\n    const longDate = iso8601(now).replace(/[\\-:]/g, \"\");\n    return {\n        longDate,\n        shortDate: longDate.slice(0, 8),\n    };\n};\nconst getCanonicalHeaderList = (headers) => Object.keys(headers).sort().join(\";\");\n","import { memoize } from \"@aws-sdk/property-provider\";\nimport { SignatureV4 } from \"@aws-sdk/signature-v4\";\nimport { normalizeProvider } from \"@aws-sdk/util-middleware\";\nconst CREDENTIAL_EXPIRE_WINDOW = 300000;\nexport const resolveAwsAuthConfig = (input) => {\n    const normalizedCreds = input.credentials\n        ? normalizeCredentialProvider(input.credentials)\n        : input.credentialDefaultProvider(input);\n    const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;\n    let signer;\n    if (input.signer) {\n        signer = normalizeProvider(input.signer);\n    }\n    else if (input.regionInfoProvider) {\n        signer = () => normalizeProvider(input.region)()\n            .then(async (region) => [\n            (await input.regionInfoProvider(region, {\n                useFipsEndpoint: await input.useFipsEndpoint(),\n                useDualstackEndpoint: await input.useDualstackEndpoint(),\n            })) || {},\n            region,\n        ])\n            .then(([regionInfo, region]) => {\n            const { signingRegion, signingService } = regionInfo;\n            input.signingRegion = input.signingRegion || signingRegion || region;\n            input.signingName = input.signingName || signingService || input.serviceId;\n            const params = {\n                ...input,\n                credentials: normalizedCreds,\n                region: input.signingRegion,\n                service: input.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = input.signerConstructor || SignatureV4;\n            return new SignerCtor(params);\n        });\n    }\n    else {\n        signer = async (authScheme) => {\n            authScheme = Object.assign({}, {\n                name: \"sigv4\",\n                signingName: input.signingName || input.defaultSigningName,\n                signingRegion: await normalizeProvider(input.region)(),\n                properties: {},\n            }, authScheme);\n            const signingRegion = authScheme.signingRegion;\n            const signingService = authScheme.signingName;\n            input.signingRegion = input.signingRegion || signingRegion;\n            input.signingName = input.signingName || signingService || input.serviceId;\n            const params = {\n                ...input,\n                credentials: normalizedCreds,\n                region: input.signingRegion,\n                service: input.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = input.signerConstructor || SignatureV4;\n            return new SignerCtor(params);\n        };\n    }\n    return {\n        ...input,\n        systemClockOffset,\n        signingEscapePath,\n        credentials: normalizedCreds,\n        signer,\n    };\n};\nexport const resolveSigV4AuthConfig = (input) => {\n    const normalizedCreds = input.credentials\n        ? normalizeCredentialProvider(input.credentials)\n        : input.credentialDefaultProvider(input);\n    const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;\n    let signer;\n    if (input.signer) {\n        signer = normalizeProvider(input.signer);\n    }\n    else {\n        signer = normalizeProvider(new SignatureV4({\n            credentials: normalizedCreds,\n            region: input.region,\n            service: input.signingName,\n            sha256,\n            uriEscapePath: signingEscapePath,\n        }));\n    }\n    return {\n        ...input,\n        systemClockOffset,\n        signingEscapePath,\n        credentials: normalizedCreds,\n        signer,\n    };\n};\nconst normalizeCredentialProvider = (credentials) => {\n    if (typeof credentials === \"function\") {\n        return memoize(credentials, (credentials) => credentials.expiration !== undefined &&\n            credentials.expiration.getTime() - Date.now() < CREDENTIAL_EXPIRE_WINDOW, (credentials) => credentials.expiration !== undefined);\n    }\n    return normalizeProvider(credentials);\n};\n","export const getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);\n","import { getSkewCorrectedDate } from \"./getSkewCorrectedDate\";\nexport const isClockSkewed = (clockTime, systemClockOffset) => Math.abs(getSkewCorrectedDate(systemClockOffset).getTime() - clockTime) >= 300000;\n","import { isClockSkewed } from \"./isClockSkewed\";\nexport const getUpdatedSystemClockOffset = (clockTime, currentSystemClockOffset) => {\n    const clockTimeInMs = Date.parse(clockTime);\n    if (isClockSkewed(clockTimeInMs, currentSystemClockOffset)) {\n        return clockTimeInMs - Date.now();\n    }\n    return currentSystemClockOffset;\n};\n","import { HttpRequest, HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { getSkewCorrectedDate } from \"./utils/getSkewCorrectedDate\";\nimport { getUpdatedSystemClockOffset } from \"./utils/getUpdatedSystemClockOffset\";\nexport const awsAuthMiddleware = (options) => (next, context) => async function (args) {\n    if (!HttpRequest.isInstance(args.request))\n        return next(args);\n    const authScheme = context.endpointV2?.properties?.authSchemes?.[0];\n    const multiRegionOverride = authScheme?.name === \"sigv4a\" ? authScheme?.signingRegionSet?.join(\",\") : undefined;\n    const signer = await options.signer(authScheme);\n    const output = await next({\n        ...args,\n        request: await signer.sign(args.request, {\n            signingDate: getSkewCorrectedDate(options.systemClockOffset),\n            signingRegion: multiRegionOverride || context[\"signing_region\"],\n            signingService: context[\"signing_service\"],\n        }),\n    }).catch((error) => {\n        const serverTime = error.ServerTime ?? getDateHeader(error.$response);\n        if (serverTime) {\n            options.systemClockOffset = getUpdatedSystemClockOffset(serverTime, options.systemClockOffset);\n        }\n        throw error;\n    });\n    const dateHeader = getDateHeader(output.response);\n    if (dateHeader) {\n        options.systemClockOffset = getUpdatedSystemClockOffset(dateHeader, options.systemClockOffset);\n    }\n    return output;\n};\nconst getDateHeader = (response) => HttpResponse.isInstance(response) ? response.headers?.date ?? response.headers?.Date : undefined;\nexport const awsAuthMiddlewareOptions = {\n    name: \"awsAuthMiddleware\",\n    tags: [\"SIGNATURE\", \"AWSAUTH\"],\n    relation: \"after\",\n    toMiddleware: \"retryMiddleware\",\n    override: true,\n};\nexport const getAwsAuthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(awsAuthMiddleware(options), awsAuthMiddlewareOptions);\n    },\n});\nexport const getSigV4AuthPlugin = getAwsAuthPlugin;\n","export function resolveUserAgentConfig(input) {\n    return {\n        ...input,\n        customUserAgent: typeof input.customUserAgent === \"string\" ? [[input.customUserAgent]] : input.customUserAgent,\n    };\n}\n","export const USER_AGENT = \"user-agent\";\nexport const X_AMZ_USER_AGENT = \"x-amz-user-agent\";\nexport const SPACE = \" \";\nexport const UA_ESCAPE_REGEX = /[^\\!\\#\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w]/g;\n","import { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { SPACE, UA_ESCAPE_REGEX, USER_AGENT, X_AMZ_USER_AGENT } from \"./constants\";\nexport const userAgentMiddleware = (options) => (next, context) => async (args) => {\n    const { request } = args;\n    if (!HttpRequest.isInstance(request))\n        return next(args);\n    const { headers } = request;\n    const userAgent = context?.userAgent?.map(escapeUserAgent) || [];\n    const defaultUserAgent = (await options.defaultUserAgentProvider()).map(escapeUserAgent);\n    const customUserAgent = options?.customUserAgent?.map(escapeUserAgent) || [];\n    const sdkUserAgentValue = [...defaultUserAgent, ...userAgent, ...customUserAgent].join(SPACE);\n    const normalUAValue = [\n        ...defaultUserAgent.filter((section) => section.startsWith(\"aws-sdk-\")),\n        ...customUserAgent,\n    ].join(SPACE);\n    if (options.runtime !== \"browser\") {\n        if (normalUAValue) {\n            headers[X_AMZ_USER_AGENT] = headers[X_AMZ_USER_AGENT]\n                ? `${headers[USER_AGENT]} ${normalUAValue}`\n                : normalUAValue;\n        }\n        headers[USER_AGENT] = sdkUserAgentValue;\n    }\n    else {\n        headers[X_AMZ_USER_AGENT] = sdkUserAgentValue;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nconst escapeUserAgent = ([name, version]) => {\n    const prefixSeparatorIndex = name.indexOf(\"/\");\n    const prefix = name.substring(0, prefixSeparatorIndex);\n    let uaName = name.substring(prefixSeparatorIndex + 1);\n    if (prefix === \"api\") {\n        uaName = uaName.toLowerCase();\n    }\n    return [prefix, uaName, version]\n        .filter((item) => item && item.length > 0)\n        .map((item) => item?.replace(UA_ESCAPE_REGEX, \"_\"))\n        .join(\"/\");\n};\nexport const getUserAgentMiddlewareOptions = {\n    name: \"getUserAgentMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n    override: true,\n};\nexport const getUserAgentPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);\n    },\n});\n","export class NoOpLogger {\n    trace() { }\n    debug() { }\n    info() { }\n    warn() { }\n    error() { }\n}\n","export const constructStack = () => {\n    let absoluteEntries = [];\n    let relativeEntries = [];\n    const entriesNameSet = new Set();\n    const sort = (entries) => entries.sort((a, b) => stepWeights[b.step] - stepWeights[a.step] ||\n        priorityWeights[b.priority || \"normal\"] - priorityWeights[a.priority || \"normal\"]);\n    const removeByName = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.name && entry.name === toRemove) {\n                isRemoved = true;\n                entriesNameSet.delete(toRemove);\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const removeByReference = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.middleware === toRemove) {\n                isRemoved = true;\n                if (entry.name)\n                    entriesNameSet.delete(entry.name);\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const cloneTo = (toStack) => {\n        absoluteEntries.forEach((entry) => {\n            toStack.add(entry.middleware, { ...entry });\n        });\n        relativeEntries.forEach((entry) => {\n            toStack.addRelativeTo(entry.middleware, { ...entry });\n        });\n        return toStack;\n    };\n    const expandRelativeMiddlewareList = (from) => {\n        const expandedMiddlewareList = [];\n        from.before.forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        expandedMiddlewareList.push(from);\n        from.after.reverse().forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        return expandedMiddlewareList;\n    };\n    const getMiddlewareList = (debug = false) => {\n        const normalizedAbsoluteEntries = [];\n        const normalizedRelativeEntries = [];\n        const normalizedEntriesNameMap = {};\n        absoluteEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            if (normalizedEntry.name)\n                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n            normalizedAbsoluteEntries.push(normalizedEntry);\n        });\n        relativeEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            if (normalizedEntry.name)\n                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n            normalizedRelativeEntries.push(normalizedEntry);\n        });\n        normalizedRelativeEntries.forEach((entry) => {\n            if (entry.toMiddleware) {\n                const toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];\n                if (toMiddleware === undefined) {\n                    if (debug) {\n                        return;\n                    }\n                    throw new Error(`${entry.toMiddleware} is not found when adding ${entry.name || \"anonymous\"} middleware ${entry.relation} ${entry.toMiddleware}`);\n                }\n                if (entry.relation === \"after\") {\n                    toMiddleware.after.push(entry);\n                }\n                if (entry.relation === \"before\") {\n                    toMiddleware.before.push(entry);\n                }\n            }\n        });\n        const mainChain = sort(normalizedAbsoluteEntries)\n            .map(expandRelativeMiddlewareList)\n            .reduce((wholeList, expendedMiddlewareList) => {\n            wholeList.push(...expendedMiddlewareList);\n            return wholeList;\n        }, []);\n        return mainChain;\n    };\n    const stack = {\n        add: (middleware, options = {}) => {\n            const { name, override } = options;\n            const entry = {\n                step: \"initialize\",\n                priority: \"normal\",\n                middleware,\n                ...options,\n            };\n            if (name) {\n                if (entriesNameSet.has(name)) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${name}'`);\n                    const toOverrideIndex = absoluteEntries.findIndex((entry) => entry.name === name);\n                    const toOverride = absoluteEntries[toOverrideIndex];\n                    if (toOverride.step !== entry.step || toOverride.priority !== entry.priority) {\n                        throw new Error(`\"${name}\" middleware with ${toOverride.priority} priority in ${toOverride.step} step cannot be ` +\n                            `overridden by same-name middleware with ${entry.priority} priority in ${entry.step} step.`);\n                    }\n                    absoluteEntries.splice(toOverrideIndex, 1);\n                }\n                entriesNameSet.add(name);\n            }\n            absoluteEntries.push(entry);\n        },\n        addRelativeTo: (middleware, options) => {\n            const { name, override } = options;\n            const entry = {\n                middleware,\n                ...options,\n            };\n            if (name) {\n                if (entriesNameSet.has(name)) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${name}'`);\n                    const toOverrideIndex = relativeEntries.findIndex((entry) => entry.name === name);\n                    const toOverride = relativeEntries[toOverrideIndex];\n                    if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {\n                        throw new Error(`\"${name}\" middleware ${toOverride.relation} \"${toOverride.toMiddleware}\" middleware cannot be overridden ` +\n                            `by same-name middleware ${entry.relation} \"${entry.toMiddleware}\" middleware.`);\n                    }\n                    relativeEntries.splice(toOverrideIndex, 1);\n                }\n                entriesNameSet.add(name);\n            }\n            relativeEntries.push(entry);\n        },\n        clone: () => cloneTo(constructStack()),\n        use: (plugin) => {\n            plugin.applyToStack(stack);\n        },\n        remove: (toRemove) => {\n            if (typeof toRemove === \"string\")\n                return removeByName(toRemove);\n            else\n                return removeByReference(toRemove);\n        },\n        removeByTag: (toRemove) => {\n            let isRemoved = false;\n            const filterCb = (entry) => {\n                const { tags, name } = entry;\n                if (tags && tags.includes(toRemove)) {\n                    if (name)\n                        entriesNameSet.delete(name);\n                    isRemoved = true;\n                    return false;\n                }\n                return true;\n            };\n            absoluteEntries = absoluteEntries.filter(filterCb);\n            relativeEntries = relativeEntries.filter(filterCb);\n            return isRemoved;\n        },\n        concat: (from) => {\n            const cloned = cloneTo(constructStack());\n            cloned.use(from);\n            return cloned;\n        },\n        applyToStack: cloneTo,\n        identify: () => {\n            return getMiddlewareList(true).map((mw) => {\n                return mw.name + \": \" + (mw.tags || []).join(\",\");\n            });\n        },\n        resolve: (handler, context) => {\n            for (const middleware of getMiddlewareList()\n                .map((entry) => entry.middleware)\n                .reverse()) {\n                handler = middleware(handler, context);\n            }\n            return handler;\n        },\n    };\n    return stack;\n};\nconst stepWeights = {\n    initialize: 5,\n    serialize: 4,\n    build: 3,\n    finalizeRequest: 2,\n    deserialize: 1,\n};\nconst priorityWeights = {\n    high: 3,\n    normal: 2,\n    low: 1,\n};\n","import { constructStack } from \"@aws-sdk/middleware-stack\";\nexport class Client {\n    constructor(config) {\n        this.middlewareStack = constructStack();\n        this.config = config;\n    }\n    send(command, optionsOrCb, cb) {\n        const options = typeof optionsOrCb !== \"function\" ? optionsOrCb : undefined;\n        const callback = typeof optionsOrCb === \"function\" ? optionsOrCb : cb;\n        const handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\n        if (callback) {\n            handler(command)\n                .then((result) => callback(null, result.output), (err) => callback(err))\n                .catch(() => { });\n        }\n        else {\n            return handler(command).then((result) => result.output);\n        }\n    }\n    destroy() {\n        if (this.config.requestHandler.destroy)\n            this.config.requestHandler.destroy();\n    }\n}\n","import { constructStack } from \"@aws-sdk/middleware-stack\";\nexport class Command {\n    constructor() {\n        this.middlewareStack = constructStack();\n    }\n}\n","export const SENSITIVE_STRING = \"***SensitiveInformation***\";\n","export const parseBoolean = (value) => {\n    switch (value) {\n        case \"true\":\n            return true;\n        case \"false\":\n            return false;\n        default:\n            throw new Error(`Unable to parse boolean value \"${value}\"`);\n    }\n};\nexport const expectBoolean = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"number\") {\n        if (value === 0 || value === 1) {\n            logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`));\n        }\n        if (value === 0) {\n            return false;\n        }\n        if (value === 1) {\n            return true;\n        }\n    }\n    if (typeof value === \"string\") {\n        const lower = value.toLowerCase();\n        if (lower === \"false\" || lower === \"true\") {\n            logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`));\n        }\n        if (lower === \"false\") {\n            return false;\n        }\n        if (lower === \"true\") {\n            return true;\n        }\n    }\n    if (typeof value === \"boolean\") {\n        return value;\n    }\n    throw new TypeError(`Expected boolean, got ${typeof value}: ${value}`);\n};\nexport const expectNumber = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        const parsed = parseFloat(value);\n        if (!Number.isNaN(parsed)) {\n            if (String(parsed) !== String(value)) {\n                logger.warn(stackTraceWarning(`Expected number but observed string: ${value}`));\n            }\n            return parsed;\n        }\n    }\n    if (typeof value === \"number\") {\n        return value;\n    }\n    throw new TypeError(`Expected number, got ${typeof value}: ${value}`);\n};\nconst MAX_FLOAT = Math.ceil(2 ** 127 * (2 - 2 ** -23));\nexport const expectFloat32 = (value) => {\n    const expected = expectNumber(value);\n    if (expected !== undefined && !Number.isNaN(expected) && expected !== Infinity && expected !== -Infinity) {\n        if (Math.abs(expected) > MAX_FLOAT) {\n            throw new TypeError(`Expected 32-bit float, got ${value}`);\n        }\n    }\n    return expected;\n};\nexport const expectLong = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (Number.isInteger(value) && !Number.isNaN(value)) {\n        return value;\n    }\n    throw new TypeError(`Expected integer, got ${typeof value}: ${value}`);\n};\nexport const expectInt = expectLong;\nexport const expectInt32 = (value) => expectSizedInt(value, 32);\nexport const expectShort = (value) => expectSizedInt(value, 16);\nexport const expectByte = (value) => expectSizedInt(value, 8);\nconst expectSizedInt = (value, size) => {\n    const expected = expectLong(value);\n    if (expected !== undefined && castInt(expected, size) !== expected) {\n        throw new TypeError(`Expected ${size}-bit integer, got ${value}`);\n    }\n    return expected;\n};\nconst castInt = (value, size) => {\n    switch (size) {\n        case 32:\n            return Int32Array.of(value)[0];\n        case 16:\n            return Int16Array.of(value)[0];\n        case 8:\n            return Int8Array.of(value)[0];\n    }\n};\nexport const expectNonNull = (value, location) => {\n    if (value === null || value === undefined) {\n        if (location) {\n            throw new TypeError(`Expected a non-null value for ${location}`);\n        }\n        throw new TypeError(\"Expected a non-null value\");\n    }\n    return value;\n};\nexport const expectObject = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"object\" && !Array.isArray(value)) {\n        return value;\n    }\n    const receivedType = Array.isArray(value) ? \"array\" : typeof value;\n    throw new TypeError(`Expected object, got ${receivedType}: ${value}`);\n};\nexport const expectString = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        return value;\n    }\n    if ([\"boolean\", \"number\", \"bigint\"].includes(typeof value)) {\n        logger.warn(stackTraceWarning(`Expected string, got ${typeof value}: ${value}`));\n        return String(value);\n    }\n    throw new TypeError(`Expected string, got ${typeof value}: ${value}`);\n};\nexport const expectUnion = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    const asObject = expectObject(value);\n    const setKeys = Object.entries(asObject)\n        .filter(([, v]) => v != null)\n        .map(([k]) => k);\n    if (setKeys.length === 0) {\n        throw new TypeError(`Unions must have exactly one non-null member. None were found.`);\n    }\n    if (setKeys.length > 1) {\n        throw new TypeError(`Unions must have exactly one non-null member. Keys ${setKeys} were not null.`);\n    }\n    return asObject;\n};\nexport const strictParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return expectNumber(parseNumber(value));\n    }\n    return expectNumber(value);\n};\nexport const strictParseFloat = strictParseDouble;\nexport const strictParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return expectFloat32(parseNumber(value));\n    }\n    return expectFloat32(value);\n};\nconst NUMBER_REGEX = /(-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)|(-?Infinity)|(NaN)/g;\nconst parseNumber = (value) => {\n    const matches = value.match(NUMBER_REGEX);\n    if (matches === null || matches[0].length !== value.length) {\n        throw new TypeError(`Expected real number, got implicit NaN`);\n    }\n    return parseFloat(value);\n};\nexport const limitedParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return expectNumber(value);\n};\nexport const handleFloat = limitedParseDouble;\nexport const limitedParseFloat = limitedParseDouble;\nexport const limitedParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return expectFloat32(value);\n};\nconst parseFloatString = (value) => {\n    switch (value) {\n        case \"NaN\":\n            return NaN;\n        case \"Infinity\":\n            return Infinity;\n        case \"-Infinity\":\n            return -Infinity;\n        default:\n            throw new Error(`Unable to parse float value: ${value}`);\n    }\n};\nexport const strictParseLong = (value) => {\n    if (typeof value === \"string\") {\n        return expectLong(parseNumber(value));\n    }\n    return expectLong(value);\n};\nexport const strictParseInt = strictParseLong;\nexport const strictParseInt32 = (value) => {\n    if (typeof value === \"string\") {\n        return expectInt32(parseNumber(value));\n    }\n    return expectInt32(value);\n};\nexport const strictParseShort = (value) => {\n    if (typeof value === \"string\") {\n        return expectShort(parseNumber(value));\n    }\n    return expectShort(value);\n};\nexport const strictParseByte = (value) => {\n    if (typeof value === \"string\") {\n        return expectByte(parseNumber(value));\n    }\n    return expectByte(value);\n};\nconst stackTraceWarning = (message) => {\n    return String(new TypeError(message).stack || message)\n        .split(\"\\n\")\n        .slice(0, 5)\n        .filter((s) => !s.includes(\"stackTraceWarning\"))\n        .join(\"\\n\");\n};\nexport const logger = {\n    warn: console.warn,\n};\n","import { strictParseByte, strictParseDouble, strictParseFloat32, strictParseShort } from \"./parse-utils\";\nconst DAYS = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nconst MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nexport function dateToUtcString(date) {\n    const year = date.getUTCFullYear();\n    const month = date.getUTCMonth();\n    const dayOfWeek = date.getUTCDay();\n    const dayOfMonthInt = date.getUTCDate();\n    const hoursInt = date.getUTCHours();\n    const minutesInt = date.getUTCMinutes();\n    const secondsInt = date.getUTCSeconds();\n    const dayOfMonthString = dayOfMonthInt < 10 ? `0${dayOfMonthInt}` : `${dayOfMonthInt}`;\n    const hoursString = hoursInt < 10 ? `0${hoursInt}` : `${hoursInt}`;\n    const minutesString = minutesInt < 10 ? `0${minutesInt}` : `${minutesInt}`;\n    const secondsString = secondsInt < 10 ? `0${secondsInt}` : `${secondsInt}`;\n    return `${DAYS[dayOfWeek]}, ${dayOfMonthString} ${MONTHS[month]} ${year} ${hoursString}:${minutesString}:${secondsString} GMT`;\n}\nconst RFC3339 = new RegExp(/^(\\d{4})-(\\d{2})-(\\d{2})[tT](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))?[zZ]$/);\nexport const parseRfc3339DateTime = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-3339 date-times must be expressed as strings\");\n    }\n    const match = RFC3339.exec(value);\n    if (!match) {\n        throw new TypeError(\"Invalid RFC-3339 date-time value\");\n    }\n    const [_, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n    const year = strictParseShort(stripLeadingZeroes(yearStr));\n    const month = parseDateValue(monthStr, \"month\", 1, 12);\n    const day = parseDateValue(dayStr, \"day\", 1, 31);\n    return buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });\n};\nconst RFC3339_WITH_OFFSET = new RegExp(/^(\\d{4})-(\\d{2})-(\\d{2})[tT](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))?(([-+]\\d{2}\\:\\d{2})|[zZ])$/);\nexport const parseRfc3339DateTimeWithOffset = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-3339 date-times must be expressed as strings\");\n    }\n    const match = RFC3339_WITH_OFFSET.exec(value);\n    if (!match) {\n        throw new TypeError(\"Invalid RFC-3339 date-time value\");\n    }\n    const [_, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds, offsetStr] = match;\n    const year = strictParseShort(stripLeadingZeroes(yearStr));\n    const month = parseDateValue(monthStr, \"month\", 1, 12);\n    const day = parseDateValue(dayStr, \"day\", 1, 31);\n    const date = buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });\n    if (offsetStr.toUpperCase() != \"Z\") {\n        date.setTime(date.getTime() - parseOffsetToMilliseconds(offsetStr));\n    }\n    return date;\n};\nconst IMF_FIXDATE = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\\d{2}) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\\d{4}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\nconst RFC_850_DATE = new RegExp(/^(?:Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\\d{2})-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\\d{2}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\nconst ASC_TIME = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( [1-9]|\\d{2}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? (\\d{4})$/);\nexport const parseRfc7231DateTime = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-7231 date-times must be expressed as strings\");\n    }\n    let match = IMF_FIXDATE.exec(value);\n    if (match) {\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n        return buildDate(strictParseShort(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\n    }\n    match = RFC_850_DATE.exec(value);\n    if (match) {\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n        return adjustRfc850Year(buildDate(parseTwoDigitYear(yearStr), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), {\n            hours,\n            minutes,\n            seconds,\n            fractionalMilliseconds,\n        }));\n    }\n    match = ASC_TIME.exec(value);\n    if (match) {\n        const [_, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds, yearStr] = match;\n        return buildDate(strictParseShort(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr.trimLeft(), \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\n    }\n    throw new TypeError(\"Invalid RFC-7231 date-time value\");\n};\nexport const parseEpochTimestamp = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    let valueAsDouble;\n    if (typeof value === \"number\") {\n        valueAsDouble = value;\n    }\n    else if (typeof value === \"string\") {\n        valueAsDouble = strictParseDouble(value);\n    }\n    else {\n        throw new TypeError(\"Epoch timestamps must be expressed as floating point numbers or their string representation\");\n    }\n    if (Number.isNaN(valueAsDouble) || valueAsDouble === Infinity || valueAsDouble === -Infinity) {\n        throw new TypeError(\"Epoch timestamps must be valid, non-Infinite, non-NaN numerics\");\n    }\n    return new Date(Math.round(valueAsDouble * 1000));\n};\nconst buildDate = (year, month, day, time) => {\n    const adjustedMonth = month - 1;\n    validateDayOfMonth(year, adjustedMonth, day);\n    return new Date(Date.UTC(year, adjustedMonth, day, parseDateValue(time.hours, \"hour\", 0, 23), parseDateValue(time.minutes, \"minute\", 0, 59), parseDateValue(time.seconds, \"seconds\", 0, 60), parseMilliseconds(time.fractionalMilliseconds)));\n};\nconst parseTwoDigitYear = (value) => {\n    const thisYear = new Date().getUTCFullYear();\n    const valueInThisCentury = Math.floor(thisYear / 100) * 100 + strictParseShort(stripLeadingZeroes(value));\n    if (valueInThisCentury < thisYear) {\n        return valueInThisCentury + 100;\n    }\n    return valueInThisCentury;\n};\nconst FIFTY_YEARS_IN_MILLIS = 50 * 365 * 24 * 60 * 60 * 1000;\nconst adjustRfc850Year = (input) => {\n    if (input.getTime() - new Date().getTime() > FIFTY_YEARS_IN_MILLIS) {\n        return new Date(Date.UTC(input.getUTCFullYear() - 100, input.getUTCMonth(), input.getUTCDate(), input.getUTCHours(), input.getUTCMinutes(), input.getUTCSeconds(), input.getUTCMilliseconds()));\n    }\n    return input;\n};\nconst parseMonthByShortName = (value) => {\n    const monthIdx = MONTHS.indexOf(value);\n    if (monthIdx < 0) {\n        throw new TypeError(`Invalid month: ${value}`);\n    }\n    return monthIdx + 1;\n};\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst validateDayOfMonth = (year, month, day) => {\n    let maxDays = DAYS_IN_MONTH[month];\n    if (month === 1 && isLeapYear(year)) {\n        maxDays = 29;\n    }\n    if (day > maxDays) {\n        throw new TypeError(`Invalid day for ${MONTHS[month]} in ${year}: ${day}`);\n    }\n};\nconst isLeapYear = (year) => {\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n};\nconst parseDateValue = (value, type, lower, upper) => {\n    const dateVal = strictParseByte(stripLeadingZeroes(value));\n    if (dateVal < lower || dateVal > upper) {\n        throw new TypeError(`${type} must be between ${lower} and ${upper}, inclusive`);\n    }\n    return dateVal;\n};\nconst parseMilliseconds = (value) => {\n    if (value === null || value === undefined) {\n        return 0;\n    }\n    return strictParseFloat32(\"0.\" + value) * 1000;\n};\nconst parseOffsetToMilliseconds = (value) => {\n    const directionStr = value[0];\n    let direction = 1;\n    if (directionStr == \"+\") {\n        direction = 1;\n    }\n    else if (directionStr == \"-\") {\n        direction = -1;\n    }\n    else {\n        throw new TypeError(`Offset direction, ${directionStr}, must be \"+\" or \"-\"`);\n    }\n    const hour = Number(value.substring(1, 3));\n    const minute = Number(value.substring(4, 6));\n    return direction * (hour * 60 + minute) * 60 * 1000;\n};\nconst stripLeadingZeroes = (value) => {\n    let idx = 0;\n    while (idx < value.length - 1 && value.charAt(idx) === \"0\") {\n        idx++;\n    }\n    if (idx === 0) {\n        return value;\n    }\n    return value.slice(idx);\n};\n","export class ServiceException extends Error {\n    constructor(options) {\n        super(options.message);\n        Object.setPrototypeOf(this, ServiceException.prototype);\n        this.name = options.name;\n        this.$fault = options.$fault;\n        this.$metadata = options.$metadata;\n    }\n}\nexport const decorateServiceException = (exception, additions = {}) => {\n    Object.entries(additions)\n        .filter(([, v]) => v !== undefined)\n        .forEach(([k, v]) => {\n        if (exception[k] == undefined || exception[k] === \"\") {\n            exception[k] = v;\n        }\n    });\n    const message = exception.message || exception.Message || \"UnknownError\";\n    exception.message = message;\n    delete exception.Message;\n    return exception;\n};\n","import { decorateServiceException } from \"./exceptions\";\nexport const throwDefaultError = ({ output, parsedBody, exceptionCtor, errorCode }) => {\n    const $metadata = deserializeMetadata(output);\n    const statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + \"\" : undefined;\n    const response = new exceptionCtor({\n        name: parsedBody.code || parsedBody.Code || errorCode || statusCode || \"UnknownError\",\n        $fault: \"client\",\n        $metadata,\n    });\n    throw decorateServiceException(response, parsedBody);\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\n","export const loadConfigsForDefaultMode = (mode) => {\n    switch (mode) {\n        case \"standard\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"in-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 1100,\n            };\n        case \"cross-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"mobile\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 30000,\n            };\n        default:\n            return {};\n    }\n};\n","export function extendedEncodeURIComponent(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n        return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n    });\n}\n","export const StringWrapper = function () {\n    const Class = Object.getPrototypeOf(this).constructor;\n    const Constructor = Function.bind.apply(String, [null, ...arguments]);\n    const instance = new Constructor();\n    Object.setPrototypeOf(instance, Class.prototype);\n    return instance;\n};\nStringWrapper.prototype = Object.create(String.prototype, {\n    constructor: {\n        value: StringWrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true,\n    },\n});\nObject.setPrototypeOf(StringWrapper, String);\nexport class LazyJsonString extends StringWrapper {\n    deserializeJSON() {\n        return JSON.parse(super.toString());\n    }\n    toJSON() {\n        return super.toString();\n    }\n    static fromObject(object) {\n        if (object instanceof LazyJsonString) {\n            return object;\n        }\n        else if (object instanceof String || typeof object === \"string\") {\n            return new LazyJsonString(object);\n        }\n        return new LazyJsonString(JSON.stringify(object));\n    }\n}\n","export function map(arg0, arg1, arg2) {\n    let target;\n    let filter;\n    let instructions;\n    if (typeof arg1 === \"undefined\" && typeof arg2 === \"undefined\") {\n        target = {};\n        instructions = arg0;\n    }\n    else {\n        target = arg0;\n        if (typeof arg1 === \"function\") {\n            filter = arg1;\n            instructions = arg2;\n            return mapWithFilter(target, filter, instructions);\n        }\n        else {\n            instructions = arg1;\n        }\n    }\n    for (const key of Object.keys(instructions)) {\n        if (!Array.isArray(instructions[key])) {\n            target[key] = instructions[key];\n            continue;\n        }\n        let [filter, value] = instructions[key];\n        if (typeof value === \"function\") {\n            let _value;\n            const defaultFilterPassed = filter === undefined && (_value = value()) != null;\n            const customFilterPassed = (typeof filter === \"function\" && !!filter(void 0)) || (typeof filter !== \"function\" && !!filter);\n            if (defaultFilterPassed) {\n                target[key] = _value;\n            }\n            else if (customFilterPassed) {\n                target[key] = value();\n            }\n        }\n        else {\n            const defaultFilterPassed = filter === undefined && value != null;\n            const customFilterPassed = (typeof filter === \"function\" && !!filter(value)) || (typeof filter !== \"function\" && !!filter);\n            if (defaultFilterPassed || customFilterPassed) {\n                target[key] = value;\n            }\n        }\n    }\n    return target;\n}\nexport const convertMap = (target) => {\n    const output = {};\n    for (const [k, v] of Object.entries(target || {})) {\n        output[k] = [, v];\n    }\n    return output;\n};\nconst mapWithFilter = (target, filter, instructions) => {\n    return map(target, Object.entries(instructions).reduce((_instructions, [key, value]) => {\n        if (Array.isArray(value)) {\n            _instructions[key] = value;\n        }\n        else {\n            if (typeof value === \"function\") {\n                _instructions[key] = [filter, value()];\n            }\n            else {\n                _instructions[key] = [filter, value];\n            }\n        }\n        return _instructions;\n    }, {}));\n};\n","import { extendedEncodeURIComponent } from \"./extended-encode-uri-component\";\nexport const resolvedPath = (resolvedPath, input, memberName, labelValueProvider, uriLabel, isGreedyLabel) => {\n    if (input != null && input[memberName] !== undefined) {\n        const labelValue = labelValueProvider();\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: \" + memberName + \".\");\n        }\n        resolvedPath = resolvedPath.replace(uriLabel, isGreedyLabel\n            ? labelValue\n                .split(\"/\")\n                .map((segment) => extendedEncodeURIComponent(segment))\n                .join(\"/\")\n            : extendedEncodeURIComponent(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: \" + memberName + \".\");\n    }\n    return resolvedPath;\n};\n","export const resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"chime\",\n    };\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isEmptyData = void 0;\nfunction isEmptyData(data) {\n    if (typeof data === \"string\") {\n        return data.length === 0;\n    }\n    return data.byteLength === 0;\n}\nexports.isEmptyData = isEmptyData;\n//# sourceMappingURL=isEmptyData.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EMPTY_DATA_SHA_256 = exports.SHA_256_HMAC_ALGO = exports.SHA_256_HASH = void 0;\nexports.SHA_256_HASH = { name: \"SHA-256\" };\nexports.SHA_256_HMAC_ALGO = {\n    name: \"HMAC\",\n    hash: exports.SHA_256_HASH\n};\nexports.EMPTY_DATA_SHA_256 = new Uint8Array([\n    227,\n    176,\n    196,\n    66,\n    152,\n    252,\n    28,\n    20,\n    154,\n    251,\n    244,\n    200,\n    153,\n    111,\n    185,\n    36,\n    39,\n    174,\n    65,\n    228,\n    100,\n    155,\n    147,\n    76,\n    164,\n    149,\n    153,\n    27,\n    120,\n    82,\n    184,\n    85\n]);\n//# sourceMappingURL=constants.js.map","export const fromUtf8 = (input) => {\n    const bytes = [];\n    for (let i = 0, len = input.length; i < len; i++) {\n        const value = input.charCodeAt(i);\n        if (value < 0x80) {\n            bytes.push(value);\n        }\n        else if (value < 0x800) {\n            bytes.push((value >> 6) | 0b11000000, (value & 0b111111) | 0b10000000);\n        }\n        else if (i + 1 < input.length && (value & 0xfc00) === 0xd800 && (input.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\n            const surrogatePair = 0x10000 + ((value & 0b1111111111) << 10) + (input.charCodeAt(++i) & 0b1111111111);\n            bytes.push((surrogatePair >> 18) | 0b11110000, ((surrogatePair >> 12) & 0b111111) | 0b10000000, ((surrogatePair >> 6) & 0b111111) | 0b10000000, (surrogatePair & 0b111111) | 0b10000000);\n        }\n        else {\n            bytes.push((value >> 12) | 0b11100000, ((value >> 6) & 0b111111) | 0b10000000, (value & 0b111111) | 0b10000000);\n        }\n    }\n    return Uint8Array.from(bytes);\n};\nexport const toUtf8 = (input) => {\n    let decoded = \"\";\n    for (let i = 0, len = input.length; i < len; i++) {\n        const byte = input[i];\n        if (byte < 0x80) {\n            decoded += String.fromCharCode(byte);\n        }\n        else if (0b11000000 <= byte && byte < 0b11100000) {\n            const nextByte = input[++i];\n            decoded += String.fromCharCode(((byte & 0b11111) << 6) | (nextByte & 0b111111));\n        }\n        else if (0b11110000 <= byte && byte < 0b101101101) {\n            const surrogatePair = [byte, input[++i], input[++i], input[++i]];\n            const encoded = \"%\" + surrogatePair.map((byteValue) => byteValue.toString(16)).join(\"%\");\n            decoded += decodeURIComponent(encoded);\n        }\n        else {\n            decoded += String.fromCharCode(((byte & 0b1111) << 12) | ((input[++i] & 0b111111) << 6) | (input[++i] & 0b111111));\n        }\n    }\n    return decoded;\n};\n","export function fromUtf8(input) {\n    return new TextEncoder().encode(input);\n}\nexport function toUtf8(input) {\n    return new TextDecoder(\"utf-8\").decode(input);\n}\n","import { fromUtf8 as jsFromUtf8, toUtf8 as jsToUtf8 } from \"./pureJs\";\nimport { fromUtf8 as textEncoderFromUtf8, toUtf8 as textEncoderToUtf8 } from \"./whatwgEncodingApi\";\nexport const fromUtf8 = (input) => typeof TextEncoder === \"function\" ? textEncoderFromUtf8(input) : jsFromUtf8(input);\nexport const toUtf8 = (input) => typeof TextDecoder === \"function\" ? textEncoderToUtf8(input) : jsToUtf8(input);\n","const fallbackWindow = {};\nexport function locateWindow() {\n    if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else if (typeof self !== \"undefined\") {\n        return self;\n    }\n    return fallbackWindow;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Sha256 = void 0;\nvar isEmptyData_1 = require(\"./isEmptyData\");\nvar constants_1 = require(\"./constants\");\nvar util_utf8_browser_1 = require(\"@aws-sdk/util-utf8-browser\");\nvar util_locate_window_1 = require(\"@aws-sdk/util-locate-window\");\nvar Sha256 = /** @class */ (function () {\n    function Sha256(secret) {\n        this.secret = secret;\n        this.reset();\n    }\n    Sha256.prototype.update = function (toHash) {\n        var _this = this;\n        if ((0, isEmptyData_1.isEmptyData)(toHash)) {\n            return;\n        }\n        this.operation = this.operation.then(function (operation) {\n            operation.onerror = function () {\n                _this.operation = Promise.reject(new Error(\"Error encountered updating hash\"));\n            };\n            operation.process(toArrayBufferView(toHash));\n            return operation;\n        });\n        this.operation.catch(function () { });\n    };\n    Sha256.prototype.digest = function () {\n        return this.operation.then(function (operation) {\n            return new Promise(function (resolve, reject) {\n                operation.onerror = function () {\n                    reject(new Error(\"Error encountered finalizing hash\"));\n                };\n                operation.oncomplete = function () {\n                    if (operation.result) {\n                        resolve(new Uint8Array(operation.result));\n                    }\n                    reject(new Error(\"Error encountered finalizing hash\"));\n                };\n                operation.finish();\n            });\n        });\n    };\n    Sha256.prototype.reset = function () {\n        if (this.secret) {\n            this.operation = getKeyPromise(this.secret).then(function (keyData) {\n                return (0, util_locate_window_1.locateWindow)().msCrypto.subtle.sign(constants_1.SHA_256_HMAC_ALGO, keyData);\n            });\n            this.operation.catch(function () { });\n        }\n        else {\n            this.operation = Promise.resolve((0, util_locate_window_1.locateWindow)().msCrypto.subtle.digest(\"SHA-256\"));\n        }\n    };\n    return Sha256;\n}());\nexports.Sha256 = Sha256;\nfunction getKeyPromise(secret) {\n    return new Promise(function (resolve, reject) {\n        var keyOperation = (0, util_locate_window_1.locateWindow)().msCrypto.subtle.importKey(\"raw\", toArrayBufferView(secret), constants_1.SHA_256_HMAC_ALGO, false, [\"sign\"]);\n        keyOperation.oncomplete = function () {\n            if (keyOperation.result) {\n                resolve(keyOperation.result);\n            }\n            reject(new Error(\"ImportKey completed without importing key.\"));\n        };\n        keyOperation.onerror = function () {\n            reject(new Error(\"ImportKey failed to import key.\"));\n        };\n    });\n}\nfunction toArrayBufferView(data) {\n    if (typeof data === \"string\") {\n        return (0, util_utf8_browser_1.fromUtf8)(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n}\n//# sourceMappingURL=ie11Sha256.js.map","\"use strict\";\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertToBuffer = void 0;\nvar util_utf8_browser_1 = require(\"@aws-sdk/util-utf8-browser\");\n// Quick polyfill\nvar fromUtf8 = typeof Buffer !== \"undefined\" && Buffer.from\n    ? function (input) { return Buffer.from(input, \"utf8\"); }\n    : util_utf8_browser_1.fromUtf8;\nfunction convertToBuffer(data) {\n    // Already a Uint8, do nothing\n    if (data instanceof Uint8Array)\n        return data;\n    if (typeof data === \"string\") {\n        return fromUtf8(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n}\nexports.convertToBuffer = convertToBuffer;\n//# sourceMappingURL=convertToBuffer.js.map","\"use strict\";\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isEmptyData = void 0;\nfunction isEmptyData(data) {\n    if (typeof data === \"string\") {\n        return data.length === 0;\n    }\n    return data.byteLength === 0;\n}\nexports.isEmptyData = isEmptyData;\n//# sourceMappingURL=isEmptyData.js.map","\"use strict\";\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.numToUint8 = void 0;\nfunction numToUint8(num) {\n    return new Uint8Array([\n        (num & 0xff000000) >> 24,\n        (num & 0x00ff0000) >> 16,\n        (num & 0x0000ff00) >> 8,\n        num & 0x000000ff,\n    ]);\n}\nexports.numToUint8 = numToUint8;\n//# sourceMappingURL=numToUint8.js.map","\"use strict\";\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uint32ArrayFrom = void 0;\n// IE 11 does not support Array.from, so we do it manually\nfunction uint32ArrayFrom(a_lookUpTable) {\n    if (!Uint32Array.from) {\n        var return_array = new Uint32Array(a_lookUpTable.length);\n        var a_index = 0;\n        while (a_index < a_lookUpTable.length) {\n            return_array[a_index] = a_lookUpTable[a_index];\n            a_index += 1;\n        }\n        return return_array;\n    }\n    return Uint32Array.from(a_lookUpTable);\n}\nexports.uint32ArrayFrom = uint32ArrayFrom;\n//# sourceMappingURL=uint32ArrayFrom.js.map","\"use strict\";\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uint32ArrayFrom = exports.numToUint8 = exports.isEmptyData = exports.convertToBuffer = void 0;\nvar convertToBuffer_1 = require(\"./convertToBuffer\");\nObject.defineProperty(exports, \"convertToBuffer\", { enumerable: true, get: function () { return convertToBuffer_1.convertToBuffer; } });\nvar isEmptyData_1 = require(\"./isEmptyData\");\nObject.defineProperty(exports, \"isEmptyData\", { enumerable: true, get: function () { return isEmptyData_1.isEmptyData; } });\nvar numToUint8_1 = require(\"./numToUint8\");\nObject.defineProperty(exports, \"numToUint8\", { enumerable: true, get: function () { return numToUint8_1.numToUint8; } });\nvar uint32ArrayFrom_1 = require(\"./uint32ArrayFrom\");\nObject.defineProperty(exports, \"uint32ArrayFrom\", { enumerable: true, get: function () { return uint32ArrayFrom_1.uint32ArrayFrom; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Sha256 = void 0;\nvar util_1 = require(\"@aws-crypto/util\");\nvar constants_1 = require(\"./constants\");\nvar util_locate_window_1 = require(\"@aws-sdk/util-locate-window\");\nvar Sha256 = /** @class */ (function () {\n    function Sha256(secret) {\n        this.toHash = new Uint8Array(0);\n        this.secret = secret;\n        this.reset();\n    }\n    Sha256.prototype.update = function (data) {\n        if ((0, util_1.isEmptyData)(data)) {\n            return;\n        }\n        var update = (0, util_1.convertToBuffer)(data);\n        var typedArray = new Uint8Array(this.toHash.byteLength + update.byteLength);\n        typedArray.set(this.toHash, 0);\n        typedArray.set(update, this.toHash.byteLength);\n        this.toHash = typedArray;\n    };\n    Sha256.prototype.digest = function () {\n        var _this = this;\n        if (this.key) {\n            return this.key.then(function (key) {\n                return (0, util_locate_window_1.locateWindow)()\n                    .crypto.subtle.sign(constants_1.SHA_256_HMAC_ALGO, key, _this.toHash)\n                    .then(function (data) { return new Uint8Array(data); });\n            });\n        }\n        if ((0, util_1.isEmptyData)(this.toHash)) {\n            return Promise.resolve(constants_1.EMPTY_DATA_SHA_256);\n        }\n        return Promise.resolve()\n            .then(function () {\n            return (0, util_locate_window_1.locateWindow)().crypto.subtle.digest(constants_1.SHA_256_HASH, _this.toHash);\n        })\n            .then(function (data) { return Promise.resolve(new Uint8Array(data)); });\n    };\n    Sha256.prototype.reset = function () {\n        var _this = this;\n        this.toHash = new Uint8Array(0);\n        if (this.secret && this.secret !== void 0) {\n            this.key = new Promise(function (resolve, reject) {\n                (0, util_locate_window_1.locateWindow)()\n                    .crypto.subtle.importKey(\"raw\", (0, util_1.convertToBuffer)(_this.secret), constants_1.SHA_256_HMAC_ALGO, false, [\"sign\"])\n                    .then(resolve, reject);\n            });\n            this.key.catch(function () { });\n        }\n    };\n    return Sha256;\n}());\nexports.Sha256 = Sha256;\n//# sourceMappingURL=webCryptoSha256.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MAX_HASHABLE_LENGTH = exports.INIT = exports.KEY = exports.DIGEST_LENGTH = exports.BLOCK_SIZE = void 0;\n/**\n * @internal\n */\nexports.BLOCK_SIZE = 64;\n/**\n * @internal\n */\nexports.DIGEST_LENGTH = 32;\n/**\n * @internal\n */\nexports.KEY = new Uint32Array([\n    0x428a2f98,\n    0x71374491,\n    0xb5c0fbcf,\n    0xe9b5dba5,\n    0x3956c25b,\n    0x59f111f1,\n    0x923f82a4,\n    0xab1c5ed5,\n    0xd807aa98,\n    0x12835b01,\n    0x243185be,\n    0x550c7dc3,\n    0x72be5d74,\n    0x80deb1fe,\n    0x9bdc06a7,\n    0xc19bf174,\n    0xe49b69c1,\n    0xefbe4786,\n    0x0fc19dc6,\n    0x240ca1cc,\n    0x2de92c6f,\n    0x4a7484aa,\n    0x5cb0a9dc,\n    0x76f988da,\n    0x983e5152,\n    0xa831c66d,\n    0xb00327c8,\n    0xbf597fc7,\n    0xc6e00bf3,\n    0xd5a79147,\n    0x06ca6351,\n    0x14292967,\n    0x27b70a85,\n    0x2e1b2138,\n    0x4d2c6dfc,\n    0x53380d13,\n    0x650a7354,\n    0x766a0abb,\n    0x81c2c92e,\n    0x92722c85,\n    0xa2bfe8a1,\n    0xa81a664b,\n    0xc24b8b70,\n    0xc76c51a3,\n    0xd192e819,\n    0xd6990624,\n    0xf40e3585,\n    0x106aa070,\n    0x19a4c116,\n    0x1e376c08,\n    0x2748774c,\n    0x34b0bcb5,\n    0x391c0cb3,\n    0x4ed8aa4a,\n    0x5b9cca4f,\n    0x682e6ff3,\n    0x748f82ee,\n    0x78a5636f,\n    0x84c87814,\n    0x8cc70208,\n    0x90befffa,\n    0xa4506ceb,\n    0xbef9a3f7,\n    0xc67178f2\n]);\n/**\n * @internal\n */\nexports.INIT = [\n    0x6a09e667,\n    0xbb67ae85,\n    0x3c6ef372,\n    0xa54ff53a,\n    0x510e527f,\n    0x9b05688c,\n    0x1f83d9ab,\n    0x5be0cd19\n];\n/**\n * @internal\n */\nexports.MAX_HASHABLE_LENGTH = Math.pow(2, 53) - 1;\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RawSha256 = void 0;\nvar constants_1 = require(\"./constants\");\n/**\n * @internal\n */\nvar RawSha256 = /** @class */ (function () {\n    function RawSha256() {\n        this.state = Int32Array.from(constants_1.INIT);\n        this.temp = new Int32Array(64);\n        this.buffer = new Uint8Array(64);\n        this.bufferLength = 0;\n        this.bytesHashed = 0;\n        /**\n         * @internal\n         */\n        this.finished = false;\n    }\n    RawSha256.prototype.update = function (data) {\n        if (this.finished) {\n            throw new Error(\"Attempted to update an already finished hash.\");\n        }\n        var position = 0;\n        var byteLength = data.byteLength;\n        this.bytesHashed += byteLength;\n        if (this.bytesHashed * 8 > constants_1.MAX_HASHABLE_LENGTH) {\n            throw new Error(\"Cannot hash more than 2^53 - 1 bits\");\n        }\n        while (byteLength > 0) {\n            this.buffer[this.bufferLength++] = data[position++];\n            byteLength--;\n            if (this.bufferLength === constants_1.BLOCK_SIZE) {\n                this.hashBuffer();\n                this.bufferLength = 0;\n            }\n        }\n    };\n    RawSha256.prototype.digest = function () {\n        if (!this.finished) {\n            var bitsHashed = this.bytesHashed * 8;\n            var bufferView = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength);\n            var undecoratedLength = this.bufferLength;\n            bufferView.setUint8(this.bufferLength++, 0x80);\n            // Ensure the final block has enough room for the hashed length\n            if (undecoratedLength % constants_1.BLOCK_SIZE >= constants_1.BLOCK_SIZE - 8) {\n                for (var i = this.bufferLength; i < constants_1.BLOCK_SIZE; i++) {\n                    bufferView.setUint8(i, 0);\n                }\n                this.hashBuffer();\n                this.bufferLength = 0;\n            }\n            for (var i = this.bufferLength; i < constants_1.BLOCK_SIZE - 8; i++) {\n                bufferView.setUint8(i, 0);\n            }\n            bufferView.setUint32(constants_1.BLOCK_SIZE - 8, Math.floor(bitsHashed / 0x100000000), true);\n            bufferView.setUint32(constants_1.BLOCK_SIZE - 4, bitsHashed);\n            this.hashBuffer();\n            this.finished = true;\n        }\n        // The value in state is little-endian rather than big-endian, so flip\n        // each word into a new Uint8Array\n        var out = new Uint8Array(constants_1.DIGEST_LENGTH);\n        for (var i = 0; i < 8; i++) {\n            out[i * 4] = (this.state[i] >>> 24) & 0xff;\n            out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n            out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n            out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n        }\n        return out;\n    };\n    RawSha256.prototype.hashBuffer = function () {\n        var _a = this, buffer = _a.buffer, state = _a.state;\n        var state0 = state[0], state1 = state[1], state2 = state[2], state3 = state[3], state4 = state[4], state5 = state[5], state6 = state[6], state7 = state[7];\n        for (var i = 0; i < constants_1.BLOCK_SIZE; i++) {\n            if (i < 16) {\n                this.temp[i] =\n                    ((buffer[i * 4] & 0xff) << 24) |\n                        ((buffer[i * 4 + 1] & 0xff) << 16) |\n                        ((buffer[i * 4 + 2] & 0xff) << 8) |\n                        (buffer[i * 4 + 3] & 0xff);\n            }\n            else {\n                var u = this.temp[i - 2];\n                var t1_1 = ((u >>> 17) | (u << 15)) ^ ((u >>> 19) | (u << 13)) ^ (u >>> 10);\n                u = this.temp[i - 15];\n                var t2_1 = ((u >>> 7) | (u << 25)) ^ ((u >>> 18) | (u << 14)) ^ (u >>> 3);\n                this.temp[i] =\n                    ((t1_1 + this.temp[i - 7]) | 0) + ((t2_1 + this.temp[i - 16]) | 0);\n            }\n            var t1 = ((((((state4 >>> 6) | (state4 << 26)) ^\n                ((state4 >>> 11) | (state4 << 21)) ^\n                ((state4 >>> 25) | (state4 << 7))) +\n                ((state4 & state5) ^ (~state4 & state6))) |\n                0) +\n                ((state7 + ((constants_1.KEY[i] + this.temp[i]) | 0)) | 0)) |\n                0;\n            var t2 = ((((state0 >>> 2) | (state0 << 30)) ^\n                ((state0 >>> 13) | (state0 << 19)) ^\n                ((state0 >>> 22) | (state0 << 10))) +\n                ((state0 & state1) ^ (state0 & state2) ^ (state1 & state2))) |\n                0;\n            state7 = state6;\n            state6 = state5;\n            state5 = state4;\n            state4 = (state3 + t1) | 0;\n            state3 = state2;\n            state2 = state1;\n            state1 = state0;\n            state0 = (t1 + t2) | 0;\n        }\n        state[0] += state0;\n        state[1] += state1;\n        state[2] += state2;\n        state[3] += state3;\n        state[4] += state4;\n        state[5] += state5;\n        state[6] += state6;\n        state[7] += state7;\n    };\n    return RawSha256;\n}());\nexports.RawSha256 = RawSha256;\n//# sourceMappingURL=RawSha256.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Sha256 = void 0;\nvar tslib_1 = require(\"tslib\");\nvar constants_1 = require(\"./constants\");\nvar RawSha256_1 = require(\"./RawSha256\");\nvar util_1 = require(\"@aws-crypto/util\");\nvar Sha256 = /** @class */ (function () {\n    function Sha256(secret) {\n        this.secret = secret;\n        this.hash = new RawSha256_1.RawSha256();\n        this.reset();\n    }\n    Sha256.prototype.update = function (toHash) {\n        if ((0, util_1.isEmptyData)(toHash) || this.error) {\n            return;\n        }\n        try {\n            this.hash.update((0, util_1.convertToBuffer)(toHash));\n        }\n        catch (e) {\n            this.error = e;\n        }\n    };\n    /* This synchronous method keeps compatibility\n     * with the v2 aws-sdk.\n     */\n    Sha256.prototype.digestSync = function () {\n        if (this.error) {\n            throw this.error;\n        }\n        if (this.outer) {\n            if (!this.outer.finished) {\n                this.outer.update(this.hash.digest());\n            }\n            return this.outer.digest();\n        }\n        return this.hash.digest();\n    };\n    /* The underlying digest method here is synchronous.\n     * To keep the same interface with the other hash functions\n     * the default is to expose this as an async method.\n     * However, it can sometimes be useful to have a sync method.\n     */\n    Sha256.prototype.digest = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.digestSync()];\n            });\n        });\n    };\n    Sha256.prototype.reset = function () {\n        this.hash = new RawSha256_1.RawSha256();\n        if (this.secret) {\n            this.outer = new RawSha256_1.RawSha256();\n            var inner = bufferFromSecret(this.secret);\n            var outer = new Uint8Array(constants_1.BLOCK_SIZE);\n            outer.set(inner);\n            for (var i = 0; i < constants_1.BLOCK_SIZE; i++) {\n                inner[i] ^= 0x36;\n                outer[i] ^= 0x5c;\n            }\n            this.hash.update(inner);\n            this.outer.update(outer);\n            // overwrite the copied key in memory\n            for (var i = 0; i < inner.byteLength; i++) {\n                inner[i] = 0;\n            }\n        }\n    };\n    return Sha256;\n}());\nexports.Sha256 = Sha256;\nfunction bufferFromSecret(secret) {\n    var input = (0, util_1.convertToBuffer)(secret);\n    if (input.byteLength > constants_1.BLOCK_SIZE) {\n        var bufferHash = new RawSha256_1.RawSha256();\n        bufferHash.update(input);\n        input = bufferHash.digest();\n    }\n    var buffer = new Uint8Array(constants_1.BLOCK_SIZE);\n    buffer.set(input);\n    return buffer;\n}\n//# sourceMappingURL=jsSha256.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./jsSha256\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.supportsZeroByteGCM = exports.supportsSubtleCrypto = exports.supportsSecureRandom = exports.supportsWebCrypto = void 0;\nvar tslib_1 = require(\"tslib\");\nvar subtleCryptoMethods = [\n    \"decrypt\",\n    \"digest\",\n    \"encrypt\",\n    \"exportKey\",\n    \"generateKey\",\n    \"importKey\",\n    \"sign\",\n    \"verify\"\n];\nfunction supportsWebCrypto(window) {\n    if (supportsSecureRandom(window) &&\n        typeof window.crypto.subtle === \"object\") {\n        var subtle = window.crypto.subtle;\n        return supportsSubtleCrypto(subtle);\n    }\n    return false;\n}\nexports.supportsWebCrypto = supportsWebCrypto;\nfunction supportsSecureRandom(window) {\n    if (typeof window === \"object\" && typeof window.crypto === \"object\") {\n        var getRandomValues = window.crypto.getRandomValues;\n        return typeof getRandomValues === \"function\";\n    }\n    return false;\n}\nexports.supportsSecureRandom = supportsSecureRandom;\nfunction supportsSubtleCrypto(subtle) {\n    return (subtle &&\n        subtleCryptoMethods.every(function (methodName) { return typeof subtle[methodName] === \"function\"; }));\n}\nexports.supportsSubtleCrypto = supportsSubtleCrypto;\nfunction supportsZeroByteGCM(subtle) {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n        var key, zeroByteAuthTag, _a;\n        return tslib_1.__generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    if (!supportsSubtleCrypto(subtle))\n                        return [2 /*return*/, false];\n                    _b.label = 1;\n                case 1:\n                    _b.trys.push([1, 4, , 5]);\n                    return [4 /*yield*/, subtle.generateKey({ name: \"AES-GCM\", length: 128 }, false, [\"encrypt\"])];\n                case 2:\n                    key = _b.sent();\n                    return [4 /*yield*/, subtle.encrypt({\n                            name: \"AES-GCM\",\n                            iv: new Uint8Array(Array(12)),\n                            additionalData: new Uint8Array(Array(16)),\n                            tagLength: 128\n                        }, key, new Uint8Array(0))];\n                case 3:\n                    zeroByteAuthTag = _b.sent();\n                    return [2 /*return*/, zeroByteAuthTag.byteLength === 16];\n                case 4:\n                    _a = _b.sent();\n                    return [2 /*return*/, false];\n                case 5: return [2 /*return*/];\n            }\n        });\n    });\n}\nexports.supportsZeroByteGCM = supportsZeroByteGCM;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3VwcG9ydHNXZWJDcnlwdG8uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvc3VwcG9ydHNXZWJDcnlwdG8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQVVBLElBQU0sbUJBQW1CLEdBQThCO0lBQ3JELFNBQVM7SUFDVCxRQUFRO0lBQ1IsU0FBUztJQUNULFdBQVc7SUFDWCxhQUFhO0lBQ2IsV0FBVztJQUNYLE1BQU07SUFDTixRQUFRO0NBQ1QsQ0FBQztBQUVGLFNBQWdCLGlCQUFpQixDQUFDLE1BQWM7SUFDOUMsSUFDRSxvQkFBb0IsQ0FBQyxNQUFNLENBQUM7UUFDNUIsT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sS0FBSyxRQUFRLEVBQ3hDO1FBQ1EsSUFBQSxNQUFNLEdBQUssTUFBTSxDQUFDLE1BQU0sT0FBbEIsQ0FBbUI7UUFFakMsT0FBTyxvQkFBb0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztLQUNyQztJQUVELE9BQU8sS0FBSyxDQUFDO0FBQ2YsQ0FBQztBQVhELDhDQVdDO0FBRUQsU0FBZ0Isb0JBQW9CLENBQUMsTUFBYztJQUNqRCxJQUFJLE9BQU8sTUFBTSxLQUFLLFFBQVEsSUFBSSxPQUFPLE1BQU0sQ0FBQyxNQUFNLEtBQUssUUFBUSxFQUFFO1FBQzNELElBQUEsZUFBZSxHQUFLLE1BQU0sQ0FBQyxNQUFNLGdCQUFsQixDQUFtQjtRQUUxQyxPQUFPLE9BQU8sZUFBZSxLQUFLLFVBQVUsQ0FBQztLQUM5QztJQUVELE9BQU8sS0FBSyxDQUFDO0FBQ2YsQ0FBQztBQVJELG9EQVFDO0FBRUQsU0FBZ0Isb0JBQW9CLENBQUMsTUFBb0I7SUFDdkQsT0FBTyxDQUNMLE1BQU07UUFDTixtQkFBbUIsQ0FBQyxLQUFLLENBQ3ZCLFVBQUEsVUFBVSxJQUFJLE9BQUEsT0FBTyxNQUFNLENBQUMsVUFBVSxDQUFDLEtBQUssVUFBVSxFQUF4QyxDQUF3QyxDQUN2RCxDQUNGLENBQUM7QUFDSixDQUFDO0FBUEQsb0RBT0M7QUFFRCxTQUFzQixtQkFBbUIsQ0FBQyxNQUFvQjs7Ozs7O29CQUM1RCxJQUFJLENBQUMsb0JBQW9CLENBQUMsTUFBTSxDQUFDO3dCQUFFLHNCQUFPLEtBQUssRUFBQzs7OztvQkFFbEMscUJBQU0sTUFBTSxDQUFDLFdBQVcsQ0FDbEMsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsRUFDaEMsS0FBSyxFQUNMLENBQUMsU0FBUyxDQUFDLENBQ1osRUFBQTs7b0JBSkssR0FBRyxHQUFHLFNBSVg7b0JBQ3VCLHFCQUFNLE1BQU0sQ0FBQyxPQUFPLENBQzFDOzRCQUNFLElBQUksRUFBRSxTQUFTOzRCQUNmLEVBQUUsRUFBRSxJQUFJLFVBQVUsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7NEJBQzdCLGNBQWMsRUFBRSxJQUFJLFVBQVUsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7NEJBQ3pDLFNBQVMsRUFBRSxHQUFHO3lCQUNmLEVBQ0QsR0FBRyxFQUNILElBQUksVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUNsQixFQUFBOztvQkFUSyxlQUFlLEdBQUcsU0FTdkI7b0JBQ0Qsc0JBQU8sZUFBZSxDQUFDLFVBQVUsS0FBSyxFQUFFLEVBQUM7OztvQkFFekMsc0JBQU8sS0FBSyxFQUFDOzs7OztDQUVoQjtBQXRCRCxrREFzQkMiLCJzb3VyY2VzQ29udGVudCI6WyJ0eXBlIFN1YnRsZUNyeXB0b01ldGhvZCA9XG4gIHwgXCJkZWNyeXB0XCJcbiAgfCBcImRpZ2VzdFwiXG4gIHwgXCJlbmNyeXB0XCJcbiAgfCBcImV4cG9ydEtleVwiXG4gIHwgXCJnZW5lcmF0ZUtleVwiXG4gIHwgXCJpbXBvcnRLZXlcIlxuICB8IFwic2lnblwiXG4gIHwgXCJ2ZXJpZnlcIjtcblxuY29uc3Qgc3VidGxlQ3J5cHRvTWV0aG9kczogQXJyYXk8U3VidGxlQ3J5cHRvTWV0aG9kPiA9IFtcbiAgXCJkZWNyeXB0XCIsXG4gIFwiZGlnZXN0XCIsXG4gIFwiZW5jcnlwdFwiLFxuICBcImV4cG9ydEtleVwiLFxuICBcImdlbmVyYXRlS2V5XCIsXG4gIFwiaW1wb3J0S2V5XCIsXG4gIFwic2lnblwiLFxuICBcInZlcmlmeVwiXG5dO1xuXG5leHBvcnQgZnVuY3Rpb24gc3VwcG9ydHNXZWJDcnlwdG8od2luZG93OiBXaW5kb3cpOiBib29sZWFuIHtcbiAgaWYgKFxuICAgIHN1cHBvcnRzU2VjdXJlUmFuZG9tKHdpbmRvdykgJiZcbiAgICB0eXBlb2Ygd2luZG93LmNyeXB0by5zdWJ0bGUgPT09IFwib2JqZWN0XCJcbiAgKSB7XG4gICAgY29uc3QgeyBzdWJ0bGUgfSA9IHdpbmRvdy5jcnlwdG87XG5cbiAgICByZXR1cm4gc3VwcG9ydHNTdWJ0bGVDcnlwdG8oc3VidGxlKTtcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN1cHBvcnRzU2VjdXJlUmFuZG9tKHdpbmRvdzogV2luZG93KTogYm9vbGVhbiB7XG4gIGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiB3aW5kb3cuY3J5cHRvID09PSBcIm9iamVjdFwiKSB7XG4gICAgY29uc3QgeyBnZXRSYW5kb21WYWx1ZXMgfSA9IHdpbmRvdy5jcnlwdG87XG5cbiAgICByZXR1cm4gdHlwZW9mIGdldFJhbmRvbVZhbHVlcyA9PT0gXCJmdW5jdGlvblwiO1xuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3VwcG9ydHNTdWJ0bGVDcnlwdG8oc3VidGxlOiBTdWJ0bGVDcnlwdG8pIHtcbiAgcmV0dXJuIChcbiAgICBzdWJ0bGUgJiZcbiAgICBzdWJ0bGVDcnlwdG9NZXRob2RzLmV2ZXJ5KFxuICAgICAgbWV0aG9kTmFtZSA9PiB0eXBlb2Ygc3VidGxlW21ldGhvZE5hbWVdID09PSBcImZ1bmN0aW9uXCJcbiAgICApXG4gICk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzdXBwb3J0c1plcm9CeXRlR0NNKHN1YnRsZTogU3VidGxlQ3J5cHRvKSB7XG4gIGlmICghc3VwcG9ydHNTdWJ0bGVDcnlwdG8oc3VidGxlKSkgcmV0dXJuIGZhbHNlO1xuICB0cnkge1xuICAgIGNvbnN0IGtleSA9IGF3YWl0IHN1YnRsZS5nZW5lcmF0ZUtleShcbiAgICAgIHsgbmFtZTogXCJBRVMtR0NNXCIsIGxlbmd0aDogMTI4IH0sXG4gICAgICBmYWxzZSxcbiAgICAgIFtcImVuY3J5cHRcIl1cbiAgICApO1xuICAgIGNvbnN0IHplcm9CeXRlQXV0aFRhZyA9IGF3YWl0IHN1YnRsZS5lbmNyeXB0KFxuICAgICAge1xuICAgICAgICBuYW1lOiBcIkFFUy1HQ01cIixcbiAgICAgICAgaXY6IG5ldyBVaW50OEFycmF5KEFycmF5KDEyKSksXG4gICAgICAgIGFkZGl0aW9uYWxEYXRhOiBuZXcgVWludDhBcnJheShBcnJheSgxNikpLFxuICAgICAgICB0YWdMZW5ndGg6IDEyOFxuICAgICAgfSxcbiAgICAgIGtleSxcbiAgICAgIG5ldyBVaW50OEFycmF5KDApXG4gICAgKTtcbiAgICByZXR1cm4gemVyb0J5dGVBdXRoVGFnLmJ5dGVMZW5ndGggPT09IDE2O1xuICB9IGNhdGNoIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./supportsWebCrypto\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsOERBQW9DIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vc3VwcG9ydHNXZWJDcnlwdG9cIjtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=CryptoOperation.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=KeyOperation.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=MsSubtleCrypto.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isMsWindow = void 0;\nvar msSubtleCryptoMethods = [\n    \"decrypt\",\n    \"digest\",\n    \"encrypt\",\n    \"exportKey\",\n    \"generateKey\",\n    \"importKey\",\n    \"sign\",\n    \"verify\"\n];\nfunction quacksLikeAnMsWindow(window) {\n    return \"MSInputMethodContext\" in window && \"msCrypto\" in window;\n}\n/**\n * Determines if the provided window is (or is like) the window object one would\n * expect to encounter in Internet Explorer 11.\n */\nfunction isMsWindow(window) {\n    if (quacksLikeAnMsWindow(window) && window.msCrypto.subtle !== undefined) {\n        var _a = window.msCrypto, getRandomValues = _a.getRandomValues, subtle_1 = _a.subtle;\n        return msSubtleCryptoMethods\n            .map(function (methodName) { return subtle_1[methodName]; })\n            .concat(getRandomValues)\n            .every(function (method) { return typeof method === \"function\"; });\n    }\n    return false;\n}\nexports.isMsWindow = isMsWindow;\n//# sourceMappingURL=MsWindow.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./CryptoOperation\"), exports);\ntslib_1.__exportStar(require(\"./Key\"), exports);\ntslib_1.__exportStar(require(\"./KeyOperation\"), exports);\ntslib_1.__exportStar(require(\"./MsSubtleCrypto\"), exports);\ntslib_1.__exportStar(require(\"./MsWindow\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Sha256 = void 0;\nvar ie11Sha256_1 = require(\"./ie11Sha256\");\nvar webCryptoSha256_1 = require(\"./webCryptoSha256\");\nvar sha256_js_1 = require(\"@aws-crypto/sha256-js\");\nvar supports_web_crypto_1 = require(\"@aws-crypto/supports-web-crypto\");\nvar ie11_detection_1 = require(\"@aws-crypto/ie11-detection\");\nvar util_locate_window_1 = require(\"@aws-sdk/util-locate-window\");\nvar util_1 = require(\"@aws-crypto/util\");\nvar Sha256 = /** @class */ (function () {\n    function Sha256(secret) {\n        if ((0, supports_web_crypto_1.supportsWebCrypto)((0, util_locate_window_1.locateWindow)())) {\n            this.hash = new webCryptoSha256_1.Sha256(secret);\n        }\n        else if ((0, ie11_detection_1.isMsWindow)((0, util_locate_window_1.locateWindow)())) {\n            this.hash = new ie11Sha256_1.Sha256(secret);\n        }\n        else {\n            this.hash = new sha256_js_1.Sha256(secret);\n        }\n    }\n    Sha256.prototype.update = function (data, encoding) {\n        this.hash.update((0, util_1.convertToBuffer)(data));\n    };\n    Sha256.prototype.digest = function () {\n        return this.hash.digest();\n    };\n    Sha256.prototype.reset = function () {\n        this.hash.reset();\n    };\n    return Sha256;\n}());\nexports.Sha256 = Sha256;\n//# sourceMappingURL=crossPlatformSha256.js.map","import { escapeUri } from \"@aws-sdk/util-uri-escape\";\nexport function buildQueryString(query) {\n    const parts = [];\n    for (let key of Object.keys(query).sort()) {\n        const value = query[key];\n        key = escapeUri(key);\n        if (Array.isArray(value)) {\n            for (let i = 0, iLen = value.length; i < iLen; i++) {\n                parts.push(`${key}=${escapeUri(value[i])}`);\n            }\n        }\n        else {\n            let qsEntry = key;\n            if (value || typeof value === \"string\") {\n                qsEntry += `=${escapeUri(value)}`;\n            }\n            parts.push(qsEntry);\n        }\n    }\n    return parts.join(\"&\");\n}\n","export function requestTimeout(timeoutInMs = 0) {\n    return new Promise((resolve, reject) => {\n        if (timeoutInMs) {\n            setTimeout(() => {\n                const timeoutError = new Error(`Request did not complete within ${timeoutInMs} ms`);\n                timeoutError.name = \"TimeoutError\";\n                reject(timeoutError);\n            }, timeoutInMs);\n        }\n    });\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebCryptoSha256 = exports.Ie11Sha256 = void 0;\nvar tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./crossPlatformSha256\"), exports);\nvar ie11Sha256_1 = require(\"./ie11Sha256\");\nObject.defineProperty(exports, \"Ie11Sha256\", { enumerable: true, get: function () { return ie11Sha256_1.Sha256; } });\nvar webCryptoSha256_1 = require(\"./webCryptoSha256\");\nObject.defineProperty(exports, \"WebCryptoSha256\", { enumerable: true, get: function () { return webCryptoSha256_1.Sha256; } });\n//# sourceMappingURL=index.js.map","import { HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { buildQueryString } from \"@aws-sdk/querystring-builder\";\nimport { requestTimeout } from \"./request-timeout\";\nexport class FetchHttpHandler {\n    constructor(options) {\n        if (typeof options === \"function\") {\n            this.configProvider = options().then((opts) => opts || {});\n        }\n        else {\n            this.config = options ?? {};\n            this.configProvider = Promise.resolve(this.config);\n        }\n    }\n    destroy() {\n    }\n    async handle(request, { abortSignal } = {}) {\n        if (!this.config) {\n            this.config = await this.configProvider;\n        }\n        const requestTimeoutInMs = this.config.requestTimeout;\n        if (abortSignal?.aborted) {\n            const abortError = new Error(\"Request aborted\");\n            abortError.name = \"AbortError\";\n            return Promise.reject(abortError);\n        }\n        let path = request.path;\n        if (request.query) {\n            const queryString = buildQueryString(request.query);\n            if (queryString) {\n                path += `?${queryString}`;\n            }\n        }\n        const { port, method } = request;\n        const url = `${request.protocol}//${request.hostname}${port ? `:${port}` : \"\"}${path}`;\n        const body = method === \"GET\" || method === \"HEAD\" ? undefined : request.body;\n        const requestOptions = {\n            body,\n            headers: new Headers(request.headers),\n            method: method,\n        };\n        if (typeof AbortController !== \"undefined\") {\n            requestOptions[\"signal\"] = abortSignal;\n        }\n        const fetchRequest = new Request(url, requestOptions);\n        const raceOfPromises = [\n            fetch(fetchRequest).then((response) => {\n                const fetchHeaders = response.headers;\n                const transformedHeaders = {};\n                for (const pair of fetchHeaders.entries()) {\n                    transformedHeaders[pair[0]] = pair[1];\n                }\n                const hasReadableStream = response.body !== undefined;\n                if (!hasReadableStream) {\n                    return response.blob().then((body) => ({\n                        response: new HttpResponse({\n                            headers: transformedHeaders,\n                            statusCode: response.status,\n                            body,\n                        }),\n                    }));\n                }\n                return {\n                    response: new HttpResponse({\n                        headers: transformedHeaders,\n                        statusCode: response.status,\n                        body: response.body,\n                    }),\n                };\n            }),\n            requestTimeout(requestTimeoutInMs),\n        ];\n        if (abortSignal) {\n            raceOfPromises.push(new Promise((resolve, reject) => {\n                abortSignal.onabort = () => {\n                    const abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    reject(abortError);\n                };\n            }));\n        }\n        return Promise.race(raceOfPromises);\n    }\n}\n","const alphabetByEncoding = {};\nconst alphabetByValue = new Array(64);\nfor (let i = 0, start = \"A\".charCodeAt(0), limit = \"Z\".charCodeAt(0); i + start <= limit; i++) {\n    const char = String.fromCharCode(i + start);\n    alphabetByEncoding[char] = i;\n    alphabetByValue[i] = char;\n}\nfor (let i = 0, start = \"a\".charCodeAt(0), limit = \"z\".charCodeAt(0); i + start <= limit; i++) {\n    const char = String.fromCharCode(i + start);\n    const index = i + 26;\n    alphabetByEncoding[char] = index;\n    alphabetByValue[index] = char;\n}\nfor (let i = 0; i < 10; i++) {\n    alphabetByEncoding[i.toString(10)] = i + 52;\n    const char = i.toString(10);\n    const index = i + 52;\n    alphabetByEncoding[char] = index;\n    alphabetByValue[index] = char;\n}\nalphabetByEncoding[\"+\"] = 62;\nalphabetByValue[62] = \"+\";\nalphabetByEncoding[\"/\"] = 63;\nalphabetByValue[63] = \"/\";\nconst bitsPerLetter = 6;\nconst bitsPerByte = 8;\nconst maxLetterValue = 0b111111;\nexport { alphabetByEncoding, alphabetByValue, bitsPerLetter, bitsPerByte, maxLetterValue };\n","import { alphabetByEncoding, bitsPerByte, bitsPerLetter } from \"./constants.browser\";\nexport const fromBase64 = (input) => {\n    let totalByteLength = (input.length / 4) * 3;\n    if (input.slice(-2) === \"==\") {\n        totalByteLength -= 2;\n    }\n    else if (input.slice(-1) === \"=\") {\n        totalByteLength--;\n    }\n    const out = new ArrayBuffer(totalByteLength);\n    const dataView = new DataView(out);\n    for (let i = 0; i < input.length; i += 4) {\n        let bits = 0;\n        let bitLength = 0;\n        for (let j = i, limit = i + 3; j <= limit; j++) {\n            if (input[j] !== \"=\") {\n                if (!(input[j] in alphabetByEncoding)) {\n                    throw new TypeError(`Invalid character ${input[j]} in base64 string.`);\n                }\n                bits |= alphabetByEncoding[input[j]] << ((limit - j) * bitsPerLetter);\n                bitLength += bitsPerLetter;\n            }\n            else {\n                bits >>= bitsPerLetter;\n            }\n        }\n        const chunkOffset = (i / 4) * 3;\n        bits >>= bitLength % bitsPerByte;\n        const byteLength = Math.floor(bitLength / bitsPerByte);\n        for (let k = 0; k < byteLength; k++) {\n            const offset = (byteLength - k - 1) * bitsPerByte;\n            dataView.setUint8(chunkOffset + k, (bits & (255 << offset)) >> offset);\n        }\n    }\n    return new Uint8Array(out);\n};\n","import { alphabetByValue, bitsPerByte, bitsPerLetter, maxLetterValue } from \"./constants.browser\";\nexport function toBase64(input) {\n    let str = \"\";\n    for (let i = 0; i < input.length; i += 3) {\n        let bits = 0;\n        let bitLength = 0;\n        for (let j = i, limit = Math.min(i + 3, input.length); j < limit; j++) {\n            bits |= input[j] << ((limit - j - 1) * bitsPerByte);\n            bitLength += bitsPerByte;\n        }\n        const bitClusterCount = Math.ceil(bitLength / bitsPerLetter);\n        bits <<= bitClusterCount * bitsPerLetter - bitLength;\n        for (let k = 1; k <= bitClusterCount; k++) {\n            const offset = (bitClusterCount - k) * bitsPerLetter;\n            str += alphabetByValue[(bits & (maxLetterValue << offset)) >> offset];\n        }\n        str += \"==\".slice(0, 4 - bitClusterCount);\n    }\n    return str;\n}\n","import { fromBase64 } from \"@aws-sdk/util-base64\";\nexport const streamCollector = (stream) => {\n    if (typeof Blob === \"function\" && stream instanceof Blob) {\n        return collectBlob(stream);\n    }\n    return collectStream(stream);\n};\nasync function collectBlob(blob) {\n    const base64 = await readToBase64(blob);\n    const arrayBuffer = fromBase64(base64);\n    return new Uint8Array(arrayBuffer);\n}\nasync function collectStream(stream) {\n    let res = new Uint8Array(0);\n    const reader = stream.getReader();\n    let isDone = false;\n    while (!isDone) {\n        const { done, value } = await reader.read();\n        if (value) {\n            const prior = res;\n            res = new Uint8Array(prior.length + value.length);\n            res.set(prior);\n            res.set(value, prior.length);\n        }\n        isDone = done;\n    }\n    return res;\n}\nfunction readToBase64(blob) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            if (reader.readyState !== 2) {\n                return reject(new Error(\"Reader aborted too early\"));\n            }\n            const result = (reader.result ?? \"\");\n            const commaIndex = result.indexOf(\",\");\n            const dataOffset = commaIndex > -1 ? commaIndex + 1 : result.length;\n            resolve(result.substring(dataOffset));\n        };\n        reader.onabort = () => reject(new Error(\"Read aborted\"));\n        reader.onerror = () => reject(reader.error);\n        reader.readAsDataURL(blob);\n    });\n}\n","export const invalidProvider = (message) => () => Promise.reject(message);\n","export const calculateBodyLength = (body) => {\n    if (typeof body === \"string\") {\n        let len = body.length;\n        for (let i = len - 1; i >= 0; i--) {\n            const code = body.charCodeAt(i);\n            if (code > 0x7f && code <= 0x7ff)\n                len++;\n            else if (code > 0x7ff && code <= 0xffff)\n                len += 2;\n            if (code >= 0xdc00 && code <= 0xdfff)\n                i--;\n        }\n        return len;\n    }\n    else if (typeof body.byteLength === \"number\") {\n        return body.byteLength;\n    }\n    else if (typeof body.size === \"number\") {\n        return body.size;\n    }\n    throw new Error(`Body Length computation failed for ${body}`);\n};\n","// NOTE: this list must be up-to-date with browsers listed in\n// test/acceptance/useragentstrings.yml\nexport const BROWSER_ALIASES_MAP = {\n  'Amazon Silk': 'amazon_silk',\n  'Android Browser': 'android',\n  Bada: 'bada',\n  BlackBerry: 'blackberry',\n  Chrome: 'chrome',\n  Chromium: 'chromium',\n  Electron: 'electron',\n  Epiphany: 'epiphany',\n  Firefox: 'firefox',\n  Focus: 'focus',\n  Generic: 'generic',\n  'Google Search': 'google_search',\n  Googlebot: 'googlebot',\n  'Internet Explorer': 'ie',\n  'K-Meleon': 'k_meleon',\n  Maxthon: 'maxthon',\n  'Microsoft Edge': 'edge',\n  'MZ Browser': 'mz',\n  'NAVER Whale Browser': 'naver',\n  Opera: 'opera',\n  'Opera Coast': 'opera_coast',\n  PhantomJS: 'phantomjs',\n  Puffin: 'puffin',\n  QupZilla: 'qupzilla',\n  QQ: 'qq',\n  QQLite: 'qqlite',\n  Safari: 'safari',\n  Sailfish: 'sailfish',\n  'Samsung Internet for Android': 'samsung_internet',\n  SeaMonkey: 'seamonkey',\n  Sleipnir: 'sleipnir',\n  Swing: 'swing',\n  Tizen: 'tizen',\n  'UC Browser': 'uc',\n  Vivaldi: 'vivaldi',\n  'WebOS Browser': 'webos',\n  WeChat: 'wechat',\n  'Yandex Browser': 'yandex',\n  Roku: 'roku',\n};\n\nexport const BROWSER_MAP = {\n  amazon_silk: 'Amazon Silk',\n  android: 'Android Browser',\n  bada: 'Bada',\n  blackberry: 'BlackBerry',\n  chrome: 'Chrome',\n  chromium: 'Chromium',\n  electron: 'Electron',\n  epiphany: 'Epiphany',\n  firefox: 'Firefox',\n  focus: 'Focus',\n  generic: 'Generic',\n  googlebot: 'Googlebot',\n  google_search: 'Google Search',\n  ie: 'Internet Explorer',\n  k_meleon: 'K-Meleon',\n  maxthon: 'Maxthon',\n  edge: 'Microsoft Edge',\n  mz: 'MZ Browser',\n  naver: 'NAVER Whale Browser',\n  opera: 'Opera',\n  opera_coast: 'Opera Coast',\n  phantomjs: 'PhantomJS',\n  puffin: 'Puffin',\n  qupzilla: 'QupZilla',\n  qq: 'QQ Browser',\n  qqlite: 'QQ Browser Lite',\n  safari: 'Safari',\n  sailfish: 'Sailfish',\n  samsung_internet: 'Samsung Internet for Android',\n  seamonkey: 'SeaMonkey',\n  sleipnir: 'Sleipnir',\n  swing: 'Swing',\n  tizen: 'Tizen',\n  uc: 'UC Browser',\n  vivaldi: 'Vivaldi',\n  webos: 'WebOS Browser',\n  wechat: 'WeChat',\n  yandex: 'Yandex Browser',\n};\n\nexport const PLATFORMS_MAP = {\n  tablet: 'tablet',\n  mobile: 'mobile',\n  desktop: 'desktop',\n  tv: 'tv',\n};\n\nexport const OS_MAP = {\n  WindowsPhone: 'Windows Phone',\n  Windows: 'Windows',\n  MacOS: 'macOS',\n  iOS: 'iOS',\n  Android: 'Android',\n  WebOS: 'WebOS',\n  BlackBerry: 'BlackBerry',\n  Bada: 'Bada',\n  Tizen: 'Tizen',\n  Linux: 'Linux',\n  ChromeOS: 'Chrome OS',\n  PlayStation4: 'PlayStation 4',\n  Roku: 'Roku',\n};\n\nexport const ENGINE_MAP = {\n  EdgeHTML: 'EdgeHTML',\n  Blink: 'Blink',\n  Trident: 'Trident',\n  Presto: 'Presto',\n  Gecko: 'Gecko',\n  WebKit: 'WebKit',\n};\n","import { BROWSER_MAP, BROWSER_ALIASES_MAP } from './constants.js';\n\nexport default class Utils {\n  /**\n   * Get first matched item for a string\n   * @param {RegExp} regexp\n   * @param {String} ua\n   * @return {Array|{index: number, input: string}|*|boolean|string}\n   */\n  static getFirstMatch(regexp, ua) {\n    const match = ua.match(regexp);\n    return (match && match.length > 0 && match[1]) || '';\n  }\n\n  /**\n   * Get second matched item for a string\n   * @param regexp\n   * @param {String} ua\n   * @return {Array|{index: number, input: string}|*|boolean|string}\n   */\n  static getSecondMatch(regexp, ua) {\n    const match = ua.match(regexp);\n    return (match && match.length > 1 && match[2]) || '';\n  }\n\n  /**\n   * Match a regexp and return a constant or undefined\n   * @param {RegExp} regexp\n   * @param {String} ua\n   * @param {*} _const Any const that will be returned if regexp matches the string\n   * @return {*}\n   */\n  static matchAndReturnConst(regexp, ua, _const) {\n    if (regexp.test(ua)) {\n      return _const;\n    }\n    return void (0);\n  }\n\n  static getWindowsVersionName(version) {\n    switch (version) {\n      case 'NT': return 'NT';\n      case 'XP': return 'XP';\n      case 'NT 5.0': return '2000';\n      case 'NT 5.1': return 'XP';\n      case 'NT 5.2': return '2003';\n      case 'NT 6.0': return 'Vista';\n      case 'NT 6.1': return '7';\n      case 'NT 6.2': return '8';\n      case 'NT 6.3': return '8.1';\n      case 'NT 10.0': return '10';\n      default: return undefined;\n    }\n  }\n\n  /**\n   * Get macOS version name\n   *    10.5 - Leopard\n   *    10.6 - Snow Leopard\n   *    10.7 - Lion\n   *    10.8 - Mountain Lion\n   *    10.9 - Mavericks\n   *    10.10 - Yosemite\n   *    10.11 - El Capitan\n   *    10.12 - Sierra\n   *    10.13 - High Sierra\n   *    10.14 - Mojave\n   *    10.15 - Catalina\n   *\n   * @example\n   *   getMacOSVersionName(\"10.14\") // 'Mojave'\n   *\n   * @param  {string} version\n   * @return {string} versionName\n   */\n  static getMacOSVersionName(version) {\n    const v = version.split('.').splice(0, 2).map(s => parseInt(s, 10) || 0);\n    v.push(0);\n    if (v[0] !== 10) return undefined;\n    switch (v[1]) {\n      case 5: return 'Leopard';\n      case 6: return 'Snow Leopard';\n      case 7: return 'Lion';\n      case 8: return 'Mountain Lion';\n      case 9: return 'Mavericks';\n      case 10: return 'Yosemite';\n      case 11: return 'El Capitan';\n      case 12: return 'Sierra';\n      case 13: return 'High Sierra';\n      case 14: return 'Mojave';\n      case 15: return 'Catalina';\n      default: return undefined;\n    }\n  }\n\n  /**\n   * Get Android version name\n   *    1.5 - Cupcake\n   *    1.6 - Donut\n   *    2.0 - Eclair\n   *    2.1 - Eclair\n   *    2.2 - Froyo\n   *    2.x - Gingerbread\n   *    3.x - Honeycomb\n   *    4.0 - Ice Cream Sandwich\n   *    4.1 - Jelly Bean\n   *    4.4 - KitKat\n   *    5.x - Lollipop\n   *    6.x - Marshmallow\n   *    7.x - Nougat\n   *    8.x - Oreo\n   *    9.x - Pie\n   *\n   * @example\n   *   getAndroidVersionName(\"7.0\") // 'Nougat'\n   *\n   * @param  {string} version\n   * @return {string} versionName\n   */\n  static getAndroidVersionName(version) {\n    const v = version.split('.').splice(0, 2).map(s => parseInt(s, 10) || 0);\n    v.push(0);\n    if (v[0] === 1 && v[1] < 5) return undefined;\n    if (v[0] === 1 && v[1] < 6) return 'Cupcake';\n    if (v[0] === 1 && v[1] >= 6) return 'Donut';\n    if (v[0] === 2 && v[1] < 2) return 'Eclair';\n    if (v[0] === 2 && v[1] === 2) return 'Froyo';\n    if (v[0] === 2 && v[1] > 2) return 'Gingerbread';\n    if (v[0] === 3) return 'Honeycomb';\n    if (v[0] === 4 && v[1] < 1) return 'Ice Cream Sandwich';\n    if (v[0] === 4 && v[1] < 4) return 'Jelly Bean';\n    if (v[0] === 4 && v[1] >= 4) return 'KitKat';\n    if (v[0] === 5) return 'Lollipop';\n    if (v[0] === 6) return 'Marshmallow';\n    if (v[0] === 7) return 'Nougat';\n    if (v[0] === 8) return 'Oreo';\n    if (v[0] === 9) return 'Pie';\n    return undefined;\n  }\n\n  /**\n   * Get version precisions count\n   *\n   * @example\n   *   getVersionPrecision(\"1.10.3\") // 3\n   *\n   * @param  {string} version\n   * @return {number}\n   */\n  static getVersionPrecision(version) {\n    return version.split('.').length;\n  }\n\n  /**\n   * Calculate browser version weight\n   *\n   * @example\n   *   compareVersions('1.10.2.1',  '1.8.2.1.90')    // 1\n   *   compareVersions('1.010.2.1', '1.09.2.1.90');  // 1\n   *   compareVersions('1.10.2.1',  '1.10.2.1');     // 0\n   *   compareVersions('1.10.2.1',  '1.0800.2');     // -1\n   *   compareVersions('1.10.2.1',  '1.10',  true);  // 0\n   *\n   * @param {String} versionA versions versions to compare\n   * @param {String} versionB versions versions to compare\n   * @param {boolean} [isLoose] enable loose comparison\n   * @return {Number} comparison result: -1 when versionA is lower,\n   * 1 when versionA is bigger, 0 when both equal\n   */\n  /* eslint consistent-return: 1 */\n  static compareVersions(versionA, versionB, isLoose = false) {\n    // 1) get common precision for both versions, for example for \"10.0\" and \"9\" it should be 2\n    const versionAPrecision = Utils.getVersionPrecision(versionA);\n    const versionBPrecision = Utils.getVersionPrecision(versionB);\n\n    let precision = Math.max(versionAPrecision, versionBPrecision);\n    let lastPrecision = 0;\n\n    const chunks = Utils.map([versionA, versionB], (version) => {\n      const delta = precision - Utils.getVersionPrecision(version);\n\n      // 2) \"9\" -> \"9.0\" (for precision = 2)\n      const _version = version + new Array(delta + 1).join('.0');\n\n      // 3) \"9.0\" -> [\"000000000\"\", \"000000009\"]\n      return Utils.map(_version.split('.'), chunk => new Array(20 - chunk.length).join('0') + chunk).reverse();\n    });\n\n    // adjust precision for loose comparison\n    if (isLoose) {\n      lastPrecision = precision - Math.min(versionAPrecision, versionBPrecision);\n    }\n\n    // iterate in reverse order by reversed chunks array\n    precision -= 1;\n    while (precision >= lastPrecision) {\n      // 4) compare: \"000000009\" > \"000000010\" = false (but \"9\" > \"10\" = true)\n      if (chunks[0][precision] > chunks[1][precision]) {\n        return 1;\n      }\n\n      if (chunks[0][precision] === chunks[1][precision]) {\n        if (precision === lastPrecision) {\n          // all version chunks are same\n          return 0;\n        }\n\n        precision -= 1;\n      } else if (chunks[0][precision] < chunks[1][precision]) {\n        return -1;\n      }\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Array::map polyfill\n   *\n   * @param  {Array} arr\n   * @param  {Function} iterator\n   * @return {Array}\n   */\n  static map(arr, iterator) {\n    const result = [];\n    let i;\n    if (Array.prototype.map) {\n      return Array.prototype.map.call(arr, iterator);\n    }\n    for (i = 0; i < arr.length; i += 1) {\n      result.push(iterator(arr[i]));\n    }\n    return result;\n  }\n\n  /**\n   * Array::find polyfill\n   *\n   * @param  {Array} arr\n   * @param  {Function} predicate\n   * @return {Array}\n   */\n  static find(arr, predicate) {\n    let i;\n    let l;\n    if (Array.prototype.find) {\n      return Array.prototype.find.call(arr, predicate);\n    }\n    for (i = 0, l = arr.length; i < l; i += 1) {\n      const value = arr[i];\n      if (predicate(value, i)) {\n        return value;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Object::assign polyfill\n   *\n   * @param  {Object} obj\n   * @param  {Object} ...objs\n   * @return {Object}\n   */\n  static assign(obj, ...assigners) {\n    const result = obj;\n    let i;\n    let l;\n    if (Object.assign) {\n      return Object.assign(obj, ...assigners);\n    }\n    for (i = 0, l = assigners.length; i < l; i += 1) {\n      const assigner = assigners[i];\n      if (typeof assigner === 'object' && assigner !== null) {\n        const keys = Object.keys(assigner);\n        keys.forEach((key) => {\n          result[key] = assigner[key];\n        });\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Get short version/alias for a browser name\n   *\n   * @example\n   *   getBrowserAlias('Microsoft Edge') // edge\n   *\n   * @param  {string} browserName\n   * @return {string}\n   */\n  static getBrowserAlias(browserName) {\n    return BROWSER_ALIASES_MAP[browserName];\n  }\n\n  /**\n   * Get short version/alias for a browser name\n   *\n   * @example\n   *   getBrowserAlias('edge') // Microsoft Edge\n   *\n   * @param  {string} browserAlias\n   * @return {string}\n   */\n  static getBrowserTypeByAlias(browserAlias) {\n    return BROWSER_MAP[browserAlias] || '';\n  }\n}\n","/**\n * Browsers' descriptors\n *\n * The idea of descriptors is simple. You should know about them two simple things:\n * 1. Every descriptor has a method or property called `test` and a `describe` method.\n * 2. Order of descriptors is important.\n *\n * More details:\n * 1. Method or property `test` serves as a way to detect whether the UA string\n * matches some certain browser or not. The `describe` method helps to make a result\n * object with params that show some browser-specific things: name, version, etc.\n * 2. Order of descriptors is important because a Parser goes through them one by one\n * in course. For example, if you insert Chrome's descriptor as the first one,\n * more then a half of browsers will be described as Chrome, because they will pass\n * the Chrome descriptor's test.\n *\n * Descriptor's `test` could be a property with an array of RegExps, where every RegExp\n * will be applied to a UA string to test it whether it matches or not.\n * If a descriptor has two or more regexps in the `test` array it tests them one by one\n * with a logical sum operation. Parser stops if it has found any RegExp that matches the UA.\n *\n * Or `test` could be a method. In that case it gets a Parser instance and should\n * return true/false to get the Parser know if this browser descriptor matches the UA or not.\n */\n\nimport Utils from './utils.js';\n\nconst commonVersionIdentifier = /version\\/(\\d+(\\.?_?\\d+)+)/i;\n\nconst browsersList = [\n  /* Googlebot */\n  {\n    test: [/googlebot/i],\n    describe(ua) {\n      const browser = {\n        name: 'Googlebot',\n      };\n      const version = Utils.getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* Opera < 13.0 */\n  {\n    test: [/opera/i],\n    describe(ua) {\n      const browser = {\n        name: 'Opera',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:opera)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* Opera > 13.0 */\n  {\n    test: [/opr\\/|opios/i],\n    describe(ua) {\n      const browser = {\n        name: 'Opera',\n      };\n      const version = Utils.getFirstMatch(/(?:opr|opios)[\\s/](\\S+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/SamsungBrowser/i],\n    describe(ua) {\n      const browser = {\n        name: 'Samsung Internet for Android',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:SamsungBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/Whale/i],\n    describe(ua) {\n      const browser = {\n        name: 'NAVER Whale Browser',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:whale)[\\s/](\\d+(?:\\.\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/MZBrowser/i],\n    describe(ua) {\n      const browser = {\n        name: 'MZ Browser',\n      };\n      const version = Utils.getFirstMatch(/(?:MZBrowser)[\\s/](\\d+(?:\\.\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/focus/i],\n    describe(ua) {\n      const browser = {\n        name: 'Focus',\n      };\n      const version = Utils.getFirstMatch(/(?:focus)[\\s/](\\d+(?:\\.\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/swing/i],\n    describe(ua) {\n      const browser = {\n        name: 'Swing',\n      };\n      const version = Utils.getFirstMatch(/(?:swing)[\\s/](\\d+(?:\\.\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/coast/i],\n    describe(ua) {\n      const browser = {\n        name: 'Opera Coast',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:coast)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/opt\\/\\d+(?:.?_?\\d+)+/i],\n    describe(ua) {\n      const browser = {\n        name: 'Opera Touch',\n      };\n      const version = Utils.getFirstMatch(/(?:opt)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/yabrowser/i],\n    describe(ua) {\n      const browser = {\n        name: 'Yandex Browser',\n      };\n      const version = Utils.getFirstMatch(/(?:yabrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/ucbrowser/i],\n    describe(ua) {\n      const browser = {\n        name: 'UC Browser',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:ucbrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/Maxthon|mxios/i],\n    describe(ua) {\n      const browser = {\n        name: 'Maxthon',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:Maxthon|mxios)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/epiphany/i],\n    describe(ua) {\n      const browser = {\n        name: 'Epiphany',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:epiphany)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/puffin/i],\n    describe(ua) {\n      const browser = {\n        name: 'Puffin',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:puffin)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/sleipnir/i],\n    describe(ua) {\n      const browser = {\n        name: 'Sleipnir',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:sleipnir)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/k-meleon/i],\n    describe(ua) {\n      const browser = {\n        name: 'K-Meleon',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:k-meleon)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/micromessenger/i],\n    describe(ua) {\n      const browser = {\n        name: 'WeChat',\n      };\n      const version = Utils.getFirstMatch(/(?:micromessenger)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/qqbrowser/i],\n    describe(ua) {\n      const browser = {\n        name: (/qqbrowserlite/i).test(ua) ? 'QQ Browser Lite' : 'QQ Browser',\n      };\n      const version = Utils.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/msie|trident/i],\n    describe(ua) {\n      const browser = {\n        name: 'Internet Explorer',\n      };\n      const version = Utils.getFirstMatch(/(?:msie |rv:)(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/\\sedg\\//i],\n    describe(ua) {\n      const browser = {\n        name: 'Microsoft Edge',\n      };\n\n      const version = Utils.getFirstMatch(/\\sedg\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/edg([ea]|ios)/i],\n    describe(ua) {\n      const browser = {\n        name: 'Microsoft Edge',\n      };\n\n      const version = Utils.getSecondMatch(/edg([ea]|ios)\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/vivaldi/i],\n    describe(ua) {\n      const browser = {\n        name: 'Vivaldi',\n      };\n      const version = Utils.getFirstMatch(/vivaldi\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/seamonkey/i],\n    describe(ua) {\n      const browser = {\n        name: 'SeaMonkey',\n      };\n      const version = Utils.getFirstMatch(/seamonkey\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/sailfish/i],\n    describe(ua) {\n      const browser = {\n        name: 'Sailfish',\n      };\n\n      const version = Utils.getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/silk/i],\n    describe(ua) {\n      const browser = {\n        name: 'Amazon Silk',\n      };\n      const version = Utils.getFirstMatch(/silk\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/phantom/i],\n    describe(ua) {\n      const browser = {\n        name: 'PhantomJS',\n      };\n      const version = Utils.getFirstMatch(/phantomjs\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/slimerjs/i],\n    describe(ua) {\n      const browser = {\n        name: 'SlimerJS',\n      };\n      const version = Utils.getFirstMatch(/slimerjs\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/blackberry|\\bbb\\d+/i, /rim\\stablet/i],\n    describe(ua) {\n      const browser = {\n        name: 'BlackBerry',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/(web|hpw)[o0]s/i],\n    describe(ua) {\n      const browser = {\n        name: 'WebOS Browser',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/w(?:eb)?[o0]sbrowser\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/bada/i],\n    describe(ua) {\n      const browser = {\n        name: 'Bada',\n      };\n      const version = Utils.getFirstMatch(/dolfin\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/tizen/i],\n    describe(ua) {\n      const browser = {\n        name: 'Tizen',\n      };\n      const version = Utils.getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/qupzilla/i],\n    describe(ua) {\n      const browser = {\n        name: 'QupZilla',\n      };\n      const version = Utils.getFirstMatch(/(?:qupzilla)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/firefox|iceweasel|fxios/i],\n    describe(ua) {\n      const browser = {\n        name: 'Firefox',\n      };\n      const version = Utils.getFirstMatch(/(?:firefox|iceweasel|fxios)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/electron/i],\n    describe(ua) {\n      const browser = {\n        name: 'Electron',\n      };\n      const version = Utils.getFirstMatch(/(?:electron)\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/MiuiBrowser/i],\n    describe(ua) {\n      const browser = {\n        name: 'Miui',\n      };\n      const version = Utils.getFirstMatch(/(?:MiuiBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/chromium/i],\n    describe(ua) {\n      const browser = {\n        name: 'Chromium',\n      };\n      const version = Utils.getFirstMatch(/(?:chromium)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/chrome|crios|crmo/i],\n    describe(ua) {\n      const browser = {\n        name: 'Chrome',\n      };\n      const version = Utils.getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/GSA/i],\n    describe(ua) {\n      const browser = {\n        name: 'Google Search',\n      };\n      const version = Utils.getFirstMatch(/(?:GSA)\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* Android Browser */\n  {\n    test(parser) {\n      const notLikeAndroid = !parser.test(/like android/i);\n      const butAndroid = parser.test(/android/i);\n      return notLikeAndroid && butAndroid;\n    },\n    describe(ua) {\n      const browser = {\n        name: 'Android Browser',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* PlayStation 4 */\n  {\n    test: [/playstation 4/i],\n    describe(ua) {\n      const browser = {\n        name: 'PlayStation 4',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* Safari */\n  {\n    test: [/safari|applewebkit/i],\n    describe(ua) {\n      const browser = {\n        name: 'Safari',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* Something else */\n  {\n    test: [/.*/i],\n    describe(ua) {\n      /* Here we try to make sure that there are explicit details about the device\n       * in order to decide what regexp exactly we want to apply\n       * (as there is a specific decision based on that conclusion)\n       */\n      const regexpWithoutDeviceSpec = /^(.*)\\/(.*) /;\n      const regexpWithDeviceSpec = /^(.*)\\/(.*)[ \\t]\\((.*)/;\n      const hasDeviceSpec = ua.search('\\\\(') !== -1;\n      const regexp = hasDeviceSpec ? regexpWithDeviceSpec : regexpWithoutDeviceSpec;\n      return {\n        name: Utils.getFirstMatch(regexp, ua),\n        version: Utils.getSecondMatch(regexp, ua),\n      };\n    },\n  },\n];\n\nexport default browsersList;\n","import Utils from './utils.js';\nimport { OS_MAP } from './constants.js';\n\nexport default [\n  /* Roku */\n  {\n    test: [/Roku\\/DVP/],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/Roku\\/DVP-(\\d+\\.\\d+)/i, ua);\n      return {\n        name: OS_MAP.Roku,\n        version,\n      };\n    },\n  },\n\n  /* Windows Phone */\n  {\n    test: [/windows phone/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i, ua);\n      return {\n        name: OS_MAP.WindowsPhone,\n        version,\n      };\n    },\n  },\n\n  /* Windows */\n  {\n    test: [/windows /i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i, ua);\n      const versionName = Utils.getWindowsVersionName(version);\n\n      return {\n        name: OS_MAP.Windows,\n        version,\n        versionName,\n      };\n    },\n  },\n\n  /* Firefox on iPad */\n  {\n    test: [/Macintosh(.*?) FxiOS(.*?)\\//],\n    describe(ua) {\n      const result = {\n        name: OS_MAP.iOS,\n      };\n      const version = Utils.getSecondMatch(/(Version\\/)(\\d[\\d.]+)/, ua);\n      if (version) {\n        result.version = version;\n      }\n      return result;\n    },\n  },\n\n  /* macOS */\n  {\n    test: [/macintosh/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/mac os x (\\d+(\\.?_?\\d+)+)/i, ua).replace(/[_\\s]/g, '.');\n      const versionName = Utils.getMacOSVersionName(version);\n\n      const os = {\n        name: OS_MAP.MacOS,\n        version,\n      };\n      if (versionName) {\n        os.versionName = versionName;\n      }\n      return os;\n    },\n  },\n\n  /* iOS */\n  {\n    test: [/(ipod|iphone|ipad)/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i, ua).replace(/[_\\s]/g, '.');\n\n      return {\n        name: OS_MAP.iOS,\n        version,\n      };\n    },\n  },\n\n  /* Android */\n  {\n    test(parser) {\n      const notLikeAndroid = !parser.test(/like android/i);\n      const butAndroid = parser.test(/android/i);\n      return notLikeAndroid && butAndroid;\n    },\n    describe(ua) {\n      const version = Utils.getFirstMatch(/android[\\s/-](\\d+(\\.\\d+)*)/i, ua);\n      const versionName = Utils.getAndroidVersionName(version);\n      const os = {\n        name: OS_MAP.Android,\n        version,\n      };\n      if (versionName) {\n        os.versionName = versionName;\n      }\n      return os;\n    },\n  },\n\n  /* WebOS */\n  {\n    test: [/(web|hpw)[o0]s/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/(?:web|hpw)[o0]s\\/(\\d+(\\.\\d+)*)/i, ua);\n      const os = {\n        name: OS_MAP.WebOS,\n      };\n\n      if (version && version.length) {\n        os.version = version;\n      }\n      return os;\n    },\n  },\n\n  /* BlackBerry */\n  {\n    test: [/blackberry|\\bbb\\d+/i, /rim\\stablet/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i, ua)\n        || Utils.getFirstMatch(/blackberry\\d+\\/(\\d+([_\\s]\\d+)*)/i, ua)\n        || Utils.getFirstMatch(/\\bbb(\\d+)/i, ua);\n\n      return {\n        name: OS_MAP.BlackBerry,\n        version,\n      };\n    },\n  },\n\n  /* Bada */\n  {\n    test: [/bada/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i, ua);\n\n      return {\n        name: OS_MAP.Bada,\n        version,\n      };\n    },\n  },\n\n  /* Tizen */\n  {\n    test: [/tizen/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/tizen[/\\s](\\d+(\\.\\d+)*)/i, ua);\n\n      return {\n        name: OS_MAP.Tizen,\n        version,\n      };\n    },\n  },\n\n  /* Linux */\n  {\n    test: [/linux/i],\n    describe() {\n      return {\n        name: OS_MAP.Linux,\n      };\n    },\n  },\n\n  /* Chrome OS */\n  {\n    test: [/CrOS/],\n    describe() {\n      return {\n        name: OS_MAP.ChromeOS,\n      };\n    },\n  },\n\n  /* Playstation 4 */\n  {\n    test: [/PlayStation 4/],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/PlayStation 4[/\\s](\\d+(\\.\\d+)*)/i, ua);\n      return {\n        name: OS_MAP.PlayStation4,\n        version,\n      };\n    },\n  },\n];\n","import Utils from './utils.js';\nimport { PLATFORMS_MAP } from './constants.js';\n\n/*\n * Tablets go first since usually they have more specific\n * signs to detect.\n */\n\nexport default [\n  /* Googlebot */\n  {\n    test: [/googlebot/i],\n    describe() {\n      return {\n        type: 'bot',\n        vendor: 'Google',\n      };\n    },\n  },\n\n  /* Huawei */\n  {\n    test: [/huawei/i],\n    describe(ua) {\n      const model = Utils.getFirstMatch(/(can-l01)/i, ua) && 'Nova';\n      const platform = {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'Huawei',\n      };\n      if (model) {\n        platform.model = model;\n      }\n      return platform;\n    },\n  },\n\n  /* Nexus Tablet */\n  {\n    test: [/nexus\\s*(?:7|8|9|10).*/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n        vendor: 'Nexus',\n      };\n    },\n  },\n\n  /* iPad */\n  {\n    test: [/ipad/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n        vendor: 'Apple',\n        model: 'iPad',\n      };\n    },\n  },\n\n  /* Firefox on iPad */\n  {\n    test: [/Macintosh(.*?) FxiOS(.*?)\\//],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n        vendor: 'Apple',\n        model: 'iPad',\n      };\n    },\n  },\n\n  /* Amazon Kindle Fire */\n  {\n    test: [/kftt build/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n        vendor: 'Amazon',\n        model: 'Kindle Fire HD 7',\n      };\n    },\n  },\n\n  /* Another Amazon Tablet with Silk */\n  {\n    test: [/silk/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n        vendor: 'Amazon',\n      };\n    },\n  },\n\n  /* Tablet */\n  {\n    test: [/tablet(?! pc)/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n      };\n    },\n  },\n\n  /* iPod/iPhone */\n  {\n    test(parser) {\n      const iDevice = parser.test(/ipod|iphone/i);\n      const likeIDevice = parser.test(/like (ipod|iphone)/i);\n      return iDevice && !likeIDevice;\n    },\n    describe(ua) {\n      const model = Utils.getFirstMatch(/(ipod|iphone)/i, ua);\n      return {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'Apple',\n        model,\n      };\n    },\n  },\n\n  /* Nexus Mobile */\n  {\n    test: [/nexus\\s*[0-6].*/i, /galaxy nexus/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'Nexus',\n      };\n    },\n  },\n\n  /* Mobile */\n  {\n    test: [/[^-]mobi/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n      };\n    },\n  },\n\n  /* BlackBerry */\n  {\n    test(parser) {\n      return parser.getBrowserName(true) === 'blackberry';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'BlackBerry',\n      };\n    },\n  },\n\n  /* Bada */\n  {\n    test(parser) {\n      return parser.getBrowserName(true) === 'bada';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n      };\n    },\n  },\n\n  /* Windows Phone */\n  {\n    test(parser) {\n      return parser.getBrowserName() === 'windows phone';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'Microsoft',\n      };\n    },\n  },\n\n  /* Android Tablet */\n  {\n    test(parser) {\n      const osMajorVersion = Number(String(parser.getOSVersion()).split('.')[0]);\n      return parser.getOSName(true) === 'android' && (osMajorVersion >= 3);\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n      };\n    },\n  },\n\n  /* Android Mobile */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'android';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n      };\n    },\n  },\n\n  /* desktop */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'macos';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.desktop,\n        vendor: 'Apple',\n      };\n    },\n  },\n\n  /* Windows */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'windows';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.desktop,\n      };\n    },\n  },\n\n  /* Linux */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'linux';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.desktop,\n      };\n    },\n  },\n\n  /* PlayStation 4 */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'playstation 4';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tv,\n      };\n    },\n  },\n\n  /* Roku */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'roku';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tv,\n      };\n    },\n  },\n];\n","import Utils from './utils.js';\nimport { ENGINE_MAP } from './constants.js';\n\n/*\n * More specific goes first\n */\nexport default [\n  /* EdgeHTML */\n  {\n    test(parser) {\n      return parser.getBrowserName(true) === 'microsoft edge';\n    },\n    describe(ua) {\n      const isBlinkBased = /\\sedg\\//i.test(ua);\n\n      // return blink if it's blink-based one\n      if (isBlinkBased) {\n        return {\n          name: ENGINE_MAP.Blink,\n        };\n      }\n\n      // otherwise match the version and return EdgeHTML\n      const version = Utils.getFirstMatch(/edge\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      return {\n        name: ENGINE_MAP.EdgeHTML,\n        version,\n      };\n    },\n  },\n\n  /* Trident */\n  {\n    test: [/trident/i],\n    describe(ua) {\n      const engine = {\n        name: ENGINE_MAP.Trident,\n      };\n\n      const version = Utils.getFirstMatch(/trident\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        engine.version = version;\n      }\n\n      return engine;\n    },\n  },\n\n  /* Presto */\n  {\n    test(parser) {\n      return parser.test(/presto/i);\n    },\n    describe(ua) {\n      const engine = {\n        name: ENGINE_MAP.Presto,\n      };\n\n      const version = Utils.getFirstMatch(/presto\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        engine.version = version;\n      }\n\n      return engine;\n    },\n  },\n\n  /* Gecko */\n  {\n    test(parser) {\n      const isGecko = parser.test(/gecko/i);\n      const likeGecko = parser.test(/like gecko/i);\n      return isGecko && !likeGecko;\n    },\n    describe(ua) {\n      const engine = {\n        name: ENGINE_MAP.Gecko,\n      };\n\n      const version = Utils.getFirstMatch(/gecko\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        engine.version = version;\n      }\n\n      return engine;\n    },\n  },\n\n  /* Blink */\n  {\n    test: [/(apple)?webkit\\/537\\.36/i],\n    describe() {\n      return {\n        name: ENGINE_MAP.Blink,\n      };\n    },\n  },\n\n  /* WebKit */\n  {\n    test: [/(apple)?webkit/i],\n    describe(ua) {\n      const engine = {\n        name: ENGINE_MAP.WebKit,\n      };\n\n      const version = Utils.getFirstMatch(/webkit\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        engine.version = version;\n      }\n\n      return engine;\n    },\n  },\n];\n","import browserParsersList from './parser-browsers.js';\nimport osParsersList from './parser-os.js';\nimport platformParsersList from './parser-platforms.js';\nimport enginesParsersList from './parser-engines.js';\nimport Utils from './utils.js';\n\n/**\n * The main class that arranges the whole parsing process.\n */\nclass Parser {\n  /**\n   * Create instance of Parser\n   *\n   * @param {String} UA User-Agent string\n   * @param {Boolean} [skipParsing=false] parser can skip parsing in purpose of performance\n   * improvements if you need to make a more particular parsing\n   * like {@link Parser#parseBrowser} or {@link Parser#parsePlatform}\n   *\n   * @throw {Error} in case of empty UA String\n   *\n   * @constructor\n   */\n  constructor(UA, skipParsing = false) {\n    if (UA === void (0) || UA === null || UA === '') {\n      throw new Error(\"UserAgent parameter can't be empty\");\n    }\n\n    this._ua = UA;\n\n    /**\n     * @typedef ParsedResult\n     * @property {Object} browser\n     * @property {String|undefined} [browser.name]\n     * Browser name, like `\"Chrome\"` or `\"Internet Explorer\"`\n     * @property {String|undefined} [browser.version] Browser version as a String `\"12.01.45334.10\"`\n     * @property {Object} os\n     * @property {String|undefined} [os.name] OS name, like `\"Windows\"` or `\"macOS\"`\n     * @property {String|undefined} [os.version] OS version, like `\"NT 5.1\"` or `\"10.11.1\"`\n     * @property {String|undefined} [os.versionName] OS name, like `\"XP\"` or `\"High Sierra\"`\n     * @property {Object} platform\n     * @property {String|undefined} [platform.type]\n     * platform type, can be either `\"desktop\"`, `\"tablet\"` or `\"mobile\"`\n     * @property {String|undefined} [platform.vendor] Vendor of the device,\n     * like `\"Apple\"` or `\"Samsung\"`\n     * @property {String|undefined} [platform.model] Device model,\n     * like `\"iPhone\"` or `\"Kindle Fire HD 7\"`\n     * @property {Object} engine\n     * @property {String|undefined} [engine.name]\n     * Can be any of this: `WebKit`, `Blink`, `Gecko`, `Trident`, `Presto`, `EdgeHTML`\n     * @property {String|undefined} [engine.version] String version of the engine\n     */\n    this.parsedResult = {};\n\n    if (skipParsing !== true) {\n      this.parse();\n    }\n  }\n\n  /**\n   * Get UserAgent string of current Parser instance\n   * @return {String} User-Agent String of the current <Parser> object\n   *\n   * @public\n   */\n  getUA() {\n    return this._ua;\n  }\n\n  /**\n   * Test a UA string for a regexp\n   * @param {RegExp} regex\n   * @return {Boolean}\n   */\n  test(regex) {\n    return regex.test(this._ua);\n  }\n\n  /**\n   * Get parsed browser object\n   * @return {Object}\n   */\n  parseBrowser() {\n    this.parsedResult.browser = {};\n\n    const browserDescriptor = Utils.find(browserParsersList, (_browser) => {\n      if (typeof _browser.test === 'function') {\n        return _browser.test(this);\n      }\n\n      if (_browser.test instanceof Array) {\n        return _browser.test.some(condition => this.test(condition));\n      }\n\n      throw new Error(\"Browser's test function is not valid\");\n    });\n\n    if (browserDescriptor) {\n      this.parsedResult.browser = browserDescriptor.describe(this.getUA());\n    }\n\n    return this.parsedResult.browser;\n  }\n\n  /**\n   * Get parsed browser object\n   * @return {Object}\n   *\n   * @public\n   */\n  getBrowser() {\n    if (this.parsedResult.browser) {\n      return this.parsedResult.browser;\n    }\n\n    return this.parseBrowser();\n  }\n\n  /**\n   * Get browser's name\n   * @return {String} Browser's name or an empty string\n   *\n   * @public\n   */\n  getBrowserName(toLowerCase) {\n    if (toLowerCase) {\n      return String(this.getBrowser().name).toLowerCase() || '';\n    }\n    return this.getBrowser().name || '';\n  }\n\n\n  /**\n   * Get browser's version\n   * @return {String} version of browser\n   *\n   * @public\n   */\n  getBrowserVersion() {\n    return this.getBrowser().version;\n  }\n\n  /**\n   * Get OS\n   * @return {Object}\n   *\n   * @example\n   * this.getOS();\n   * {\n   *   name: 'macOS',\n   *   version: '10.11.12'\n   * }\n   */\n  getOS() {\n    if (this.parsedResult.os) {\n      return this.parsedResult.os;\n    }\n\n    return this.parseOS();\n  }\n\n  /**\n   * Parse OS and save it to this.parsedResult.os\n   * @return {*|{}}\n   */\n  parseOS() {\n    this.parsedResult.os = {};\n\n    const os = Utils.find(osParsersList, (_os) => {\n      if (typeof _os.test === 'function') {\n        return _os.test(this);\n      }\n\n      if (_os.test instanceof Array) {\n        return _os.test.some(condition => this.test(condition));\n      }\n\n      throw new Error(\"Browser's test function is not valid\");\n    });\n\n    if (os) {\n      this.parsedResult.os = os.describe(this.getUA());\n    }\n\n    return this.parsedResult.os;\n  }\n\n  /**\n   * Get OS name\n   * @param {Boolean} [toLowerCase] return lower-cased value\n   * @return {String} name of the OS — macOS, Windows, Linux, etc.\n   */\n  getOSName(toLowerCase) {\n    const { name } = this.getOS();\n\n    if (toLowerCase) {\n      return String(name).toLowerCase() || '';\n    }\n\n    return name || '';\n  }\n\n  /**\n   * Get OS version\n   * @return {String} full version with dots ('10.11.12', '5.6', etc)\n   */\n  getOSVersion() {\n    return this.getOS().version;\n  }\n\n  /**\n   * Get parsed platform\n   * @return {{}}\n   */\n  getPlatform() {\n    if (this.parsedResult.platform) {\n      return this.parsedResult.platform;\n    }\n\n    return this.parsePlatform();\n  }\n\n  /**\n   * Get platform name\n   * @param {Boolean} [toLowerCase=false]\n   * @return {*}\n   */\n  getPlatformType(toLowerCase = false) {\n    const { type } = this.getPlatform();\n\n    if (toLowerCase) {\n      return String(type).toLowerCase() || '';\n    }\n\n    return type || '';\n  }\n\n  /**\n   * Get parsed platform\n   * @return {{}}\n   */\n  parsePlatform() {\n    this.parsedResult.platform = {};\n\n    const platform = Utils.find(platformParsersList, (_platform) => {\n      if (typeof _platform.test === 'function') {\n        return _platform.test(this);\n      }\n\n      if (_platform.test instanceof Array) {\n        return _platform.test.some(condition => this.test(condition));\n      }\n\n      throw new Error(\"Browser's test function is not valid\");\n    });\n\n    if (platform) {\n      this.parsedResult.platform = platform.describe(this.getUA());\n    }\n\n    return this.parsedResult.platform;\n  }\n\n  /**\n   * Get parsed engine\n   * @return {{}}\n   */\n  getEngine() {\n    if (this.parsedResult.engine) {\n      return this.parsedResult.engine;\n    }\n\n    return this.parseEngine();\n  }\n\n  /**\n   * Get engines's name\n   * @return {String} Engines's name or an empty string\n   *\n   * @public\n   */\n  getEngineName(toLowerCase) {\n    if (toLowerCase) {\n      return String(this.getEngine().name).toLowerCase() || '';\n    }\n    return this.getEngine().name || '';\n  }\n\n  /**\n   * Get parsed platform\n   * @return {{}}\n   */\n  parseEngine() {\n    this.parsedResult.engine = {};\n\n    const engine = Utils.find(enginesParsersList, (_engine) => {\n      if (typeof _engine.test === 'function') {\n        return _engine.test(this);\n      }\n\n      if (_engine.test instanceof Array) {\n        return _engine.test.some(condition => this.test(condition));\n      }\n\n      throw new Error(\"Browser's test function is not valid\");\n    });\n\n    if (engine) {\n      this.parsedResult.engine = engine.describe(this.getUA());\n    }\n\n    return this.parsedResult.engine;\n  }\n\n  /**\n   * Parse full information about the browser\n   * @returns {Parser}\n   */\n  parse() {\n    this.parseBrowser();\n    this.parseOS();\n    this.parsePlatform();\n    this.parseEngine();\n\n    return this;\n  }\n\n  /**\n   * Get parsed result\n   * @return {ParsedResult}\n   */\n  getResult() {\n    return Utils.assign({}, this.parsedResult);\n  }\n\n  /**\n   * Check if parsed browser matches certain conditions\n   *\n   * @param {Object} checkTree It's one or two layered object,\n   * which can include a platform or an OS on the first layer\n   * and should have browsers specs on the bottom-laying layer\n   *\n   * @returns {Boolean|undefined} Whether the browser satisfies the set conditions or not.\n   * Returns `undefined` when the browser is no described in the checkTree object.\n   *\n   * @example\n   * const browser = Bowser.getParser(window.navigator.userAgent);\n   * if (browser.satisfies({chrome: '>118.01.1322' }))\n   * // or with os\n   * if (browser.satisfies({windows: { chrome: '>118.01.1322' } }))\n   * // or with platforms\n   * if (browser.satisfies({desktop: { chrome: '>118.01.1322' } }))\n   */\n  satisfies(checkTree) {\n    const platformsAndOSes = {};\n    let platformsAndOSCounter = 0;\n    const browsers = {};\n    let browsersCounter = 0;\n\n    const allDefinitions = Object.keys(checkTree);\n\n    allDefinitions.forEach((key) => {\n      const currentDefinition = checkTree[key];\n      if (typeof currentDefinition === 'string') {\n        browsers[key] = currentDefinition;\n        browsersCounter += 1;\n      } else if (typeof currentDefinition === 'object') {\n        platformsAndOSes[key] = currentDefinition;\n        platformsAndOSCounter += 1;\n      }\n    });\n\n    if (platformsAndOSCounter > 0) {\n      const platformsAndOSNames = Object.keys(platformsAndOSes);\n      const OSMatchingDefinition = Utils.find(platformsAndOSNames, name => (this.isOS(name)));\n\n      if (OSMatchingDefinition) {\n        const osResult = this.satisfies(platformsAndOSes[OSMatchingDefinition]);\n\n        if (osResult !== void 0) {\n          return osResult;\n        }\n      }\n\n      const platformMatchingDefinition = Utils.find(\n        platformsAndOSNames,\n        name => (this.isPlatform(name)),\n      );\n      if (platformMatchingDefinition) {\n        const platformResult = this.satisfies(platformsAndOSes[platformMatchingDefinition]);\n\n        if (platformResult !== void 0) {\n          return platformResult;\n        }\n      }\n    }\n\n    if (browsersCounter > 0) {\n      const browserNames = Object.keys(browsers);\n      const matchingDefinition = Utils.find(browserNames, name => (this.isBrowser(name, true)));\n\n      if (matchingDefinition !== void 0) {\n        return this.compareVersion(browsers[matchingDefinition]);\n      }\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Check if the browser name equals the passed string\n   * @param browserName The string to compare with the browser name\n   * @param [includingAlias=false] The flag showing whether alias will be included into comparison\n   * @returns {boolean}\n   */\n  isBrowser(browserName, includingAlias = false) {\n    const defaultBrowserName = this.getBrowserName().toLowerCase();\n    let browserNameLower = browserName.toLowerCase();\n    const alias = Utils.getBrowserTypeByAlias(browserNameLower);\n\n    if (includingAlias && alias) {\n      browserNameLower = alias.toLowerCase();\n    }\n    return browserNameLower === defaultBrowserName;\n  }\n\n  compareVersion(version) {\n    let expectedResults = [0];\n    let comparableVersion = version;\n    let isLoose = false;\n\n    const currentBrowserVersion = this.getBrowserVersion();\n\n    if (typeof currentBrowserVersion !== 'string') {\n      return void 0;\n    }\n\n    if (version[0] === '>' || version[0] === '<') {\n      comparableVersion = version.substr(1);\n      if (version[1] === '=') {\n        isLoose = true;\n        comparableVersion = version.substr(2);\n      } else {\n        expectedResults = [];\n      }\n      if (version[0] === '>') {\n        expectedResults.push(1);\n      } else {\n        expectedResults.push(-1);\n      }\n    } else if (version[0] === '=') {\n      comparableVersion = version.substr(1);\n    } else if (version[0] === '~') {\n      isLoose = true;\n      comparableVersion = version.substr(1);\n    }\n\n    return expectedResults.indexOf(\n      Utils.compareVersions(currentBrowserVersion, comparableVersion, isLoose),\n    ) > -1;\n  }\n\n  isOS(osName) {\n    return this.getOSName(true) === String(osName).toLowerCase();\n  }\n\n  isPlatform(platformType) {\n    return this.getPlatformType(true) === String(platformType).toLowerCase();\n  }\n\n  isEngine(engineName) {\n    return this.getEngineName(true) === String(engineName).toLowerCase();\n  }\n\n  /**\n   * Is anything? Check if the browser is called \"anything\",\n   * the OS called \"anything\" or the platform called \"anything\"\n   * @param {String} anything\n   * @param [includingAlias=false] The flag showing whether alias will be included into comparison\n   * @returns {Boolean}\n   */\n  is(anything, includingAlias = false) {\n    return this.isBrowser(anything, includingAlias) || this.isOS(anything)\n      || this.isPlatform(anything);\n  }\n\n  /**\n   * Check if any of the given values satisfies this.is(anything)\n   * @param {String[]} anythings\n   * @returns {Boolean}\n   */\n  some(anythings = []) {\n    return anythings.some(anything => this.is(anything));\n  }\n}\n\nexport default Parser;\n","/*!\n * Bowser - a browser detector\n * https://github.com/lancedikson/bowser\n * MIT License | (c) Dustin Diaz 2012-2015\n * MIT License | (c) Denis Demchenko 2015-2019\n */\nimport Parser from './parser.js';\nimport {\n  BROWSER_MAP,\n  ENGINE_MAP,\n  OS_MAP,\n  PLATFORMS_MAP,\n} from './constants.js';\n\n/**\n * Bowser class.\n * Keep it simple as much as it can be.\n * It's supposed to work with collections of {@link Parser} instances\n * rather then solve one-instance problems.\n * All the one-instance stuff is located in Parser class.\n *\n * @class\n * @classdesc Bowser is a static object, that provides an API to the Parsers\n * @hideconstructor\n */\nclass Bowser {\n  /**\n   * Creates a {@link Parser} instance\n   *\n   * @param {String} UA UserAgent string\n   * @param {Boolean} [skipParsing=false] Will make the Parser postpone parsing until you ask it\n   * explicitly. Same as `skipParsing` for {@link Parser}.\n   * @returns {Parser}\n   * @throws {Error} when UA is not a String\n   *\n   * @example\n   * const parser = Bowser.getParser(window.navigator.userAgent);\n   * const result = parser.getResult();\n   */\n  static getParser(UA, skipParsing = false) {\n    if (typeof UA !== 'string') {\n      throw new Error('UserAgent should be a string');\n    }\n    return new Parser(UA, skipParsing);\n  }\n\n  /**\n   * Creates a {@link Parser} instance and runs {@link Parser.getResult} immediately\n   *\n   * @param UA\n   * @return {ParsedResult}\n   *\n   * @example\n   * const result = Bowser.parse(window.navigator.userAgent);\n   */\n  static parse(UA) {\n    return (new Parser(UA)).getResult();\n  }\n\n  static get BROWSER_MAP() {\n    return BROWSER_MAP;\n  }\n\n  static get ENGINE_MAP() {\n    return ENGINE_MAP;\n  }\n\n  static get OS_MAP() {\n    return OS_MAP;\n  }\n\n  static get PLATFORMS_MAP() {\n    return PLATFORMS_MAP;\n  }\n}\n\nexport default Bowser;\n","import bowser from \"bowser\";\nexport const defaultUserAgent = ({ serviceId, clientVersion }) => async () => {\n    const parsedUA = typeof window !== \"undefined\" && window?.navigator?.userAgent\n        ? bowser.parse(window.navigator.userAgent)\n        : undefined;\n    const sections = [\n        [\"aws-sdk-js\", clientVersion],\n        [`os/${parsedUA?.os?.name || \"other\"}`, parsedUA?.os?.version],\n        [\"lang/js\"],\n        [\"md/browser\", `${parsedUA?.browser?.name ?? \"unknown\"}_${parsedUA?.browser?.version ?? \"unknown\"}`],\n    ];\n    if (serviceId) {\n        sections.push([`api/${serviceId}`, clientVersion]);\n    }\n    return sections;\n};\n","import partitionsInfo from \"./partitions.json\";\nconst { partitions } = partitionsInfo;\nconst DEFAULT_PARTITION = partitions.find((partition) => partition.id === \"aws\");\nexport const partition = (value) => {\n    for (const partition of partitions) {\n        const { regions, outputs } = partition;\n        for (const [region, regionData] of Object.entries(regions)) {\n            if (region === value) {\n                return {\n                    ...outputs,\n                    ...regionData,\n                };\n            }\n        }\n    }\n    for (const partition of partitions) {\n        const { regionRegex, outputs } = partition;\n        if (new RegExp(regionRegex).test(value)) {\n            return {\n                ...outputs,\n            };\n        }\n    }\n    if (!DEFAULT_PARTITION) {\n        throw new Error(\"Provided region was not found in the partition array or regex,\" +\n            \" and default partition with id 'aws' doesn't exist.\");\n    }\n    return {\n        ...DEFAULT_PARTITION.outputs,\n    };\n};\n","export const debugId = \"endpoints\";\n","export function toDebugString(input) {\n    if (typeof input !== \"object\" || input == null) {\n        return input;\n    }\n    if (\"ref\" in input) {\n        return `$${toDebugString(input.ref)}`;\n    }\n    if (\"fn\" in input) {\n        return `${input.fn}(${(input.argv || []).map(toDebugString).join(\", \")})`;\n    }\n    return JSON.stringify(input, null, 2);\n}\n","export class EndpointError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"EndpointError\";\n    }\n}\n","const IP_V4_REGEX = new RegExp(`^(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}$`);\nexport const isIpAddress = (value) => IP_V4_REGEX.test(value) || (value.startsWith(\"[\") && value.endsWith(\"]\"));\n","const VALID_HOST_LABEL_REGEX = new RegExp(`^(?!.*-$)(?!-)[a-zA-Z0-9-]{1,63}$`);\nexport const isValidHostLabel = (value, allowSubDomains = false) => {\n    if (!allowSubDomains) {\n        return VALID_HOST_LABEL_REGEX.test(value);\n    }\n    const labels = value.split(\".\");\n    for (const label of labels) {\n        if (!isValidHostLabel(label)) {\n            return false;\n        }\n    }\n    return true;\n};\n","import { isIpAddress } from \"../isIpAddress\";\nimport { isValidHostLabel } from \"../isValidHostLabel\";\nexport const isVirtualHostableS3Bucket = (value, allowSubDomains = false) => {\n    if (allowSubDomains) {\n        for (const label of value.split(\".\")) {\n            if (!isVirtualHostableS3Bucket(label)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (!isValidHostLabel(value)) {\n        return false;\n    }\n    if (value.length < 3 || value.length > 63) {\n        return false;\n    }\n    if (value !== value.toLowerCase()) {\n        return false;\n    }\n    if (isIpAddress(value)) {\n        return false;\n    }\n    return true;\n};\n","export const parseArn = (value) => {\n    const segments = value.split(\":\");\n    if (segments.length < 6)\n        return null;\n    const [arn, partition, service, region, accountId, ...resourceId] = segments;\n    if (arn !== \"arn\" || partition === \"\" || service === \"\" || resourceId[0] === \"\")\n        return null;\n    return {\n        partition,\n        service,\n        region,\n        accountId,\n        resourceId: resourceId[0].includes(\"/\") ? resourceId[0].split(\"/\") : resourceId,\n    };\n};\n","export const booleanEquals = (value1, value2) => value1 === value2;\n","import { EndpointError } from \"../types\";\nexport const getAttrPathList = (path) => {\n    const parts = path.split(\".\");\n    const pathList = [];\n    for (const part of parts) {\n        const squareBracketIndex = part.indexOf(\"[\");\n        if (squareBracketIndex !== -1) {\n            if (part.indexOf(\"]\") !== part.length - 1) {\n                throw new EndpointError(`Path: '${path}' does not end with ']'`);\n            }\n            const arrayIndex = part.slice(squareBracketIndex + 1, -1);\n            if (Number.isNaN(parseInt(arrayIndex))) {\n                throw new EndpointError(`Invalid array index: '${arrayIndex}' in path: '${path}'`);\n            }\n            if (squareBracketIndex !== 0) {\n                pathList.push(part.slice(0, squareBracketIndex));\n            }\n            pathList.push(arrayIndex);\n        }\n        else {\n            pathList.push(part);\n        }\n    }\n    return pathList;\n};\n","import { EndpointError } from \"../types\";\nimport { getAttrPathList } from \"./getAttrPathList\";\nexport const getAttr = (value, path) => getAttrPathList(path).reduce((acc, index) => {\n    if (typeof acc !== \"object\") {\n        throw new EndpointError(`Index '${index}' in '${path}' not found in '${JSON.stringify(value)}'`);\n    }\n    else if (Array.isArray(acc)) {\n        return acc[parseInt(index)];\n    }\n    return acc[index];\n}, value);\n","export const isSet = (value) => value != null;\n","export const not = (value) => !value;\n","export var HttpAuthLocation;\n(function (HttpAuthLocation) {\n    HttpAuthLocation[\"HEADER\"] = \"header\";\n    HttpAuthLocation[\"QUERY\"] = \"query\";\n})(HttpAuthLocation || (HttpAuthLocation = {}));\n","export var EndpointURLScheme;\n(function (EndpointURLScheme) {\n    EndpointURLScheme[\"HTTP\"] = \"http\";\n    EndpointURLScheme[\"HTTPS\"] = \"https\";\n})(EndpointURLScheme || (EndpointURLScheme = {}));\n","import { EndpointURLScheme } from \"@aws-sdk/types\";\nimport { isIpAddress } from \"./isIpAddress\";\nconst DEFAULT_PORTS = {\n    [EndpointURLScheme.HTTP]: 80,\n    [EndpointURLScheme.HTTPS]: 443,\n};\nexport const parseURL = (value) => {\n    const whatwgURL = (() => {\n        try {\n            if (value instanceof URL) {\n                return value;\n            }\n            if (typeof value === \"object\" && \"hostname\" in value) {\n                const { hostname, port, protocol = \"\", path = \"\", query = {} } = value;\n                const url = new URL(`${protocol}//${hostname}${port ? `:${port}` : \"\"}${path}`);\n                url.search = Object.entries(query)\n                    .map(([k, v]) => `${k}=${v}`)\n                    .join(\"&\");\n                return url;\n            }\n            return new URL(value);\n        }\n        catch (error) {\n            return null;\n        }\n    })();\n    if (!whatwgURL) {\n        console.error(`Unable to parse ${JSON.stringify(value)} as a whatwg URL.`);\n        return null;\n    }\n    const urlString = whatwgURL.href;\n    const { host, hostname, pathname, protocol, search } = whatwgURL;\n    if (search) {\n        return null;\n    }\n    const scheme = protocol.slice(0, -1);\n    if (!Object.values(EndpointURLScheme).includes(scheme)) {\n        return null;\n    }\n    const isIp = isIpAddress(hostname);\n    const inputContainsDefaultPort = urlString.includes(`${host}:${DEFAULT_PORTS[scheme]}`) ||\n        (typeof value === \"string\" && value.includes(`${host}:${DEFAULT_PORTS[scheme]}`));\n    const authority = `${host}${inputContainsDefaultPort ? `:${DEFAULT_PORTS[scheme]}` : ``}`;\n    return {\n        scheme,\n        authority,\n        path: pathname,\n        normalizedPath: pathname.endsWith(\"/\") ? pathname : `${pathname}/`,\n        isIp,\n    };\n};\n","export const stringEquals = (value1, value2) => value1 === value2;\n","export const substring = (input, start, stop, reverse) => {\n    if (start >= stop || input.length < stop) {\n        return null;\n    }\n    if (!reverse) {\n        return input.substring(start, stop);\n    }\n    return input.substring(input.length - stop, input.length - start);\n};\n","export const uriEncode = (value) => encodeURIComponent(value).replace(/[!*'()]/g, (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`);\n","import { getAttr } from \"../lib\";\nexport const evaluateTemplate = (template, options) => {\n    const evaluatedTemplateArr = [];\n    const templateContext = {\n        ...options.endpointParams,\n        ...options.referenceRecord,\n    };\n    let currentIndex = 0;\n    while (currentIndex < template.length) {\n        const openingBraceIndex = template.indexOf(\"{\", currentIndex);\n        if (openingBraceIndex === -1) {\n            evaluatedTemplateArr.push(template.slice(currentIndex));\n            break;\n        }\n        evaluatedTemplateArr.push(template.slice(currentIndex, openingBraceIndex));\n        const closingBraceIndex = template.indexOf(\"}\", openingBraceIndex);\n        if (closingBraceIndex === -1) {\n            evaluatedTemplateArr.push(template.slice(openingBraceIndex));\n            break;\n        }\n        if (template[openingBraceIndex + 1] === \"{\" && template[closingBraceIndex + 1] === \"}\") {\n            evaluatedTemplateArr.push(template.slice(openingBraceIndex + 1, closingBraceIndex));\n            currentIndex = closingBraceIndex + 2;\n        }\n        const parameterName = template.substring(openingBraceIndex + 1, closingBraceIndex);\n        if (parameterName.includes(\"#\")) {\n            const [refName, attrName] = parameterName.split(\"#\");\n            evaluatedTemplateArr.push(getAttr(templateContext[refName], attrName));\n        }\n        else {\n            evaluatedTemplateArr.push(templateContext[parameterName]);\n        }\n        currentIndex = closingBraceIndex + 1;\n    }\n    return evaluatedTemplateArr.join(\"\");\n};\n","export const getReferenceValue = ({ ref }, options) => {\n    const referenceRecord = {\n        ...options.endpointParams,\n        ...options.referenceRecord,\n    };\n    return referenceRecord[ref];\n};\n","import { EndpointError } from \"../types\";\nimport { callFunction } from \"./callFunction\";\nimport { evaluateTemplate } from \"./evaluateTemplate\";\nimport { getReferenceValue } from \"./getReferenceValue\";\nexport const evaluateExpression = (obj, keyName, options) => {\n    if (typeof obj === \"string\") {\n        return evaluateTemplate(obj, options);\n    }\n    else if (obj[\"fn\"]) {\n        return callFunction(obj, options);\n    }\n    else if (obj[\"ref\"]) {\n        return getReferenceValue(obj, options);\n    }\n    throw new EndpointError(`'${keyName}': ${String(obj)} is not a string, function or reference.`);\n};\n","import * as lib from \"../lib\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const callFunction = ({ fn, argv }, options) => {\n    const evaluatedArgs = argv.map((arg) => [\"boolean\", \"number\"].includes(typeof arg) ? arg : evaluateExpression(arg, \"arg\", options));\n    return fn.split(\".\").reduce((acc, key) => acc[key], lib)(...evaluatedArgs);\n};\n","import { debugId, toDebugString } from \"../debug\";\nimport { EndpointError } from \"../types\";\nimport { callFunction } from \"./callFunction\";\nexport const evaluateCondition = ({ assign, ...fnArgs }, options) => {\n    if (assign && assign in options.referenceRecord) {\n        throw new EndpointError(`'${assign}' is already defined in Reference Record.`);\n    }\n    const value = callFunction(fnArgs, options);\n    options.logger?.debug?.(debugId, `evaluateCondition: ${toDebugString(fnArgs)} = ${toDebugString(value)}`);\n    return {\n        result: value === \"\" ? true : !!value,\n        ...(assign != null && { toAssign: { name: assign, value } }),\n    };\n};\n","import { debugId, toDebugString } from \"../debug\";\nimport { evaluateCondition } from \"./evaluateCondition\";\nexport const evaluateConditions = (conditions = [], options) => {\n    const conditionsReferenceRecord = {};\n    for (const condition of conditions) {\n        const { result, toAssign } = evaluateCondition(condition, {\n            ...options,\n            referenceRecord: {\n                ...options.referenceRecord,\n                ...conditionsReferenceRecord,\n            },\n        });\n        if (!result) {\n            return { result };\n        }\n        if (toAssign) {\n            conditionsReferenceRecord[toAssign.name] = toAssign.value;\n            options.logger?.debug?.(debugId, `assign: ${toAssign.name} := ${toDebugString(toAssign.value)}`);\n        }\n    }\n    return { result: true, referenceRecord: conditionsReferenceRecord };\n};\n","import { EndpointError } from \"../types\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const getEndpointHeaders = (headers, options) => Object.entries(headers).reduce((acc, [headerKey, headerVal]) => ({\n    ...acc,\n    [headerKey]: headerVal.map((headerValEntry) => {\n        const processedExpr = evaluateExpression(headerValEntry, \"Header value entry\", options);\n        if (typeof processedExpr !== \"string\") {\n            throw new EndpointError(`Header '${headerKey}' value '${processedExpr}' is not a string`);\n        }\n        return processedExpr;\n    }),\n}), {});\n","import { EndpointError } from \"../types\";\nimport { evaluateTemplate } from \"./evaluateTemplate\";\nimport { getEndpointProperties } from \"./getEndpointProperties\";\nexport const getEndpointProperty = (property, options) => {\n    if (Array.isArray(property)) {\n        return property.map((propertyEntry) => getEndpointProperty(propertyEntry, options));\n    }\n    switch (typeof property) {\n        case \"string\":\n            return evaluateTemplate(property, options);\n        case \"object\":\n            if (property === null) {\n                throw new EndpointError(`Unexpected endpoint property: ${property}`);\n            }\n            return getEndpointProperties(property, options);\n        case \"boolean\":\n            return property;\n        default:\n            throw new EndpointError(`Unexpected endpoint property type: ${typeof property}`);\n    }\n};\n","import { getEndpointProperty } from \"./getEndpointProperty\";\nexport const getEndpointProperties = (properties, options) => Object.entries(properties).reduce((acc, [propertyKey, propertyVal]) => ({\n    ...acc,\n    [propertyKey]: getEndpointProperty(propertyVal, options),\n}), {});\n","import { EndpointError } from \"../types\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const getEndpointUrl = (endpointUrl, options) => {\n    const expression = evaluateExpression(endpointUrl, \"Endpoint URL\", options);\n    if (typeof expression === \"string\") {\n        try {\n            return new URL(expression);\n        }\n        catch (error) {\n            console.error(`Failed to construct URL with ${expression}`, error);\n            throw error;\n        }\n    }\n    throw new EndpointError(`Endpoint URL must be a string, got ${typeof expression}`);\n};\n","import { debugId, toDebugString } from \"../debug\";\nimport { evaluateConditions } from \"./evaluateConditions\";\nimport { getEndpointHeaders } from \"./getEndpointHeaders\";\nimport { getEndpointProperties } from \"./getEndpointProperties\";\nimport { getEndpointUrl } from \"./getEndpointUrl\";\nexport const evaluateEndpointRule = (endpointRule, options) => {\n    const { conditions, endpoint } = endpointRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    const endpointRuleOptions = {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    };\n    const { url, properties, headers } = endpoint;\n    options.logger?.debug?.(debugId, `Resolving endpoint from template: ${toDebugString(endpoint)}`);\n    return {\n        ...(headers != undefined && {\n            headers: getEndpointHeaders(headers, endpointRuleOptions),\n        }),\n        ...(properties != undefined && {\n            properties: getEndpointProperties(properties, endpointRuleOptions),\n        }),\n        url: getEndpointUrl(url, endpointRuleOptions),\n    };\n};\n","import { EndpointError } from \"../types\";\nimport { evaluateConditions } from \"./evaluateConditions\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const evaluateErrorRule = (errorRule, options) => {\n    const { conditions, error } = errorRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    throw new EndpointError(evaluateExpression(error, \"Error\", {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    }));\n};\n","import { evaluateConditions } from \"./evaluateConditions\";\nimport { evaluateRules } from \"./evaluateRules\";\nexport const evaluateTreeRule = (treeRule, options) => {\n    const { conditions, rules } = treeRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    return evaluateRules(rules, {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    });\n};\n","import { EndpointError } from \"../types\";\nimport { evaluateEndpointRule } from \"./evaluateEndpointRule\";\nimport { evaluateErrorRule } from \"./evaluateErrorRule\";\nimport { evaluateTreeRule } from \"./evaluateTreeRule\";\nexport const evaluateRules = (rules, options) => {\n    for (const rule of rules) {\n        if (rule.type === \"endpoint\") {\n            const endpointOrUndefined = evaluateEndpointRule(rule, options);\n            if (endpointOrUndefined) {\n                return endpointOrUndefined;\n            }\n        }\n        else if (rule.type === \"error\") {\n            evaluateErrorRule(rule, options);\n        }\n        else if (rule.type === \"tree\") {\n            const endpointOrUndefined = evaluateTreeRule(rule, options);\n            if (endpointOrUndefined) {\n                return endpointOrUndefined;\n            }\n        }\n        else {\n            throw new EndpointError(`Unknown endpoint rule: ${rule}`);\n        }\n    }\n    throw new EndpointError(`Rules evaluation failed`);\n};\n","import { debugId, toDebugString } from \"./debug\";\nimport { EndpointError } from \"./types\";\nimport { evaluateRules } from \"./utils\";\nexport const resolveEndpoint = (ruleSetObject, options) => {\n    const { endpointParams, logger } = options;\n    const { parameters, rules } = ruleSetObject;\n    options.logger?.debug?.(debugId, `Initial EndpointParams: ${toDebugString(endpointParams)}`);\n    const paramsWithDefault = Object.entries(parameters)\n        .filter(([, v]) => v.default != null)\n        .map(([k, v]) => [k, v.default]);\n    if (paramsWithDefault.length > 0) {\n        for (const [paramKey, paramDefaultValue] of paramsWithDefault) {\n            endpointParams[paramKey] = endpointParams[paramKey] ?? paramDefaultValue;\n        }\n    }\n    const requiredParams = Object.entries(parameters)\n        .filter(([, v]) => v.required)\n        .map(([k]) => k);\n    for (const requiredParam of requiredParams) {\n        if (endpointParams[requiredParam] == null) {\n            throw new EndpointError(`Missing required parameter: '${requiredParam}'`);\n        }\n    }\n    const endpoint = evaluateRules(rules, { endpointParams, logger, referenceRecord: {} });\n    if (options.endpointParams?.Endpoint) {\n        try {\n            const givenEndpoint = new URL(options.endpointParams.Endpoint);\n            const { protocol, port } = givenEndpoint;\n            endpoint.url.protocol = protocol;\n            endpoint.url.port = port;\n        }\n        catch (e) {\n        }\n    }\n    options.logger?.debug?.(debugId, `Resolved endpoint: ${toDebugString(endpoint)}`);\n    return endpoint;\n};\n","const r = \"fn\", s = \"argv\", t = \"ref\";\nconst a = true, b = false, c = \"String\", d = \"PartitionResult\", e = \"tree\", f = \"error\", g = \"endpoint\", h = { \"required\": true, \"default\": false, \"type\": \"Boolean\" }, i = { [t]: \"Endpoint\" }, j = { [r]: \"booleanEquals\", [s]: [{ [t]: \"UseFIPS\" }, true] }, k = { [r]: \"booleanEquals\", [s]: [{ [t]: \"UseDualStack\" }, true] }, l = {}, m = { [r]: \"booleanEquals\", [s]: [true, { [r]: \"getAttr\", [s]: [{ [t]: d }, \"supportsFIPS\"] }] }, n = { [r]: \"booleanEquals\", [s]: [true, { [r]: \"getAttr\", [s]: [{ [t]: d }, \"supportsDualStack\"] }] }, o = [i], p = [j], q = [k];\nconst _data = { version: \"1.0\", parameters: { Region: { required: a, type: c }, UseDualStack: h, UseFIPS: h, Endpoint: { required: b, type: c } }, rules: [{ conditions: [{ [r]: \"aws.partition\", [s]: [{ [t]: \"Region\" }], assign: d }], type: e, rules: [{ conditions: [{ [r]: \"isSet\", [s]: o }, { [r]: \"parseURL\", [s]: o, assign: \"url\" }], type: e, rules: [{ conditions: p, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: f }, { type: e, rules: [{ conditions: q, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: f }, { endpoint: { url: i, properties: l, headers: l }, type: g }] }] }, { conditions: [j, k], type: e, rules: [{ conditions: [m, n], type: e, rules: [{ endpoint: { url: \"https://messaging-chime-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: l, headers: l }, type: g }] }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: f }] }, { conditions: p, type: e, rules: [{ conditions: [m], type: e, rules: [{ type: e, rules: [{ endpoint: { url: \"https://messaging-chime-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: l, headers: l }, type: g }] }] }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: f }] }, { conditions: q, type: e, rules: [{ conditions: [n], type: e, rules: [{ endpoint: { url: \"https://messaging-chime.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: l, headers: l }, type: g }] }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: f }] }, { endpoint: { url: \"https://messaging-chime.{Region}.{PartitionResult#dnsSuffix}\", properties: l, headers: l }, type: g }] }] };\nexport const ruleSet = _data;\n","import { resolveEndpoint } from \"@aws-sdk/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\n","import { NoOpLogger } from \"@aws-sdk/smithy-client\";\nimport { parseUrl } from \"@aws-sdk/url-parser\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => ({\n    apiVersion: \"2021-05-15\",\n    base64Decoder: config?.base64Decoder ?? fromBase64,\n    base64Encoder: config?.base64Encoder ?? toBase64,\n    disableHostPrefix: config?.disableHostPrefix ?? false,\n    endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n    logger: config?.logger ?? new NoOpLogger(),\n    serviceId: config?.serviceId ?? \"Chime SDK Messaging\",\n    urlParser: config?.urlParser ?? parseUrl,\n    utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n    utf8Encoder: config?.utf8Encoder ?? toUtf8,\n});\n","export const DEFAULTS_MODE_OPTIONS = [\"in-region\", \"cross-region\", \"mobile\", \"standard\", \"legacy\"];\n","import { memoize } from \"@aws-sdk/property-provider\";\nimport bowser from \"bowser\";\nimport { DEFAULTS_MODE_OPTIONS } from \"./constants\";\nexport const resolveDefaultsModeConfig = ({ defaultsMode, } = {}) => memoize(async () => {\n    const mode = typeof defaultsMode === \"function\" ? await defaultsMode() : defaultsMode;\n    switch (mode?.toLowerCase()) {\n        case \"auto\":\n            return Promise.resolve(isMobileBrowser() ? \"mobile\" : \"standard\");\n        case \"mobile\":\n        case \"in-region\":\n        case \"cross-region\":\n        case \"standard\":\n        case \"legacy\":\n            return Promise.resolve(mode?.toLocaleLowerCase());\n        case undefined:\n            return Promise.resolve(\"legacy\");\n        default:\n            throw new Error(`Invalid parameter for \"defaultsMode\", expect ${DEFAULTS_MODE_OPTIONS.join(\", \")}, got ${mode}`);\n    }\n});\nconst isMobileBrowser = () => {\n    const parsedUA = typeof window !== \"undefined\" && window?.navigator?.userAgent\n        ? bowser.parse(window.navigator.userAgent)\n        : undefined;\n    const platform = parsedUA?.platform?.type;\n    return platform === \"tablet\" || platform === \"mobile\";\n};\n","import packageInfo from \"../package.json\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { DEFAULT_USE_DUALSTACK_ENDPOINT, DEFAULT_USE_FIPS_ENDPOINT } from \"@aws-sdk/config-resolver\";\nimport { FetchHttpHandler as RequestHandler, streamCollector } from \"@aws-sdk/fetch-http-handler\";\nimport { invalidProvider } from \"@aws-sdk/invalid-dependency\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-browser\";\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE } from \"@aws-sdk/util-retry\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@aws-sdk/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@aws-sdk/util-defaults-mode-browser\";\nexport const getRuntimeConfig = (config) => {\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"browser\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? ((_) => () => Promise.reject(new Error(\"Credential is missing\"))),\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        maxAttempts: config?.maxAttempts ?? DEFAULT_MAX_ATTEMPTS,\n        region: config?.region ?? invalidProvider(\"Region is missing\"),\n        requestHandler: config?.requestHandler ?? new RequestHandler(defaultConfigProvider),\n        retryMode: config?.retryMode ?? (async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE),\n        sha256: config?.sha256 ?? Sha256,\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (() => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT)),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (() => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT)),\n    };\n};\n","import { resolveRegionConfig } from \"@aws-sdk/config-resolver\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@aws-sdk/middleware-endpoint\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport { getAwsAuthPlugin, resolveAwsAuthConfig, } from \"@aws-sdk/middleware-signing\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { Client as __Client, } from \"@aws-sdk/smithy-client\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nexport class ChimeSDKMessagingClient extends __Client {\n    constructor(configuration) {\n        const _config_0 = __getRuntimeConfig(configuration);\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveRegionConfig(_config_1);\n        const _config_3 = resolveEndpointConfig(_config_2);\n        const _config_4 = resolveRetryConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveAwsAuthConfig(_config_5);\n        const _config_7 = resolveUserAgentConfig(_config_6);\n        super(_config_7);\n        this.config = _config_7;\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getAwsAuthPlugin(this.config));\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n","import { ServiceException as __ServiceException, } from \"@aws-sdk/smithy-client\";\nexport class ChimeSDKMessagingServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, ChimeSDKMessagingServiceException.prototype);\n    }\n}\n","import { SENSITIVE_STRING } from \"@aws-sdk/smithy-client\";\nimport { ChimeSDKMessagingServiceException as __BaseException } from \"./ChimeSDKMessagingServiceException\";\nexport var AllowNotifications;\n(function (AllowNotifications) {\n    AllowNotifications[\"ALL\"] = \"ALL\";\n    AllowNotifications[\"FILTERED\"] = \"FILTERED\";\n    AllowNotifications[\"NONE\"] = \"NONE\";\n})(AllowNotifications || (AllowNotifications = {}));\nexport var ChannelMembershipType;\n(function (ChannelMembershipType) {\n    ChannelMembershipType[\"DEFAULT\"] = \"DEFAULT\";\n    ChannelMembershipType[\"HIDDEN\"] = \"HIDDEN\";\n})(ChannelMembershipType || (ChannelMembershipType = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ErrorCode[\"AccessDenied\"] = \"AccessDenied\";\n    ErrorCode[\"BadRequest\"] = \"BadRequest\";\n    ErrorCode[\"Conflict\"] = \"Conflict\";\n    ErrorCode[\"Forbidden\"] = \"Forbidden\";\n    ErrorCode[\"NotFound\"] = \"NotFound\";\n    ErrorCode[\"PhoneNumberAssociationsExist\"] = \"PhoneNumberAssociationsExist\";\n    ErrorCode[\"PreconditionFailed\"] = \"PreconditionFailed\";\n    ErrorCode[\"ResourceLimitExceeded\"] = \"ResourceLimitExceeded\";\n    ErrorCode[\"ServiceFailure\"] = \"ServiceFailure\";\n    ErrorCode[\"ServiceUnavailable\"] = \"ServiceUnavailable\";\n    ErrorCode[\"Throttled\"] = \"Throttled\";\n    ErrorCode[\"Throttling\"] = \"Throttling\";\n    ErrorCode[\"Unauthorized\"] = \"Unauthorized\";\n    ErrorCode[\"Unprocessable\"] = \"Unprocessable\";\n    ErrorCode[\"VoiceConnectorGroupAssociationsExist\"] = \"VoiceConnectorGroupAssociationsExist\";\n})(ErrorCode || (ErrorCode = {}));\nexport class BadRequestException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"BadRequestException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"BadRequestException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, BadRequestException.prototype);\n        this.Code = opts.Code;\n        this.Message = opts.Message;\n    }\n}\nexport class ConflictException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ConflictException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ConflictException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ConflictException.prototype);\n        this.Code = opts.Code;\n        this.Message = opts.Message;\n    }\n}\nexport class ForbiddenException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ForbiddenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ForbiddenException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ForbiddenException.prototype);\n        this.Code = opts.Code;\n        this.Message = opts.Message;\n    }\n}\nexport class NotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"NotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NotFoundException.prototype);\n        this.Code = opts.Code;\n        this.Message = opts.Message;\n    }\n}\nexport class ServiceFailureException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ServiceFailureException\",\n            $fault: \"server\",\n            ...opts,\n        });\n        this.name = \"ServiceFailureException\";\n        this.$fault = \"server\";\n        Object.setPrototypeOf(this, ServiceFailureException.prototype);\n        this.Code = opts.Code;\n        this.Message = opts.Message;\n    }\n}\nexport class ServiceUnavailableException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ServiceUnavailableException\",\n            $fault: \"server\",\n            ...opts,\n        });\n        this.name = \"ServiceUnavailableException\";\n        this.$fault = \"server\";\n        Object.setPrototypeOf(this, ServiceUnavailableException.prototype);\n        this.Code = opts.Code;\n        this.Message = opts.Message;\n    }\n}\nexport class ThrottledClientException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ThrottledClientException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ThrottledClientException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ThrottledClientException.prototype);\n        this.Code = opts.Code;\n        this.Message = opts.Message;\n    }\n}\nexport class UnauthorizedClientException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"UnauthorizedClientException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"UnauthorizedClientException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnauthorizedClientException.prototype);\n        this.Code = opts.Code;\n        this.Message = opts.Message;\n    }\n}\nexport class ResourceLimitExceededException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ResourceLimitExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResourceLimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceLimitExceededException.prototype);\n        this.Code = opts.Code;\n        this.Message = opts.Message;\n    }\n}\nexport var ChannelMode;\n(function (ChannelMode) {\n    ChannelMode[\"RESTRICTED\"] = \"RESTRICTED\";\n    ChannelMode[\"UNRESTRICTED\"] = \"UNRESTRICTED\";\n})(ChannelMode || (ChannelMode = {}));\nexport var ChannelPrivacy;\n(function (ChannelPrivacy) {\n    ChannelPrivacy[\"PRIVATE\"] = \"PRIVATE\";\n    ChannelPrivacy[\"PUBLIC\"] = \"PUBLIC\";\n})(ChannelPrivacy || (ChannelPrivacy = {}));\nexport var InvocationType;\n(function (InvocationType) {\n    InvocationType[\"ASYNC\"] = \"ASYNC\";\n})(InvocationType || (InvocationType = {}));\nexport var FallbackAction;\n(function (FallbackAction) {\n    FallbackAction[\"ABORT\"] = \"ABORT\";\n    FallbackAction[\"CONTINUE\"] = \"CONTINUE\";\n})(FallbackAction || (FallbackAction = {}));\nexport var PushNotificationType;\n(function (PushNotificationType) {\n    PushNotificationType[\"DEFAULT\"] = \"DEFAULT\";\n    PushNotificationType[\"VOIP\"] = \"VOIP\";\n})(PushNotificationType || (PushNotificationType = {}));\nexport var ChannelMessagePersistenceType;\n(function (ChannelMessagePersistenceType) {\n    ChannelMessagePersistenceType[\"NON_PERSISTENT\"] = \"NON_PERSISTENT\";\n    ChannelMessagePersistenceType[\"PERSISTENT\"] = \"PERSISTENT\";\n})(ChannelMessagePersistenceType || (ChannelMessagePersistenceType = {}));\nexport var ChannelMessageStatus;\n(function (ChannelMessageStatus) {\n    ChannelMessageStatus[\"DENIED\"] = \"DENIED\";\n    ChannelMessageStatus[\"FAILED\"] = \"FAILED\";\n    ChannelMessageStatus[\"PENDING\"] = \"PENDING\";\n    ChannelMessageStatus[\"SENT\"] = \"SENT\";\n})(ChannelMessageStatus || (ChannelMessageStatus = {}));\nexport var ChannelMessageType;\n(function (ChannelMessageType) {\n    ChannelMessageType[\"CONTROL\"] = \"CONTROL\";\n    ChannelMessageType[\"STANDARD\"] = \"STANDARD\";\n})(ChannelMessageType || (ChannelMessageType = {}));\nexport var SortOrder;\n(function (SortOrder) {\n    SortOrder[\"ASCENDING\"] = \"ASCENDING\";\n    SortOrder[\"DESCENDING\"] = \"DESCENDING\";\n})(SortOrder || (SortOrder = {}));\nexport var SearchFieldKey;\n(function (SearchFieldKey) {\n    SearchFieldKey[\"MEMBERS\"] = \"MEMBERS\";\n})(SearchFieldKey || (SearchFieldKey = {}));\nexport var SearchFieldOperator;\n(function (SearchFieldOperator) {\n    SearchFieldOperator[\"EQUALS\"] = \"EQUALS\";\n    SearchFieldOperator[\"INCLUDES\"] = \"INCLUDES\";\n})(SearchFieldOperator || (SearchFieldOperator = {}));\nexport const AppInstanceUserMembershipSummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const AssociateChannelFlowRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const IdentityFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Name && { Name: SENSITIVE_STRING }),\n});\nexport const BatchChannelMembershipsFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.InvitedBy && { InvitedBy: IdentityFilterSensitiveLog(obj.InvitedBy) }),\n    ...(obj.Members && { Members: obj.Members.map((item) => IdentityFilterSensitiveLog(item)) }),\n});\nexport const BatchCreateChannelMembershipRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const BatchCreateChannelMembershipErrorFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const BatchCreateChannelMembershipResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.BatchChannelMemberships && {\n        BatchChannelMemberships: BatchChannelMembershipsFilterSensitiveLog(obj.BatchChannelMemberships),\n    }),\n});\nexport const ElasticChannelConfigurationFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ChannelFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Name && { Name: SENSITIVE_STRING }),\n    ...(obj.Metadata && { Metadata: SENSITIVE_STRING }),\n    ...(obj.CreatedBy && { CreatedBy: IdentityFilterSensitiveLog(obj.CreatedBy) }),\n});\nexport const ChannelAssociatedWithFlowSummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Name && { Name: SENSITIVE_STRING }),\n    ...(obj.Metadata && { Metadata: SENSITIVE_STRING }),\n});\nexport const ChannelBanFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Member && { Member: IdentityFilterSensitiveLog(obj.Member) }),\n    ...(obj.CreatedBy && { CreatedBy: IdentityFilterSensitiveLog(obj.CreatedBy) }),\n});\nexport const ChannelBanSummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Member && { Member: IdentityFilterSensitiveLog(obj.Member) }),\n});\nexport const LambdaConfigurationFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ProcessorConfigurationFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ProcessorFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Name && { Name: SENSITIVE_STRING }),\n});\nexport const ChannelFlowFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Processors && { Processors: obj.Processors.map((item) => ProcessorFilterSensitiveLog(item)) }),\n    ...(obj.Name && { Name: SENSITIVE_STRING }),\n});\nexport const MessageAttributeValueFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.StringValues && { StringValues: SENSITIVE_STRING }),\n});\nexport const PushNotificationConfigurationFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Title && { Title: SENSITIVE_STRING }),\n    ...(obj.Body && { Body: SENSITIVE_STRING }),\n});\nexport const ChannelMessageCallbackFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Content && { Content: SENSITIVE_STRING }),\n    ...(obj.Metadata && { Metadata: SENSITIVE_STRING }),\n    ...(obj.PushNotification && {\n        PushNotification: PushNotificationConfigurationFilterSensitiveLog(obj.PushNotification),\n    }),\n    ...(obj.MessageAttributes && {\n        MessageAttributes: Object.entries(obj.MessageAttributes).reduce((acc, [key, value]) => ((acc[key] = MessageAttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n});\nexport const ChannelFlowCallbackRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.ChannelMessage && { ChannelMessage: ChannelMessageCallbackFilterSensitiveLog(obj.ChannelMessage) }),\n});\nexport const ChannelFlowCallbackResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ChannelFlowSummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Name && { Name: SENSITIVE_STRING }),\n    ...(obj.Processors && { Processors: obj.Processors.map((item) => ProcessorFilterSensitiveLog(item)) }),\n});\nexport const ChannelMembershipFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.InvitedBy && { InvitedBy: IdentityFilterSensitiveLog(obj.InvitedBy) }),\n    ...(obj.Member && { Member: IdentityFilterSensitiveLog(obj.Member) }),\n});\nexport const ChannelSummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Name && { Name: SENSITIVE_STRING }),\n    ...(obj.Metadata && { Metadata: SENSITIVE_STRING }),\n});\nexport const ChannelMembershipForAppInstanceUserSummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.ChannelSummary && { ChannelSummary: ChannelSummaryFilterSensitiveLog(obj.ChannelSummary) }),\n});\nexport const PushNotificationPreferencesFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.FilterRule && { FilterRule: SENSITIVE_STRING }),\n});\nexport const ChannelMembershipPreferencesFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.PushNotifications && {\n        PushNotifications: PushNotificationPreferencesFilterSensitiveLog(obj.PushNotifications),\n    }),\n});\nexport const ChannelMembershipSummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Member && { Member: IdentityFilterSensitiveLog(obj.Member) }),\n});\nexport const ChannelMessageStatusStructureFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ChannelMessageFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Content && { Content: SENSITIVE_STRING }),\n    ...(obj.Metadata && { Metadata: SENSITIVE_STRING }),\n    ...(obj.Sender && { Sender: IdentityFilterSensitiveLog(obj.Sender) }),\n    ...(obj.MessageAttributes && {\n        MessageAttributes: Object.entries(obj.MessageAttributes).reduce((acc, [key, value]) => ((acc[key] = MessageAttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n});\nexport const ChannelMessageSummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Content && { Content: SENSITIVE_STRING }),\n    ...(obj.Metadata && { Metadata: SENSITIVE_STRING }),\n    ...(obj.Sender && { Sender: IdentityFilterSensitiveLog(obj.Sender) }),\n    ...(obj.MessageAttributes && {\n        MessageAttributes: Object.entries(obj.MessageAttributes).reduce((acc, [key, value]) => ((acc[key] = MessageAttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n});\nexport const ChannelModeratedByAppInstanceUserSummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.ChannelSummary && { ChannelSummary: ChannelSummaryFilterSensitiveLog(obj.ChannelSummary) }),\n});\nexport const ChannelModeratorFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Moderator && { Moderator: IdentityFilterSensitiveLog(obj.Moderator) }),\n    ...(obj.CreatedBy && { CreatedBy: IdentityFilterSensitiveLog(obj.CreatedBy) }),\n});\nexport const ChannelModeratorSummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Moderator && { Moderator: IdentityFilterSensitiveLog(obj.Moderator) }),\n});\nexport const TagFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Key && { Key: SENSITIVE_STRING }),\n    ...(obj.Value && { Value: SENSITIVE_STRING }),\n});\nexport const CreateChannelRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Name && { Name: SENSITIVE_STRING }),\n    ...(obj.Metadata && { Metadata: SENSITIVE_STRING }),\n    ...(obj.ClientRequestToken && { ClientRequestToken: SENSITIVE_STRING }),\n    ...(obj.Tags && { Tags: obj.Tags.map((item) => TagFilterSensitiveLog(item)) }),\n    ...(obj.ChannelId && { ChannelId: SENSITIVE_STRING }),\n});\nexport const CreateChannelResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CreateChannelBanRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CreateChannelBanResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Member && { Member: IdentityFilterSensitiveLog(obj.Member) }),\n});\nexport const CreateChannelFlowRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Processors && { Processors: obj.Processors.map((item) => ProcessorFilterSensitiveLog(item)) }),\n    ...(obj.Name && { Name: SENSITIVE_STRING }),\n    ...(obj.Tags && { Tags: obj.Tags.map((item) => TagFilterSensitiveLog(item)) }),\n    ...(obj.ClientRequestToken && { ClientRequestToken: SENSITIVE_STRING }),\n});\nexport const CreateChannelFlowResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CreateChannelMembershipRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CreateChannelMembershipResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Member && { Member: IdentityFilterSensitiveLog(obj.Member) }),\n});\nexport const CreateChannelModeratorRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CreateChannelModeratorResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.ChannelModerator && { ChannelModerator: IdentityFilterSensitiveLog(obj.ChannelModerator) }),\n});\nexport const DeleteChannelRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteChannelBanRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteChannelFlowRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteChannelMembershipRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteChannelMessageRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteChannelModeratorRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeChannelRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeChannelResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Channel && { Channel: ChannelFilterSensitiveLog(obj.Channel) }),\n});\nexport const DescribeChannelBanRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeChannelBanResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.ChannelBan && { ChannelBan: ChannelBanFilterSensitiveLog(obj.ChannelBan) }),\n});\nexport const DescribeChannelFlowRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeChannelFlowResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.ChannelFlow && { ChannelFlow: ChannelFlowFilterSensitiveLog(obj.ChannelFlow) }),\n});\nexport const DescribeChannelMembershipRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeChannelMembershipResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.ChannelMembership && { ChannelMembership: ChannelMembershipFilterSensitiveLog(obj.ChannelMembership) }),\n});\nexport const DescribeChannelMembershipForAppInstanceUserRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeChannelMembershipForAppInstanceUserResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.ChannelMembership && {\n        ChannelMembership: ChannelMembershipForAppInstanceUserSummaryFilterSensitiveLog(obj.ChannelMembership),\n    }),\n});\nexport const DescribeChannelModeratedByAppInstanceUserRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeChannelModeratedByAppInstanceUserResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Channel && { Channel: ChannelModeratedByAppInstanceUserSummaryFilterSensitiveLog(obj.Channel) }),\n});\nexport const DescribeChannelModeratorRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeChannelModeratorResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.ChannelModerator && { ChannelModerator: ChannelModeratorFilterSensitiveLog(obj.ChannelModerator) }),\n});\nexport const DisassociateChannelFlowRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetChannelMembershipPreferencesRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetChannelMembershipPreferencesResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Member && { Member: IdentityFilterSensitiveLog(obj.Member) }),\n    ...(obj.Preferences && { Preferences: ChannelMembershipPreferencesFilterSensitiveLog(obj.Preferences) }),\n});\nexport const GetChannelMessageRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetChannelMessageResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.ChannelMessage && { ChannelMessage: ChannelMessageFilterSensitiveLog(obj.ChannelMessage) }),\n});\nexport const GetChannelMessageStatusRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetChannelMessageStatusResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetMessagingSessionEndpointRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const MessagingSessionEndpointFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetMessagingSessionEndpointResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListChannelBansRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.NextToken && { NextToken: SENSITIVE_STRING }),\n});\nexport const ListChannelBansResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.NextToken && { NextToken: SENSITIVE_STRING }),\n    ...(obj.ChannelBans && { ChannelBans: obj.ChannelBans.map((item) => ChannelBanSummaryFilterSensitiveLog(item)) }),\n});\nexport const ListChannelFlowsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.NextToken && { NextToken: SENSITIVE_STRING }),\n});\nexport const ListChannelFlowsResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.ChannelFlows && { ChannelFlows: obj.ChannelFlows.map((item) => ChannelFlowSummaryFilterSensitiveLog(item)) }),\n    ...(obj.NextToken && { NextToken: SENSITIVE_STRING }),\n});\nexport const ListChannelMembershipsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.NextToken && { NextToken: SENSITIVE_STRING }),\n});\nexport const ListChannelMembershipsResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.ChannelMemberships && {\n        ChannelMemberships: obj.ChannelMemberships.map((item) => ChannelMembershipSummaryFilterSensitiveLog(item)),\n    }),\n    ...(obj.NextToken && { NextToken: SENSITIVE_STRING }),\n});\nexport const ListChannelMembershipsForAppInstanceUserRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.NextToken && { NextToken: SENSITIVE_STRING }),\n});\nexport const ListChannelMembershipsForAppInstanceUserResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.ChannelMemberships && {\n        ChannelMemberships: obj.ChannelMemberships.map((item) => ChannelMembershipForAppInstanceUserSummaryFilterSensitiveLog(item)),\n    }),\n    ...(obj.NextToken && { NextToken: SENSITIVE_STRING }),\n});\nexport const ListChannelMessagesRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.NextToken && { NextToken: SENSITIVE_STRING }),\n});\nexport const ListChannelMessagesResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.NextToken && { NextToken: SENSITIVE_STRING }),\n    ...(obj.ChannelMessages && {\n        ChannelMessages: obj.ChannelMessages.map((item) => ChannelMessageSummaryFilterSensitiveLog(item)),\n    }),\n});\nexport const ListChannelModeratorsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.NextToken && { NextToken: SENSITIVE_STRING }),\n});\nexport const ListChannelModeratorsResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.NextToken && { NextToken: SENSITIVE_STRING }),\n    ...(obj.ChannelModerators && {\n        ChannelModerators: obj.ChannelModerators.map((item) => ChannelModeratorSummaryFilterSensitiveLog(item)),\n    }),\n});\nexport const ListChannelsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.NextToken && { NextToken: SENSITIVE_STRING }),\n});\nexport const ListChannelsResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Channels && { Channels: obj.Channels.map((item) => ChannelSummaryFilterSensitiveLog(item)) }),\n    ...(obj.NextToken && { NextToken: SENSITIVE_STRING }),\n});\nexport const ListChannelsAssociatedWithChannelFlowRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.NextToken && { NextToken: SENSITIVE_STRING }),\n});\nexport const ListChannelsAssociatedWithChannelFlowResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Channels && {\n        Channels: obj.Channels.map((item) => ChannelAssociatedWithFlowSummaryFilterSensitiveLog(item)),\n    }),\n    ...(obj.NextToken && { NextToken: SENSITIVE_STRING }),\n});\nexport const ListChannelsModeratedByAppInstanceUserRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.NextToken && { NextToken: SENSITIVE_STRING }),\n});\nexport const ListChannelsModeratedByAppInstanceUserResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Channels && {\n        Channels: obj.Channels.map((item) => ChannelModeratedByAppInstanceUserSummaryFilterSensitiveLog(item)),\n    }),\n    ...(obj.NextToken && { NextToken: SENSITIVE_STRING }),\n});\nexport const ListSubChannelsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.NextToken && { NextToken: SENSITIVE_STRING }),\n});\nexport const SubChannelSummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListSubChannelsResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.NextToken && { NextToken: SENSITIVE_STRING }),\n});\nexport const ListTagsForResourceRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListTagsForResourceResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Tags && { Tags: obj.Tags.map((item) => TagFilterSensitiveLog(item)) }),\n});\nexport const PutChannelMembershipPreferencesRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Preferences && { Preferences: ChannelMembershipPreferencesFilterSensitiveLog(obj.Preferences) }),\n});\nexport const PutChannelMembershipPreferencesResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Member && { Member: IdentityFilterSensitiveLog(obj.Member) }),\n    ...(obj.Preferences && { Preferences: ChannelMembershipPreferencesFilterSensitiveLog(obj.Preferences) }),\n});\nexport const RedactChannelMessageRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const RedactChannelMessageResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SearchFieldFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SearchChannelsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.NextToken && { NextToken: SENSITIVE_STRING }),\n});\nexport const SearchChannelsResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Channels && { Channels: obj.Channels.map((item) => ChannelSummaryFilterSensitiveLog(item)) }),\n    ...(obj.NextToken && { NextToken: SENSITIVE_STRING }),\n});\nexport const SendChannelMessageRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Content && { Content: SENSITIVE_STRING }),\n    ...(obj.Metadata && { Metadata: SENSITIVE_STRING }),\n    ...(obj.ClientRequestToken && { ClientRequestToken: SENSITIVE_STRING }),\n    ...(obj.PushNotification && {\n        PushNotification: PushNotificationConfigurationFilterSensitiveLog(obj.PushNotification),\n    }),\n    ...(obj.MessageAttributes && {\n        MessageAttributes: Object.entries(obj.MessageAttributes).reduce((acc, [key, value]) => ((acc[key] = MessageAttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n});\nexport const SendChannelMessageResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const TagResourceRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Tags && { Tags: obj.Tags.map((item) => TagFilterSensitiveLog(item)) }),\n});\nexport const UntagResourceRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.TagKeys && { TagKeys: SENSITIVE_STRING }),\n});\nexport const UpdateChannelRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Name && { Name: SENSITIVE_STRING }),\n    ...(obj.Metadata && { Metadata: SENSITIVE_STRING }),\n});\nexport const UpdateChannelResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateChannelFlowRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Processors && { Processors: obj.Processors.map((item) => ProcessorFilterSensitiveLog(item)) }),\n    ...(obj.Name && { Name: SENSITIVE_STRING }),\n});\nexport const UpdateChannelFlowResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateChannelMessageRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Content && { Content: SENSITIVE_STRING }),\n    ...(obj.Metadata && { Metadata: SENSITIVE_STRING }),\n});\nexport const UpdateChannelMessageResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateChannelReadMarkerRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateChannelReadMarkerResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\n","import { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { decorateServiceException as __decorateServiceException, expectBoolean as __expectBoolean, expectInt32 as __expectInt32, expectNonNull as __expectNonNull, expectNumber as __expectNumber, expectObject as __expectObject, expectString as __expectString, map as __map, parseEpochTimestamp as __parseEpochTimestamp, resolvedPath as __resolvedPath, throwDefaultError, } from \"@aws-sdk/smithy-client\";\nimport { v4 as generateIdempotencyToken } from \"uuid\";\nimport { ChimeSDKMessagingServiceException as __BaseException } from \"../models/ChimeSDKMessagingServiceException\";\nimport { BadRequestException, ConflictException, ForbiddenException, NotFoundException, ResourceLimitExceededException, ServiceFailureException, ServiceUnavailableException, ThrottledClientException, UnauthorizedClientException, } from \"../models/models_0\";\nexport const serializeAws_restJson1AssociateChannelFlowCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/json\",\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channels/{ChannelArn}/channel-flow\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    let body;\n    body = JSON.stringify({\n        ...(input.ChannelFlowArn != null && { ChannelFlowArn: input.ChannelFlowArn }),\n    });\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const serializeAws_restJson1BatchCreateChannelMembershipCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/json\",\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channels/{ChannelArn}/memberships\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    const query = map({\n        operation: [, \"batch-create\"],\n    });\n    let body;\n    body = JSON.stringify({\n        ...(input.MemberArns != null && { MemberArns: serializeAws_restJson1MemberArns(input.MemberArns, context) }),\n        ...(input.SubChannelId != null && { SubChannelId: input.SubChannelId }),\n        ...(input.Type != null && { Type: input.Type }),\n    });\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const serializeAws_restJson1ChannelFlowCallbackCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channels/{ChannelArn}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    const query = map({\n        operation: [, \"channel-flow-callback\"],\n    });\n    let body;\n    body = JSON.stringify({\n        CallbackId: input.CallbackId ?? generateIdempotencyToken(),\n        ...(input.ChannelMessage != null && {\n            ChannelMessage: serializeAws_restJson1ChannelMessageCallback(input.ChannelMessage, context),\n        }),\n        ...(input.DeleteResource != null && { DeleteResource: input.DeleteResource }),\n    });\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const serializeAws_restJson1CreateChannelCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/json\",\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channels\";\n    let body;\n    body = JSON.stringify({\n        ...(input.AppInstanceArn != null && { AppInstanceArn: input.AppInstanceArn }),\n        ...(input.ChannelId != null && { ChannelId: input.ChannelId }),\n        ClientRequestToken: input.ClientRequestToken ?? generateIdempotencyToken(),\n        ...(input.ElasticChannelConfiguration != null && {\n            ElasticChannelConfiguration: serializeAws_restJson1ElasticChannelConfiguration(input.ElasticChannelConfiguration, context),\n        }),\n        ...(input.MemberArns != null && { MemberArns: serializeAws_restJson1ChannelMemberArns(input.MemberArns, context) }),\n        ...(input.Metadata != null && { Metadata: input.Metadata }),\n        ...(input.Mode != null && { Mode: input.Mode }),\n        ...(input.ModeratorArns != null && {\n            ModeratorArns: serializeAws_restJson1ChannelModeratorArns(input.ModeratorArns, context),\n        }),\n        ...(input.Name != null && { Name: input.Name }),\n        ...(input.Privacy != null && { Privacy: input.Privacy }),\n        ...(input.Tags != null && { Tags: serializeAws_restJson1TagList(input.Tags, context) }),\n    });\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const serializeAws_restJson1CreateChannelBanCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/json\",\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channels/{ChannelArn}/bans\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    let body;\n    body = JSON.stringify({\n        ...(input.MemberArn != null && { MemberArn: input.MemberArn }),\n    });\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const serializeAws_restJson1CreateChannelFlowCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channel-flows\";\n    let body;\n    body = JSON.stringify({\n        ...(input.AppInstanceArn != null && { AppInstanceArn: input.AppInstanceArn }),\n        ...(input.ClientRequestToken != null && { ClientRequestToken: input.ClientRequestToken }),\n        ...(input.Name != null && { Name: input.Name }),\n        ...(input.Processors != null && { Processors: serializeAws_restJson1ProcessorList(input.Processors, context) }),\n        ...(input.Tags != null && { Tags: serializeAws_restJson1TagList(input.Tags, context) }),\n    });\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const serializeAws_restJson1CreateChannelMembershipCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/json\",\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channels/{ChannelArn}/memberships\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    let body;\n    body = JSON.stringify({\n        ...(input.MemberArn != null && { MemberArn: input.MemberArn }),\n        ...(input.SubChannelId != null && { SubChannelId: input.SubChannelId }),\n        ...(input.Type != null && { Type: input.Type }),\n    });\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const serializeAws_restJson1CreateChannelModeratorCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/json\",\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channels/{ChannelArn}/moderators\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    let body;\n    body = JSON.stringify({\n        ...(input.ChannelModeratorArn != null && { ChannelModeratorArn: input.ChannelModeratorArn }),\n    });\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const serializeAws_restJson1DeleteChannelCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channels/{ChannelArn}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    const query = map({\n        \"sub-channel-id\": [, input.SubChannelId],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const serializeAws_restJson1DeleteChannelBanCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channels/{ChannelArn}/bans/{MemberArn}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"MemberArn\", () => input.MemberArn, \"{MemberArn}\", false);\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const serializeAws_restJson1DeleteChannelFlowCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channel-flows/{ChannelFlowArn}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelFlowArn\", () => input.ChannelFlowArn, \"{ChannelFlowArn}\", false);\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const serializeAws_restJson1DeleteChannelMembershipCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/channels/{ChannelArn}/memberships/{MemberArn}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"MemberArn\", () => input.MemberArn, \"{MemberArn}\", false);\n    const query = map({\n        \"sub-channel-id\": [, input.SubChannelId],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const serializeAws_restJson1DeleteChannelMessageCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/channels/{ChannelArn}/messages/{MessageId}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"MessageId\", () => input.MessageId, \"{MessageId}\", false);\n    const query = map({\n        \"sub-channel-id\": [, input.SubChannelId],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const serializeAws_restJson1DeleteChannelModeratorCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/channels/{ChannelArn}/moderators/{ChannelModeratorArn}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelModeratorArn\", () => input.ChannelModeratorArn, \"{ChannelModeratorArn}\", false);\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const serializeAws_restJson1DescribeChannelCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channels/{ChannelArn}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const serializeAws_restJson1DescribeChannelBanCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channels/{ChannelArn}/bans/{MemberArn}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"MemberArn\", () => input.MemberArn, \"{MemberArn}\", false);\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const serializeAws_restJson1DescribeChannelFlowCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channel-flows/{ChannelFlowArn}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelFlowArn\", () => input.ChannelFlowArn, \"{ChannelFlowArn}\", false);\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const serializeAws_restJson1DescribeChannelMembershipCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/channels/{ChannelArn}/memberships/{MemberArn}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"MemberArn\", () => input.MemberArn, \"{MemberArn}\", false);\n    const query = map({\n        \"sub-channel-id\": [, input.SubChannelId],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const serializeAws_restJson1DescribeChannelMembershipForAppInstanceUserCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channels/{ChannelArn}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    const query = map({\n        scope: [, \"app-instance-user-membership\"],\n        \"app-instance-user-arn\": [, __expectNonNull(input.AppInstanceUserArn, `AppInstanceUserArn`)],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const serializeAws_restJson1DescribeChannelModeratedByAppInstanceUserCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channels/{ChannelArn}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    const query = map({\n        scope: [, \"app-instance-user-moderated-channel\"],\n        \"app-instance-user-arn\": [, __expectNonNull(input.AppInstanceUserArn, `AppInstanceUserArn`)],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const serializeAws_restJson1DescribeChannelModeratorCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/channels/{ChannelArn}/moderators/{ChannelModeratorArn}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelModeratorArn\", () => input.ChannelModeratorArn, \"{ChannelModeratorArn}\", false);\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const serializeAws_restJson1DisassociateChannelFlowCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/channels/{ChannelArn}/channel-flow/{ChannelFlowArn}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelFlowArn\", () => input.ChannelFlowArn, \"{ChannelFlowArn}\", false);\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const serializeAws_restJson1GetChannelMembershipPreferencesCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/channels/{ChannelArn}/memberships/{MemberArn}/preferences\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"MemberArn\", () => input.MemberArn, \"{MemberArn}\", false);\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const serializeAws_restJson1GetChannelMessageCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/channels/{ChannelArn}/messages/{MessageId}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"MessageId\", () => input.MessageId, \"{MessageId}\", false);\n    const query = map({\n        \"sub-channel-id\": [, input.SubChannelId],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const serializeAws_restJson1GetChannelMessageStatusCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/channels/{ChannelArn}/messages/{MessageId}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"MessageId\", () => input.MessageId, \"{MessageId}\", false);\n    const query = map({\n        scope: [, \"message-status\"],\n        \"sub-channel-id\": [, input.SubChannelId],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const serializeAws_restJson1GetMessagingSessionEndpointCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/endpoints/messaging-session\";\n    let body;\n    body = \"\";\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const serializeAws_restJson1ListChannelBansCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channels/{ChannelArn}/bans\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    const query = map({\n        \"max-results\": [() => input.MaxResults !== void 0, () => input.MaxResults.toString()],\n        \"next-token\": [, input.NextToken],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const serializeAws_restJson1ListChannelFlowsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channel-flows\";\n    const query = map({\n        \"app-instance-arn\": [, __expectNonNull(input.AppInstanceArn, `AppInstanceArn`)],\n        \"max-results\": [() => input.MaxResults !== void 0, () => input.MaxResults.toString()],\n        \"next-token\": [, input.NextToken],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const serializeAws_restJson1ListChannelMembershipsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channels/{ChannelArn}/memberships\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    const query = map({\n        type: [, input.Type],\n        \"max-results\": [() => input.MaxResults !== void 0, () => input.MaxResults.toString()],\n        \"next-token\": [, input.NextToken],\n        \"sub-channel-id\": [, input.SubChannelId],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const serializeAws_restJson1ListChannelMembershipsForAppInstanceUserCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channels\";\n    const query = map({\n        scope: [, \"app-instance-user-memberships\"],\n        \"app-instance-user-arn\": [, input.AppInstanceUserArn],\n        \"max-results\": [() => input.MaxResults !== void 0, () => input.MaxResults.toString()],\n        \"next-token\": [, input.NextToken],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const serializeAws_restJson1ListChannelMessagesCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channels/{ChannelArn}/messages\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    const query = map({\n        \"sort-order\": [, input.SortOrder],\n        \"not-before\": [\n            () => input.NotBefore !== void 0,\n            () => (input.NotBefore.toISOString().split(\".\")[0] + \"Z\").toString(),\n        ],\n        \"not-after\": [\n            () => input.NotAfter !== void 0,\n            () => (input.NotAfter.toISOString().split(\".\")[0] + \"Z\").toString(),\n        ],\n        \"max-results\": [() => input.MaxResults !== void 0, () => input.MaxResults.toString()],\n        \"next-token\": [, input.NextToken],\n        \"sub-channel-id\": [, input.SubChannelId],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const serializeAws_restJson1ListChannelModeratorsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channels/{ChannelArn}/moderators\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    const query = map({\n        \"max-results\": [() => input.MaxResults !== void 0, () => input.MaxResults.toString()],\n        \"next-token\": [, input.NextToken],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const serializeAws_restJson1ListChannelsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channels\";\n    const query = map({\n        \"app-instance-arn\": [, __expectNonNull(input.AppInstanceArn, `AppInstanceArn`)],\n        privacy: [, input.Privacy],\n        \"max-results\": [() => input.MaxResults !== void 0, () => input.MaxResults.toString()],\n        \"next-token\": [, input.NextToken],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const serializeAws_restJson1ListChannelsAssociatedWithChannelFlowCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channels\";\n    const query = map({\n        scope: [, \"channel-flow-associations\"],\n        \"channel-flow-arn\": [, __expectNonNull(input.ChannelFlowArn, `ChannelFlowArn`)],\n        \"max-results\": [() => input.MaxResults !== void 0, () => input.MaxResults.toString()],\n        \"next-token\": [, input.NextToken],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const serializeAws_restJson1ListChannelsModeratedByAppInstanceUserCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channels\";\n    const query = map({\n        scope: [, \"app-instance-user-moderated-channels\"],\n        \"app-instance-user-arn\": [, input.AppInstanceUserArn],\n        \"max-results\": [() => input.MaxResults !== void 0, () => input.MaxResults.toString()],\n        \"next-token\": [, input.NextToken],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const serializeAws_restJson1ListSubChannelsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channels/{ChannelArn}/subchannels\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    const query = map({\n        \"max-results\": [() => input.MaxResults !== void 0, () => input.MaxResults.toString()],\n        \"next-token\": [, input.NextToken],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const serializeAws_restJson1ListTagsForResourceCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/tags\";\n    const query = map({\n        arn: [, __expectNonNull(input.ResourceARN, `ResourceARN`)],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const serializeAws_restJson1PutChannelMembershipPreferencesCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/json\",\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/channels/{ChannelArn}/memberships/{MemberArn}/preferences\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"MemberArn\", () => input.MemberArn, \"{MemberArn}\", false);\n    let body;\n    body = JSON.stringify({\n        ...(input.Preferences != null && {\n            Preferences: serializeAws_restJson1ChannelMembershipPreferences(input.Preferences, context),\n        }),\n    });\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const serializeAws_restJson1RedactChannelMessageCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/json\",\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/channels/{ChannelArn}/messages/{MessageId}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"MessageId\", () => input.MessageId, \"{MessageId}\", false);\n    const query = map({\n        operation: [, \"redact\"],\n    });\n    let body;\n    body = JSON.stringify({\n        ...(input.SubChannelId != null && { SubChannelId: input.SubChannelId }),\n    });\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const serializeAws_restJson1SearchChannelsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/json\",\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channels\";\n    const query = map({\n        operation: [, \"search\"],\n        \"max-results\": [() => input.MaxResults !== void 0, () => input.MaxResults.toString()],\n        \"next-token\": [, input.NextToken],\n    });\n    let body;\n    body = JSON.stringify({\n        ...(input.Fields != null && { Fields: serializeAws_restJson1SearchFields(input.Fields, context) }),\n    });\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const serializeAws_restJson1SendChannelMessageCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/json\",\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channels/{ChannelArn}/messages\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    let body;\n    body = JSON.stringify({\n        ClientRequestToken: input.ClientRequestToken ?? generateIdempotencyToken(),\n        ...(input.Content != null && { Content: input.Content }),\n        ...(input.MessageAttributes != null && {\n            MessageAttributes: serializeAws_restJson1MessageAttributeMap(input.MessageAttributes, context),\n        }),\n        ...(input.Metadata != null && { Metadata: input.Metadata }),\n        ...(input.Persistence != null && { Persistence: input.Persistence }),\n        ...(input.PushNotification != null && {\n            PushNotification: serializeAws_restJson1PushNotificationConfiguration(input.PushNotification, context),\n        }),\n        ...(input.SubChannelId != null && { SubChannelId: input.SubChannelId }),\n        ...(input.Type != null && { Type: input.Type }),\n    });\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const serializeAws_restJson1TagResourceCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/tags\";\n    const query = map({\n        operation: [, \"tag-resource\"],\n    });\n    let body;\n    body = JSON.stringify({\n        ...(input.ResourceARN != null && { ResourceARN: input.ResourceARN }),\n        ...(input.Tags != null && { Tags: serializeAws_restJson1TagList(input.Tags, context) }),\n    });\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const serializeAws_restJson1UntagResourceCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/tags\";\n    const query = map({\n        operation: [, \"untag-resource\"],\n    });\n    let body;\n    body = JSON.stringify({\n        ...(input.ResourceARN != null && { ResourceARN: input.ResourceARN }),\n        ...(input.TagKeys != null && { TagKeys: serializeAws_restJson1TagKeyList(input.TagKeys, context) }),\n    });\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const serializeAws_restJson1UpdateChannelCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/json\",\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channels/{ChannelArn}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    let body;\n    body = JSON.stringify({\n        ...(input.Metadata != null && { Metadata: input.Metadata }),\n        ...(input.Mode != null && { Mode: input.Mode }),\n        ...(input.Name != null && { Name: input.Name }),\n    });\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const serializeAws_restJson1UpdateChannelFlowCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channel-flows/{ChannelFlowArn}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelFlowArn\", () => input.ChannelFlowArn, \"{ChannelFlowArn}\", false);\n    let body;\n    body = JSON.stringify({\n        ...(input.Name != null && { Name: input.Name }),\n        ...(input.Processors != null && { Processors: serializeAws_restJson1ProcessorList(input.Processors, context) }),\n    });\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const serializeAws_restJson1UpdateChannelMessageCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/json\",\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/channels/{ChannelArn}/messages/{MessageId}\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    resolvedPath = __resolvedPath(resolvedPath, input, \"MessageId\", () => input.MessageId, \"{MessageId}\", false);\n    let body;\n    body = JSON.stringify({\n        ...(input.Content != null && { Content: input.Content }),\n        ...(input.Metadata != null && { Metadata: input.Metadata }),\n        ...(input.SubChannelId != null && { SubChannelId: input.SubChannelId }),\n    });\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const serializeAws_restJson1UpdateChannelReadMarkerCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"content-type\": \"application/json\",\n        \"x-amz-chime-bearer\": input.ChimeBearer,\n    });\n    let resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/channels/{ChannelArn}/readMarker\";\n    resolvedPath = __resolvedPath(resolvedPath, input, \"ChannelArn\", () => input.ChannelArn, \"{ChannelArn}\", false);\n    let body;\n    body = JSON.stringify({\n        ...(input.SubChannelId != null && { SubChannelId: input.SubChannelId }),\n    });\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const deserializeAws_restJson1AssociateChannelFlowCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1AssociateChannelFlowCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst deserializeAws_restJson1AssociateChannelFlowCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ConflictException\":\n        case \"com.amazonaws.chimesdkmessaging#ConflictException\":\n            throw await deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"NotFoundException\":\n        case \"com.amazonaws.chimesdkmessaging#NotFoundException\":\n            throw await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1BatchCreateChannelMembershipCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1BatchCreateChannelMembershipCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.BatchChannelMemberships != null) {\n        contents.BatchChannelMemberships = deserializeAws_restJson1BatchChannelMemberships(data.BatchChannelMemberships, context);\n    }\n    if (data.Errors != null) {\n        contents.Errors = deserializeAws_restJson1BatchCreateChannelMembershipErrors(data.Errors, context);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1BatchCreateChannelMembershipCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"NotFoundException\":\n        case \"com.amazonaws.chimesdkmessaging#NotFoundException\":\n            throw await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context);\n        case \"ResourceLimitExceededException\":\n        case \"com.amazonaws.chimesdkmessaging#ResourceLimitExceededException\":\n            throw await deserializeAws_restJson1ResourceLimitExceededExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1ChannelFlowCallbackCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ChannelFlowCallbackCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.CallbackId != null) {\n        contents.CallbackId = __expectString(data.CallbackId);\n    }\n    if (data.ChannelArn != null) {\n        contents.ChannelArn = __expectString(data.ChannelArn);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1ChannelFlowCallbackCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ConflictException\":\n        case \"com.amazonaws.chimesdkmessaging#ConflictException\":\n            throw await deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1CreateChannelCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return deserializeAws_restJson1CreateChannelCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.ChannelArn != null) {\n        contents.ChannelArn = __expectString(data.ChannelArn);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1CreateChannelCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ConflictException\":\n        case \"com.amazonaws.chimesdkmessaging#ConflictException\":\n            throw await deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ResourceLimitExceededException\":\n        case \"com.amazonaws.chimesdkmessaging#ResourceLimitExceededException\":\n            throw await deserializeAws_restJson1ResourceLimitExceededExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1CreateChannelBanCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return deserializeAws_restJson1CreateChannelBanCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.ChannelArn != null) {\n        contents.ChannelArn = __expectString(data.ChannelArn);\n    }\n    if (data.Member != null) {\n        contents.Member = deserializeAws_restJson1Identity(data.Member, context);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1CreateChannelBanCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ConflictException\":\n        case \"com.amazonaws.chimesdkmessaging#ConflictException\":\n            throw await deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ResourceLimitExceededException\":\n        case \"com.amazonaws.chimesdkmessaging#ResourceLimitExceededException\":\n            throw await deserializeAws_restJson1ResourceLimitExceededExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1CreateChannelFlowCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return deserializeAws_restJson1CreateChannelFlowCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.ChannelFlowArn != null) {\n        contents.ChannelFlowArn = __expectString(data.ChannelFlowArn);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1CreateChannelFlowCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ConflictException\":\n        case \"com.amazonaws.chimesdkmessaging#ConflictException\":\n            throw await deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ResourceLimitExceededException\":\n        case \"com.amazonaws.chimesdkmessaging#ResourceLimitExceededException\":\n            throw await deserializeAws_restJson1ResourceLimitExceededExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1CreateChannelMembershipCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return deserializeAws_restJson1CreateChannelMembershipCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.ChannelArn != null) {\n        contents.ChannelArn = __expectString(data.ChannelArn);\n    }\n    if (data.Member != null) {\n        contents.Member = deserializeAws_restJson1Identity(data.Member, context);\n    }\n    if (data.SubChannelId != null) {\n        contents.SubChannelId = __expectString(data.SubChannelId);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1CreateChannelMembershipCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ConflictException\":\n        case \"com.amazonaws.chimesdkmessaging#ConflictException\":\n            throw await deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"NotFoundException\":\n        case \"com.amazonaws.chimesdkmessaging#NotFoundException\":\n            throw await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context);\n        case \"ResourceLimitExceededException\":\n        case \"com.amazonaws.chimesdkmessaging#ResourceLimitExceededException\":\n            throw await deserializeAws_restJson1ResourceLimitExceededExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1CreateChannelModeratorCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return deserializeAws_restJson1CreateChannelModeratorCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.ChannelArn != null) {\n        contents.ChannelArn = __expectString(data.ChannelArn);\n    }\n    if (data.ChannelModerator != null) {\n        contents.ChannelModerator = deserializeAws_restJson1Identity(data.ChannelModerator, context);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1CreateChannelModeratorCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ConflictException\":\n        case \"com.amazonaws.chimesdkmessaging#ConflictException\":\n            throw await deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ResourceLimitExceededException\":\n        case \"com.amazonaws.chimesdkmessaging#ResourceLimitExceededException\":\n            throw await deserializeAws_restJson1ResourceLimitExceededExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1DeleteChannelCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restJson1DeleteChannelCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst deserializeAws_restJson1DeleteChannelCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1DeleteChannelBanCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restJson1DeleteChannelBanCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst deserializeAws_restJson1DeleteChannelBanCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1DeleteChannelFlowCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restJson1DeleteChannelFlowCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst deserializeAws_restJson1DeleteChannelFlowCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ConflictException\":\n        case \"com.amazonaws.chimesdkmessaging#ConflictException\":\n            throw await deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1DeleteChannelMembershipCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restJson1DeleteChannelMembershipCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst deserializeAws_restJson1DeleteChannelMembershipCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ConflictException\":\n        case \"com.amazonaws.chimesdkmessaging#ConflictException\":\n            throw await deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1DeleteChannelMessageCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restJson1DeleteChannelMessageCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst deserializeAws_restJson1DeleteChannelMessageCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1DeleteChannelModeratorCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restJson1DeleteChannelModeratorCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst deserializeAws_restJson1DeleteChannelModeratorCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1DescribeChannelCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1DescribeChannelCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.Channel != null) {\n        contents.Channel = deserializeAws_restJson1Channel(data.Channel, context);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1DescribeChannelCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1DescribeChannelBanCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1DescribeChannelBanCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.ChannelBan != null) {\n        contents.ChannelBan = deserializeAws_restJson1ChannelBan(data.ChannelBan, context);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1DescribeChannelBanCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"NotFoundException\":\n        case \"com.amazonaws.chimesdkmessaging#NotFoundException\":\n            throw await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1DescribeChannelFlowCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1DescribeChannelFlowCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.ChannelFlow != null) {\n        contents.ChannelFlow = deserializeAws_restJson1ChannelFlow(data.ChannelFlow, context);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1DescribeChannelFlowCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1DescribeChannelMembershipCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1DescribeChannelMembershipCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.ChannelMembership != null) {\n        contents.ChannelMembership = deserializeAws_restJson1ChannelMembership(data.ChannelMembership, context);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1DescribeChannelMembershipCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"NotFoundException\":\n        case \"com.amazonaws.chimesdkmessaging#NotFoundException\":\n            throw await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1DescribeChannelMembershipForAppInstanceUserCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1DescribeChannelMembershipForAppInstanceUserCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.ChannelMembership != null) {\n        contents.ChannelMembership = deserializeAws_restJson1ChannelMembershipForAppInstanceUserSummary(data.ChannelMembership, context);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1DescribeChannelMembershipForAppInstanceUserCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1DescribeChannelModeratedByAppInstanceUserCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1DescribeChannelModeratedByAppInstanceUserCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.Channel != null) {\n        contents.Channel = deserializeAws_restJson1ChannelModeratedByAppInstanceUserSummary(data.Channel, context);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1DescribeChannelModeratedByAppInstanceUserCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1DescribeChannelModeratorCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1DescribeChannelModeratorCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.ChannelModerator != null) {\n        contents.ChannelModerator = deserializeAws_restJson1ChannelModerator(data.ChannelModerator, context);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1DescribeChannelModeratorCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"NotFoundException\":\n        case \"com.amazonaws.chimesdkmessaging#NotFoundException\":\n            throw await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1DisassociateChannelFlowCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restJson1DisassociateChannelFlowCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst deserializeAws_restJson1DisassociateChannelFlowCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ConflictException\":\n        case \"com.amazonaws.chimesdkmessaging#ConflictException\":\n            throw await deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"NotFoundException\":\n        case \"com.amazonaws.chimesdkmessaging#NotFoundException\":\n            throw await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1GetChannelMembershipPreferencesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1GetChannelMembershipPreferencesCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.ChannelArn != null) {\n        contents.ChannelArn = __expectString(data.ChannelArn);\n    }\n    if (data.Member != null) {\n        contents.Member = deserializeAws_restJson1Identity(data.Member, context);\n    }\n    if (data.Preferences != null) {\n        contents.Preferences = deserializeAws_restJson1ChannelMembershipPreferences(data.Preferences, context);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1GetChannelMembershipPreferencesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1GetChannelMessageCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1GetChannelMessageCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.ChannelMessage != null) {\n        contents.ChannelMessage = deserializeAws_restJson1ChannelMessage(data.ChannelMessage, context);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1GetChannelMessageCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"NotFoundException\":\n        case \"com.amazonaws.chimesdkmessaging#NotFoundException\":\n            throw await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1GetChannelMessageStatusCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1GetChannelMessageStatusCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.Status != null) {\n        contents.Status = deserializeAws_restJson1ChannelMessageStatusStructure(data.Status, context);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1GetChannelMessageStatusCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1GetMessagingSessionEndpointCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1GetMessagingSessionEndpointCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.Endpoint != null) {\n        contents.Endpoint = deserializeAws_restJson1MessagingSessionEndpoint(data.Endpoint, context);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1GetMessagingSessionEndpointCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1ListChannelBansCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListChannelBansCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.ChannelArn != null) {\n        contents.ChannelArn = __expectString(data.ChannelArn);\n    }\n    if (data.ChannelBans != null) {\n        contents.ChannelBans = deserializeAws_restJson1ChannelBanSummaryList(data.ChannelBans, context);\n    }\n    if (data.NextToken != null) {\n        contents.NextToken = __expectString(data.NextToken);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1ListChannelBansCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1ListChannelFlowsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListChannelFlowsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.ChannelFlows != null) {\n        contents.ChannelFlows = deserializeAws_restJson1ChannelFlowSummaryList(data.ChannelFlows, context);\n    }\n    if (data.NextToken != null) {\n        contents.NextToken = __expectString(data.NextToken);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1ListChannelFlowsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1ListChannelMembershipsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListChannelMembershipsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.ChannelArn != null) {\n        contents.ChannelArn = __expectString(data.ChannelArn);\n    }\n    if (data.ChannelMemberships != null) {\n        contents.ChannelMemberships = deserializeAws_restJson1ChannelMembershipSummaryList(data.ChannelMemberships, context);\n    }\n    if (data.NextToken != null) {\n        contents.NextToken = __expectString(data.NextToken);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1ListChannelMembershipsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1ListChannelMembershipsForAppInstanceUserCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListChannelMembershipsForAppInstanceUserCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.ChannelMemberships != null) {\n        contents.ChannelMemberships = deserializeAws_restJson1ChannelMembershipForAppInstanceUserSummaryList(data.ChannelMemberships, context);\n    }\n    if (data.NextToken != null) {\n        contents.NextToken = __expectString(data.NextToken);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1ListChannelMembershipsForAppInstanceUserCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1ListChannelMessagesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListChannelMessagesCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.ChannelArn != null) {\n        contents.ChannelArn = __expectString(data.ChannelArn);\n    }\n    if (data.ChannelMessages != null) {\n        contents.ChannelMessages = deserializeAws_restJson1ChannelMessageSummaryList(data.ChannelMessages, context);\n    }\n    if (data.NextToken != null) {\n        contents.NextToken = __expectString(data.NextToken);\n    }\n    if (data.SubChannelId != null) {\n        contents.SubChannelId = __expectString(data.SubChannelId);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1ListChannelMessagesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1ListChannelModeratorsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListChannelModeratorsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.ChannelArn != null) {\n        contents.ChannelArn = __expectString(data.ChannelArn);\n    }\n    if (data.ChannelModerators != null) {\n        contents.ChannelModerators = deserializeAws_restJson1ChannelModeratorSummaryList(data.ChannelModerators, context);\n    }\n    if (data.NextToken != null) {\n        contents.NextToken = __expectString(data.NextToken);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1ListChannelModeratorsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1ListChannelsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListChannelsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.Channels != null) {\n        contents.Channels = deserializeAws_restJson1ChannelSummaryList(data.Channels, context);\n    }\n    if (data.NextToken != null) {\n        contents.NextToken = __expectString(data.NextToken);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1ListChannelsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1ListChannelsAssociatedWithChannelFlowCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListChannelsAssociatedWithChannelFlowCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.Channels != null) {\n        contents.Channels = deserializeAws_restJson1ChannelAssociatedWithFlowSummaryList(data.Channels, context);\n    }\n    if (data.NextToken != null) {\n        contents.NextToken = __expectString(data.NextToken);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1ListChannelsAssociatedWithChannelFlowCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1ListChannelsModeratedByAppInstanceUserCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListChannelsModeratedByAppInstanceUserCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.Channels != null) {\n        contents.Channels = deserializeAws_restJson1ChannelModeratedByAppInstanceUserSummaryList(data.Channels, context);\n    }\n    if (data.NextToken != null) {\n        contents.NextToken = __expectString(data.NextToken);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1ListChannelsModeratedByAppInstanceUserCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1ListSubChannelsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListSubChannelsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.ChannelArn != null) {\n        contents.ChannelArn = __expectString(data.ChannelArn);\n    }\n    if (data.NextToken != null) {\n        contents.NextToken = __expectString(data.NextToken);\n    }\n    if (data.SubChannels != null) {\n        contents.SubChannels = deserializeAws_restJson1SubChannelSummaryList(data.SubChannels, context);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1ListSubChannelsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1ListTagsForResourceCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListTagsForResourceCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.Tags != null) {\n        contents.Tags = deserializeAws_restJson1TagList(data.Tags, context);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1ListTagsForResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1PutChannelMembershipPreferencesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1PutChannelMembershipPreferencesCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.ChannelArn != null) {\n        contents.ChannelArn = __expectString(data.ChannelArn);\n    }\n    if (data.Member != null) {\n        contents.Member = deserializeAws_restJson1Identity(data.Member, context);\n    }\n    if (data.Preferences != null) {\n        contents.Preferences = deserializeAws_restJson1ChannelMembershipPreferences(data.Preferences, context);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1PutChannelMembershipPreferencesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ConflictException\":\n        case \"com.amazonaws.chimesdkmessaging#ConflictException\":\n            throw await deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1RedactChannelMessageCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1RedactChannelMessageCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.ChannelArn != null) {\n        contents.ChannelArn = __expectString(data.ChannelArn);\n    }\n    if (data.MessageId != null) {\n        contents.MessageId = __expectString(data.MessageId);\n    }\n    if (data.SubChannelId != null) {\n        contents.SubChannelId = __expectString(data.SubChannelId);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1RedactChannelMessageCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ConflictException\":\n        case \"com.amazonaws.chimesdkmessaging#ConflictException\":\n            throw await deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1SearchChannelsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1SearchChannelsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.Channels != null) {\n        contents.Channels = deserializeAws_restJson1ChannelSummaryList(data.Channels, context);\n    }\n    if (data.NextToken != null) {\n        contents.NextToken = __expectString(data.NextToken);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1SearchChannelsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1SendChannelMessageCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return deserializeAws_restJson1SendChannelMessageCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.ChannelArn != null) {\n        contents.ChannelArn = __expectString(data.ChannelArn);\n    }\n    if (data.MessageId != null) {\n        contents.MessageId = __expectString(data.MessageId);\n    }\n    if (data.Status != null) {\n        contents.Status = deserializeAws_restJson1ChannelMessageStatusStructure(data.Status, context);\n    }\n    if (data.SubChannelId != null) {\n        contents.SubChannelId = __expectString(data.SubChannelId);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1SendChannelMessageCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ConflictException\":\n        case \"com.amazonaws.chimesdkmessaging#ConflictException\":\n            throw await deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1TagResourceCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restJson1TagResourceCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst deserializeAws_restJson1TagResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ResourceLimitExceededException\":\n        case \"com.amazonaws.chimesdkmessaging#ResourceLimitExceededException\":\n            throw await deserializeAws_restJson1ResourceLimitExceededExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1UntagResourceCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restJson1UntagResourceCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst deserializeAws_restJson1UntagResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1UpdateChannelCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1UpdateChannelCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.ChannelArn != null) {\n        contents.ChannelArn = __expectString(data.ChannelArn);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1UpdateChannelCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ConflictException\":\n        case \"com.amazonaws.chimesdkmessaging#ConflictException\":\n            throw await deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1UpdateChannelFlowCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1UpdateChannelFlowCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.ChannelFlowArn != null) {\n        contents.ChannelFlowArn = __expectString(data.ChannelFlowArn);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1UpdateChannelFlowCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ConflictException\":\n        case \"com.amazonaws.chimesdkmessaging#ConflictException\":\n            throw await deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1UpdateChannelMessageCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1UpdateChannelMessageCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.ChannelArn != null) {\n        contents.ChannelArn = __expectString(data.ChannelArn);\n    }\n    if (data.MessageId != null) {\n        contents.MessageId = __expectString(data.MessageId);\n    }\n    if (data.Status != null) {\n        contents.Status = deserializeAws_restJson1ChannelMessageStatusStructure(data.Status, context);\n    }\n    if (data.SubChannelId != null) {\n        contents.SubChannelId = __expectString(data.SubChannelId);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1UpdateChannelMessageCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ConflictException\":\n        case \"com.amazonaws.chimesdkmessaging#ConflictException\":\n            throw await deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1UpdateChannelReadMarkerCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1UpdateChannelReadMarkerCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.ChannelArn != null) {\n        contents.ChannelArn = __expectString(data.ChannelArn);\n    }\n    if (data.SubChannelId != null) {\n        contents.SubChannelId = __expectString(data.SubChannelId);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1UpdateChannelReadMarkerCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BadRequestException\":\n        case \"com.amazonaws.chimesdkmessaging#BadRequestException\":\n            throw await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context);\n        case \"ConflictException\":\n        case \"com.amazonaws.chimesdkmessaging#ConflictException\":\n            throw await deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context);\n        case \"ForbiddenException\":\n        case \"com.amazonaws.chimesdkmessaging#ForbiddenException\":\n            throw await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context);\n        case \"ServiceFailureException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceFailureException\":\n            throw await deserializeAws_restJson1ServiceFailureExceptionResponse(parsedOutput, context);\n        case \"ServiceUnavailableException\":\n        case \"com.amazonaws.chimesdkmessaging#ServiceUnavailableException\":\n            throw await deserializeAws_restJson1ServiceUnavailableExceptionResponse(parsedOutput, context);\n        case \"ThrottledClientException\":\n        case \"com.amazonaws.chimesdkmessaging#ThrottledClientException\":\n            throw await deserializeAws_restJson1ThrottledClientExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.chimesdkmessaging#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nconst map = __map;\nconst deserializeAws_restJson1BadRequestExceptionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data.Code != null) {\n        contents.Code = __expectString(data.Code);\n    }\n    if (data.Message != null) {\n        contents.Message = __expectString(data.Message);\n    }\n    const exception = new BadRequestException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1ConflictExceptionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data.Code != null) {\n        contents.Code = __expectString(data.Code);\n    }\n    if (data.Message != null) {\n        contents.Message = __expectString(data.Message);\n    }\n    const exception = new ConflictException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1ForbiddenExceptionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data.Code != null) {\n        contents.Code = __expectString(data.Code);\n    }\n    if (data.Message != null) {\n        contents.Message = __expectString(data.Message);\n    }\n    const exception = new ForbiddenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1NotFoundExceptionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data.Code != null) {\n        contents.Code = __expectString(data.Code);\n    }\n    if (data.Message != null) {\n        contents.Message = __expectString(data.Message);\n    }\n    const exception = new NotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1ResourceLimitExceededExceptionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data.Code != null) {\n        contents.Code = __expectString(data.Code);\n    }\n    if (data.Message != null) {\n        contents.Message = __expectString(data.Message);\n    }\n    const exception = new ResourceLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1ServiceFailureExceptionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data.Code != null) {\n        contents.Code = __expectString(data.Code);\n    }\n    if (data.Message != null) {\n        contents.Message = __expectString(data.Message);\n    }\n    const exception = new ServiceFailureException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1ServiceUnavailableExceptionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data.Code != null) {\n        contents.Code = __expectString(data.Code);\n    }\n    if (data.Message != null) {\n        contents.Message = __expectString(data.Message);\n    }\n    const exception = new ServiceUnavailableException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1ThrottledClientExceptionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data.Code != null) {\n        contents.Code = __expectString(data.Code);\n    }\n    if (data.Message != null) {\n        contents.Message = __expectString(data.Message);\n    }\n    const exception = new ThrottledClientException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1UnauthorizedClientExceptionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data.Code != null) {\n        contents.Code = __expectString(data.Code);\n    }\n    if (data.Message != null) {\n        contents.Message = __expectString(data.Message);\n    }\n    const exception = new UnauthorizedClientException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst serializeAws_restJson1ChannelMemberArns = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return entry;\n    });\n};\nconst serializeAws_restJson1ChannelMembershipPreferences = (input, context) => {\n    return {\n        ...(input.PushNotifications != null && {\n            PushNotifications: serializeAws_restJson1PushNotificationPreferences(input.PushNotifications, context),\n        }),\n    };\n};\nconst serializeAws_restJson1ChannelMessageCallback = (input, context) => {\n    return {\n        ...(input.Content != null && { Content: input.Content }),\n        ...(input.MessageAttributes != null && {\n            MessageAttributes: serializeAws_restJson1MessageAttributeMap(input.MessageAttributes, context),\n        }),\n        ...(input.MessageId != null && { MessageId: input.MessageId }),\n        ...(input.Metadata != null && { Metadata: input.Metadata }),\n        ...(input.PushNotification != null && {\n            PushNotification: serializeAws_restJson1PushNotificationConfiguration(input.PushNotification, context),\n        }),\n        ...(input.SubChannelId != null && { SubChannelId: input.SubChannelId }),\n    };\n};\nconst serializeAws_restJson1ChannelModeratorArns = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return entry;\n    });\n};\nconst serializeAws_restJson1ElasticChannelConfiguration = (input, context) => {\n    return {\n        ...(input.MaximumSubChannels != null && { MaximumSubChannels: input.MaximumSubChannels }),\n        ...(input.MinimumMembershipPercentage != null && {\n            MinimumMembershipPercentage: input.MinimumMembershipPercentage,\n        }),\n        ...(input.TargetMembershipsPerSubChannel != null && {\n            TargetMembershipsPerSubChannel: input.TargetMembershipsPerSubChannel,\n        }),\n    };\n};\nconst serializeAws_restJson1LambdaConfiguration = (input, context) => {\n    return {\n        ...(input.InvocationType != null && { InvocationType: input.InvocationType }),\n        ...(input.ResourceArn != null && { ResourceArn: input.ResourceArn }),\n    };\n};\nconst serializeAws_restJson1MemberArns = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return entry;\n    });\n};\nconst serializeAws_restJson1MessageAttributeMap = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = serializeAws_restJson1MessageAttributeValue(value, context);\n        return acc;\n    }, {});\n};\nconst serializeAws_restJson1MessageAttributeStringValues = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return entry;\n    });\n};\nconst serializeAws_restJson1MessageAttributeValue = (input, context) => {\n    return {\n        ...(input.StringValues != null && {\n            StringValues: serializeAws_restJson1MessageAttributeStringValues(input.StringValues, context),\n        }),\n    };\n};\nconst serializeAws_restJson1Processor = (input, context) => {\n    return {\n        ...(input.Configuration != null && {\n            Configuration: serializeAws_restJson1ProcessorConfiguration(input.Configuration, context),\n        }),\n        ...(input.ExecutionOrder != null && { ExecutionOrder: input.ExecutionOrder }),\n        ...(input.FallbackAction != null && { FallbackAction: input.FallbackAction }),\n        ...(input.Name != null && { Name: input.Name }),\n    };\n};\nconst serializeAws_restJson1ProcessorConfiguration = (input, context) => {\n    return {\n        ...(input.Lambda != null && { Lambda: serializeAws_restJson1LambdaConfiguration(input.Lambda, context) }),\n    };\n};\nconst serializeAws_restJson1ProcessorList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_restJson1Processor(entry, context);\n    });\n};\nconst serializeAws_restJson1PushNotificationConfiguration = (input, context) => {\n    return {\n        ...(input.Body != null && { Body: input.Body }),\n        ...(input.Title != null && { Title: input.Title }),\n        ...(input.Type != null && { Type: input.Type }),\n    };\n};\nconst serializeAws_restJson1PushNotificationPreferences = (input, context) => {\n    return {\n        ...(input.AllowNotifications != null && { AllowNotifications: input.AllowNotifications }),\n        ...(input.FilterRule != null && { FilterRule: input.FilterRule }),\n    };\n};\nconst serializeAws_restJson1SearchField = (input, context) => {\n    return {\n        ...(input.Key != null && { Key: input.Key }),\n        ...(input.Operator != null && { Operator: input.Operator }),\n        ...(input.Values != null && { Values: serializeAws_restJson1SearchFieldValues(input.Values, context) }),\n    };\n};\nconst serializeAws_restJson1SearchFields = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_restJson1SearchField(entry, context);\n    });\n};\nconst serializeAws_restJson1SearchFieldValues = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return entry;\n    });\n};\nconst serializeAws_restJson1Tag = (input, context) => {\n    return {\n        ...(input.Key != null && { Key: input.Key }),\n        ...(input.Value != null && { Value: input.Value }),\n    };\n};\nconst serializeAws_restJson1TagKeyList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return entry;\n    });\n};\nconst serializeAws_restJson1TagList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_restJson1Tag(entry, context);\n    });\n};\nconst deserializeAws_restJson1AppInstanceUserMembershipSummary = (output, context) => {\n    return {\n        ReadMarkerTimestamp: output.ReadMarkerTimestamp != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.ReadMarkerTimestamp)))\n            : undefined,\n        SubChannelId: __expectString(output.SubChannelId),\n        Type: __expectString(output.Type),\n    };\n};\nconst deserializeAws_restJson1BatchChannelMemberships = (output, context) => {\n    return {\n        ChannelArn: __expectString(output.ChannelArn),\n        InvitedBy: output.InvitedBy != null ? deserializeAws_restJson1Identity(output.InvitedBy, context) : undefined,\n        Members: output.Members != null ? deserializeAws_restJson1Members(output.Members, context) : undefined,\n        SubChannelId: __expectString(output.SubChannelId),\n        Type: __expectString(output.Type),\n    };\n};\nconst deserializeAws_restJson1BatchCreateChannelMembershipError = (output, context) => {\n    return {\n        ErrorCode: __expectString(output.ErrorCode),\n        ErrorMessage: __expectString(output.ErrorMessage),\n        MemberArn: __expectString(output.MemberArn),\n    };\n};\nconst deserializeAws_restJson1BatchCreateChannelMembershipErrors = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1BatchCreateChannelMembershipError(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_restJson1Channel = (output, context) => {\n    return {\n        ChannelArn: __expectString(output.ChannelArn),\n        ChannelFlowArn: __expectString(output.ChannelFlowArn),\n        CreatedBy: output.CreatedBy != null ? deserializeAws_restJson1Identity(output.CreatedBy, context) : undefined,\n        CreatedTimestamp: output.CreatedTimestamp != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreatedTimestamp)))\n            : undefined,\n        ElasticChannelConfiguration: output.ElasticChannelConfiguration != null\n            ? deserializeAws_restJson1ElasticChannelConfiguration(output.ElasticChannelConfiguration, context)\n            : undefined,\n        LastMessageTimestamp: output.LastMessageTimestamp != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastMessageTimestamp)))\n            : undefined,\n        LastUpdatedTimestamp: output.LastUpdatedTimestamp != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastUpdatedTimestamp)))\n            : undefined,\n        Metadata: __expectString(output.Metadata),\n        Mode: __expectString(output.Mode),\n        Name: __expectString(output.Name),\n        Privacy: __expectString(output.Privacy),\n    };\n};\nconst deserializeAws_restJson1ChannelAssociatedWithFlowSummary = (output, context) => {\n    return {\n        ChannelArn: __expectString(output.ChannelArn),\n        Metadata: __expectString(output.Metadata),\n        Mode: __expectString(output.Mode),\n        Name: __expectString(output.Name),\n        Privacy: __expectString(output.Privacy),\n    };\n};\nconst deserializeAws_restJson1ChannelAssociatedWithFlowSummaryList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1ChannelAssociatedWithFlowSummary(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_restJson1ChannelBan = (output, context) => {\n    return {\n        ChannelArn: __expectString(output.ChannelArn),\n        CreatedBy: output.CreatedBy != null ? deserializeAws_restJson1Identity(output.CreatedBy, context) : undefined,\n        CreatedTimestamp: output.CreatedTimestamp != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreatedTimestamp)))\n            : undefined,\n        Member: output.Member != null ? deserializeAws_restJson1Identity(output.Member, context) : undefined,\n    };\n};\nconst deserializeAws_restJson1ChannelBanSummary = (output, context) => {\n    return {\n        Member: output.Member != null ? deserializeAws_restJson1Identity(output.Member, context) : undefined,\n    };\n};\nconst deserializeAws_restJson1ChannelBanSummaryList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1ChannelBanSummary(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_restJson1ChannelFlow = (output, context) => {\n    return {\n        ChannelFlowArn: __expectString(output.ChannelFlowArn),\n        CreatedTimestamp: output.CreatedTimestamp != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreatedTimestamp)))\n            : undefined,\n        LastUpdatedTimestamp: output.LastUpdatedTimestamp != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastUpdatedTimestamp)))\n            : undefined,\n        Name: __expectString(output.Name),\n        Processors: output.Processors != null ? deserializeAws_restJson1ProcessorList(output.Processors, context) : undefined,\n    };\n};\nconst deserializeAws_restJson1ChannelFlowSummary = (output, context) => {\n    return {\n        ChannelFlowArn: __expectString(output.ChannelFlowArn),\n        Name: __expectString(output.Name),\n        Processors: output.Processors != null ? deserializeAws_restJson1ProcessorList(output.Processors, context) : undefined,\n    };\n};\nconst deserializeAws_restJson1ChannelFlowSummaryList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1ChannelFlowSummary(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_restJson1ChannelMembership = (output, context) => {\n    return {\n        ChannelArn: __expectString(output.ChannelArn),\n        CreatedTimestamp: output.CreatedTimestamp != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreatedTimestamp)))\n            : undefined,\n        InvitedBy: output.InvitedBy != null ? deserializeAws_restJson1Identity(output.InvitedBy, context) : undefined,\n        LastUpdatedTimestamp: output.LastUpdatedTimestamp != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastUpdatedTimestamp)))\n            : undefined,\n        Member: output.Member != null ? deserializeAws_restJson1Identity(output.Member, context) : undefined,\n        SubChannelId: __expectString(output.SubChannelId),\n        Type: __expectString(output.Type),\n    };\n};\nconst deserializeAws_restJson1ChannelMembershipForAppInstanceUserSummary = (output, context) => {\n    return {\n        AppInstanceUserMembershipSummary: output.AppInstanceUserMembershipSummary != null\n            ? deserializeAws_restJson1AppInstanceUserMembershipSummary(output.AppInstanceUserMembershipSummary, context)\n            : undefined,\n        ChannelSummary: output.ChannelSummary != null\n            ? deserializeAws_restJson1ChannelSummary(output.ChannelSummary, context)\n            : undefined,\n    };\n};\nconst deserializeAws_restJson1ChannelMembershipForAppInstanceUserSummaryList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1ChannelMembershipForAppInstanceUserSummary(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_restJson1ChannelMembershipPreferences = (output, context) => {\n    return {\n        PushNotifications: output.PushNotifications != null\n            ? deserializeAws_restJson1PushNotificationPreferences(output.PushNotifications, context)\n            : undefined,\n    };\n};\nconst deserializeAws_restJson1ChannelMembershipSummary = (output, context) => {\n    return {\n        Member: output.Member != null ? deserializeAws_restJson1Identity(output.Member, context) : undefined,\n    };\n};\nconst deserializeAws_restJson1ChannelMembershipSummaryList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1ChannelMembershipSummary(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_restJson1ChannelMessage = (output, context) => {\n    return {\n        ChannelArn: __expectString(output.ChannelArn),\n        Content: __expectString(output.Content),\n        CreatedTimestamp: output.CreatedTimestamp != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreatedTimestamp)))\n            : undefined,\n        LastEditedTimestamp: output.LastEditedTimestamp != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastEditedTimestamp)))\n            : undefined,\n        LastUpdatedTimestamp: output.LastUpdatedTimestamp != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastUpdatedTimestamp)))\n            : undefined,\n        MessageAttributes: output.MessageAttributes != null\n            ? deserializeAws_restJson1MessageAttributeMap(output.MessageAttributes, context)\n            : undefined,\n        MessageId: __expectString(output.MessageId),\n        Metadata: __expectString(output.Metadata),\n        Persistence: __expectString(output.Persistence),\n        Redacted: __expectBoolean(output.Redacted),\n        Sender: output.Sender != null ? deserializeAws_restJson1Identity(output.Sender, context) : undefined,\n        Status: output.Status != null ? deserializeAws_restJson1ChannelMessageStatusStructure(output.Status, context) : undefined,\n        SubChannelId: __expectString(output.SubChannelId),\n        Type: __expectString(output.Type),\n    };\n};\nconst deserializeAws_restJson1ChannelMessageStatusStructure = (output, context) => {\n    return {\n        Detail: __expectString(output.Detail),\n        Value: __expectString(output.Value),\n    };\n};\nconst deserializeAws_restJson1ChannelMessageSummary = (output, context) => {\n    return {\n        Content: __expectString(output.Content),\n        CreatedTimestamp: output.CreatedTimestamp != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreatedTimestamp)))\n            : undefined,\n        LastEditedTimestamp: output.LastEditedTimestamp != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastEditedTimestamp)))\n            : undefined,\n        LastUpdatedTimestamp: output.LastUpdatedTimestamp != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastUpdatedTimestamp)))\n            : undefined,\n        MessageAttributes: output.MessageAttributes != null\n            ? deserializeAws_restJson1MessageAttributeMap(output.MessageAttributes, context)\n            : undefined,\n        MessageId: __expectString(output.MessageId),\n        Metadata: __expectString(output.Metadata),\n        Redacted: __expectBoolean(output.Redacted),\n        Sender: output.Sender != null ? deserializeAws_restJson1Identity(output.Sender, context) : undefined,\n        Status: output.Status != null ? deserializeAws_restJson1ChannelMessageStatusStructure(output.Status, context) : undefined,\n        Type: __expectString(output.Type),\n    };\n};\nconst deserializeAws_restJson1ChannelMessageSummaryList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1ChannelMessageSummary(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_restJson1ChannelModeratedByAppInstanceUserSummary = (output, context) => {\n    return {\n        ChannelSummary: output.ChannelSummary != null\n            ? deserializeAws_restJson1ChannelSummary(output.ChannelSummary, context)\n            : undefined,\n    };\n};\nconst deserializeAws_restJson1ChannelModeratedByAppInstanceUserSummaryList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1ChannelModeratedByAppInstanceUserSummary(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_restJson1ChannelModerator = (output, context) => {\n    return {\n        ChannelArn: __expectString(output.ChannelArn),\n        CreatedBy: output.CreatedBy != null ? deserializeAws_restJson1Identity(output.CreatedBy, context) : undefined,\n        CreatedTimestamp: output.CreatedTimestamp != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreatedTimestamp)))\n            : undefined,\n        Moderator: output.Moderator != null ? deserializeAws_restJson1Identity(output.Moderator, context) : undefined,\n    };\n};\nconst deserializeAws_restJson1ChannelModeratorSummary = (output, context) => {\n    return {\n        Moderator: output.Moderator != null ? deserializeAws_restJson1Identity(output.Moderator, context) : undefined,\n    };\n};\nconst deserializeAws_restJson1ChannelModeratorSummaryList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1ChannelModeratorSummary(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_restJson1ChannelSummary = (output, context) => {\n    return {\n        ChannelArn: __expectString(output.ChannelArn),\n        LastMessageTimestamp: output.LastMessageTimestamp != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastMessageTimestamp)))\n            : undefined,\n        Metadata: __expectString(output.Metadata),\n        Mode: __expectString(output.Mode),\n        Name: __expectString(output.Name),\n        Privacy: __expectString(output.Privacy),\n    };\n};\nconst deserializeAws_restJson1ChannelSummaryList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1ChannelSummary(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_restJson1ElasticChannelConfiguration = (output, context) => {\n    return {\n        MaximumSubChannels: __expectInt32(output.MaximumSubChannels),\n        MinimumMembershipPercentage: __expectInt32(output.MinimumMembershipPercentage),\n        TargetMembershipsPerSubChannel: __expectInt32(output.TargetMembershipsPerSubChannel),\n    };\n};\nconst deserializeAws_restJson1Identity = (output, context) => {\n    return {\n        Arn: __expectString(output.Arn),\n        Name: __expectString(output.Name),\n    };\n};\nconst deserializeAws_restJson1LambdaConfiguration = (output, context) => {\n    return {\n        InvocationType: __expectString(output.InvocationType),\n        ResourceArn: __expectString(output.ResourceArn),\n    };\n};\nconst deserializeAws_restJson1Members = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1Identity(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_restJson1MessageAttributeMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = deserializeAws_restJson1MessageAttributeValue(value, context);\n        return acc;\n    }, {});\n};\nconst deserializeAws_restJson1MessageAttributeStringValues = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n    return retVal;\n};\nconst deserializeAws_restJson1MessageAttributeValue = (output, context) => {\n    return {\n        StringValues: output.StringValues != null\n            ? deserializeAws_restJson1MessageAttributeStringValues(output.StringValues, context)\n            : undefined,\n    };\n};\nconst deserializeAws_restJson1MessagingSessionEndpoint = (output, context) => {\n    return {\n        Url: __expectString(output.Url),\n    };\n};\nconst deserializeAws_restJson1Processor = (output, context) => {\n    return {\n        Configuration: output.Configuration != null\n            ? deserializeAws_restJson1ProcessorConfiguration(output.Configuration, context)\n            : undefined,\n        ExecutionOrder: __expectInt32(output.ExecutionOrder),\n        FallbackAction: __expectString(output.FallbackAction),\n        Name: __expectString(output.Name),\n    };\n};\nconst deserializeAws_restJson1ProcessorConfiguration = (output, context) => {\n    return {\n        Lambda: output.Lambda != null ? deserializeAws_restJson1LambdaConfiguration(output.Lambda, context) : undefined,\n    };\n};\nconst deserializeAws_restJson1ProcessorList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1Processor(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_restJson1PushNotificationPreferences = (output, context) => {\n    return {\n        AllowNotifications: __expectString(output.AllowNotifications),\n        FilterRule: __expectString(output.FilterRule),\n    };\n};\nconst deserializeAws_restJson1SubChannelSummary = (output, context) => {\n    return {\n        MembershipCount: __expectInt32(output.MembershipCount),\n        SubChannelId: __expectString(output.SubChannelId),\n    };\n};\nconst deserializeAws_restJson1SubChannelSummaryList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1SubChannelSummary(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_restJson1Tag = (output, context) => {\n    return {\n        Key: __expectString(output.Key),\n        Value: __expectString(output.Value),\n    };\n};\nconst deserializeAws_restJson1TagList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1Tag(entry, context);\n    });\n    return retVal;\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst isSerializableHeaderValue = (value) => value !== undefined &&\n    value !== null &&\n    value !== \"\" &&\n    (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n    (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        return JSON.parse(encoded);\n    }\n    return {};\n});\nconst parseErrorBody = async (errorBody, context) => {\n    const value = await parseBody(errorBody, context);\n    value.message = value.message ?? value.Message;\n    return value;\n};\nconst loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n};\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { AssociateChannelFlowRequestFilterSensitiveLog } from \"../models/models_0\";\nimport { deserializeAws_restJson1AssociateChannelFlowCommand, serializeAws_restJson1AssociateChannelFlowCommand, } from \"../protocols/Aws_restJson1\";\nexport class AssociateChannelFlowCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, AssociateChannelFlowCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"AssociateChannelFlowCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: AssociateChannelFlowRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1AssociateChannelFlowCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1AssociateChannelFlowCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { BatchCreateChannelMembershipRequestFilterSensitiveLog, BatchCreateChannelMembershipResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1BatchCreateChannelMembershipCommand, serializeAws_restJson1BatchCreateChannelMembershipCommand, } from \"../protocols/Aws_restJson1\";\nexport class BatchCreateChannelMembershipCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, BatchCreateChannelMembershipCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"BatchCreateChannelMembershipCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: BatchCreateChannelMembershipRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: BatchCreateChannelMembershipResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1BatchCreateChannelMembershipCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1BatchCreateChannelMembershipCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { ChannelFlowCallbackRequestFilterSensitiveLog, ChannelFlowCallbackResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1ChannelFlowCallbackCommand, serializeAws_restJson1ChannelFlowCallbackCommand, } from \"../protocols/Aws_restJson1\";\nexport class ChannelFlowCallbackCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, ChannelFlowCallbackCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"ChannelFlowCallbackCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: ChannelFlowCallbackRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: ChannelFlowCallbackResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1ChannelFlowCallbackCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1ChannelFlowCallbackCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { CreateChannelBanRequestFilterSensitiveLog, CreateChannelBanResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1CreateChannelBanCommand, serializeAws_restJson1CreateChannelBanCommand, } from \"../protocols/Aws_restJson1\";\nexport class CreateChannelBanCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, CreateChannelBanCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"CreateChannelBanCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: CreateChannelBanRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: CreateChannelBanResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1CreateChannelBanCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1CreateChannelBanCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { CreateChannelRequestFilterSensitiveLog, CreateChannelResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1CreateChannelCommand, serializeAws_restJson1CreateChannelCommand, } from \"../protocols/Aws_restJson1\";\nexport class CreateChannelCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, CreateChannelCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"CreateChannelCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: CreateChannelRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: CreateChannelResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1CreateChannelCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1CreateChannelCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { CreateChannelFlowRequestFilterSensitiveLog, CreateChannelFlowResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1CreateChannelFlowCommand, serializeAws_restJson1CreateChannelFlowCommand, } from \"../protocols/Aws_restJson1\";\nexport class CreateChannelFlowCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, CreateChannelFlowCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"CreateChannelFlowCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: CreateChannelFlowRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: CreateChannelFlowResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1CreateChannelFlowCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1CreateChannelFlowCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { CreateChannelMembershipRequestFilterSensitiveLog, CreateChannelMembershipResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1CreateChannelMembershipCommand, serializeAws_restJson1CreateChannelMembershipCommand, } from \"../protocols/Aws_restJson1\";\nexport class CreateChannelMembershipCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, CreateChannelMembershipCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"CreateChannelMembershipCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: CreateChannelMembershipRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: CreateChannelMembershipResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1CreateChannelMembershipCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1CreateChannelMembershipCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { CreateChannelModeratorRequestFilterSensitiveLog, CreateChannelModeratorResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1CreateChannelModeratorCommand, serializeAws_restJson1CreateChannelModeratorCommand, } from \"../protocols/Aws_restJson1\";\nexport class CreateChannelModeratorCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, CreateChannelModeratorCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"CreateChannelModeratorCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: CreateChannelModeratorRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: CreateChannelModeratorResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1CreateChannelModeratorCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1CreateChannelModeratorCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { DeleteChannelBanRequestFilterSensitiveLog } from \"../models/models_0\";\nimport { deserializeAws_restJson1DeleteChannelBanCommand, serializeAws_restJson1DeleteChannelBanCommand, } from \"../protocols/Aws_restJson1\";\nexport class DeleteChannelBanCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, DeleteChannelBanCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"DeleteChannelBanCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: DeleteChannelBanRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1DeleteChannelBanCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1DeleteChannelBanCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { DeleteChannelRequestFilterSensitiveLog } from \"../models/models_0\";\nimport { deserializeAws_restJson1DeleteChannelCommand, serializeAws_restJson1DeleteChannelCommand, } from \"../protocols/Aws_restJson1\";\nexport class DeleteChannelCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, DeleteChannelCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"DeleteChannelCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: DeleteChannelRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1DeleteChannelCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1DeleteChannelCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { DeleteChannelFlowRequestFilterSensitiveLog } from \"../models/models_0\";\nimport { deserializeAws_restJson1DeleteChannelFlowCommand, serializeAws_restJson1DeleteChannelFlowCommand, } from \"../protocols/Aws_restJson1\";\nexport class DeleteChannelFlowCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, DeleteChannelFlowCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"DeleteChannelFlowCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: DeleteChannelFlowRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1DeleteChannelFlowCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1DeleteChannelFlowCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { DeleteChannelMembershipRequestFilterSensitiveLog } from \"../models/models_0\";\nimport { deserializeAws_restJson1DeleteChannelMembershipCommand, serializeAws_restJson1DeleteChannelMembershipCommand, } from \"../protocols/Aws_restJson1\";\nexport class DeleteChannelMembershipCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, DeleteChannelMembershipCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"DeleteChannelMembershipCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: DeleteChannelMembershipRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1DeleteChannelMembershipCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1DeleteChannelMembershipCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { DeleteChannelMessageRequestFilterSensitiveLog } from \"../models/models_0\";\nimport { deserializeAws_restJson1DeleteChannelMessageCommand, serializeAws_restJson1DeleteChannelMessageCommand, } from \"../protocols/Aws_restJson1\";\nexport class DeleteChannelMessageCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, DeleteChannelMessageCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"DeleteChannelMessageCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: DeleteChannelMessageRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1DeleteChannelMessageCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1DeleteChannelMessageCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { DeleteChannelModeratorRequestFilterSensitiveLog } from \"../models/models_0\";\nimport { deserializeAws_restJson1DeleteChannelModeratorCommand, serializeAws_restJson1DeleteChannelModeratorCommand, } from \"../protocols/Aws_restJson1\";\nexport class DeleteChannelModeratorCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, DeleteChannelModeratorCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"DeleteChannelModeratorCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: DeleteChannelModeratorRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1DeleteChannelModeratorCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1DeleteChannelModeratorCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { DescribeChannelBanRequestFilterSensitiveLog, DescribeChannelBanResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1DescribeChannelBanCommand, serializeAws_restJson1DescribeChannelBanCommand, } from \"../protocols/Aws_restJson1\";\nexport class DescribeChannelBanCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, DescribeChannelBanCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"DescribeChannelBanCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: DescribeChannelBanRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: DescribeChannelBanResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1DescribeChannelBanCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1DescribeChannelBanCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { DescribeChannelRequestFilterSensitiveLog, DescribeChannelResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1DescribeChannelCommand, serializeAws_restJson1DescribeChannelCommand, } from \"../protocols/Aws_restJson1\";\nexport class DescribeChannelCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, DescribeChannelCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"DescribeChannelCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: DescribeChannelRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: DescribeChannelResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1DescribeChannelCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1DescribeChannelCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { DescribeChannelFlowRequestFilterSensitiveLog, DescribeChannelFlowResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1DescribeChannelFlowCommand, serializeAws_restJson1DescribeChannelFlowCommand, } from \"../protocols/Aws_restJson1\";\nexport class DescribeChannelFlowCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, DescribeChannelFlowCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"DescribeChannelFlowCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: DescribeChannelFlowRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: DescribeChannelFlowResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1DescribeChannelFlowCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1DescribeChannelFlowCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { DescribeChannelMembershipRequestFilterSensitiveLog, DescribeChannelMembershipResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1DescribeChannelMembershipCommand, serializeAws_restJson1DescribeChannelMembershipCommand, } from \"../protocols/Aws_restJson1\";\nexport class DescribeChannelMembershipCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, DescribeChannelMembershipCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"DescribeChannelMembershipCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: DescribeChannelMembershipRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: DescribeChannelMembershipResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1DescribeChannelMembershipCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1DescribeChannelMembershipCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { DescribeChannelMembershipForAppInstanceUserRequestFilterSensitiveLog, DescribeChannelMembershipForAppInstanceUserResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1DescribeChannelMembershipForAppInstanceUserCommand, serializeAws_restJson1DescribeChannelMembershipForAppInstanceUserCommand, } from \"../protocols/Aws_restJson1\";\nexport class DescribeChannelMembershipForAppInstanceUserCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, DescribeChannelMembershipForAppInstanceUserCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"DescribeChannelMembershipForAppInstanceUserCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: DescribeChannelMembershipForAppInstanceUserRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: DescribeChannelMembershipForAppInstanceUserResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1DescribeChannelMembershipForAppInstanceUserCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1DescribeChannelMembershipForAppInstanceUserCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { DescribeChannelModeratedByAppInstanceUserRequestFilterSensitiveLog, DescribeChannelModeratedByAppInstanceUserResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1DescribeChannelModeratedByAppInstanceUserCommand, serializeAws_restJson1DescribeChannelModeratedByAppInstanceUserCommand, } from \"../protocols/Aws_restJson1\";\nexport class DescribeChannelModeratedByAppInstanceUserCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, DescribeChannelModeratedByAppInstanceUserCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"DescribeChannelModeratedByAppInstanceUserCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: DescribeChannelModeratedByAppInstanceUserRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: DescribeChannelModeratedByAppInstanceUserResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1DescribeChannelModeratedByAppInstanceUserCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1DescribeChannelModeratedByAppInstanceUserCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { DescribeChannelModeratorRequestFilterSensitiveLog, DescribeChannelModeratorResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1DescribeChannelModeratorCommand, serializeAws_restJson1DescribeChannelModeratorCommand, } from \"../protocols/Aws_restJson1\";\nexport class DescribeChannelModeratorCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, DescribeChannelModeratorCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"DescribeChannelModeratorCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: DescribeChannelModeratorRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: DescribeChannelModeratorResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1DescribeChannelModeratorCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1DescribeChannelModeratorCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { DisassociateChannelFlowRequestFilterSensitiveLog } from \"../models/models_0\";\nimport { deserializeAws_restJson1DisassociateChannelFlowCommand, serializeAws_restJson1DisassociateChannelFlowCommand, } from \"../protocols/Aws_restJson1\";\nexport class DisassociateChannelFlowCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, DisassociateChannelFlowCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"DisassociateChannelFlowCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: DisassociateChannelFlowRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1DisassociateChannelFlowCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1DisassociateChannelFlowCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { GetChannelMembershipPreferencesRequestFilterSensitiveLog, GetChannelMembershipPreferencesResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1GetChannelMembershipPreferencesCommand, serializeAws_restJson1GetChannelMembershipPreferencesCommand, } from \"../protocols/Aws_restJson1\";\nexport class GetChannelMembershipPreferencesCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, GetChannelMembershipPreferencesCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"GetChannelMembershipPreferencesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: GetChannelMembershipPreferencesRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: GetChannelMembershipPreferencesResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1GetChannelMembershipPreferencesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1GetChannelMembershipPreferencesCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { GetChannelMessageRequestFilterSensitiveLog, GetChannelMessageResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1GetChannelMessageCommand, serializeAws_restJson1GetChannelMessageCommand, } from \"../protocols/Aws_restJson1\";\nexport class GetChannelMessageCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, GetChannelMessageCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"GetChannelMessageCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: GetChannelMessageRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: GetChannelMessageResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1GetChannelMessageCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1GetChannelMessageCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { GetChannelMessageStatusRequestFilterSensitiveLog, GetChannelMessageStatusResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1GetChannelMessageStatusCommand, serializeAws_restJson1GetChannelMessageStatusCommand, } from \"../protocols/Aws_restJson1\";\nexport class GetChannelMessageStatusCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, GetChannelMessageStatusCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"GetChannelMessageStatusCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: GetChannelMessageStatusRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: GetChannelMessageStatusResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1GetChannelMessageStatusCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1GetChannelMessageStatusCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { GetMessagingSessionEndpointRequestFilterSensitiveLog, GetMessagingSessionEndpointResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1GetMessagingSessionEndpointCommand, serializeAws_restJson1GetMessagingSessionEndpointCommand, } from \"../protocols/Aws_restJson1\";\nexport class GetMessagingSessionEndpointCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, GetMessagingSessionEndpointCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"GetMessagingSessionEndpointCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: GetMessagingSessionEndpointRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: GetMessagingSessionEndpointResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1GetMessagingSessionEndpointCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1GetMessagingSessionEndpointCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { ListChannelBansRequestFilterSensitiveLog, ListChannelBansResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1ListChannelBansCommand, serializeAws_restJson1ListChannelBansCommand, } from \"../protocols/Aws_restJson1\";\nexport class ListChannelBansCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, ListChannelBansCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"ListChannelBansCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: ListChannelBansRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: ListChannelBansResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1ListChannelBansCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1ListChannelBansCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { ListChannelFlowsRequestFilterSensitiveLog, ListChannelFlowsResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1ListChannelFlowsCommand, serializeAws_restJson1ListChannelFlowsCommand, } from \"../protocols/Aws_restJson1\";\nexport class ListChannelFlowsCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, ListChannelFlowsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"ListChannelFlowsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: ListChannelFlowsRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: ListChannelFlowsResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1ListChannelFlowsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1ListChannelFlowsCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { ListChannelMembershipsRequestFilterSensitiveLog, ListChannelMembershipsResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1ListChannelMembershipsCommand, serializeAws_restJson1ListChannelMembershipsCommand, } from \"../protocols/Aws_restJson1\";\nexport class ListChannelMembershipsCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, ListChannelMembershipsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"ListChannelMembershipsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: ListChannelMembershipsRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: ListChannelMembershipsResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1ListChannelMembershipsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1ListChannelMembershipsCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { ListChannelMembershipsForAppInstanceUserRequestFilterSensitiveLog, ListChannelMembershipsForAppInstanceUserResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1ListChannelMembershipsForAppInstanceUserCommand, serializeAws_restJson1ListChannelMembershipsForAppInstanceUserCommand, } from \"../protocols/Aws_restJson1\";\nexport class ListChannelMembershipsForAppInstanceUserCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, ListChannelMembershipsForAppInstanceUserCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"ListChannelMembershipsForAppInstanceUserCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: ListChannelMembershipsForAppInstanceUserRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: ListChannelMembershipsForAppInstanceUserResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1ListChannelMembershipsForAppInstanceUserCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1ListChannelMembershipsForAppInstanceUserCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { ListChannelMessagesRequestFilterSensitiveLog, ListChannelMessagesResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1ListChannelMessagesCommand, serializeAws_restJson1ListChannelMessagesCommand, } from \"../protocols/Aws_restJson1\";\nexport class ListChannelMessagesCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, ListChannelMessagesCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"ListChannelMessagesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: ListChannelMessagesRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: ListChannelMessagesResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1ListChannelMessagesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1ListChannelMessagesCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { ListChannelModeratorsRequestFilterSensitiveLog, ListChannelModeratorsResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1ListChannelModeratorsCommand, serializeAws_restJson1ListChannelModeratorsCommand, } from \"../protocols/Aws_restJson1\";\nexport class ListChannelModeratorsCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, ListChannelModeratorsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"ListChannelModeratorsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: ListChannelModeratorsRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: ListChannelModeratorsResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1ListChannelModeratorsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1ListChannelModeratorsCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { ListChannelsAssociatedWithChannelFlowRequestFilterSensitiveLog, ListChannelsAssociatedWithChannelFlowResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1ListChannelsAssociatedWithChannelFlowCommand, serializeAws_restJson1ListChannelsAssociatedWithChannelFlowCommand, } from \"../protocols/Aws_restJson1\";\nexport class ListChannelsAssociatedWithChannelFlowCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, ListChannelsAssociatedWithChannelFlowCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"ListChannelsAssociatedWithChannelFlowCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: ListChannelsAssociatedWithChannelFlowRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: ListChannelsAssociatedWithChannelFlowResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1ListChannelsAssociatedWithChannelFlowCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1ListChannelsAssociatedWithChannelFlowCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { ListChannelsRequestFilterSensitiveLog, ListChannelsResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1ListChannelsCommand, serializeAws_restJson1ListChannelsCommand, } from \"../protocols/Aws_restJson1\";\nexport class ListChannelsCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, ListChannelsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"ListChannelsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: ListChannelsRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: ListChannelsResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1ListChannelsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1ListChannelsCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { ListChannelsModeratedByAppInstanceUserRequestFilterSensitiveLog, ListChannelsModeratedByAppInstanceUserResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1ListChannelsModeratedByAppInstanceUserCommand, serializeAws_restJson1ListChannelsModeratedByAppInstanceUserCommand, } from \"../protocols/Aws_restJson1\";\nexport class ListChannelsModeratedByAppInstanceUserCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, ListChannelsModeratedByAppInstanceUserCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"ListChannelsModeratedByAppInstanceUserCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: ListChannelsModeratedByAppInstanceUserRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: ListChannelsModeratedByAppInstanceUserResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1ListChannelsModeratedByAppInstanceUserCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1ListChannelsModeratedByAppInstanceUserCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { ListSubChannelsRequestFilterSensitiveLog, ListSubChannelsResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1ListSubChannelsCommand, serializeAws_restJson1ListSubChannelsCommand, } from \"../protocols/Aws_restJson1\";\nexport class ListSubChannelsCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, ListSubChannelsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"ListSubChannelsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: ListSubChannelsRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: ListSubChannelsResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1ListSubChannelsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1ListSubChannelsCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { ListTagsForResourceRequestFilterSensitiveLog, ListTagsForResourceResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1ListTagsForResourceCommand, serializeAws_restJson1ListTagsForResourceCommand, } from \"../protocols/Aws_restJson1\";\nexport class ListTagsForResourceCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, ListTagsForResourceCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"ListTagsForResourceCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: ListTagsForResourceRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: ListTagsForResourceResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1ListTagsForResourceCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1ListTagsForResourceCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { PutChannelMembershipPreferencesRequestFilterSensitiveLog, PutChannelMembershipPreferencesResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1PutChannelMembershipPreferencesCommand, serializeAws_restJson1PutChannelMembershipPreferencesCommand, } from \"../protocols/Aws_restJson1\";\nexport class PutChannelMembershipPreferencesCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, PutChannelMembershipPreferencesCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"PutChannelMembershipPreferencesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: PutChannelMembershipPreferencesRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: PutChannelMembershipPreferencesResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1PutChannelMembershipPreferencesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1PutChannelMembershipPreferencesCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { RedactChannelMessageRequestFilterSensitiveLog, RedactChannelMessageResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1RedactChannelMessageCommand, serializeAws_restJson1RedactChannelMessageCommand, } from \"../protocols/Aws_restJson1\";\nexport class RedactChannelMessageCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, RedactChannelMessageCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"RedactChannelMessageCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: RedactChannelMessageRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: RedactChannelMessageResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1RedactChannelMessageCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1RedactChannelMessageCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { SearchChannelsRequestFilterSensitiveLog, SearchChannelsResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1SearchChannelsCommand, serializeAws_restJson1SearchChannelsCommand, } from \"../protocols/Aws_restJson1\";\nexport class SearchChannelsCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, SearchChannelsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"SearchChannelsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: SearchChannelsRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: SearchChannelsResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1SearchChannelsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1SearchChannelsCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { SendChannelMessageRequestFilterSensitiveLog, SendChannelMessageResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1SendChannelMessageCommand, serializeAws_restJson1SendChannelMessageCommand, } from \"../protocols/Aws_restJson1\";\nexport class SendChannelMessageCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, SendChannelMessageCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"SendChannelMessageCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: SendChannelMessageRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: SendChannelMessageResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1SendChannelMessageCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1SendChannelMessageCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { TagResourceRequestFilterSensitiveLog } from \"../models/models_0\";\nimport { deserializeAws_restJson1TagResourceCommand, serializeAws_restJson1TagResourceCommand, } from \"../protocols/Aws_restJson1\";\nexport class TagResourceCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, TagResourceCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"TagResourceCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: TagResourceRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1TagResourceCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1TagResourceCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { UntagResourceRequestFilterSensitiveLog } from \"../models/models_0\";\nimport { deserializeAws_restJson1UntagResourceCommand, serializeAws_restJson1UntagResourceCommand, } from \"../protocols/Aws_restJson1\";\nexport class UntagResourceCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, UntagResourceCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"UntagResourceCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: UntagResourceRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1UntagResourceCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1UntagResourceCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { UpdateChannelRequestFilterSensitiveLog, UpdateChannelResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1UpdateChannelCommand, serializeAws_restJson1UpdateChannelCommand, } from \"../protocols/Aws_restJson1\";\nexport class UpdateChannelCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, UpdateChannelCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"UpdateChannelCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: UpdateChannelRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: UpdateChannelResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1UpdateChannelCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1UpdateChannelCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { UpdateChannelFlowRequestFilterSensitiveLog, UpdateChannelFlowResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1UpdateChannelFlowCommand, serializeAws_restJson1UpdateChannelFlowCommand, } from \"../protocols/Aws_restJson1\";\nexport class UpdateChannelFlowCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, UpdateChannelFlowCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"UpdateChannelFlowCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: UpdateChannelFlowRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: UpdateChannelFlowResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1UpdateChannelFlowCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1UpdateChannelFlowCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { UpdateChannelMessageRequestFilterSensitiveLog, UpdateChannelMessageResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1UpdateChannelMessageCommand, serializeAws_restJson1UpdateChannelMessageCommand, } from \"../protocols/Aws_restJson1\";\nexport class UpdateChannelMessageCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, UpdateChannelMessageCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"UpdateChannelMessageCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: UpdateChannelMessageRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: UpdateChannelMessageResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1UpdateChannelMessageCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1UpdateChannelMessageCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { UpdateChannelReadMarkerRequestFilterSensitiveLog, UpdateChannelReadMarkerResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1UpdateChannelReadMarkerCommand, serializeAws_restJson1UpdateChannelReadMarkerCommand, } from \"../protocols/Aws_restJson1\";\nexport class UpdateChannelReadMarkerCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, UpdateChannelReadMarkerCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"ChimeSDKMessagingClient\";\n        const commandName = \"UpdateChannelReadMarkerCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: UpdateChannelReadMarkerRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: UpdateChannelReadMarkerResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1UpdateChannelReadMarkerCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1UpdateChannelReadMarkerCommand(output, context);\n    }\n}\n","import { ChimeSDKMessagingClient } from \"./ChimeSDKMessagingClient\";\nimport { AssociateChannelFlowCommand, } from \"./commands/AssociateChannelFlowCommand\";\nimport { BatchCreateChannelMembershipCommand, } from \"./commands/BatchCreateChannelMembershipCommand\";\nimport { ChannelFlowCallbackCommand, } from \"./commands/ChannelFlowCallbackCommand\";\nimport { CreateChannelBanCommand, } from \"./commands/CreateChannelBanCommand\";\nimport { CreateChannelCommand, } from \"./commands/CreateChannelCommand\";\nimport { CreateChannelFlowCommand, } from \"./commands/CreateChannelFlowCommand\";\nimport { CreateChannelMembershipCommand, } from \"./commands/CreateChannelMembershipCommand\";\nimport { CreateChannelModeratorCommand, } from \"./commands/CreateChannelModeratorCommand\";\nimport { DeleteChannelBanCommand, } from \"./commands/DeleteChannelBanCommand\";\nimport { DeleteChannelCommand, } from \"./commands/DeleteChannelCommand\";\nimport { DeleteChannelFlowCommand, } from \"./commands/DeleteChannelFlowCommand\";\nimport { DeleteChannelMembershipCommand, } from \"./commands/DeleteChannelMembershipCommand\";\nimport { DeleteChannelMessageCommand, } from \"./commands/DeleteChannelMessageCommand\";\nimport { DeleteChannelModeratorCommand, } from \"./commands/DeleteChannelModeratorCommand\";\nimport { DescribeChannelBanCommand, } from \"./commands/DescribeChannelBanCommand\";\nimport { DescribeChannelCommand, } from \"./commands/DescribeChannelCommand\";\nimport { DescribeChannelFlowCommand, } from \"./commands/DescribeChannelFlowCommand\";\nimport { DescribeChannelMembershipCommand, } from \"./commands/DescribeChannelMembershipCommand\";\nimport { DescribeChannelMembershipForAppInstanceUserCommand, } from \"./commands/DescribeChannelMembershipForAppInstanceUserCommand\";\nimport { DescribeChannelModeratedByAppInstanceUserCommand, } from \"./commands/DescribeChannelModeratedByAppInstanceUserCommand\";\nimport { DescribeChannelModeratorCommand, } from \"./commands/DescribeChannelModeratorCommand\";\nimport { DisassociateChannelFlowCommand, } from \"./commands/DisassociateChannelFlowCommand\";\nimport { GetChannelMembershipPreferencesCommand, } from \"./commands/GetChannelMembershipPreferencesCommand\";\nimport { GetChannelMessageCommand, } from \"./commands/GetChannelMessageCommand\";\nimport { GetChannelMessageStatusCommand, } from \"./commands/GetChannelMessageStatusCommand\";\nimport { GetMessagingSessionEndpointCommand, } from \"./commands/GetMessagingSessionEndpointCommand\";\nimport { ListChannelBansCommand, } from \"./commands/ListChannelBansCommand\";\nimport { ListChannelFlowsCommand, } from \"./commands/ListChannelFlowsCommand\";\nimport { ListChannelMembershipsCommand, } from \"./commands/ListChannelMembershipsCommand\";\nimport { ListChannelMembershipsForAppInstanceUserCommand, } from \"./commands/ListChannelMembershipsForAppInstanceUserCommand\";\nimport { ListChannelMessagesCommand, } from \"./commands/ListChannelMessagesCommand\";\nimport { ListChannelModeratorsCommand, } from \"./commands/ListChannelModeratorsCommand\";\nimport { ListChannelsAssociatedWithChannelFlowCommand, } from \"./commands/ListChannelsAssociatedWithChannelFlowCommand\";\nimport { ListChannelsCommand, } from \"./commands/ListChannelsCommand\";\nimport { ListChannelsModeratedByAppInstanceUserCommand, } from \"./commands/ListChannelsModeratedByAppInstanceUserCommand\";\nimport { ListSubChannelsCommand, } from \"./commands/ListSubChannelsCommand\";\nimport { ListTagsForResourceCommand, } from \"./commands/ListTagsForResourceCommand\";\nimport { PutChannelMembershipPreferencesCommand, } from \"./commands/PutChannelMembershipPreferencesCommand\";\nimport { RedactChannelMessageCommand, } from \"./commands/RedactChannelMessageCommand\";\nimport { SearchChannelsCommand, } from \"./commands/SearchChannelsCommand\";\nimport { SendChannelMessageCommand, } from \"./commands/SendChannelMessageCommand\";\nimport { TagResourceCommand } from \"./commands/TagResourceCommand\";\nimport { UntagResourceCommand, } from \"./commands/UntagResourceCommand\";\nimport { UpdateChannelCommand, } from \"./commands/UpdateChannelCommand\";\nimport { UpdateChannelFlowCommand, } from \"./commands/UpdateChannelFlowCommand\";\nimport { UpdateChannelMessageCommand, } from \"./commands/UpdateChannelMessageCommand\";\nimport { UpdateChannelReadMarkerCommand, } from \"./commands/UpdateChannelReadMarkerCommand\";\nexport class ChimeSDKMessaging extends ChimeSDKMessagingClient {\n    associateChannelFlow(args, optionsOrCb, cb) {\n        const command = new AssociateChannelFlowCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    batchCreateChannelMembership(args, optionsOrCb, cb) {\n        const command = new BatchCreateChannelMembershipCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    channelFlowCallback(args, optionsOrCb, cb) {\n        const command = new ChannelFlowCallbackCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createChannel(args, optionsOrCb, cb) {\n        const command = new CreateChannelCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createChannelBan(args, optionsOrCb, cb) {\n        const command = new CreateChannelBanCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createChannelFlow(args, optionsOrCb, cb) {\n        const command = new CreateChannelFlowCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createChannelMembership(args, optionsOrCb, cb) {\n        const command = new CreateChannelMembershipCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createChannelModerator(args, optionsOrCb, cb) {\n        const command = new CreateChannelModeratorCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteChannel(args, optionsOrCb, cb) {\n        const command = new DeleteChannelCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteChannelBan(args, optionsOrCb, cb) {\n        const command = new DeleteChannelBanCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteChannelFlow(args, optionsOrCb, cb) {\n        const command = new DeleteChannelFlowCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteChannelMembership(args, optionsOrCb, cb) {\n        const command = new DeleteChannelMembershipCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteChannelMessage(args, optionsOrCb, cb) {\n        const command = new DeleteChannelMessageCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteChannelModerator(args, optionsOrCb, cb) {\n        const command = new DeleteChannelModeratorCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    describeChannel(args, optionsOrCb, cb) {\n        const command = new DescribeChannelCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    describeChannelBan(args, optionsOrCb, cb) {\n        const command = new DescribeChannelBanCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    describeChannelFlow(args, optionsOrCb, cb) {\n        const command = new DescribeChannelFlowCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    describeChannelMembership(args, optionsOrCb, cb) {\n        const command = new DescribeChannelMembershipCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    describeChannelMembershipForAppInstanceUser(args, optionsOrCb, cb) {\n        const command = new DescribeChannelMembershipForAppInstanceUserCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    describeChannelModeratedByAppInstanceUser(args, optionsOrCb, cb) {\n        const command = new DescribeChannelModeratedByAppInstanceUserCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    describeChannelModerator(args, optionsOrCb, cb) {\n        const command = new DescribeChannelModeratorCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    disassociateChannelFlow(args, optionsOrCb, cb) {\n        const command = new DisassociateChannelFlowCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getChannelMembershipPreferences(args, optionsOrCb, cb) {\n        const command = new GetChannelMembershipPreferencesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getChannelMessage(args, optionsOrCb, cb) {\n        const command = new GetChannelMessageCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getChannelMessageStatus(args, optionsOrCb, cb) {\n        const command = new GetChannelMessageStatusCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getMessagingSessionEndpoint(args, optionsOrCb, cb) {\n        const command = new GetMessagingSessionEndpointCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listChannelBans(args, optionsOrCb, cb) {\n        const command = new ListChannelBansCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listChannelFlows(args, optionsOrCb, cb) {\n        const command = new ListChannelFlowsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listChannelMemberships(args, optionsOrCb, cb) {\n        const command = new ListChannelMembershipsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listChannelMembershipsForAppInstanceUser(args, optionsOrCb, cb) {\n        const command = new ListChannelMembershipsForAppInstanceUserCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listChannelMessages(args, optionsOrCb, cb) {\n        const command = new ListChannelMessagesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listChannelModerators(args, optionsOrCb, cb) {\n        const command = new ListChannelModeratorsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listChannels(args, optionsOrCb, cb) {\n        const command = new ListChannelsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listChannelsAssociatedWithChannelFlow(args, optionsOrCb, cb) {\n        const command = new ListChannelsAssociatedWithChannelFlowCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listChannelsModeratedByAppInstanceUser(args, optionsOrCb, cb) {\n        const command = new ListChannelsModeratedByAppInstanceUserCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listSubChannels(args, optionsOrCb, cb) {\n        const command = new ListSubChannelsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listTagsForResource(args, optionsOrCb, cb) {\n        const command = new ListTagsForResourceCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    putChannelMembershipPreferences(args, optionsOrCb, cb) {\n        const command = new PutChannelMembershipPreferencesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    redactChannelMessage(args, optionsOrCb, cb) {\n        const command = new RedactChannelMessageCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    searchChannels(args, optionsOrCb, cb) {\n        const command = new SearchChannelsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    sendChannelMessage(args, optionsOrCb, cb) {\n        const command = new SendChannelMessageCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    tagResource(args, optionsOrCb, cb) {\n        const command = new TagResourceCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    untagResource(args, optionsOrCb, cb) {\n        const command = new UntagResourceCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateChannel(args, optionsOrCb, cb) {\n        const command = new UpdateChannelCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateChannelFlow(args, optionsOrCb, cb) {\n        const command = new UpdateChannelFlowCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateChannelMessage(args, optionsOrCb, cb) {\n        const command = new UpdateChannelMessageCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateChannelReadMarker(args, optionsOrCb, cb) {\n        const command = new UpdateChannelReadMarkerCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n}\n","import { ChimeSDKMessaging } from \"../ChimeSDKMessaging\";\nimport { ChimeSDKMessagingClient } from \"../ChimeSDKMessagingClient\";\nimport { ListChannelBansCommand, } from \"../commands/ListChannelBansCommand\";\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListChannelBansCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listChannelBans(input, ...args);\n};\nexport async function* paginateListChannelBans(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        input[\"MaxResults\"] = config.pageSize;\n        if (config.client instanceof ChimeSDKMessaging) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof ChimeSDKMessagingClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected ChimeSDKMessaging | ChimeSDKMessagingClient\");\n        }\n        yield page;\n        const prevToken = token;\n        token = page.NextToken;\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n}\n","import { ChimeSDKMessaging } from \"../ChimeSDKMessaging\";\nimport { ChimeSDKMessagingClient } from \"../ChimeSDKMessagingClient\";\nimport { ListChannelFlowsCommand, } from \"../commands/ListChannelFlowsCommand\";\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListChannelFlowsCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listChannelFlows(input, ...args);\n};\nexport async function* paginateListChannelFlows(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        input[\"MaxResults\"] = config.pageSize;\n        if (config.client instanceof ChimeSDKMessaging) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof ChimeSDKMessagingClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected ChimeSDKMessaging | ChimeSDKMessagingClient\");\n        }\n        yield page;\n        const prevToken = token;\n        token = page.NextToken;\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n}\n","import { ChimeSDKMessaging } from \"../ChimeSDKMessaging\";\nimport { ChimeSDKMessagingClient } from \"../ChimeSDKMessagingClient\";\nimport { ListChannelMembershipsForAppInstanceUserCommand, } from \"../commands/ListChannelMembershipsForAppInstanceUserCommand\";\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListChannelMembershipsForAppInstanceUserCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listChannelMembershipsForAppInstanceUser(input, ...args);\n};\nexport async function* paginateListChannelMembershipsForAppInstanceUser(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        input[\"MaxResults\"] = config.pageSize;\n        if (config.client instanceof ChimeSDKMessaging) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof ChimeSDKMessagingClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected ChimeSDKMessaging | ChimeSDKMessagingClient\");\n        }\n        yield page;\n        const prevToken = token;\n        token = page.NextToken;\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n}\n","import { ChimeSDKMessaging } from \"../ChimeSDKMessaging\";\nimport { ChimeSDKMessagingClient } from \"../ChimeSDKMessagingClient\";\nimport { ListChannelMembershipsCommand, } from \"../commands/ListChannelMembershipsCommand\";\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListChannelMembershipsCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listChannelMemberships(input, ...args);\n};\nexport async function* paginateListChannelMemberships(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        input[\"MaxResults\"] = config.pageSize;\n        if (config.client instanceof ChimeSDKMessaging) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof ChimeSDKMessagingClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected ChimeSDKMessaging | ChimeSDKMessagingClient\");\n        }\n        yield page;\n        const prevToken = token;\n        token = page.NextToken;\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n}\n","import { ChimeSDKMessaging } from \"../ChimeSDKMessaging\";\nimport { ChimeSDKMessagingClient } from \"../ChimeSDKMessagingClient\";\nimport { ListChannelMessagesCommand, } from \"../commands/ListChannelMessagesCommand\";\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListChannelMessagesCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listChannelMessages(input, ...args);\n};\nexport async function* paginateListChannelMessages(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        input[\"MaxResults\"] = config.pageSize;\n        if (config.client instanceof ChimeSDKMessaging) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof ChimeSDKMessagingClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected ChimeSDKMessaging | ChimeSDKMessagingClient\");\n        }\n        yield page;\n        const prevToken = token;\n        token = page.NextToken;\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n}\n","import { ChimeSDKMessaging } from \"../ChimeSDKMessaging\";\nimport { ChimeSDKMessagingClient } from \"../ChimeSDKMessagingClient\";\nimport { ListChannelModeratorsCommand, } from \"../commands/ListChannelModeratorsCommand\";\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListChannelModeratorsCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listChannelModerators(input, ...args);\n};\nexport async function* paginateListChannelModerators(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        input[\"MaxResults\"] = config.pageSize;\n        if (config.client instanceof ChimeSDKMessaging) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof ChimeSDKMessagingClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected ChimeSDKMessaging | ChimeSDKMessagingClient\");\n        }\n        yield page;\n        const prevToken = token;\n        token = page.NextToken;\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n}\n","import { ChimeSDKMessaging } from \"../ChimeSDKMessaging\";\nimport { ChimeSDKMessagingClient } from \"../ChimeSDKMessagingClient\";\nimport { ListChannelsAssociatedWithChannelFlowCommand, } from \"../commands/ListChannelsAssociatedWithChannelFlowCommand\";\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListChannelsAssociatedWithChannelFlowCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listChannelsAssociatedWithChannelFlow(input, ...args);\n};\nexport async function* paginateListChannelsAssociatedWithChannelFlow(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        input[\"MaxResults\"] = config.pageSize;\n        if (config.client instanceof ChimeSDKMessaging) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof ChimeSDKMessagingClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected ChimeSDKMessaging | ChimeSDKMessagingClient\");\n        }\n        yield page;\n        const prevToken = token;\n        token = page.NextToken;\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n}\n","import { ChimeSDKMessaging } from \"../ChimeSDKMessaging\";\nimport { ChimeSDKMessagingClient } from \"../ChimeSDKMessagingClient\";\nimport { ListChannelsModeratedByAppInstanceUserCommand, } from \"../commands/ListChannelsModeratedByAppInstanceUserCommand\";\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListChannelsModeratedByAppInstanceUserCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listChannelsModeratedByAppInstanceUser(input, ...args);\n};\nexport async function* paginateListChannelsModeratedByAppInstanceUser(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        input[\"MaxResults\"] = config.pageSize;\n        if (config.client instanceof ChimeSDKMessaging) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof ChimeSDKMessagingClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected ChimeSDKMessaging | ChimeSDKMessagingClient\");\n        }\n        yield page;\n        const prevToken = token;\n        token = page.NextToken;\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n}\n","import { ChimeSDKMessaging } from \"../ChimeSDKMessaging\";\nimport { ChimeSDKMessagingClient } from \"../ChimeSDKMessagingClient\";\nimport { ListChannelsCommand, } from \"../commands/ListChannelsCommand\";\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListChannelsCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listChannels(input, ...args);\n};\nexport async function* paginateListChannels(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        input[\"MaxResults\"] = config.pageSize;\n        if (config.client instanceof ChimeSDKMessaging) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof ChimeSDKMessagingClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected ChimeSDKMessaging | ChimeSDKMessagingClient\");\n        }\n        yield page;\n        const prevToken = token;\n        token = page.NextToken;\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n}\n","import { ChimeSDKMessaging } from \"../ChimeSDKMessaging\";\nimport { ChimeSDKMessagingClient } from \"../ChimeSDKMessagingClient\";\nimport { ListSubChannelsCommand, } from \"../commands/ListSubChannelsCommand\";\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListSubChannelsCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listSubChannels(input, ...args);\n};\nexport async function* paginateListSubChannels(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        input[\"MaxResults\"] = config.pageSize;\n        if (config.client instanceof ChimeSDKMessaging) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof ChimeSDKMessagingClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected ChimeSDKMessaging | ChimeSDKMessagingClient\");\n        }\n        yield page;\n        const prevToken = token;\n        token = page.NextToken;\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n}\n","import { ChimeSDKMessaging } from \"../ChimeSDKMessaging\";\nimport { ChimeSDKMessagingClient } from \"../ChimeSDKMessagingClient\";\nimport { SearchChannelsCommand, } from \"../commands/SearchChannelsCommand\";\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new SearchChannelsCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.searchChannels(input, ...args);\n};\nexport async function* paginateSearchChannels(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        input[\"MaxResults\"] = config.pageSize;\n        if (config.client instanceof ChimeSDKMessaging) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof ChimeSDKMessagingClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected ChimeSDKMessaging | ChimeSDKMessagingClient\");\n        }\n        yield page;\n        const prevToken = token;\n        token = page.NextToken;\n        hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n    }\n    return undefined;\n}\n","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Message {\n    constructor(type, // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    headers, payload) {\n        this.type = type;\n        this.headers = headers;\n        this.payload = payload;\n    }\n}\nexports.default = Message;\n//# sourceMappingURL=Message.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MAX_HASHABLE_LENGTH = exports.INIT = exports.KEY = exports.DIGEST_LENGTH = exports.BLOCK_SIZE = void 0;\n/**\n * @internal\n */\nexports.BLOCK_SIZE = 64;\n/**\n * @internal\n */\nexports.DIGEST_LENGTH = 32;\n/**\n * @internal\n */\nexports.KEY = new Uint32Array([\n    0x428a2f98,\n    0x71374491,\n    0xb5c0fbcf,\n    0xe9b5dba5,\n    0x3956c25b,\n    0x59f111f1,\n    0x923f82a4,\n    0xab1c5ed5,\n    0xd807aa98,\n    0x12835b01,\n    0x243185be,\n    0x550c7dc3,\n    0x72be5d74,\n    0x80deb1fe,\n    0x9bdc06a7,\n    0xc19bf174,\n    0xe49b69c1,\n    0xefbe4786,\n    0x0fc19dc6,\n    0x240ca1cc,\n    0x2de92c6f,\n    0x4a7484aa,\n    0x5cb0a9dc,\n    0x76f988da,\n    0x983e5152,\n    0xa831c66d,\n    0xb00327c8,\n    0xbf597fc7,\n    0xc6e00bf3,\n    0xd5a79147,\n    0x06ca6351,\n    0x14292967,\n    0x27b70a85,\n    0x2e1b2138,\n    0x4d2c6dfc,\n    0x53380d13,\n    0x650a7354,\n    0x766a0abb,\n    0x81c2c92e,\n    0x92722c85,\n    0xa2bfe8a1,\n    0xa81a664b,\n    0xc24b8b70,\n    0xc76c51a3,\n    0xd192e819,\n    0xd6990624,\n    0xf40e3585,\n    0x106aa070,\n    0x19a4c116,\n    0x1e376c08,\n    0x2748774c,\n    0x34b0bcb5,\n    0x391c0cb3,\n    0x4ed8aa4a,\n    0x5b9cca4f,\n    0x682e6ff3,\n    0x748f82ee,\n    0x78a5636f,\n    0x84c87814,\n    0x8cc70208,\n    0x90befffa,\n    0xa4506ceb,\n    0xbef9a3f7,\n    0xc67178f2\n]);\n/**\n * @internal\n */\nexports.INIT = [\n    0x6a09e667,\n    0xbb67ae85,\n    0x3c6ef372,\n    0xa54ff53a,\n    0x510e527f,\n    0x9b05688c,\n    0x1f83d9ab,\n    0x5be0cd19\n];\n/**\n * @internal\n */\nexports.MAX_HASHABLE_LENGTH = Math.pow(2, 53) - 1;\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RawSha256 = void 0;\nvar constants_1 = require(\"./constants\");\n/**\n * @internal\n */\nvar RawSha256 = /** @class */ (function () {\n    function RawSha256() {\n        this.state = Int32Array.from(constants_1.INIT);\n        this.temp = new Int32Array(64);\n        this.buffer = new Uint8Array(64);\n        this.bufferLength = 0;\n        this.bytesHashed = 0;\n        /**\n         * @internal\n         */\n        this.finished = false;\n    }\n    RawSha256.prototype.update = function (data) {\n        if (this.finished) {\n            throw new Error(\"Attempted to update an already finished hash.\");\n        }\n        var position = 0;\n        var byteLength = data.byteLength;\n        this.bytesHashed += byteLength;\n        if (this.bytesHashed * 8 > constants_1.MAX_HASHABLE_LENGTH) {\n            throw new Error(\"Cannot hash more than 2^53 - 1 bits\");\n        }\n        while (byteLength > 0) {\n            this.buffer[this.bufferLength++] = data[position++];\n            byteLength--;\n            if (this.bufferLength === constants_1.BLOCK_SIZE) {\n                this.hashBuffer();\n                this.bufferLength = 0;\n            }\n        }\n    };\n    RawSha256.prototype.digest = function () {\n        if (!this.finished) {\n            var bitsHashed = this.bytesHashed * 8;\n            var bufferView = new DataView(this.buffer.buffer, this.buffer.byteOffset, this.buffer.byteLength);\n            var undecoratedLength = this.bufferLength;\n            bufferView.setUint8(this.bufferLength++, 0x80);\n            // Ensure the final block has enough room for the hashed length\n            if (undecoratedLength % constants_1.BLOCK_SIZE >= constants_1.BLOCK_SIZE - 8) {\n                for (var i = this.bufferLength; i < constants_1.BLOCK_SIZE; i++) {\n                    bufferView.setUint8(i, 0);\n                }\n                this.hashBuffer();\n                this.bufferLength = 0;\n            }\n            for (var i = this.bufferLength; i < constants_1.BLOCK_SIZE - 8; i++) {\n                bufferView.setUint8(i, 0);\n            }\n            bufferView.setUint32(constants_1.BLOCK_SIZE - 8, Math.floor(bitsHashed / 0x100000000), true);\n            bufferView.setUint32(constants_1.BLOCK_SIZE - 4, bitsHashed);\n            this.hashBuffer();\n            this.finished = true;\n        }\n        // The value in state is little-endian rather than big-endian, so flip\n        // each word into a new Uint8Array\n        var out = new Uint8Array(constants_1.DIGEST_LENGTH);\n        for (var i = 0; i < 8; i++) {\n            out[i * 4] = (this.state[i] >>> 24) & 0xff;\n            out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n            out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n            out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n        }\n        return out;\n    };\n    RawSha256.prototype.hashBuffer = function () {\n        var _a = this, buffer = _a.buffer, state = _a.state;\n        var state0 = state[0], state1 = state[1], state2 = state[2], state3 = state[3], state4 = state[4], state5 = state[5], state6 = state[6], state7 = state[7];\n        for (var i = 0; i < constants_1.BLOCK_SIZE; i++) {\n            if (i < 16) {\n                this.temp[i] =\n                    ((buffer[i * 4] & 0xff) << 24) |\n                        ((buffer[i * 4 + 1] & 0xff) << 16) |\n                        ((buffer[i * 4 + 2] & 0xff) << 8) |\n                        (buffer[i * 4 + 3] & 0xff);\n            }\n            else {\n                var u = this.temp[i - 2];\n                var t1_1 = ((u >>> 17) | (u << 15)) ^ ((u >>> 19) | (u << 13)) ^ (u >>> 10);\n                u = this.temp[i - 15];\n                var t2_1 = ((u >>> 7) | (u << 25)) ^ ((u >>> 18) | (u << 14)) ^ (u >>> 3);\n                this.temp[i] =\n                    ((t1_1 + this.temp[i - 7]) | 0) + ((t2_1 + this.temp[i - 16]) | 0);\n            }\n            var t1 = ((((((state4 >>> 6) | (state4 << 26)) ^\n                ((state4 >>> 11) | (state4 << 21)) ^\n                ((state4 >>> 25) | (state4 << 7))) +\n                ((state4 & state5) ^ (~state4 & state6))) |\n                0) +\n                ((state7 + ((constants_1.KEY[i] + this.temp[i]) | 0)) | 0)) |\n                0;\n            var t2 = ((((state0 >>> 2) | (state0 << 30)) ^\n                ((state0 >>> 13) | (state0 << 19)) ^\n                ((state0 >>> 22) | (state0 << 10))) +\n                ((state0 & state1) ^ (state0 & state2) ^ (state1 & state2))) |\n                0;\n            state7 = state6;\n            state6 = state5;\n            state5 = state4;\n            state4 = (state3 + t1) | 0;\n            state3 = state2;\n            state2 = state1;\n            state1 = state0;\n            state0 = (t1 + t2) | 0;\n        }\n        state[0] += state0;\n        state[1] += state1;\n        state[2] += state2;\n        state[3] += state3;\n        state[4] += state4;\n        state[5] += state5;\n        state[6] += state6;\n        state[7] += state7;\n    };\n    return RawSha256;\n}());\nexports.RawSha256 = RawSha256;\n//# sourceMappingURL=RawSha256.js.map","\"use strict\";\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertToBuffer = void 0;\nvar util_utf8_browser_1 = require(\"@aws-sdk/util-utf8-browser\");\n// Quick polyfill\nvar fromUtf8 = typeof Buffer !== \"undefined\" && Buffer.from\n    ? function (input) { return Buffer.from(input, \"utf8\"); }\n    : util_utf8_browser_1.fromUtf8;\nfunction convertToBuffer(data) {\n    // Already a Uint8, do nothing\n    if (data instanceof Uint8Array)\n        return data;\n    if (typeof data === \"string\") {\n        return fromUtf8(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n}\nexports.convertToBuffer = convertToBuffer;\n//# sourceMappingURL=convertToBuffer.js.map","\"use strict\";\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isEmptyData = void 0;\nfunction isEmptyData(data) {\n    if (typeof data === \"string\") {\n        return data.length === 0;\n    }\n    return data.byteLength === 0;\n}\nexports.isEmptyData = isEmptyData;\n//# sourceMappingURL=isEmptyData.js.map","\"use strict\";\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.numToUint8 = void 0;\nfunction numToUint8(num) {\n    return new Uint8Array([\n        (num & 0xff000000) >> 24,\n        (num & 0x00ff0000) >> 16,\n        (num & 0x0000ff00) >> 8,\n        num & 0x000000ff,\n    ]);\n}\nexports.numToUint8 = numToUint8;\n//# sourceMappingURL=numToUint8.js.map","\"use strict\";\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uint32ArrayFrom = void 0;\n// IE 11 does not support Array.from, so we do it manually\nfunction uint32ArrayFrom(a_lookUpTable) {\n    if (!Uint32Array.from) {\n        var return_array = new Uint32Array(a_lookUpTable.length);\n        var a_index = 0;\n        while (a_index < a_lookUpTable.length) {\n            return_array[a_index] = a_lookUpTable[a_index];\n            a_index += 1;\n        }\n        return return_array;\n    }\n    return Uint32Array.from(a_lookUpTable);\n}\nexports.uint32ArrayFrom = uint32ArrayFrom;\n//# sourceMappingURL=uint32ArrayFrom.js.map","\"use strict\";\n// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uint32ArrayFrom = exports.numToUint8 = exports.isEmptyData = exports.convertToBuffer = void 0;\nvar convertToBuffer_1 = require(\"./convertToBuffer\");\nObject.defineProperty(exports, \"convertToBuffer\", { enumerable: true, get: function () { return convertToBuffer_1.convertToBuffer; } });\nvar isEmptyData_1 = require(\"./isEmptyData\");\nObject.defineProperty(exports, \"isEmptyData\", { enumerable: true, get: function () { return isEmptyData_1.isEmptyData; } });\nvar numToUint8_1 = require(\"./numToUint8\");\nObject.defineProperty(exports, \"numToUint8\", { enumerable: true, get: function () { return numToUint8_1.numToUint8; } });\nvar uint32ArrayFrom_1 = require(\"./uint32ArrayFrom\");\nObject.defineProperty(exports, \"uint32ArrayFrom\", { enumerable: true, get: function () { return uint32ArrayFrom_1.uint32ArrayFrom; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Sha256 = void 0;\nvar tslib_1 = require(\"tslib\");\nvar constants_1 = require(\"./constants\");\nvar RawSha256_1 = require(\"./RawSha256\");\nvar util_1 = require(\"@aws-crypto/util\");\nvar Sha256 = /** @class */ (function () {\n    function Sha256(secret) {\n        this.hash = new RawSha256_1.RawSha256();\n        if (secret) {\n            this.outer = new RawSha256_1.RawSha256();\n            var inner = bufferFromSecret(secret);\n            var outer = new Uint8Array(constants_1.BLOCK_SIZE);\n            outer.set(inner);\n            for (var i = 0; i < constants_1.BLOCK_SIZE; i++) {\n                inner[i] ^= 0x36;\n                outer[i] ^= 0x5c;\n            }\n            this.hash.update(inner);\n            this.outer.update(outer);\n            // overwrite the copied key in memory\n            for (var i = 0; i < inner.byteLength; i++) {\n                inner[i] = 0;\n            }\n        }\n    }\n    Sha256.prototype.update = function (toHash) {\n        if ((0, util_1.isEmptyData)(toHash) || this.error) {\n            return;\n        }\n        try {\n            this.hash.update((0, util_1.convertToBuffer)(toHash));\n        }\n        catch (e) {\n            this.error = e;\n        }\n    };\n    /* This synchronous method keeps compatibility\n     * with the v2 aws-sdk.\n     */\n    Sha256.prototype.digestSync = function () {\n        if (this.error) {\n            throw this.error;\n        }\n        if (this.outer) {\n            if (!this.outer.finished) {\n                this.outer.update(this.hash.digest());\n            }\n            return this.outer.digest();\n        }\n        return this.hash.digest();\n    };\n    /* The underlying digest method here is synchronous.\n     * To keep the same interface with the other hash functions\n     * the default is to expose this as an async method.\n     * However, it can sometimes be useful to have a sync method.\n     */\n    Sha256.prototype.digest = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            return tslib_1.__generator(this, function (_a) {\n                return [2 /*return*/, this.digestSync()];\n            });\n        });\n    };\n    return Sha256;\n}());\nexports.Sha256 = Sha256;\nfunction bufferFromSecret(secret) {\n    var input = (0, util_1.convertToBuffer)(secret);\n    if (input.byteLength > constants_1.BLOCK_SIZE) {\n        var bufferHash = new RawSha256_1.RawSha256();\n        bufferHash.update(input);\n        input = bufferHash.digest();\n    }\n    var buffer = new Uint8Array(constants_1.BLOCK_SIZE);\n    buffer.set(input);\n    return buffer;\n}\n//# sourceMappingURL=jsSha256.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./jsSha256\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst sha256_js_1 = require(\"@aws-crypto/sha256-js\");\nconst util_hex_encoding_1 = require(\"@aws-sdk/util-hex-encoding\");\nconst Versioning_1 = require(\"../versioning/Versioning\");\nclass DefaultSigV4 {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    constructor(chimeClient) {\n        this.chimeClient = chimeClient;\n    }\n    makeTwoDigits(n) {\n        /* istanbul ignore if */\n        /* istanbul ignore else */\n        if (n > 9) {\n            return n.toString();\n        }\n        else {\n            return '0' + n.toString();\n        }\n    }\n    hmac(data, secret) {\n        const hash = new sha256_js_1.Sha256(secret);\n        hash.update(data);\n        return hash.digest();\n    }\n    getDateTimeString() {\n        const d = new Date();\n        return (d.getUTCFullYear() +\n            this.makeTwoDigits(d.getUTCMonth() + 1) +\n            this.makeTwoDigits(d.getUTCDate()) +\n            'T' +\n            this.makeTwoDigits(d.getUTCHours()) +\n            this.makeTwoDigits(d.getUTCMinutes()) +\n            this.makeTwoDigits(d.getUTCSeconds()) +\n            'Z');\n    }\n    getDateString(dateTimeString) {\n        return dateTimeString.substring(0, dateTimeString.indexOf('T'));\n    }\n    getSignatureKey(key, date, regionName, serviceName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const kDate = yield this.hmac(date, 'AWS4' + key);\n            const kRegion = yield this.hmac(regionName, kDate);\n            const kService = yield this.hmac(serviceName, kRegion);\n            const kSigning = yield this.hmac('aws4_request', kService);\n            return kSigning;\n        });\n    }\n    signURL(method, scheme, serviceName, hostname, path, payload, queryParams) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const now = this.getDateTimeString();\n            const today = this.getDateString(now);\n            const algorithm = 'AWS4-HMAC-SHA256';\n            let region = '';\n            // in AWS SDK v3 region is a function\n            if (this.chimeClient.config.region instanceof Function) {\n                region = yield this.chimeClient.config.region();\n            }\n            else {\n                region = this.chimeClient.config.region;\n            }\n            const signedHeaders = 'host';\n            const canonicalHeaders = 'host:' + hostname.toLowerCase() + '\\n';\n            const credentialScope = today + '/' + region + '/' + serviceName + '/' + 'aws4_request';\n            let credentials = undefined;\n            // in AWS SDK v3 credentials is a function\n            if (this.chimeClient.config.credentials instanceof Function) {\n                credentials = yield this.chimeClient.config.credentials();\n            }\n            else {\n                credentials = this.chimeClient.config.credentials;\n            }\n            let params = new Map();\n            params.set('X-Amz-Algorithm', [algorithm]);\n            params.set('X-Amz-Credential', [\n                encodeURIComponent(credentials.accessKeyId + '/' + credentialScope),\n            ]);\n            params.set('X-Amz-Date', [now]);\n            params.set('X-Amz-Expires', ['10']);\n            params.set('X-Amz-SignedHeaders', ['host']);\n            if (credentials.sessionToken) {\n                params.set('X-Amz-Security-Token', [encodeURIComponent(credentials.sessionToken)]);\n            }\n            params.set(Versioning_1.default.X_AMZN_VERSION, [encodeURIComponent(Versioning_1.default.sdkVersion)]);\n            params.set(Versioning_1.default.X_AMZN_USER_AGENT, [\n                encodeURIComponent(Versioning_1.default.sdkUserAgentLowResolution),\n            ]);\n            queryParams === null || queryParams === void 0 ? void 0 : queryParams.forEach((values, key) => {\n                const encodedKey = encodeURIComponent(key);\n                values.sort().forEach((value) => {\n                    if (!params.has(encodedKey)) {\n                        params.set(encodedKey, []);\n                    }\n                    params.get(encodedKey).push(encodeURIComponent(value));\n                });\n            });\n            let canonicalQuerystring = '';\n            params = new Map([...params.entries()].sort());\n            params.forEach((values, key) => {\n                values.forEach(value => {\n                    if (canonicalQuerystring.length) {\n                        canonicalQuerystring += '&';\n                    }\n                    canonicalQuerystring += key + '=' + value;\n                });\n            });\n            const canonicalRequest = method +\n                '\\n' +\n                path +\n                '\\n' +\n                canonicalQuerystring +\n                '\\n' +\n                canonicalHeaders +\n                '\\n' +\n                signedHeaders +\n                '\\n' +\n                util_hex_encoding_1.toHex(yield this.hmac(payload));\n            const hashedCanonicalRequest = util_hex_encoding_1.toHex(yield this.hmac(canonicalRequest));\n            const stringToSign = 'AWS4-HMAC-SHA256\\n' +\n                now +\n                '\\n' +\n                today +\n                '/' +\n                region +\n                '/' +\n                serviceName +\n                '/aws4_request\\n' +\n                hashedCanonicalRequest;\n            const signingKey = yield this.getSignatureKey(credentials.secretAccessKey, today, region, serviceName);\n            const signature = util_hex_encoding_1.toHex(yield this.hmac(stringToSign, signingKey));\n            const finalParams = canonicalQuerystring + '&X-Amz-Signature=' + signature;\n            return scheme + '://' + hostname + path + '?' + finalParams;\n        });\n    }\n}\nexports.default = DefaultSigV4;\n//# sourceMappingURL=DefaultSigV4.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Using an enum here to make sure we can expand on future features\nvar PrefetchOn;\n(function (PrefetchOn) {\n    PrefetchOn[\"Connect\"] = \"connect\";\n})(PrefetchOn || (PrefetchOn = {}));\nexports.default = PrefetchOn;\n//# sourceMappingURL=PrefetchOn.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst client_chime_sdk_messaging_1 = require(\"@aws-sdk/client-chime-sdk-messaging\");\nconst FullJitterBackoff_1 = require(\"../backoff/FullJitterBackoff\");\nconst CSPMonitor_1 = require(\"../cspmonitor/CSPMonitor\");\nconst Message_1 = require(\"../message/Message\");\nconst DefaultReconnectController_1 = require(\"../reconnectcontroller/DefaultReconnectController\");\nconst AsyncScheduler_1 = require(\"../scheduler/AsyncScheduler\");\nconst DefaultSigV4_1 = require(\"../sigv4/DefaultSigV4\");\nconst DefaultWebSocketAdapter_1 = require(\"../websocketadapter/DefaultWebSocketAdapter\");\nconst WebSocketReadyState_1 = require(\"../websocketadapter/WebSocketReadyState\");\nconst PrefetchOn_1 = require(\"./PrefetchOn\");\nclass DefaultMessagingSession {\n    constructor(configuration, logger, webSocket, reconnectController, sigV4) {\n        this.configuration = configuration;\n        this.logger = logger;\n        this.webSocket = webSocket;\n        this.reconnectController = reconnectController;\n        this.sigV4 = sigV4;\n        this.observerQueue = new Set();\n        if (!this.webSocket) {\n            this.webSocket = new DefaultWebSocketAdapter_1.default(this.logger);\n        }\n        if (!this.reconnectController) {\n            this.reconnectController = new DefaultReconnectController_1.default(configuration.reconnectTimeoutMs, new FullJitterBackoff_1.default(configuration.reconnectFixedWaitMs, configuration.reconnectShortBackoffMs, configuration.reconnectLongBackoffMs));\n        }\n        if (!this.sigV4) {\n            this.sigV4 = new DefaultSigV4_1.default(this.configuration.chimeClient);\n        }\n        CSPMonitor_1.default.addLogger(this.logger);\n        CSPMonitor_1.default.register();\n        this.preBootstrapMessages = [];\n    }\n    addObserver(observer) {\n        this.logger.info('adding messaging observer');\n        this.observerQueue.add(observer);\n    }\n    removeObserver(observer) {\n        this.logger.info('removing messaging observer');\n        this.observerQueue.delete(observer);\n    }\n    start() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isClosed()) {\n                yield this.startConnecting(false);\n            }\n            else {\n                this.logger.info('messaging session already started');\n            }\n        });\n    }\n    stop() {\n        if (!this.isClosed()) {\n            this.isClosing = true;\n            this.webSocket.close();\n            CSPMonitor_1.default.removeLogger(this.logger);\n        }\n        else {\n            this.logger.info('no existing messaging session needs closing');\n        }\n    }\n    forEachObserver(observerFunc) {\n        for (const observer of this.observerQueue) {\n            AsyncScheduler_1.default.nextTick(() => {\n                if (this.observerQueue.has(observer)) {\n                    observerFunc(observer);\n                }\n            });\n        }\n    }\n    setUpEventListeners() {\n        this.webSocket.addEventListener('open', () => {\n            this.openEventHandler();\n        });\n        this.webSocket.addEventListener('message', (event) => {\n            this.receiveMessageHandler(event.data);\n        });\n        this.webSocket.addEventListener('close', (event) => {\n            this.closeEventHandler(event);\n        });\n        this.webSocket.addEventListener('error', () => {\n            this.logger.error(`WebSocket error`);\n        });\n    }\n    startConnecting(reconnecting) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.startConnectingInternal(reconnecting);\n            return yield new Promise((resolve, reject) => {\n                this.bootstrapResolved = resolve;\n                this.bootstrapRejected = reject;\n            });\n        });\n    }\n    startConnectingInternal(reconnecting) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            let endpointUrl = this.configuration.endpointUrl;\n            // Moving this reconnect logic can potentially result into an infinite reconnect loop on errors.\n            // Check https://github.com/aws/amazon-chime-sdk-js/issues/2372 for details.\n            if (!reconnecting) {\n                this.reconnectController.reset();\n            }\n            if (this.reconnectController.hasStartedConnectionAttempt()) {\n                this.reconnectController.startedConnectionAttempt(false);\n            }\n            else {\n                this.reconnectController.startedConnectionAttempt(true);\n            }\n            // reconnect needs to re-resolve endpoint url, which will also refresh credentials on client if they are expired\n            if (reconnecting || endpointUrl === undefined) {\n                try {\n                    if (this.configuration.chimeClient.getMessagingSessionEndpoint instanceof Function) {\n                        const response = yield this.configuration.chimeClient.getMessagingSessionEndpoint();\n                        // Check for aws sdk v3 with v2 style compatibility first\n                        if ((_a = response.Endpoint) === null || _a === void 0 ? void 0 : _a.Url) {\n                            endpointUrl = response.Endpoint.Url;\n                        }\n                        else {\n                            // Make aws sdk v2 call\n                            const endpoint = yield this.configuration.chimeClient\n                                .getMessagingSessionEndpoint()\n                                .promise();\n                            endpointUrl = endpoint.Endpoint.Url;\n                        }\n                    }\n                    else {\n                        endpointUrl = (yield this.configuration.chimeClient.send(new client_chime_sdk_messaging_1.GetMessagingSessionEndpointCommand({}))).Endpoint.Url;\n                    }\n                    this.logger.debug(`Messaging endpoint resolved to: ${endpointUrl}`);\n                }\n                catch (e) {\n                    // send artificial close code event so the\n                    // re-connect logic of underlying websocket client is\n                    // triggered in the close handler\n                    this.logger.error(`Messaging Session failed to resolve endpoint: ${e}`);\n                    const closeEvent = new CloseEvent('close', {\n                        wasClean: false,\n                        code: 4999,\n                        reason: 'Failed to get messaging session endpoint URL',\n                        bubbles: false,\n                    });\n                    this.closeEventHandler(closeEvent);\n                    return;\n                }\n            }\n            const signedUrl = yield this.prepareWebSocketUrl(endpointUrl);\n            this.logger.info(`opening connection to ${signedUrl}`);\n            if (!reconnecting) {\n                this.reconnectController.reset();\n            }\n            if (this.reconnectController.hasStartedConnectionAttempt()) {\n                this.reconnectController.startedConnectionAttempt(false);\n            }\n            else {\n                this.reconnectController.startedConnectionAttempt(true);\n            }\n            this.webSocket.create(signedUrl, [], true);\n            this.forEachObserver(observer => {\n                if (observer.messagingSessionDidStartConnecting) {\n                    observer.messagingSessionDidStartConnecting(reconnecting);\n                }\n            });\n            this.setUpEventListeners();\n        });\n    }\n    prepareWebSocketUrl(endpointUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryParams = new Map();\n            queryParams.set('userArn', [this.configuration.userArn]);\n            queryParams.set('sessionId', [this.configuration.messagingSessionId]);\n            if (this.configuration.prefetchOn === PrefetchOn_1.default.Connect) {\n                queryParams.set('prefetch-on', [PrefetchOn_1.default.Connect]);\n            }\n            if (this.configuration.prefetchSortBy) {\n                queryParams.set('prefetch-sort-by', [this.configuration.prefetchSortBy]);\n            }\n            return yield this.sigV4.signURL('GET', 'wss', 'chime', endpointUrl, '/connect', '', queryParams);\n        });\n    }\n    isClosed() {\n        return (this.webSocket.readyState() === WebSocketReadyState_1.default.None ||\n            this.webSocket.readyState() === WebSocketReadyState_1.default.Closed);\n    }\n    openEventHandler() {\n        this.reconnectController.reset();\n        this.isSessionEstablished = false;\n    }\n    receiveMessageHandler(data) {\n        try {\n            const jsonData = JSON.parse(data);\n            const messageType = jsonData.Headers['x-amz-chime-event-type'];\n            const message = new Message_1.default(messageType, jsonData.Headers, jsonData.Payload || null);\n            if (!this.isSessionEstablished && messageType === 'SESSION_ESTABLISHED') {\n                // Backend connects WebSocket and then either\n                // (1) Closes with WebSocket error code to reflect failure to authorize or other connection error OR\n                // (2) Sends SESSION_ESTABLISHED. SESSION_ESTABLISHED indicates that all messages and events on a channel\n                // the app instance user is a member of is guaranteed to be delivered on this WebSocket as long as the WebSocket\n                // connection stays opened.\n                this.forEachObserver(observer => {\n                    if (observer.messagingSessionDidStart) {\n                        observer.messagingSessionDidStart();\n                    }\n                });\n                this.bootstrapResolved();\n                this.isSessionEstablished = true;\n                // Send message and flush the queue.\n                const preBootstrapMessageLength = this.preBootstrapMessages.length;\n                for (let iter = 0; iter < preBootstrapMessageLength; iter++) {\n                    const preBootstrapMessage = this.preBootstrapMessages.shift();\n                    this.forEachObserver(observer => {\n                        this.sendMessageToObserver(observer, preBootstrapMessage);\n                    });\n                }\n            }\n            else if (!this.isSessionEstablished) {\n                // SESSION_ESTABLISHED is not guaranteed to be the first message, and in rare conditions a message or event from\n                // a channel the member is a member of might arrive prior to SESSION_ESTABLISHED.  Because SESSION_ESTABLISHED indicates\n                // it is safe to bootstrap the user application without any race conditions in losing events we opt to store messages prior\n                // to SESSION_ESTABLISHED being received and send when once SESSION_ESTABLISHED.\n                this.preBootstrapMessages.push(message);\n                return;\n            }\n            this.forEachObserver(observer => {\n                this.sendMessageToObserver(observer, message);\n            });\n        }\n        catch (error) {\n            this.logger.error(`Messaging parsing failed: ${error}`);\n        }\n    }\n    sendMessageToObserver(observer, message) {\n        if (observer.messagingSessionDidReceiveMessage) {\n            observer.messagingSessionDidReceiveMessage(message);\n        }\n    }\n    retryConnection() {\n        return this.reconnectController.retryWithBackoff(() => __awaiter(this, void 0, void 0, function* () {\n            yield this.startConnecting(true);\n        }), null);\n    }\n    closeEventHandler(event) {\n        this.logger.info(`WebSocket close: ${event.code} ${event.reason}`);\n        if (event.code !== 4999) {\n            this.webSocket.destroy();\n        }\n        if (!this.isClosing && this.canReconnect(event.code) && this.retryConnection()) {\n            return;\n        }\n        this.isClosing = false;\n        if (this.isSessionEstablished) {\n            this.forEachObserver(observer => {\n                if (observer.messagingSessionDidStop) {\n                    observer.messagingSessionDidStop(event);\n                }\n            });\n        }\n        else {\n            this.bootstrapRejected(event);\n        }\n    }\n    canReconnect(closeCode) {\n        // 4003 is Kicked closing event from the back end\n        return (closeCode === 1001 ||\n            closeCode === 1006 ||\n            (closeCode >= 1011 && closeCode <= 1014) ||\n            (closeCode > 4000 && closeCode !== 4002 && closeCode !== 4003 && closeCode !== 4401));\n    }\n}\nexports.default = DefaultMessagingSession;\n//# sourceMappingURL=DefaultMessagingSession.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst CanvasVideoFrameBuffer_1 = require(\"./CanvasVideoFrameBuffer\");\nconst DEFAULT_FRAMERATE = 15;\n/**\n * [[DefaultVideoFrameProcessorPipeline]] implements {@link VideoFrameProcessorPipeline}.\n * It constructs a buffer {@link CanvasVideoFrameBuffer} as source by default and invokes processor based on `framerate`.\n * The default output type is `MediaStream`.\n */\nclass DefaultVideoFrameProcessorPipeline {\n    constructor(logger, stages) {\n        this.logger = logger;\n        this.stages = stages;\n        this.fr = DEFAULT_FRAMERATE;\n        // initialize with dummy inactive MediaStream to keep strict type\n        this.outputMediaStream = new MediaStream();\n        this.videoInput = document.createElement('video');\n        this.canvasOutput = document.createElement('canvas');\n        this.outputCtx = this.canvasOutput.getContext('2d');\n        this.canvasInput = document.createElement('canvas');\n        this.inputCtx = this.canvasInput.getContext('2d');\n        this.inputVideoStream = null;\n        this.sourceBuffers = [];\n        this.destBuffers = [];\n        this.observers = new Set();\n        this.hasStarted = false;\n        this.process = (_event) => __awaiter(this, void 0, void 0, function* () {\n            if (!this.inputVideoStream) {\n                return;\n            }\n            const processVideoStart = performance.now();\n            // videoWidth is intrinsic video width\n            if (this.videoInput.videoWidth) {\n                if (this.canvasInput.width !== this.videoInput.videoWidth) {\n                    this.canvasInput.width = this.videoInput.videoWidth;\n                    this.canvasInput.height = this.videoInput.videoHeight;\n                    this.sourceBuffers[0].height = this.canvasInput.height;\n                    this.sourceBuffers[0].width = this.canvasInput.width;\n                    this.sourceBuffers[0].framerate = this.framerate;\n                }\n                this.inputCtx.drawImage(this.videoInput, 0, 0);\n            }\n            // processes input buffers\n            let buffers = [];\n            buffers.push(this.sourceBuffers[0]);\n            try {\n                for (const proc of this.processors) {\n                    buffers = yield proc.process(buffers);\n                }\n            }\n            catch (_error) {\n                this.forEachObserver(obs => {\n                    if (obs.processingDidFailToStart) {\n                        obs.processingDidFailToStart();\n                    }\n                });\n                return;\n            }\n            this.destBuffers = buffers;\n            let imageSource;\n            try {\n                imageSource = yield this.destBuffers[0].asCanvasImageSource();\n            }\n            catch (error) {\n                if (this.inputVideoStream) {\n                    this.logger.info('buffers are destroyed and pipeline could not start');\n                    this.forEachObserver(obs => {\n                        if (obs.processingDidFailToStart) {\n                            obs.processingDidFailToStart();\n                        }\n                    });\n                }\n                return;\n            }\n            // finally draws the image\n            const frameWidth = imageSource.width;\n            const frameHeight = imageSource.height;\n            if (frameWidth !== 0 && frameHeight !== 0) {\n                if (this.canvasOutput.width !== frameWidth && this.canvasOutput.height !== frameHeight) {\n                    this.canvasOutput.width = frameWidth;\n                    this.canvasOutput.height = frameHeight;\n                }\n                this.outputCtx.drawImage(imageSource, 0, 0, frameWidth, frameHeight, 0, 0, frameWidth, frameHeight);\n                if (!this.hasStarted) {\n                    this.hasStarted = true;\n                    this.forEachObserver(observer => {\n                        if (observer.processingDidStart) {\n                            observer.processingDidStart();\n                        }\n                    });\n                }\n            }\n            // measures time\n            const processVideoLatency = performance.now() - processVideoStart;\n            const leave = (1000 * 2) / this.framerate - processVideoLatency; // half fps\n            const nextFrameDelay = Math.max(0, 1000 / this.framerate - processVideoLatency);\n            if (leave <= 0) {\n                this.forEachObserver(obs => {\n                    if (obs.processingLatencyTooHigh) {\n                        obs.processingLatencyTooHigh(processVideoLatency);\n                    }\n                });\n            }\n            // TODO: use requestAnimationFrame which is more organic and allows browser to conserve resources by its choices.\n            /* @ts-ignore */\n            this.lastTimeOut = setTimeout(this.process, nextFrameDelay);\n        });\n    }\n    destroy() {\n        this.stop();\n        if (this.stages) {\n            for (const stage of this.stages) {\n                stage.destroy();\n            }\n        }\n    }\n    get framerate() {\n        return this.fr;\n    }\n    // A negative framerate will cause `captureStream` to throw `NotSupportedError`.\n    // The setter prevents this by switching to the default framerate if less than 0.\n    set framerate(value) {\n        this.fr = value < 0 ? DEFAULT_FRAMERATE : value;\n    }\n    stop() {\n        // empty stream, stop pipeline\n        // null input media stream stops the pipeline.\n        this.videoInput.removeEventListener('loadedmetadata', this.process);\n        this.videoInput.srcObject = null;\n        // Clean the input stream and buffers.\n        this.destroyInputMediaStreamAndBuffers();\n        // Stop all the output tracks, but don't discard the media stream,\n        // because it's how other parts of the codebase recognize when\n        // a selected stream is part of this transform device.\n        if (this.outputMediaStream) {\n            for (const track of this.outputMediaStream.getVideoTracks()) {\n                track.stop();\n            }\n        }\n        if (this.lastTimeOut) {\n            clearTimeout(this.lastTimeOut);\n            this.lastTimeOut = undefined;\n        }\n        if (this.hasStarted) {\n            this.hasStarted = false;\n            this.forEachObserver(observer => {\n                if (observer.processingDidStop) {\n                    observer.processingDidStop();\n                }\n            });\n        }\n    }\n    addObserver(observer) {\n        this.observers.add(observer);\n    }\n    removeObserver(observer) {\n        this.observers.delete(observer);\n    }\n    getInputMediaStream() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.inputVideoStream;\n        });\n    }\n    getActiveOutputMediaStream() {\n        if (this.isOutputMediaStreamActive()) {\n            return this.outputMediaStream;\n        }\n        this.outputMediaStream = this.canvasOutput.captureStream(this.framerate);\n        this.cloneInputAudioTracksToOutput();\n        return this.outputMediaStream;\n    }\n    /**\n     * `inputMediaStream` is by default used to construct one {@link CanvasVideoFrameBuffer}\n     * The buffer will be fed into the first {@link VideoFrameProcessor}.\n     */\n    setInputMediaStream(inputMediaStream) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!inputMediaStream) {\n                this.stop();\n                return;\n            }\n            if (inputMediaStream.getVideoTracks().length === 0) {\n                this.logger.error('No video tracks in input media stream, ignoring');\n                return;\n            }\n            this.inputVideoStream = inputMediaStream;\n            const settings = this.inputVideoStream.getVideoTracks()[0].getSettings();\n            this.logger.info(`processing pipeline input stream settings ${JSON.stringify(settings)}`);\n            this.canvasOutput.width = settings.width;\n            this.canvasOutput.height = settings.height;\n            this.videoInput.addEventListener('loadedmetadata', this.process);\n            this.videoInput.srcObject = this.inputVideoStream;\n            // avoid iOS safari full screen video\n            this.videoInput.setAttribute('playsinline', 'true');\n            // create sources\n            const canvasBuffer = new CanvasVideoFrameBuffer_1.default(this.canvasInput);\n            this.sourceBuffers.push(canvasBuffer);\n            this.videoInput.load();\n            try {\n                yield this.videoInput.play();\n            }\n            catch (_a) {\n                this.logger.warn('Video element play() overrided by another load().');\n            }\n            this.cloneInputAudioTracksToOutput();\n        });\n    }\n    cloneInputAudioTracksToOutput() {\n        if (!this.isOutputMediaStreamActive() || this.inputVideoStream === null) {\n            this.logger.info('Not cloning input audio tracks to output, do not have media streams ready');\n            return; // Just wait for `getActiveOutputMediaStream`\n        }\n        // Remove current audio tracks from output\n        for (const audioTrack of this.outputMediaStream.getAudioTracks()) {\n            this.logger.info(`Removing audio track ${audioTrack.id} from output stream`);\n            this.outputMediaStream.removeTrack(audioTrack);\n        }\n        for (const audioTrack of this.inputVideoStream.getAudioTracks()) {\n            this.logger.info(`Adding audio track ${audioTrack.id} to output stream`);\n            this.outputMediaStream.addTrack(audioTrack);\n        }\n    }\n    isOutputMediaStreamActive() {\n        return this.outputMediaStream && this.outputMediaStream.active;\n    }\n    set processors(stages) {\n        this.stages = stages;\n    }\n    get processors() {\n        return this.stages;\n    }\n    forEachObserver(observerFunc) {\n        for (const observer of this.observers) {\n            setTimeout(() => {\n                observerFunc(observer);\n            }, 0);\n        }\n    }\n    destroyInputMediaStreamAndBuffers() {\n        if (this.inputVideoStream) {\n            for (const track of this.inputVideoStream.getTracks()) {\n                track.stop();\n            }\n        }\n        this.inputVideoStream = null;\n        for (const buffer of this.sourceBuffers) {\n            buffer.destroy();\n        }\n        this.sourceBuffers = [];\n    }\n}\nexports.default = DefaultVideoFrameProcessorPipeline;\n//# sourceMappingURL=DefaultVideoFrameProcessorPipeline.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\nconst DefaultVideoFrameProcessorPipeline_1 = require(\"./DefaultVideoFrameProcessorPipeline\");\n/**\n * [[DefaultVideoTransformDevice]] is an augmented [[VideoInputDevice]].\n * It transform the input {@link Device} with an array of {@link VideoFrameProcessor} to produce a `MediaStream`.\n */\nclass DefaultVideoTransformDevice {\n    constructor(logger, device, processors, browserBehavior = new DefaultBrowserBehavior_1.default()) {\n        this.logger = logger;\n        this.device = device;\n        this.processors = processors;\n        this.browserBehavior = browserBehavior;\n        this.observers = new Set();\n        this.pipe = new DefaultVideoFrameProcessorPipeline_1.default(this.logger, this.processors);\n        this.pipe.addObserver(this);\n    }\n    /**\n     * getter for `outputMediaStream`.\n     * `outputMediaStream` is returned by internal {@link VideoFrameProcessorPipeline}.\n     * It is possible, but unlikely, that this accessor will throw.\n     */\n    get outputMediaStream() {\n        return this.pipe.outputMediaStream;\n    }\n    /**\n     * `chooseNewInnerDevice` preserves the inner pipeline and processing state and switches\n     * the inner device. Since the pipeline and processors are shared with the new transform device\n     * only one transform device can be used.\n     */\n    chooseNewInnerDevice(newDevice) {\n        const newTransformDevice = new DefaultVideoTransformDevice(this.logger, newDevice, this.processors, this.browserBehavior);\n        newTransformDevice.pipe = this.pipe;\n        return newTransformDevice;\n    }\n    /**\n     * Return the inner device as provided during construction.\n     */\n    getInnerDevice() {\n        return this.device;\n    }\n    intrinsicDevice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.device;\n        });\n    }\n    /**\n     * Create {@link VideoFrameProcessorPipeline} if there is not a existing one and start video processors.\n     * Returns output `MediaStream` produced by {@link VideoFrameProcessorPipeline}.\n     */\n    transformStream(mediaStream) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.pipe.setInputMediaStream(mediaStream);\n            this.inputMediaStream = mediaStream;\n            return this.pipe.getActiveOutputMediaStream();\n        });\n    }\n    /**\n     * onOutputStreamDisconnect is called when device controller wants to detach\n     * the transform device. The default behavior is to stop the output\n     * media stream and release the input the media stream. If the input media stream\n     * is the provided device, it will not be released.\n     */\n    onOutputStreamDisconnect() {\n        this.logger.info('DefaultVideoTransformDevice: detach stopping input media stream');\n        const deviceIsMediaStream = this.device && this.device.id;\n        // Stop processing but keep the pipe and processors\n        this.pipe.stop();\n        // Turn off the camera, unless device is a MediaStream\n        if (!deviceIsMediaStream) {\n            if (this.inputMediaStream) {\n                for (const track of this.inputMediaStream.getVideoTracks()) {\n                    track.stop();\n                }\n            }\n        }\n    }\n    /**\n     * Dispose of the inner workings of the transform device, including pipeline and processors.\n     * `stop` can only be called when the transform device is not used by device controller anymore.\n     * After `stop` is called, all transform devices which share the pipeline must be discarded.\n     */\n    stop() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.inputMediaStream) {\n                for (const track of this.inputMediaStream.getVideoTracks()) {\n                    track.stop();\n                }\n            }\n            this.pipe.destroy();\n            this.inputMediaStream = null;\n        });\n    }\n    /**\n     * Add an observer to receive notifications about lifecycle events.\n     * See {@link DefaultVideoTransformDeviceObserver} for details.\n     * If the observer has already been added, this method call has no effect.\n     */\n    addObserver(observer) {\n        this.observers.add(observer);\n    }\n    /**\n     * Remove an existing observer. If the observer has not been previously. this method call has no effect.\n     */\n    removeObserver(observer) {\n        this.observers.delete(observer);\n    }\n    processingDidStart() {\n        this.logger.info('video transform device processing started');\n        this.forEachObserver(observer => {\n            if (observer.processingDidStart) {\n                observer.processingDidStart();\n            }\n        });\n    }\n    processingLatencyTooHigh(latencyMs) {\n        this.forEachObserver(observer => {\n            if (observer.processingLatencyTooHigh) {\n                observer.processingLatencyTooHigh(latencyMs);\n            }\n        });\n    }\n    processingDidFailToStart() {\n        this.logger.info('video transform device processing failed to start');\n        this.forEachObserver(observer => {\n            if (observer.processingDidFailToStart) {\n                observer.processingDidFailToStart();\n            }\n        });\n    }\n    processingDidStop() {\n        this.logger.info('video transform device processing stopped');\n        this.forEachObserver(observer => {\n            if (observer.processingDidStop) {\n                observer.processingDidStop();\n            }\n        });\n    }\n    forEachObserver(observerFunc) {\n        for (const observer of this.observers) {\n            setTimeout(() => {\n                observerFunc(observer);\n            }, 0);\n        }\n    }\n}\nexports.default = DefaultVideoTransformDevice;\n//# sourceMappingURL=DefaultVideoTransformDevice.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst FullJitterBackoff_1 = require(\"./FullJitterBackoff\");\nclass FullJitterLimitedBackoff extends FullJitterBackoff_1.default {\n    constructor(fixedWaitMs, shortBackoffMs, longBackoffMs, limit) {\n        super(fixedWaitMs, shortBackoffMs, longBackoffMs);\n        this.limit = limit;\n        this.attempts = 0;\n    }\n    nextBackoffAmountMs() {\n        this.attempts++;\n        if (this.attempts > this.limit) {\n            throw new Error('retry limit exceeded');\n        }\n        return super.nextBackoffAmountMs();\n    }\n}\nexports.default = FullJitterLimitedBackoff;\n//# sourceMappingURL=FullJitterLimitedBackoff.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst FullJitterBackoff_1 = require(\"./FullJitterBackoff\");\nconst FullJitterLimitedBackoff_1 = require(\"./FullJitterLimitedBackoff\");\nclass FullJitterBackoffFactory {\n    constructor(fixedWaitMs, shortBackoffMs, longBackoffMs) {\n        this.fixedWaitMs = fixedWaitMs;\n        this.shortBackoffMs = shortBackoffMs;\n        this.longBackoffMs = longBackoffMs;\n    }\n    create() {\n        return new FullJitterBackoff_1.default(this.fixedWaitMs, this.shortBackoffMs, this.longBackoffMs);\n    }\n    createWithLimit(limit) {\n        return new FullJitterLimitedBackoff_1.default(this.fixedWaitMs, this.shortBackoffMs, this.longBackoffMs, limit);\n    }\n}\nexports.default = FullJitterBackoffFactory;\n//# sourceMappingURL=FullJitterBackoffFactory.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Log {\n    constructor(sequenceNumber, message, timestampMs, logLevel) {\n        this.sequenceNumber = sequenceNumber;\n        this.message = message;\n        this.timestampMs = timestampMs;\n        this.logLevel = logLevel;\n    }\n}\nexports.default = Log;\n//# sourceMappingURL=Log.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[MessagingSessionConfiguration]] contains the information necessary to start\n * a messaging session.\n */\n/* eslint  @typescript-eslint/no-explicit-any: 0, @typescript-eslint/explicit-module-boundary-types: 0 */\nclass MessagingSessionConfiguration {\n    /**\n     * Constructs a MessagingSessionConfiguration optionally with userArn, messaging session id, a messaging session\n     * endpoint URL, and the chimeClient.\n     *\n     * endpointUrl is deprecated and should not be used. Internally it is resolved on connect via chimeClient if undefined, and\n     * always re-resolved on reconnect.\n     *\n     * The messaging session id is to uniquely identify this messaging session for the userArn.\n     * If messaging session id is passed in as null, it will be automatically generated.\n     */\n    constructor(userArn, messagingSessionId, endpointUrl, chimeClient) {\n        this.userArn = userArn;\n        this.messagingSessionId = messagingSessionId;\n        this.endpointUrl = endpointUrl;\n        this.chimeClient = chimeClient;\n        /**\n         * Maximum amount of time in milliseconds to allow for reconnecting.\n         */\n        this.reconnectTimeoutMs = 10 * 1000;\n        /**\n         * Fixed wait amount in milliseconds between reconnecting attempts.\n         */\n        this.reconnectFixedWaitMs = 0;\n        /**\n         * The short back off time in milliseconds between reconnecting attempts.\n         */\n        this.reconnectShortBackoffMs = 1 * 1000;\n        /**\n         * The long back off time in milliseconds between reconnecting attempts.\n         */\n        this.reconnectLongBackoffMs = 5 * 1000;\n        /**\n         * The enum to indicate if we want to turn on prefetch feature. Prefetch feature will send out CHANNEL_DETAILS event\n         * upon websocket connection, which includes information about channel, channel messages, channel memberships etc.\n         */\n        this.prefetchOn = undefined;\n        /**\n         * The enum to indicate the sorting mechanism to use when deciding which channels to Prefetch. Prefetch feature will send out\n         * CHANNEL_DETAILS event upon websocket connection, which includes information about channel, channel messages, channel memberships etc.\n         * The first 50 channels matching the PrefetchSortBy will be sent.  If not set, channels will be returned first by those\n         * with unread messages and then those with the latest last sent message timestamp.\n         */\n        this.prefetchSortBy = undefined;\n        if (!this.messagingSessionId) {\n            this.messagingSessionId = this.generateSessionId();\n        }\n    }\n    generateSessionId() {\n        const num = new Uint32Array(1);\n        const randomNum = window.crypto.getRandomValues(num);\n        return randomNum[0].toString();\n    }\n}\nexports.default = MessagingSessionConfiguration;\n//# sourceMappingURL=MessagingSessionConfiguration.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst LogLevel_1 = require(\"./LogLevel\");\n/**\n * MultiLogger writes logs to multiple other loggers\n */\nclass MultiLogger {\n    constructor(...loggers) {\n        this._loggers = loggers;\n    }\n    info(msg) {\n        for (const logger of this._loggers) {\n            logger.info(msg);\n        }\n    }\n    warn(msg) {\n        for (const logger of this._loggers) {\n            logger.warn(msg);\n        }\n    }\n    error(msg) {\n        for (const logger of this._loggers) {\n            logger.error(msg);\n        }\n    }\n    debug(debugFunction) {\n        let message;\n        let memoized;\n        if (typeof debugFunction === 'string') {\n            memoized = debugFunction;\n        }\n        else if (debugFunction) {\n            memoized = () => {\n                if (!message) {\n                    message = debugFunction();\n                }\n                return message;\n            };\n        }\n        else {\n            memoized = '' + debugFunction;\n        }\n        for (const logger of this._loggers) {\n            logger.debug(memoized);\n        }\n    }\n    setLogLevel(level) {\n        for (const logger of this._loggers) {\n            logger.setLogLevel(level);\n        }\n    }\n    getLogLevel() {\n        for (const logger of this._loggers) {\n            return logger.getLogLevel();\n        }\n        return LogLevel_1.default.OFF;\n    }\n}\nexports.default = MultiLogger;\n//# sourceMappingURL=MultiLogger.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst LogLevel_1 = require(\"./LogLevel\");\n/**\n * [[NoOpLogger]] does not log any message.\n */\nclass NoOpLogger {\n    constructor(level = LogLevel_1.default.OFF) {\n        this.level = level;\n    }\n    info(_msg) { }\n    warn(_msg) { }\n    error(_msg) { }\n    debug(debugFunction) {\n        if (LogLevel_1.default.DEBUG < this.level) {\n            return;\n        }\n        if (typeof debugFunction !== 'string') {\n            debugFunction();\n        }\n    }\n    setLogLevel(level) {\n        this.level = level;\n    }\n    getLogLevel() {\n        return this.level;\n    }\n}\nexports.default = NoOpLogger;\n//# sourceMappingURL=NoOpLogger.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst LogLevel_1 = require(\"./LogLevel\");\nconst NoOpLogger_1 = require(\"./NoOpLogger\");\n/**\n * [[NoOpDebugLogger]] does not log any message but does call\n * debug functions by default.\n */\nclass NoOpDebugLogger extends NoOpLogger_1.default {\n    constructor() {\n        super(LogLevel_1.default.DEBUG);\n    }\n}\nexports.default = NoOpDebugLogger;\n//# sourceMappingURL=NoOpDebugLogger.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[NoOpDeviceBroker]] rejects requests to acquire a [[MediaStream]].\n */\nclass NoOpMediaStreamBroker {\n    acquireAudioInputStream() {\n        return Promise.reject();\n    }\n    acquireVideoInputStream() {\n        return Promise.reject();\n    }\n    acquireDisplayInputStream(_streamConstraints) {\n        return Promise.reject();\n    }\n    muteLocalAudioInputStream() { }\n    unmuteLocalAudioInputStream() { }\n    addMediaStreamBrokerObserver(_observer) { }\n    removeMediaStreamBrokerObserver(_observer) { }\n}\nexports.default = NoOpMediaStreamBroker;\n//# sourceMappingURL=NoOpMediaStreamBroker.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst FullJitterBackoff_1 = require(\"../backoff/FullJitterBackoff\");\nconst DefaultEventController_1 = require(\"../eventcontroller/DefaultEventController\");\nconst NoOpDebugLogger_1 = require(\"../logger/NoOpDebugLogger\");\nconst NoOpMediaStreamBroker_1 = require(\"../mediastreambroker/NoOpMediaStreamBroker\");\nconst MeetingSessionConfiguration_1 = require(\"../meetingsession/MeetingSessionConfiguration\");\nconst MeetingSessionCredentials_1 = require(\"../meetingsession/MeetingSessionCredentials\");\nconst MeetingSessionStatus_1 = require(\"../meetingsession/MeetingSessionStatus\");\nconst MeetingSessionStatusCode_1 = require(\"../meetingsession/MeetingSessionStatusCode\");\nconst MeetingSessionURLs_1 = require(\"../meetingsession/MeetingSessionURLs\");\nconst DefaultReconnectController_1 = require(\"../reconnectcontroller/DefaultReconnectController\");\nconst DefaultWebSocketAdapter_1 = require(\"../websocketadapter/DefaultWebSocketAdapter\");\nconst DefaultAudioVideoController_1 = require(\"./DefaultAudioVideoController\");\nclass NoOpAudioVideoController extends DefaultAudioVideoController_1.default {\n    constructor(configuration) {\n        const emptyConfiguration = new MeetingSessionConfiguration_1.default();\n        emptyConfiguration.meetingId = '';\n        emptyConfiguration.externalMeetingId = '';\n        emptyConfiguration.credentials = new MeetingSessionCredentials_1.default();\n        emptyConfiguration.credentials.attendeeId = '';\n        emptyConfiguration.credentials.joinToken = '';\n        emptyConfiguration.urls = new MeetingSessionURLs_1.default();\n        emptyConfiguration.urls.turnControlURL = '';\n        emptyConfiguration.urls.audioHostURL = '';\n        emptyConfiguration.urls.signalingURL = 'wss://localhost/';\n        const noOpLogger = new NoOpDebugLogger_1.default();\n        super(configuration ? configuration : emptyConfiguration, noOpLogger, new DefaultWebSocketAdapter_1.default(new NoOpDebugLogger_1.default()), new NoOpMediaStreamBroker_1.default(), new DefaultReconnectController_1.default(0, new FullJitterBackoff_1.default(0, 0, 0)), new DefaultEventController_1.default(configuration ? configuration : emptyConfiguration, noOpLogger));\n    }\n    setAudioProfile(_audioProfile) { }\n    start() { }\n    stop() { }\n    promoteToPrimaryMeeting(_) {\n        return Promise.resolve(new MeetingSessionStatus_1.default(MeetingSessionStatusCode_1.default.OK));\n    }\n    demoteFromPrimaryMeeting() { }\n}\nexports.default = NoOpAudioVideoController;\n//# sourceMappingURL=NoOpAudioVideoController.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NoOpDeviceControllerWithEventController = void 0;\nconst NoOpMediaStreamBroker_1 = require(\"../mediastreambroker/NoOpMediaStreamBroker\");\nclass NoOpDeviceController extends NoOpMediaStreamBroker_1.default {\n    constructor(_options) {\n        super();\n        this.destroyed = false;\n    }\n    destroy() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.destroyed = true;\n        });\n    }\n    listAudioInputDevices() {\n        return Promise.resolve([]);\n    }\n    listVideoInputDevices() {\n        return Promise.resolve([]);\n    }\n    listAudioOutputDevices() {\n        return Promise.resolve([]);\n    }\n    startAudioInput(_device) {\n        return Promise.reject();\n    }\n    stopAudioInput() {\n        return Promise.resolve();\n    }\n    startVideoInput(_device) {\n        return Promise.reject();\n    }\n    stopVideoInput() {\n        return Promise.resolve();\n    }\n    chooseAudioOutput(_deviceId) {\n        return Promise.reject();\n    }\n    addDeviceChangeObserver(_observer) { }\n    removeDeviceChangeObserver(_observer) { }\n    createAnalyserNodeForAudioInput() {\n        return null;\n    }\n    startVideoPreviewForVideoInput(_element) { }\n    stopVideoPreviewForVideoInput(_element) { }\n    setDeviceLabelTrigger(_trigger) { }\n    mixIntoAudioInput(_stream) {\n        return null;\n    }\n    chooseVideoInputQuality(_width, _height, _frameRate) { }\n    getVideoInputQualitySettings() {\n        return null;\n    }\n}\nexports.default = NoOpDeviceController;\nclass NoOpDeviceControllerWithEventController extends NoOpDeviceController {\n    constructor(eventController) {\n        super();\n        this.eventController = eventController;\n    }\n}\nexports.NoOpDeviceControllerWithEventController = NoOpDeviceControllerWithEventController;\n//# sourceMappingURL=NoOpDeviceController.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass NoOpEventReporter {\n    constructor() { }\n    reportEvent(_ts, _name, _attributes) {\n        return;\n    }\n    start() { }\n    stop() { }\n}\nexports.default = NoOpEventReporter;\n//# sourceMappingURL=NoOpEventReporter.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass NoOpTask {\n    cancel() { }\n    name() {\n        return 'NoOpTask';\n    }\n    run() {\n        return Promise.resolve();\n    }\n    setParent(_parentTask) { }\n}\nexports.default = NoOpTask;\n//# sourceMappingURL=NoOpTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass NoOpVideoElementFactory {\n    create() {\n        const element = {\n            clientWidth: 400,\n            clientHeight: 300,\n            width: 400,\n            height: 300,\n            videoWidth: 400,\n            videoHeight: 300,\n            style: {\n                transform: '',\n            },\n            hasAttribute: () => {\n                return false;\n            },\n            removeAttribute: () => { },\n            setAttribute: () => { },\n            srcObject: false,\n            paused: true,\n            pause: () => {\n                element.paused = true;\n            },\n            play: () => {\n                element.paused = false;\n                return Promise.resolve();\n            },\n        };\n        // @ts-ignore\n        return element;\n    }\n}\nexports.default = NoOpVideoElementFactory;\n//# sourceMappingURL=NoOpVideoElementFactory.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultVideoStreamIdSet_1 = require(\"../videostreamidset/DefaultVideoStreamIdSet\");\nclass NoVideoDownlinkBandwidthPolicy {\n    reset() { }\n    updateIndex(_videoIndex) { }\n    updateMetrics(_clientMetricReport) { }\n    wantsResubscribe() {\n        return false;\n    }\n    chooseSubscriptions() {\n        return new DefaultVideoStreamIdSet_1.default();\n    }\n}\nexports.default = NoVideoDownlinkBandwidthPolicy;\n//# sourceMappingURL=NoVideoDownlinkBandwidthPolicy.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultVideoCaptureAndEncodeParameter_1 = require(\"../videocaptureandencodeparameter/DefaultVideoCaptureAndEncodeParameter\");\nclass NoVideoUplinkBandwidthPolicy {\n    constructor() { }\n    updateConnectionMetric(_metrics) { }\n    chooseMediaTrackConstraints() {\n        return {};\n    }\n    chooseEncodingParameters() {\n        return new Map();\n    }\n    updateIndex(_videoIndex) { }\n    wantsResubscribe() {\n        return false;\n    }\n    chooseCaptureAndEncodeParameters() {\n        return new DefaultVideoCaptureAndEncodeParameter_1.default(0, 0, 0, 0, false);\n    }\n    maxBandwidthKbps() {\n        return 0;\n    }\n    setIdealMaxBandwidthKbps(_idealMaxBandwidthKbps) { }\n    setHasBandwidthPriority(_hasBandwidthPriority) { }\n}\nexports.default = NoVideoUplinkBandwidthPolicy;\n//# sourceMappingURL=NoVideoUplinkBandwidthPolicy.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst IntervalScheduler_1 = require(\"../scheduler/IntervalScheduler\");\nconst Log_1 = require(\"./Log\");\nconst LogLevel_1 = require(\"./LogLevel\");\n/**\n * `POSTLogger` publishes log messages in batches to a URL\n * supplied during its construction.\n *\n * Be sure to call {@link POSTLogger.destroy} when you're done\n * with the logger in order to avoid leaks.\n */\nclass POSTLogger {\n    constructor(options) {\n        this.logCapture = [];\n        this.lock = false;\n        this.sequenceNumber = 0;\n        const { url, batchSize = POSTLogger.BATCH_SIZE, intervalMs = POSTLogger.INTERVAL_MS, logLevel = LogLevel_1.default.WARN, metadata, headers, } = options;\n        this.url = url;\n        this.batchSize = batchSize;\n        this.intervalMs = intervalMs;\n        this.logLevel = logLevel;\n        this.metadata = metadata;\n        this.headers = headers;\n        this.start();\n        this.eventListener = () => {\n            this.stop();\n        };\n        this.addEventListener();\n    }\n    addEventListener() {\n        if (!this.eventListener || !('window' in global) || !window.addEventListener) {\n            return;\n        }\n        window.addEventListener('unload', this.eventListener);\n    }\n    removeEventListener() {\n        if (!this.eventListener || !('window' in global) || !window.removeEventListener) {\n            return;\n        }\n        window.removeEventListener('unload', this.eventListener);\n    }\n    debug(debugFunction) {\n        if (LogLevel_1.default.DEBUG < this.logLevel) {\n            return;\n        }\n        if (typeof debugFunction === 'string') {\n            this.log(LogLevel_1.default.DEBUG, debugFunction);\n        }\n        else if (debugFunction) {\n            this.log(LogLevel_1.default.DEBUG, debugFunction());\n        }\n        else {\n            this.log(LogLevel_1.default.DEBUG, '' + debugFunction);\n        }\n    }\n    info(msg) {\n        this.log(LogLevel_1.default.INFO, msg);\n    }\n    warn(msg) {\n        this.log(LogLevel_1.default.WARN, msg);\n    }\n    error(msg) {\n        this.log(LogLevel_1.default.ERROR, msg);\n    }\n    setLogLevel(logLevel) {\n        this.logLevel = logLevel;\n    }\n    getLogLevel() {\n        return this.logLevel;\n    }\n    getLogCaptureSize() {\n        return this.logCapture.length;\n    }\n    start() {\n        this.addEventListener();\n        this.intervalScheduler = new IntervalScheduler_1.default(this.intervalMs);\n        this.intervalScheduler.start(() => __awaiter(this, void 0, void 0, function* () {\n            if (this.lock === true || this.getLogCaptureSize() === 0) {\n                return;\n            }\n            this.lock = true;\n            const batch = this.logCapture.slice(0, this.batchSize);\n            const body = this.makeRequestBody(batch);\n            try {\n                const response = yield fetch(this.url, Object.assign({ method: 'POST', body }, (this.headers\n                    ? {\n                        headers: this.headers,\n                    }\n                    : {})));\n                if (response.status === 200) {\n                    this.logCapture = this.logCapture.slice(batch.length);\n                }\n            }\n            catch (error) {\n                console.warn('[POSTLogger] ' + error.message);\n            }\n            finally {\n                this.lock = false;\n            }\n        }));\n    }\n    stop() {\n        var _a;\n        // Clean up to avoid resource leaks.\n        (_a = this.intervalScheduler) === null || _a === void 0 ? void 0 : _a.stop();\n        this.intervalScheduler = undefined;\n        this.removeEventListener();\n        const body = this.makeRequestBody(this.logCapture);\n        navigator.sendBeacon(this.url, body);\n    }\n    /**\n     * Permanently clean up the logger. A new logger must be created to\n     * resume logging.\n     */\n    destroy() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.stop();\n            this.metadata = undefined;\n            this.headers = undefined;\n            this.logCapture = [];\n            this.sequenceNumber = 0;\n            this.lock = false;\n            this.batchSize = 0;\n            this.intervalMs = 0;\n            this.url = undefined;\n        });\n    }\n    makeRequestBody(batch) {\n        return JSON.stringify(Object.assign(Object.assign({}, this.metadata), { logs: batch }));\n    }\n    log(type, msg) {\n        if (type < this.logLevel) {\n            return;\n        }\n        const now = Date.now();\n        // Handle undefined.\n        this.logCapture.push(new Log_1.default(this.sequenceNumber, msg, now, LogLevel_1.default[type]));\n        this.sequenceNumber += 1;\n    }\n}\nexports.default = POSTLogger;\nPOSTLogger.BATCH_SIZE = 85;\nPOSTLogger.INTERVAL_MS = 2000;\n//# sourceMappingURL=POSTLogger.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Using an enum here to make sure we can expand on future features\nvar PrefetchSortBy;\n(function (PrefetchSortBy) {\n    PrefetchSortBy[\"Unread\"] = \"unread\";\n    PrefetchSortBy[\"LastMessageTimestamp\"] = \"last-message-timestamp\";\n})(PrefetchSortBy || (PrefetchSortBy = {}));\nexports.default = PrefetchSortBy;\n//# sourceMappingURL=PrefetchSortBy.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[RealtimeAttendeePositionInFrame]] information about the attendee's place in the frame.\n */\nclass RealtimeAttendeePositionInFrame {\n    constructor() {\n        /**\n         * Index of attendee update in the frame starting at zero\n         */\n        this.attendeeIndex = null;\n        /**\n         * Number of total attendee updates in the frame\n         */\n        this.attendeesInFrame = null;\n    }\n}\nexports.default = RealtimeAttendeePositionInFrame;\n//# sourceMappingURL=RealtimeAttendeePositionInFrame.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BaseTask_1 = require(\"./BaseTask\");\n/**\n * [[RunnableTask]] Task wrapper for any Promised-operation\n */\nclass RunnableTask extends BaseTask_1.default {\n    constructor(logger, fn, taskName = 'RunnableTask') {\n        super(logger);\n        this.fn = fn;\n        this.taskName = taskName;\n    }\n    run() {\n        return this.fn().then(() => { });\n    }\n}\nexports.default = RunnableTask;\n//# sourceMappingURL=RunnableTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * This class simplifies the process of defining a transform device that\n * does not modify its input device constraints, and provides only a single audio node\n * to apply transforms.\n *\n * Subclass `SingleNodeAudioTransformDevice`, implementing `createSingleAudioNode`.\n */\nclass SingleNodeAudioTransformDevice {\n    constructor(inner) {\n        this.inner = inner;\n    }\n    mute(_muted) {\n        return __awaiter(this, void 0, void 0, function* () { });\n    }\n    /**\n     * `stop` should be called by the application to free any resources associated\n     * with the device (e.g., workers).\n     *\n     * After this is called, the device should be discarded.\n     */\n    stop() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            (_a = this.node) === null || _a === void 0 ? void 0 : _a.disconnect();\n        });\n    }\n    /**\n     * Return the inner {@link Device} that the device controller should select as part\n     * of the application of this `AudioTransformDevice`.\n     */\n    intrinsicDevice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.inner;\n        });\n    }\n    /**\n     * Optionally return a pair of `AudioNode`s that should be connected to the applied inner\n     * device. The two nodes can be the same, indicating the smallest possible subgraph.\n     *\n     * @param context The `AudioContext` to use when instantiating the nodes.\n     */\n    createAudioNode(context) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            (_a = this.node) === null || _a === void 0 ? void 0 : _a.disconnect();\n            this.node = yield this.createSingleAudioNode(context);\n            return {\n                start: this.node,\n                end: this.node,\n            };\n        });\n    }\n}\nexports.default = SingleNodeAudioTransformDevice;\n//# sourceMappingURL=SingleNodeAudioTransformDevice.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass TranscriptAlternative {\n}\nexports.default = TranscriptAlternative;\n//# sourceMappingURL=TranscriptAlternative.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n* When redacting personally identifiable information (PII) from a streaming transcription, Amazon Transcribe replaces each identified instance of PII with [PII] in your transcript.\n* An additional option available for streaming audio is PII identification.\n* When you activate PII Identification, Amazon Transcribe labels the PII in your transcription results under an Entities object.\n* PII identification and redaction for streaming jobs is performed only upon complete transcription of the audio segments.\n* category refers to whether the entity is a PII or PHI data.\n* confidence refers to the confidence that the speech it flagged for redaction/identification is truly PII. Confidence value ranges from 0 to 1 inclusive.\n* type refers to the type of PII/PHI data that is identified. The current supported type values are: BANK_ACCOUNT_NUMBER, BANK_ROUTING, CREDIT_DEBIT_NUMBER, CREDIT_DEBIT_CVV, CREDIT_DEBIT_EXPIRY, PIN, EMAIL, ADDRESS, NAME, PHONE, SSN.\n* type is only available in case of engine transcribe and not in medical transcribe\n* type can be expected to change and grow as Transcribe evolves\n* endTimeMs and startTimeMs are epoch timestamps in milliseconds\n* Sample Redacted PII Data would look similar to this :\n* \"Entities\": [\n                {\n                    \"Content\": \"[NAME]\",\n                    \"Category\": \"PII\",\n                    \"Type\": \"NAME\",\n                    \"StartTime\" : 1636493289421,\n                    \"EndTime\" : 1636493290016,\n                    \"Confidence\": 0.9989\n                }\n            ]\n* Sample PII Identified data would look similar to this :\n* \"Entities\": [\n                {\n                    \"Content\": \"janet smithy\",\n                    \"Category\": \"PII\",\n                    \"Type\": \"NAME\",\n                    \"StartTime\" : 1636493289421,\n                    \"EndTime\" : 1636493290016,\n                    \"Confidence\": 0.9989\n                }\n              ]\n*/\nclass TranscriptEntity {\n}\nexports.default = TranscriptEntity;\n//# sourceMappingURL=TranscriptEntity.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass TranscriptItem {\n}\nexports.default = TranscriptItem;\n//# sourceMappingURL=TranscriptItem.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n* When using automatic language identification for streaming transcription,\n* Amazon Transcribe provides the language codes of the identified languages and their associated confidence scores.\n* languageCode refers to one of language code from the set of languageOptions provided during start transcription call\n* score refers to the confidence score is a value between zero and one; a larger value indicates a higher confidence in the identified language.\n* Sample LanguageWithScore would look similar to this :\n* \"LanguageIdentification\": [\n                {\n                    \"LanguageCode\": \"en-US\",\n                    \"Score\": 0.805\n                },\n                {\n                    \"LanguageCode\": \"ja-JP\",\n                    \"Score\": 0.195\n                }\n            ]\n*/\nclass TranscriptLanguageWithScore {\n}\nexports.default = TranscriptLanguageWithScore;\n//# sourceMappingURL=TranscriptLanguageWithScore.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass TranscriptResult {\n}\nexports.default = TranscriptResult;\n//# sourceMappingURL=TranscriptResult.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[VideoSource]] contains the information of a video source.\n */\nclass VideoSource {\n}\nexports.default = VideoSource;\n//# sourceMappingURL=VideoSource.js.map","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decideModel = exports.measureAndDecideExecutionApproach = void 0;\nconst loader_js_1 = require(\"./loader.js\");\nconst support_js_1 = require(\"./support.js\");\nconst DEFAULT_EXECUTION_QUANTA = 3;\nconst SIMD_SCORE_FIXED_POINT = 2.50;\nconst WASM_SCORE_FIXED_POINT = 2.63;\nconst SINGLE_INLINE_SCORE_MULTIPLIER = 0.6;\nconst QUALITY_MULTIPLE_QUANTA_SCORE_MULTIPLIER = 0.65;\nconst INTERACTIVITY_MULTIPLE_QUANTA_SCORE_MULTIPLIER = 0.5;\nconst WORKER_SCORE_MULTIPLIER = 0.7;\nconst PERFORMANCE_THRESHOLDS = {\n    wasm: {\n        noSupport: 0.07,\n        inline: {\n            c100: 1,\n            c50: 0.36,\n            c20: 0.16,\n            c10: 0.07,\n        },\n        worker: {\n            c100: 0.5,\n            c50: 0.18,\n            c20: 0.08,\n            c10: 0.06,\n        },\n    },\n    simd: {\n        noSupport: 0.10,\n        inline: {\n            c100: 1,\n            c50: 0.43,\n            c20: 0.3,\n            c10: 0.2,\n        },\n        worker: {\n            c100: 0.5,\n            c50: 0.21,\n            c20: 0.15,\n            c10: 0.10,\n        },\n    },\n};\nclass Estimator {\n    constructor(fetchConfig, logger) {\n        this.fetchConfig = fetchConfig;\n        this.logger = logger;\n        const workerURL = `${fetchConfig.paths.workers}estimator-v1.js`;\n        this.fetchBehavior = { headers: fetchConfig.headers, escapedQueryString: fetchConfig.escapedQueryString };\n        this.worker = loader_js_1.loadWorker(workerURL, 'VoiceFocusEstimator', this.fetchBehavior, logger);\n    }\n    roundtrip(toSend, receive, expectedKey) {\n        return new Promise((resolve, reject) => {\n            this.worker.then(worker => {\n                let listener;\n                listener = (event) => {\n                    const { message, key } = event.data;\n                    if (message === receive && key === expectedKey) {\n                        worker.removeEventListener('message', listener);\n                        resolve(event.data);\n                    }\n                };\n                worker.addEventListener('message', listener);\n                worker.postMessage(toSend);\n            }).catch(e => {\n                var _a;\n                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.error('Failed to load worker.', e);\n                reject(e);\n            });\n        });\n    }\n    supportsSIMD(url) {\n        const key = 'simd';\n        const path = url || `${this.fetchConfig.paths.wasm}simd-v1.wasm`;\n        const toSend = {\n            message: 'supports-simd',\n            fetchBehavior: this.fetchBehavior,\n            path,\n            key,\n        };\n        return this.roundtrip(toSend, 'simd-support', key)\n            .then(data => data.supports);\n    }\n    measure(simd, budget) {\n        const benchWASM = `${this.fetchConfig.paths.wasm}bench-v1.wasm`;\n        const benchSIMD = `${this.fetchConfig.paths.wasm}bench-v1_simd.wasm`;\n        const path = simd ? benchSIMD : benchWASM;\n        const key = `bench:${simd}`;\n        const toSend = {\n            message: 'measure',\n            fetchBehavior: this.fetchBehavior,\n            budget,\n            path,\n            key,\n        };\n        return this.roundtrip(toSend, 'measurement', key)\n            .then(data => {\n            if (data.measurement) {\n                return data.measurement;\n            }\n            throw new Error('Failed to measure.');\n        });\n    }\n    stop() {\n        this.worker.then(worker => {\n            var _a;\n            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.debug('Stopping estimator worker.');\n            worker.terminate();\n        }).catch(e => {\n        });\n    }\n}\nconst inlineScoreMultiplier = (executionQuanta, usagePreference) => {\n    if (executionQuanta === 1) {\n        return SINGLE_INLINE_SCORE_MULTIPLIER;\n    }\n    if (usagePreference === 'quality') {\n        return QUALITY_MULTIPLE_QUANTA_SCORE_MULTIPLIER * executionQuanta;\n    }\n    return INTERACTIVITY_MULTIPLE_QUANTA_SCORE_MULTIPLIER * executionQuanta;\n};\nconst decideExecutionApproach = ({ supportsSIMD, supportsSAB, duration, executionPreference = 'auto', simdPreference, variantPreference = 'auto', namePreference = 'default', usagePreference, executionQuantaPreference = DEFAULT_EXECUTION_QUANTA, }, allThresholds = PERFORMANCE_THRESHOLDS, logger) => {\n    const forceSIMD = (simdPreference === 'force');\n    const useSIMD = forceSIMD || (simdPreference !== 'disable' && supportsSIMD);\n    const checkScores = duration !== -1;\n    const baseScore = checkScores ? (useSIMD ? SIMD_SCORE_FIXED_POINT : WASM_SCORE_FIXED_POINT) / duration : 0;\n    const thresholds = useSIMD ? allThresholds.simd : allThresholds.wasm;\n    const inlineScore = checkScores ? inlineScoreMultiplier(executionQuantaPreference, usagePreference) * baseScore : 0;\n    const workerScore = checkScores ? WORKER_SCORE_MULTIPLIER * baseScore : 0;\n    const name = namePreference;\n    const unsupported = (reason) => {\n        return {\n            supported: false,\n            reason,\n        };\n    };\n    if (checkScores) {\n        if (baseScore < thresholds.noSupport) {\n            return unsupported(`Performance score ${baseScore} worse than threshold ${thresholds.noSupport}.`);\n        }\n    }\n    else {\n        if ((executionPreference === 'auto') ||\n            (variantPreference === 'auto')) {\n            return unsupported(`Missing explicit execution (${executionPreference}) or variant (${variantPreference}) preference, but no scoring performed.`);\n        }\n    }\n    logger === null || logger === void 0 ? void 0 : logger.debug(`Bench duration ${duration} yields inline score ${inlineScore} and worker score ${workerScore}.`);\n    const succeed = (processor, executionApproach, variant) => {\n        return {\n            supported: true,\n            useSIMD,\n            processor,\n            executionApproach,\n            variant,\n            executionQuanta: (executionApproach === 'inline' ? executionQuantaPreference : undefined),\n            name,\n        };\n    };\n    const resolveVariant = (score, variant, lookup) => {\n        if (variant !== 'auto') {\n            if (!checkScores || score > lookup[variant]) {\n                return variant;\n            }\n            return 'failed';\n        }\n        if (score > lookup.c100) {\n            return 'c100';\n        }\n        if (score > lookup.c50) {\n            return 'c50';\n        }\n        if (score > lookup.c20) {\n            return 'c20';\n        }\n        if (score > lookup.c10) {\n            return 'c10';\n        }\n        return 'failed';\n    };\n    const reducePreference = (preference) => {\n        switch (preference || 'auto') {\n            case 'auto': {\n                let inlineOption = reducePreference('inline');\n                let workerOption = reducePreference('worker');\n                logger === null || logger === void 0 ? void 0 : logger.debug(`Reducing auto preference: ${JSON.stringify(inlineOption)} vs ${JSON.stringify(workerOption)}`);\n                if (inlineOption.supported === false) {\n                    return workerOption;\n                }\n                if (workerOption.supported === false) {\n                    return workerOption;\n                }\n                if (inlineOption.variant === workerOption.variant || inlineOption.variant === 'c50') {\n                    return inlineOption;\n                }\n                return workerOption;\n            }\n            case 'worker': {\n                if (support_js_1.supportsSharedArrayBuffer(globalThis, window, logger)) {\n                    return reducePreference('worker-sab');\n                }\n                return reducePreference('worker-postMessage');\n            }\n            case 'inline': {\n                const variant = resolveVariant(inlineScore, variantPreference, thresholds.inline);\n                if (variant === 'failed') {\n                    return unsupported(`Performance score ${inlineScore} not sufficient for inline use with variant preference ${variantPreference}.`);\n                }\n                ;\n                return succeed('voicefocus-inline-processor', 'inline', variant);\n            }\n            case 'worker-sab': {\n                if (!supportsSAB) {\n                    const reason = 'Requested worker-sab but no SharedArrayBuffer support.';\n                    logger === null || logger === void 0 ? void 0 : logger.warn(reason);\n                    return { supported: false, reason };\n                }\n                const variant = resolveVariant(workerScore, variantPreference, thresholds.worker);\n                if (variant === 'failed') {\n                    return unsupported(`Performance score ${workerScore} not sufficient for worker use with variant preference ${variantPreference}.`);\n                }\n                ;\n                return succeed('voicefocus-worker-sab-processor', 'worker-sab', variant);\n            }\n            case 'worker-postMessage': {\n                const variant = resolveVariant(workerScore, variantPreference, thresholds.worker);\n                if (variant === 'failed') {\n                    return unsupported(`Performance score ${workerScore} not sufficient for worker use.`);\n                }\n                ;\n                if (name === 'ns_es') {\n                    const reason = 'Requested echo suppression but postMessage executor does not support it.';\n                    logger === null || logger === void 0 ? void 0 : logger.warn(reason);\n                    return { supported: false, reason };\n                }\n                ;\n                return succeed('voicefocus-worker-postMessage-processor', 'worker-postMessage', variant);\n            }\n        }\n    };\n    return reducePreference(executionPreference);\n};\nconst featureCheck = (forceSIMD, fetchConfig, logger, estimator) => __awaiter(void 0, void 0, void 0, function* () {\n    const supports = {\n        supportsSIMD: forceSIMD,\n        supportsSAB: support_js_1.supportsSharedArrayBuffer(globalThis, window, logger),\n        duration: -1,\n    };\n    if (forceSIMD) {\n        logger === null || logger === void 0 ? void 0 : logger.info('Supports SIMD: true (force)');\n        return supports;\n    }\n    const cleanup = !estimator;\n    const e = estimator || new Estimator(fetchConfig, logger);\n    try {\n        const useSIMD = !support_js_1.isOldChrome(window, logger) && (yield e.supportsSIMD());\n        logger === null || logger === void 0 ? void 0 : logger.info(`Supports SIMD: ${useSIMD} (force: ${forceSIMD})`);\n        supports.supportsSIMD = useSIMD;\n        return supports;\n    }\n    finally {\n        if (cleanup) {\n            e.stop();\n        }\n    }\n});\nconst estimateAndFeatureCheck = (forceSIMD, fetchConfig, estimatorBudget, logger) => __awaiter(void 0, void 0, void 0, function* () {\n    const estimator = new Estimator(fetchConfig, logger);\n    try {\n        const supports = yield featureCheck(forceSIMD, fetchConfig, logger, estimator);\n        if (supports.supportsSIMD) {\n            try {\n                supports.duration = yield estimator.measure(true, estimatorBudget);\n                logger === null || logger === void 0 ? void 0 : logger.info('SIMD timing:', supports.duration);\n                return supports;\n            }\n            catch (e) {\n                logger === null || logger === void 0 ? void 0 : logger.warn('Failed SIMD estimation; falling back to non-SIMD.');\n                supports.supportsSIMD = false;\n            }\n        }\n        supports.duration = yield estimator.measure(false, estimatorBudget);\n        logger === null || logger === void 0 ? void 0 : logger.info('No-SIMD timing:', supports.duration);\n        return supports;\n    }\n    catch (e) {\n        logger === null || logger === void 0 ? void 0 : logger.error('Could not feature check.', e);\n        throw e;\n    }\n    finally {\n        estimator.stop();\n    }\n});\nconst measureAndDecideExecutionApproach = (spec, fetchConfig, logger, thresholds = PERFORMANCE_THRESHOLDS) => __awaiter(void 0, void 0, void 0, function* () {\n    let executionPreference = spec.executionPreference;\n    const { usagePreference, variantPreference, namePreference, simdPreference, estimatorBudget, executionQuantaPreference, } = spec;\n    if (usagePreference === 'interactivity' && executionPreference !== 'inline') {\n        logger === null || logger === void 0 ? void 0 : logger.debug(`Overriding execution preference ${executionPreference} to reflect interactivity preference.`);\n        executionPreference = 'inline';\n    }\n    const forceSIMD = simdPreference === 'force';\n    const knownModel = variantPreference !== 'auto';\n    const knownExecution = executionPreference !== 'auto';\n    let supports;\n    try {\n        if (knownModel && knownExecution) {\n            supports = yield featureCheck(forceSIMD, fetchConfig, logger);\n        }\n        else {\n            supports = yield estimateAndFeatureCheck(forceSIMD, fetchConfig, estimatorBudget, logger);\n        }\n    }\n    catch (e) {\n        logger === null || logger === void 0 ? void 0 : logger.error('Could not load estimator.', e);\n        throw new Error('Could not load Voice Focus estimator.');\n    }\n    return decideExecutionApproach(Object.assign(Object.assign({}, supports), { simdPreference,\n        executionPreference,\n        variantPreference,\n        namePreference,\n        usagePreference,\n        executionQuantaPreference }), thresholds, logger);\n});\nexports.measureAndDecideExecutionApproach = measureAndDecideExecutionApproach;\nconst decideModel = ({ category, name, variant, simd, url }) => {\n    return `${category}-${name}-${variant}-v1${simd ? '_simd' : ''}`;\n};\nexports.decideModel = decideModel;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VoiceFocusAudioWorkletNode = void 0;\nclass VoiceFocusAudioWorkletNode extends ((typeof globalThis !== 'undefined' && globalThis['AudioWorkletNode']) ||\n    class Sadness {\n    }) {\n}\nexports.VoiceFocusAudioWorkletNode = VoiceFocusAudioWorkletNode;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst support_js_1 = require(\"./support.js\");\nconst types_js_1 = require(\"./types.js\");\nconst CPU_WARNING_MAX_INTERVAL_MS = 5 * 1000;\nclass VoiceFocusInlineNode extends types_js_1.VoiceFocusAudioWorkletNode {\n    constructor(context, options) {\n        super(context, options.processor, options);\n        this.cpuWarningCount = 0;\n        this.channelCountMode = 'explicit';\n        this.channelCount = 1;\n        const { modelURL, worker, fetchBehavior, logger, delegate, } = options;\n        this.logger = logger;\n        this.port.onmessage = this.onProcessorMessage.bind(this);\n        this.delegate = delegate;\n        if (logger)\n            logger.debug('VoiceFocusInlineNode:', modelURL);\n        this.worker = worker;\n        this.worker.onmessage = this.onWorkerMessage.bind(this);\n        const message = support_js_1.supportsWASMPostMessage(globalThis) ? 'get-module' : 'get-module-buffer';\n        this.worker.postMessage({\n            message,\n            key: 'model',\n            fetchBehavior,\n            path: modelURL,\n        });\n    }\n    onModuleBufferLoaded(buffer, key) {\n        this.port.postMessage({ message: 'module-buffer', buffer, key });\n    }\n    onModuleLoaded(module, key) {\n        this.port.postMessage({ message: 'module', module, key });\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.port.postMessage({ message: 'enable' });\n        });\n    }\n    disable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.port.postMessage({ message: 'disable' });\n        });\n    }\n    stop() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            this.port.postMessage({ message: 'stop' });\n            try {\n                (_a = this.worker) === null || _a === void 0 ? void 0 : _a.terminate();\n            }\n            catch (e) {\n                console.error(\"failed to terminate worker:\", e);\n            }\n            this.disconnect();\n        });\n    }\n    onProcessorMessage(event) {\n        var _a, _b, _c;\n        const data = event.data;\n        switch (data.message) {\n            case 'cpu':\n                this.cpuWarningCount++;\n                const now = Date.now();\n                const before = this.cpuWarningLastTriggered || now;\n                const diff = Math.abs(now - before);\n                if (!this.cpuWarningLastTriggered || diff > CPU_WARNING_MAX_INTERVAL_MS) {\n                    (_a = this.logger) === null || _a === void 0 ? void 0 : _a.warn(`CPU warning (count: ${this.cpuWarningCount}):`, data.message);\n                    this.cpuWarningCount = 0;\n                    this.cpuWarningLastTriggered = now;\n                }\n                (_b = this.delegate) === null || _b === void 0 ? void 0 : _b.onCPUWarning();\n                break;\n            default:\n                (_c = this.logger) === null || _c === void 0 ? void 0 : _c.debug('Ignoring processor message.');\n        }\n    }\n    onWorkerMessage(event) {\n        const data = event.data;\n        switch (data.message) {\n            case 'module-buffer':\n                if (!data.buffer || !data.key) {\n                    return;\n                }\n                this.onModuleBufferLoaded(data.buffer, data.key);\n                break;\n            case 'module':\n                if (!data.module || !data.key) {\n                    return;\n                }\n                this.onModuleLoaded(data.module, data.key);\n                break;\n            case 'stopped':\n                if (this.worker) {\n                    this.worker.terminate();\n                }\n                break;\n            default:\n                return;\n        }\n    }\n}\nexports.default = VoiceFocusInlineNode;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst support_js_1 = require(\"./support.js\");\nconst types_js_1 = require(\"./types.js\");\nconst INDICES = {\n    ready: 0,\n    enabled: 1,\n};\nconst STATES = {\n    disabled: 0,\n    enabled: 1,\n    stopped: 2,\n};\nclass VoiceFocusWorkerBufferNode extends types_js_1.VoiceFocusAudioWorkletNode {\n    constructor(context, options) {\n        super(context, options.processor, options);\n        this.channelCountMode = 'explicit';\n        this.channelCount = 1;\n        const { modelURL, resamplerURL, worker, fetchBehavior, delegate, } = options;\n        this.delegate = delegate;\n        this.worker = worker;\n        this.worker.onmessage = this.onWorkerMessage.bind(this);\n        this.port.onmessage = this.onProcessorMessage.bind(this);\n        const { enabled, supportFarendStream } = options.processorOptions;\n        this.worker.postMessage({\n            message: 'init',\n            approach: 'sab',\n            frames: context.sampleRate === 16000 ? 160 : 480,\n            enabled,\n            model: modelURL,\n            supportFarendStream,\n        });\n        const message = support_js_1.supportsWASMPostMessage(globalThis) ? 'get-module' : 'get-module-buffer';\n        this.worker.postMessage({\n            message,\n            key: 'resampler',\n            fetchBehavior,\n            path: resamplerURL,\n        });\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state) {\n                Atomics.store(this.state, INDICES.enabled, STATES.enabled);\n                Atomics.notify(this.state, INDICES.ready, 1);\n            }\n            else {\n                this.worker.postMessage({ message: 'enable' });\n            }\n        });\n    }\n    disable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state) {\n                Atomics.store(this.state, INDICES.enabled, STATES.disabled);\n                Atomics.notify(this.state, INDICES.ready, 1);\n            }\n            else {\n                this.worker.postMessage({ message: 'disable' });\n            }\n        });\n    }\n    stop() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state) {\n                Atomics.store(this.state, INDICES.enabled, STATES.stopped);\n                Atomics.notify(this.state, INDICES.ready, 1);\n            }\n            else {\n                try {\n                    this.worker.postMessage({ message: 'stop' });\n                }\n                catch (e) {\n                }\n            }\n            this.disconnect();\n        });\n    }\n    onWorkerMessage(event) {\n        var _a;\n        const data = event.data;\n        switch (data.message) {\n            case 'ready':\n                if (!data.shared) {\n                    throw new Error('No shared state.');\n                }\n                this.state = new Int32Array(data.shared.state);\n                this.port.postMessage(data);\n                break;\n            case 'stopped':\n                this.worker.terminate();\n                break;\n            case 'module-buffer':\n            case 'module':\n                this.port.postMessage(data);\n                break;\n            case 'cpu':\n                (_a = this.delegate) === null || _a === void 0 ? void 0 : _a.onCPUWarning();\n                break;\n            case 'processing':\n                this.port.postMessage(data);\n                break;\n            default:\n                return;\n        }\n    }\n    onProcessorMessage(event) {\n        var _a;\n        const data = event.data;\n        switch (data.message) {\n            case 'cpu':\n                (_a = this.delegate) === null || _a === void 0 ? void 0 : _a.onCPUWarning();\n                break;\n            case 'prepare-for-frames':\n                this.worker.postMessage(data);\n                break;\n            default:\n        }\n    }\n}\nexports.default = VoiceFocusWorkerBufferNode;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst support_js_1 = require(\"./support.js\");\nconst types_js_1 = require(\"./types.js\");\nclass VoiceFocusWorkerPostMessageNode extends types_js_1.VoiceFocusAudioWorkletNode {\n    constructor(context, options) {\n        super(context, options.processor, options);\n        this.channelCountMode = 'explicit';\n        this.channelCount = 1;\n        const { modelURL, audioBufferURL, worker, fetchBehavior, delegate, } = options;\n        this.delegate = delegate;\n        this.worker = worker;\n        this.worker.onmessage = this.onWorkerMessage.bind(this);\n        this.port.onmessage = this.onProcessorMessage.bind(this);\n        const { enabled, agc, supportFarendStream } = options.processorOptions;\n        this.worker.postMessage({\n            message: 'init',\n            approach: 'postMessage',\n            frames: context.sampleRate === 16000 ? 160 : 480,\n            enabled,\n            agc,\n            fetchBehavior,\n            model: modelURL,\n            supportFarendStream,\n        });\n        const message = support_js_1.supportsWASMPostMessage(globalThis) ? 'get-module' : 'get-module-buffer';\n        this.worker.postMessage({\n            message,\n            key: 'buffer',\n            fetchBehavior,\n            path: audioBufferURL,\n        });\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.worker.postMessage({ message: 'enable' });\n        });\n    }\n    disable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.worker.postMessage({ message: 'disable' });\n        });\n    }\n    stop() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.worker.postMessage({ message: 'stop' });\n            }\n            catch (e) {\n            }\n            this.disconnect();\n        });\n    }\n    onWorkerMessage(event) {\n        var _a;\n        const data = event.data;\n        switch (data.message) {\n            case 'ready':\n                this.port.postMessage({ message: 'ready', shared: data.shared }, data.shared ? Object.values(data.shared) : []);\n                break;\n            case 'data':\n                if (!data.buffer) {\n                    return;\n                }\n                this.port.postMessage({ message: 'data', buffer: data.buffer }, [data.buffer]);\n                break;\n            case 'stopped':\n                this.worker.terminate();\n                break;\n            case 'module-buffer':\n            case 'module':\n                this.port.postMessage(data);\n                break;\n            case 'cpu':\n                (_a = this.delegate) === null || _a === void 0 ? void 0 : _a.onCPUWarning();\n                break;\n            case 'processing':\n                this.port.postMessage(data);\n                break;\n            default:\n                return;\n        }\n    }\n    onProcessorMessage(event) {\n        var _a;\n        const data = event.data;\n        switch (data.message) {\n            case 'data':\n                if (!data.buffer) {\n                    return;\n                }\n                this.worker.postMessage({ message: 'data', buffer: data.buffer }, [data.buffer]);\n                break;\n            case 'cpu':\n                (_a = this.delegate) === null || _a === void 0 ? void 0 : _a.onCPUWarning();\n                break;\n            case 'prepare-for-frames':\n                this.worker.postMessage(data);\n                break;\n            default:\n                return;\n        }\n    }\n}\nexports.default = VoiceFocusWorkerPostMessageNode;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAudioInput = exports.createAudioContext = exports.VoiceFocus = void 0;\nconst decider_js_1 = require(\"./decider.js\");\nconst fetch_js_1 = require(\"./fetch.js\");\nconst loader_js_1 = require(\"./loader.js\");\nconst support_js_1 = require(\"./support.js\");\nconst worklet_inline_node_js_1 = require(\"./worklet-inline-node.js\");\nconst worklet_worker_sab_node_js_1 = require(\"./worklet-worker-sab-node.js\");\nconst worklet_worker_postMessage_node_js_1 = require(\"./worklet-worker-postMessage-node.js\");\nconst DEFAULT_AGC_DISABLED_SETTING = {\n    useVoiceFocusAGC: false,\n    useBuiltInAGC: true,\n};\nconst DEFAULT_AGC_SETTING = DEFAULT_AGC_DISABLED_SETTING;\nconst DEFAULT_ASSET_GROUP = 'stable-v1';\nconst DEFAULT_CDN = 'https://static.sdkassets.chime.aws';\nconst DEFAULT_PATHS = {\n    processors: `${DEFAULT_CDN}/processors/`,\n    workers: `${DEFAULT_CDN}/workers/`,\n    wasm: `${DEFAULT_CDN}/wasm/`,\n    models: `${DEFAULT_CDN}/wasm/`,\n};\nconst DEFAULT_CONTEXT_HINT = {\n    latencyHint: 0,\n};\nconst BASE_AUDIO_CONSTRAINTS = {\n    channelCount: 1,\n    echoCancellation: true,\n    googEchoCancellation: true,\n    noiseSuppression: false,\n    googNoiseSuppression: false,\n    googHighpassFilter: false,\n    googTypingNoiseDetection: false,\n};\nconst DEFAULT_AUDIO_CONSTRAINTS_WITH_BUILTIN_AGC = Object.assign(Object.assign({}, BASE_AUDIO_CONSTRAINTS), { autoGainControl: true, googAutoGainControl: true, googAutoGainControl2: true });\nconst DEFAULT_AUDIO_CONSTRAINTS_WITHOUT_BUILTIN_AGC = Object.assign(Object.assign({}, BASE_AUDIO_CONSTRAINTS), { autoGainControl: false, googAutoGainControl: false, googAutoGainControl2: false });\nconst PROCESSORS = {\n    'voicefocus-worker-sab-processor': {\n        file: 'worklet-worker-sab-processor-v1.js',\n        node: worklet_worker_sab_node_js_1.default,\n    },\n    'voicefocus-worker-postMessage-processor': {\n        file: 'worklet-worker-postMessage-processor-v1.js',\n        node: worklet_worker_postMessage_node_js_1.default,\n    },\n    'voicefocus-inline-processor': {\n        file: 'worklet-inline-processor-v1.js',\n        node: worklet_inline_node_js_1.default,\n    },\n};\nconst validateAssetSpec = (assetGroup, revisionID) => {\n    if (assetGroup !== undefined && !fetch_js_1.isValidAssetGroup(assetGroup)) {\n        throw new Error(`Invalid asset group ${assetGroup}`);\n    }\n    if (revisionID !== undefined && !fetch_js_1.isValidRevisionID(revisionID)) {\n        throw new Error(`Invalid revision ID ${revisionID}`);\n    }\n};\nconst mungeConstraints = (constraints, agc) => {\n    let defaultConstraints;\n    if (agc.useBuiltInAGC) {\n        defaultConstraints = DEFAULT_AUDIO_CONSTRAINTS_WITH_BUILTIN_AGC;\n    }\n    else {\n        defaultConstraints = DEFAULT_AUDIO_CONSTRAINTS_WITHOUT_BUILTIN_AGC;\n    }\n    if (!constraints) {\n        return { audio: defaultConstraints };\n    }\n    if (!constraints.audio) {\n        return constraints;\n    }\n    if (constraints.video) {\n        throw new Error('Not adding Voice Focus to multi-device getUserMedia call.');\n    }\n    return Object.assign(Object.assign({}, constraints), { audio: constraints.audio === true ? defaultConstraints : Object.assign(Object.assign({}, constraints.audio), defaultConstraints) });\n};\nconst urlForModel = (model, paths) => {\n    return `${paths.models}${decider_js_1.decideModel(model)}.wasm`;\n};\nclass VoiceFocus {\n    constructor(worker, processorURL, nodeConstructor, nodeOptions, executionQuanta) {\n        this.processorURL = processorURL;\n        this.nodeConstructor = nodeConstructor;\n        this.nodeOptions = nodeOptions;\n        this.executionQuanta = executionQuanta;\n        this.internal = {\n            worker,\n            nodeOptions,\n            isDestroyed: false,\n        };\n    }\n    static isSupported(spec, options) {\n        const { fetchBehavior, logger } = options || {};\n        if (typeof globalThis === 'undefined') {\n            logger === null || logger === void 0 ? void 0 : logger.debug('Browser does not have globalThis.');\n            return Promise.resolve(false);\n        }\n        if (!support_js_1.supportsAudioWorklet(globalThis, logger)) {\n            logger === null || logger === void 0 ? void 0 : logger.debug('Browser does not support Audio Worklet.');\n            return Promise.resolve(false);\n        }\n        if (!support_js_1.supportsWASM(globalThis, logger)) {\n            logger === null || logger === void 0 ? void 0 : logger.debug('Browser does not support WASM.');\n            return Promise.resolve(false);\n        }\n        if (!support_js_1.supportsWASMStreaming(globalThis, logger)) {\n            logger === null || logger === void 0 ? void 0 : logger.debug('Browser does not support streaming WASM compilation.');\n        }\n        const { assetGroup = DEFAULT_ASSET_GROUP, revisionID, paths = DEFAULT_PATHS, } = spec || {};\n        validateAssetSpec(assetGroup, revisionID);\n        const assetConfig = revisionID ? { revisionID } : { assetGroup };\n        const updatedFetchBehavior = fetch_js_1.addQueryParams(fetchBehavior, assetConfig);\n        const fetchConfig = Object.assign(Object.assign({}, updatedFetchBehavior), { paths });\n        return support_js_1.supportsVoiceFocusWorker(globalThis, fetchConfig, logger);\n    }\n    static mungeExecutionPreference(preference, logger) {\n        const isAuto = (preference === undefined || preference === 'auto');\n        if (support_js_1.isSafari(globalThis)) {\n            if (isAuto || preference === 'inline') {\n                return 'inline';\n            }\n            if (!isAuto) {\n                throw new Error(`Unsupported execution preference ${preference}`);\n            }\n        }\n        if (preference === 'worker-sab' && !support_js_1.supportsSharedArrayBuffer(globalThis, globalThis, logger)) {\n            throw new Error(`Unsupported execution preference ${preference}`);\n        }\n        return preference || 'auto';\n    }\n    static configure(spec, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { fetchBehavior, preResolve, logger, } = options || {};\n            const { category = 'voicefocus', name = 'default', variant: variantPreference = 'auto', assetGroup = DEFAULT_ASSET_GROUP, revisionID, simd = 'detect', executionPreference = 'auto', executionQuantaPreference, usagePreference = 'interactivity', estimatorBudget = 100, paths = DEFAULT_PATHS, thresholds, } = spec || {};\n            logger === null || logger === void 0 ? void 0 : logger.debug('Configuring Voice Focus with spec', spec);\n            if (category !== undefined && category !== 'voicefocus') {\n                throw new Error(`Unrecognized category ${category}`);\n            }\n            if (name !== undefined && name !== 'default' && name !== 'ns_es') {\n                throw new Error(`Unrecognized feature name ${name}`);\n            }\n            if (variantPreference !== undefined && !['auto', 'c100', 'c50', 'c20', 'c10'].includes(variantPreference)) {\n                throw new Error(`Unrecognized feature variant ${variantPreference}`);\n            }\n            if (executionQuantaPreference !== undefined && ![1, 2, 3].includes(executionQuantaPreference)) {\n                throw new Error(`Unrecognized execution quanta preference ${executionQuantaPreference}`);\n            }\n            validateAssetSpec(assetGroup, revisionID);\n            if (simd !== undefined && !['detect', 'force', 'disable'].includes(simd)) {\n                throw new Error(`Unrecognized SIMD option ${simd}`);\n            }\n            if (executionPreference !== undefined && !['auto', 'inline', 'worker', 'worker-sab', 'worker-postMessage'].includes(executionPreference)) {\n                throw new Error(`Unrecognized execution preference ${executionPreference}`);\n            }\n            if (usagePreference !== undefined && !['quality', 'interactivity'].includes(usagePreference)) {\n                throw new Error(`Unrecognized usage preference ${usagePreference}`);\n            }\n            const executionSpec = {\n                executionPreference: this.mungeExecutionPreference(executionPreference, logger),\n                usagePreference,\n                executionQuantaPreference,\n                variantPreference,\n                namePreference: name,\n                simdPreference: simd,\n                estimatorBudget,\n            };\n            const assetConfig = revisionID ? { revisionID } : { assetGroup };\n            const updatedFetchBehavior = fetch_js_1.addQueryParams(fetchBehavior, assetConfig);\n            const fetchConfig = Object.assign({ paths }, updatedFetchBehavior);\n            const executionDefinition = yield decider_js_1.measureAndDecideExecutionApproach(executionSpec, fetchConfig, logger, thresholds);\n            if (executionDefinition.supported === false) {\n                return { supported: false, reason: executionDefinition.reason };\n            }\n            logger === null || logger === void 0 ? void 0 : logger.info('Decided execution approach', executionDefinition);\n            const { useSIMD, processor, variant, executionQuanta } = executionDefinition;\n            const model = {\n                category: category || 'voicefocus',\n                name: name || 'default',\n                variant,\n                simd: useSIMD,\n            };\n            if (preResolve) {\n                const startingURL = urlForModel(model, paths);\n                model.url = yield fetch_js_1.resolveURL(startingURL, updatedFetchBehavior);\n            }\n            return {\n                fetchConfig,\n                model,\n                processor,\n                executionQuanta,\n                supported: true,\n            };\n        });\n    }\n    static init(configuration, { delegate, preload = true, logger, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (configuration.supported === false) {\n                throw new Error('Voice Focus not supported. Reason: ' + configuration.reason);\n            }\n            const { model, processor, fetchConfig, executionQuanta, } = configuration;\n            const { simd, name } = model;\n            const { paths } = fetchConfig;\n            if (processor !== 'voicefocus-inline-processor' &&\n                processor !== 'voicefocus-worker-postMessage-processor' &&\n                processor !== 'voicefocus-worker-sab-processor') {\n                throw new Error(`Unknown processor ${processor}`);\n            }\n            const modelURL = model.url || urlForModel(model, paths);\n            logger === null || logger === void 0 ? void 0 : logger.debug(`Using model URL ${modelURL}.`);\n            const audioBufferURL = `${paths.wasm}audio_buffer-v1${simd ? '_simd' : ''}.wasm`;\n            const resamplerURL = `${paths.wasm}resampler-v1${simd ? '_simd' : ''}.wasm`;\n            const workerURL = `${paths.workers}worker-v1.js`;\n            const { file, node } = PROCESSORS[processor];\n            const processorURL = `${paths.processors}${file}`;\n            const worker = yield loader_js_1.loadWorker(workerURL, 'VoiceFocusWorker', fetchConfig, logger);\n            if (preload) {\n                logger === null || logger === void 0 ? void 0 : logger.debug('Preloading', modelURL);\n                let message = support_js_1.supportsWASMPostMessage(globalThis) ? 'get-module' : 'get-module-buffer';\n                worker.postMessage({\n                    message,\n                    preload: true,\n                    key: 'model',\n                    fetchBehavior: fetchConfig,\n                    path: modelURL,\n                });\n            }\n            const numberOfInputs = (name === 'ns_es') ? 2 : 1;\n            const nodeOptions = {\n                processor,\n                worker,\n                audioBufferURL,\n                resamplerURL,\n                fetchBehavior: fetchConfig,\n                modelURL,\n                delegate,\n                logger,\n                numberOfInputs,\n            };\n            const factory = new VoiceFocus(worker, processorURL, node, nodeOptions, executionQuanta);\n            return Promise.resolve(factory);\n        });\n    }\n    createNode(context, options) {\n        var _a;\n        if (this.internal.isDestroyed) {\n            throw new Error('Unable to create node because VoiceFocus worker has been destroyed.');\n        }\n        const { voiceFocusSampleRate = (context.sampleRate === 16000 ? 16000 : 48000), enabled = true, agc = DEFAULT_AGC_SETTING, } = options || {};\n        const supportFarendStream = options === null || options === void 0 ? void 0 : options.es;\n        const processorOptions = {\n            voiceFocusSampleRate,\n            enabled,\n            sendBufferCount: 10,\n            prefill: 6,\n            agc,\n            executionQuanta: this.executionQuanta,\n            supportFarendStream,\n        };\n        const url = fetch_js_1.withQueryString(this.processorURL, (_a = this.nodeOptions) === null || _a === void 0 ? void 0 : _a.fetchBehavior);\n        return context.audioWorklet\n            .addModule(url)\n            .then(() => new (this.nodeConstructor)(context, Object.assign(Object.assign({}, this.nodeOptions), { processorOptions })));\n    }\n    applyToStream(stream, context, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.internal.isDestroyed) {\n                throw new Error(\"Unable to apply stream because VoiceFocus worker has been destroyed\");\n            }\n            const source = context.createMediaStreamSource(stream);\n            const node = yield this.applyToSourceNode(source, context, options);\n            const destination = context.createMediaStreamDestination();\n            node.connect(destination);\n            return {\n                node,\n                source,\n                destination,\n                stream: destination.stream,\n            };\n        });\n    }\n    applyToSourceNode(source, context, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const node = yield this.createNode(context, options);\n            source.connect(node);\n            return node;\n        });\n    }\n    destroy() {\n        if (this.internal.worker) {\n            this.internal.worker.terminate();\n        }\n        this.internal.isDestroyed = true;\n    }\n}\nexports.VoiceFocus = VoiceFocus;\nconst createAudioContext = (contextHint = DEFAULT_CONTEXT_HINT) => {\n    return new (window.AudioContext || window.webkitAudioContext)(contextHint);\n};\nexports.createAudioContext = createAudioContext;\nconst getAudioInput = (context, inputOptions, voiceFocusOptions) => __awaiter(void 0, void 0, void 0, function* () {\n    var _a, _b;\n    const { constraints, spec, delegate, preload = true, options } = inputOptions;\n    const { logger } = voiceFocusOptions;\n    const config = yield VoiceFocus.configure(spec, voiceFocusOptions);\n    if (!config.supported) {\n        (_a = voiceFocusOptions.logger) === null || _a === void 0 ? void 0 : _a.warn('Voice Focus not supported; returning standard stream.');\n        return window.navigator.mediaDevices.getUserMedia(constraints);\n    }\n    const factory = yield VoiceFocus.init(config, { delegate, preload, logger });\n    const agc = ((_b = inputOptions.options) === null || _b === void 0 ? void 0 : _b.agc) || DEFAULT_AGC_SETTING;\n    const input = yield window.navigator.mediaDevices.getUserMedia(mungeConstraints(constraints, agc));\n    return factory.applyToStream(input, context, options).then(result => result.stream);\n});\nexports.getAudioInput = getAudioInput;\n","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @internal */\nfunction stringify(args) {\n    return args\n        .map((v) => {\n        if (typeof v === 'object') {\n            return JSON.stringify(v);\n        }\n        return `${v}`;\n    })\n        .join(' ');\n}\n/** @internal */\nclass LoggerAdapter {\n    constructor(base) {\n        this.base = base;\n    }\n    debug(...args) {\n        this.base.debug(stringify(args));\n    }\n    info(...args) {\n        this.base.info(stringify(args));\n    }\n    warn(...args) {\n        this.base.warn(stringify(args));\n    }\n    error(...args) {\n        this.base.error(stringify(args));\n    }\n}\nexports.default = LoggerAdapter;\n//# sourceMappingURL=LoggerAdapter.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\n/**\n * A device that augments a {@link Device} to apply Amazon Voice Focus\n * noise suppression to an audio input.\n */\nclass VoiceFocusTransformDevice {\n    /** @internal */\n    constructor(device, voiceFocus, delegate, nodeOptions, failed = false, node = undefined, browserBehavior = new DefaultBrowserBehavior_1.default(), \n    /** farEndStreams` maps from a stream that could cause echo or interfere with double talkto an `AudioSourceNode` that we use to mix multiple such streams.*/\n    farEndStreamToAudioSourceNode = new Map(), \n    /** mixDestNode is the Audio Destination Node where farEndStreams got mixed into one stream.*/\n    mixDestNode = undefined, \n    /** mixSourceNode is the Audio Source Node where the stream out of mixDestNode got transferred into Audio Worklet Node for processing.*/\n    mixSourceNode = undefined) {\n        this.device = device;\n        this.voiceFocus = voiceFocus;\n        this.delegate = delegate;\n        this.nodeOptions = nodeOptions;\n        this.failed = failed;\n        this.node = node;\n        this.browserBehavior = browserBehavior;\n        this.farEndStreamToAudioSourceNode = farEndStreamToAudioSourceNode;\n        this.mixDestNode = mixDestNode;\n        this.mixSourceNode = mixSourceNode;\n    }\n    /**\n     * Return the inner device as provided during construction, or updated via\n     * {@link VoiceFocusTransformDevice.chooseNewInnerDevice}. Do not confuse\n     * this method with {@link VoiceFocusTransformDevice.intrinsicDevice}.\n     */\n    getInnerDevice() {\n        return this.device;\n    }\n    /**\n     * Disable the audio node while muted to reduce CPU usage.\n     *\n     * @param muted whether the audio device should be muted.\n     */\n    mute(muted) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.node) {\n                return;\n            }\n            if (muted) {\n                yield this.node.disable();\n            }\n            else {\n                yield this.node.enable();\n            }\n        });\n    }\n    /**\n     * Dispose of the inner workings of the transform device. After this method is called\n     * you will need to create a new device to use Amazon Voice Focus again.\n     */\n    stop() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.node) {\n                return;\n            }\n            this.node.disconnect();\n            yield this.node.stop();\n        });\n    }\n    /**\n     * If you wish to choose a different inner device, but continue to use Amazon Voice Focus, you\n     * can use this method to efficiently create a new device that will reuse\n     * the same internal state. Only one of the two devices can be used at a time: switch\n     * between them using {@link DeviceController.startAudioInput}.\n     *\n     * If the same device is passed as is currently in use, `this` is returned.\n     *\n     * @param inner The new inner device to use.\n     */\n    chooseNewInnerDevice(inner) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // If the new device is 'default', always recreate. Chrome can switch out\n            // the real device underneath us.\n            if (this.device === inner && !isDefaultDevice(inner)) {\n                return this;\n            }\n            return new VoiceFocusTransformDevice(inner, this.voiceFocus, this.delegate, this.nodeOptions, this.failed, this.node, this.browserBehavior, this.farEndStreamToAudioSourceNode, this.mixDestNode, this.mixSourceNode);\n        });\n    }\n    intrinsicDevice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.failed) {\n                return this.device;\n            }\n            const isUsingES = this.nodeOptions.es;\n            // Turn the Device into constraints with appropriate AGC settings.\n            const trackConstraints = {\n                echoCancellation: !isUsingES,\n                // @ts-ignore\n                googEchoCancellation: !isUsingES,\n                // @ts-ignore\n                googEchoCancellation2: !isUsingES,\n                noiseSuppression: false,\n                // @ts-ignore\n                googNoiseSuppression: false,\n                // @ts-ignore\n                googHighpassFilter: false,\n                // @ts-ignore\n                googNoiseSuppression2: false,\n            };\n            let useBuiltInAGC;\n            if (this.nodeOptions && this.nodeOptions.agc !== undefined) {\n                useBuiltInAGC = this.nodeOptions.agc.useBuiltInAGC;\n            }\n            else {\n                useBuiltInAGC = true;\n            }\n            trackConstraints.autoGainControl = useBuiltInAGC;\n            // @ts-ignore\n            trackConstraints.googAutoGainControl = useBuiltInAGC;\n            // @ts-ignore\n            trackConstraints.googAutoGainControl2 = useBuiltInAGC;\n            // Empty string and null.\n            if (!this.device) {\n                return trackConstraints;\n            }\n            // Device ID.\n            if (typeof this.device === 'string') {\n                /* istanbul ignore if */\n                if (this.browserBehavior.requiresNoExactMediaStreamConstraints()) {\n                    trackConstraints.deviceId = this.device;\n                }\n                else {\n                    trackConstraints.deviceId = { exact: this.device };\n                }\n                return trackConstraints;\n            }\n            // It's a stream.\n            if (this.device.id) {\n                // Nothing we can do.\n                return this.device;\n            }\n            // It's constraints.\n            return Object.assign(Object.assign({}, this.device), trackConstraints);\n        });\n    }\n    createAudioNode(context) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (((_a = this.node) === null || _a === void 0 ? void 0 : _a.context) === context) {\n                return {\n                    start: this.node,\n                    end: this.node,\n                };\n            }\n            const agc = { useVoiceFocusAGC: false };\n            const options = Object.assign({ enabled: true, agc }, this.nodeOptions);\n            try {\n                (_b = this.node) === null || _b === void 0 ? void 0 : _b.disconnect();\n                this.node = yield this.voiceFocus.createNode(context, options);\n                if (this.nodeOptions.es) {\n                    this.mixDestNode = new MediaStreamAudioDestinationNode(context, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                    });\n                    for (const stream of this.farEndStreamToAudioSourceNode.keys()) {\n                        this.assignFarEndStreamToAudioSourceNode(stream);\n                    }\n                    this.createMixSourceNode();\n                }\n                const start = this.node;\n                const end = this.node;\n                return { start, end };\n            }\n            catch (e) {\n                // It's better to return some audio stream than nothing.\n                this.failed = true;\n                this.delegate.onFallback(this, e);\n                throw e;\n            }\n        });\n    }\n    observeMeetingAudio(audioVideo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.nodeOptions.es) {\n                return;\n            }\n            audioVideo.addAudioMixObserver(this);\n            const stream = yield audioVideo.getCurrentMeetingAudioStream();\n            if (stream) {\n                this.addFarEndStream(stream);\n            }\n        });\n    }\n    unObserveMeetingAudio(audioVideo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.nodeOptions.es) {\n                return;\n            }\n            audioVideo.removeAudioMixObserver(this);\n            const stream = yield audioVideo.getCurrentMeetingAudioStream();\n            if (stream) {\n                this.removeFarendStream(stream);\n            }\n        });\n    }\n    /**\n     * Add an observer to receive notifications about Amazon Voice Focus lifecycle events.\n     * See {@link VoiceFocusTransformDeviceObserver} for details.\n     * If the observer has already been added, this method call has no effect.\n     */\n    addObserver(observer) {\n        this.delegate.addObserver(observer);\n    }\n    /**\n     * Remove an existing observer. If the observer has not been previously {@link\n     * VoiceFocusTransformDevice.addObserver|added}, this method call has no effect.\n     */\n    removeObserver(observer) {\n        this.delegate.removeObserver(observer);\n    }\n    addFarEndStream(activeStream) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.nodeOptions.es ||\n                !activeStream ||\n                this.farEndStreamToAudioSourceNode.has(activeStream)) {\n                return;\n            }\n            if (this.node) {\n                this.assignFarEndStreamToAudioSourceNode(activeStream);\n            }\n            else {\n                this.farEndStreamToAudioSourceNode.set(activeStream, null);\n            }\n        });\n    }\n    removeFarendStream(inactiveStream) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            (_a = this.farEndStreamToAudioSourceNode.get(inactiveStream)) === null || _a === void 0 ? void 0 : _a.disconnect();\n            this.farEndStreamToAudioSourceNode.delete(inactiveStream);\n        });\n    }\n    meetingAudioStreamBecameActive(activeStream) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.addFarEndStream(activeStream);\n        });\n    }\n    meetingAudioStreamBecameInactive(inactiveStream) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.removeFarendStream(inactiveStream);\n        });\n    }\n    assignFarEndStreamToAudioSourceNode(streamToAdd) {\n        const streamNodeToAdd = this.node.context.createMediaStreamSource(streamToAdd);\n        streamNodeToAdd.channelCount = 1;\n        streamNodeToAdd.channelCountMode = 'explicit';\n        this.farEndStreamToAudioSourceNode.set(streamToAdd, streamNodeToAdd);\n        streamNodeToAdd.connect(this.mixDestNode, 0);\n    }\n    createMixSourceNode() {\n        this.mixSourceNode = this.node.context.createMediaStreamSource(this.mixDestNode.stream);\n        this.mixSourceNode.channelCount = 1;\n        this.mixSourceNode.channelCountMode = 'explicit';\n        this.mixSourceNode.connect(this.node, 0, 1);\n    }\n}\nfunction isDefaultDevice(device) {\n    if (device === 'default') {\n        return true;\n    }\n    if (!device || typeof device !== 'object') {\n        return false;\n    }\n    if ('deviceId' in device && device.deviceId === 'default') {\n        return true;\n    }\n    if ('id' in device && device.id === 'default') {\n        return true;\n    }\n    return false;\n}\nexports.default = VoiceFocusTransformDevice;\n//# sourceMappingURL=VoiceFocusTransformDevice.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @internal */\nclass VoiceFocusTransformDeviceDelegate {\n    constructor() {\n        this.observers = new Set();\n    }\n    addObserver(observer) {\n        this.observers.add(observer);\n    }\n    removeObserver(observer) {\n        this.observers.delete(observer);\n    }\n    /** @internal */\n    onFallback(device, e) {\n        var _a;\n        for (const observer of this.observers) {\n            (_a = observer.voiceFocusFellBackToInnerStream) === null || _a === void 0 ? void 0 : _a.call(observer, device, e);\n        }\n    }\n    onCPUWarning() {\n        var _a;\n        for (const observer of this.observers) {\n            (_a = observer.voiceFocusInsufficientResources) === null || _a === void 0 ? void 0 : _a.call(observer);\n        }\n    }\n}\nexports.default = VoiceFocusTransformDeviceDelegate;\n//# sourceMappingURL=VoiceFocusTransformDeviceDelegate.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VoiceFocusDeviceTransformer = void 0;\nconst voicefocus_1 = require(\"../../libs/voicefocus/voicefocus\");\nconst Utils_1 = require(\"../utils/Utils\");\nconst Versioning_1 = require(\"../versioning/Versioning\");\nconst LoggerAdapter_1 = require(\"./LoggerAdapter\");\nconst VoiceFocusTransformDevice_1 = require(\"./VoiceFocusTransformDevice\");\nconst VoiceFocusTransformDeviceDelegate_1 = require(\"./VoiceFocusTransformDeviceDelegate\");\n/**\n * `VoiceFocusDeviceTransformer` is used to create {@link VoiceFocusTransformDevice|transform devices}\n * that apply Amazon Voice Focus noise suppression to audio input.\n *\n * This transformer captures relevant configuration. You should check for support, initialize,\n * and then create a device as follows:\n *\n * ```typescript\n * const deviceID = null;\n *\n * // This check for support is cheap and quick, and should be used to gate use\n * // of this feature.\n * if (!(await VoiceFocusDeviceTransformer.isSupported()) {\n *   console.log('Amazon Voice Focus not supported in this browser.');\n *   return deviceID;\n * }\n *\n * let transformer: VoiceFocusDeviceTransformer;\n * try {\n *   // This operation can fail in ways that do not indicate no support,\n *   // but do indicate an inability to apply Amazon Voice Focus. Trying again\n *   // might succeed.\n *   transformer = await VoiceFocusDeviceTransformer.create({});\n * } catch (e) {\n *   // Something went wrong.\n *   console.log('Unable to instantiate Amazon Voice Focus.');\n *   return deviceID;\n * }\n *\n * if (!transformer.isSupported()) {\n *   // The transformer will fall through, but your UI might care.\n *   console.log('Amazon Voice Focus not supported in this browser.');\n * }\n *\n * return await transformer.createTransformDevice(deviceID);\n * ```\n */\nclass VoiceFocusDeviceTransformer {\n    constructor(spec, { preload = true, logger, fetchBehavior = VoiceFocusDeviceTransformer.defaultFetchBehavior(), }, config) {\n        this.spec = spec;\n        this.supported = true;\n        this.logger = logger;\n        this.vfLogger = logger ? new LoggerAdapter_1.default(logger) : undefined;\n        this.preload = preload;\n        this.fetchBehavior = fetchBehavior;\n        // If the user didn't specify one, add the default, which is\n        // identified by the major and minor SDK version.\n        this.spec = VoiceFocusDeviceTransformer.augmentSpec(this.spec);\n        if (config) {\n            this.configuration = Promise.resolve(config);\n        }\n    }\n    /**\n     * Quickly check whether Amazon Voice Focus is supported on this platform.\n     *\n     * This will return `false` if key technologies are absent. A value of `true` does not\n     * necessarily mean that adding Amazon Voice Focus will succeed: it is still possible that the\n     * configuration of the page or the CPU speed of the device are limiting factors.\n     *\n     * {@link VoiceFocusDeviceTransformer.create} will return an instance whose\n     * `isSupported` method more accurately reflects whether Amazon Voice Focus\n     * is supported in the current environment.\n     *\n     * This method will only reject if you provide invalid inputs.\n     *\n     * @param spec An optional asset group and URL paths to use when fetching. You can pass\n     *             a complete {@link VoiceFocusSpec} here for convenience, matching the signature of {@link VoiceFocusDeviceTransformer.create}.\n     * @param options Additional named arguments, including `logger`. Set\n     *                `allowIFrame` to false to cause the support check to fail in\n     *                an iframe.\n     *                Chromium's security model means that audio processing works\n     *                poorly in iframes.\n     */\n    static isSupported(spec, options) {\n        var _a, _b;\n        const fetchBehavior = VoiceFocusDeviceTransformer.defaultFetchBehavior();\n        const logger = (options === null || options === void 0 ? void 0 : options.logger) ? new LoggerAdapter_1.default(options.logger) : undefined;\n        const opts = {\n            fetchBehavior,\n            logger,\n        };\n        // This is impossible to test in Node, so Istanbul ignore.\n        /* istanbul ignore next */\n        if (Utils_1.isIFramed()) {\n            if ((options === null || options === void 0 ? void 0 : options.allowIFrame) === false) {\n                (_a = options === null || options === void 0 ? void 0 : options.logger) === null || _a === void 0 ? void 0 : _a.error('Amazon Voice Focus support check inside iframe: not supported.');\n                return Promise.resolve(false);\n            }\n            else {\n                (_b = options === null || options === void 0 ? void 0 : options.logger) === null || _b === void 0 ? void 0 : _b.warn('Amazon Voice Focus support check inside iframe: not recommended.');\n            }\n        }\n        return voicefocus_1.VoiceFocus.isSupported(VoiceFocusDeviceTransformer.augmentSpec(spec), opts);\n    }\n    /**\n     * Create a transformer that can apply Amazon Voice Focus noise suppression to a device.\n     *\n     * This method will reject if the provided spec is invalid, or if the process of\n     * checking for support or estimating fails (e.g., because the network is unreachable).\n     *\n     * If Amazon Voice Focus is not supported on this device, this call will not reject and\n     * `isSupported` will return `false` on the returned instance. That instance will\n     * pass through devices unmodified.\n     *\n     * @param spec A definition of how you want Amazon Voice Focus to behave. See the declaration of\n     *             {@link VoiceFocusSpec} for details.\n     * @param options Additional named arguments, including `logger` and `preload`.\n     */\n    static create(spec = {}, options = {}, config, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    createMeetingResponse, \n    // eslint-disable-next-line\n    createAttendeeResponse) {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (createMeetingResponse) {\n                if (createMeetingResponse.Meeting.Meeting) {\n                    createMeetingResponse = createMeetingResponse.Meeting;\n                }\n            }\n            const meetingFeaturesAllowsES = ((_c = (_b = (_a = createMeetingResponse === null || createMeetingResponse === void 0 ? void 0 : createMeetingResponse.Meeting) === null || _a === void 0 ? void 0 : _a.MeetingFeatures) === null || _b === void 0 ? void 0 : _b.Audio) === null || _c === void 0 ? void 0 : _c.EchoReduction) === 'AVAILABLE';\n            const forbiddenConfig = config &&\n                config.supported === true &&\n                config.model.name === 'ns_es' &&\n                !meetingFeaturesAllowsES;\n            const forbiddenSpec = spec.name === 'ns_es' && !meetingFeaturesAllowsES;\n            if (forbiddenConfig || forbiddenSpec) {\n                throw new Error('Echo Reduction requested but not enabled.');\n            }\n            const transformer = new VoiceFocusDeviceTransformer(spec, options, config);\n            // This also preps the first `VoiceFocus` instance.\n            yield transformer.init();\n            return transformer;\n        });\n    }\n    /**\n     * Given a spec and options, perform the configuration work that is\n     * ordinarily performed during creation of a transformer.\n     *\n     * The computed configuration is not portable between devices or sessions,\n     * but is useful for 'moving' transformers between windows.\n     *\n     * Pass the returned configuration as the third argument to a call to\n     * {@link VoiceFocusDeviceTransformer.create} with the matching spec.\n     */\n    static configure(spec = {}, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const transformer = new VoiceFocusDeviceTransformer(spec, options, undefined);\n            return transformer.configure(true);\n        });\n    }\n    /**\n     * Return the computed configuration for this transformer.\n     */\n    getConfiguration() {\n        return this.configuration;\n    }\n    /**\n     * Return whether this transformer is able to function in this environment.\n     * If not, calls to\n     * {@link VoiceFocusDeviceTransformer.createTransformDevice|createTransformDevice}\n     * will pass through an unmodified device.\n     */\n    isSupported() {\n        return this.supported;\n    }\n    /**\n     * Apply Amazon Voice Focus to the selected {@link Device}.\n     *\n     * If this is a stream, it should be one that does not include other noise suppression features,\n     * and you should consider whether to disable automatic gain control (AGC) on the stream, because\n     * it can interact with noise suppression.\n     *\n     * @returns a device promise. This will always resolve to either a\n     *          {@link VoiceFocusTransformDevice} or undefined; it will never reject.\n     */\n    createTransformDevice(device, nodeOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.supported) {\n                // Fall back.\n                return undefined;\n            }\n            try {\n                const preload = true;\n                const [vf, delegate] = yield this.allocateVoiceFocus(preload);\n                const options = Object.assign(Object.assign({}, nodeOptions), { es: this.spec.name === 'ns_es' });\n                return new VoiceFocusTransformDevice_1.default(device, vf, delegate, options);\n            }\n            catch (e) {\n                // Fall back.\n                /* istanbul ignore next */\n                return undefined;\n            }\n        });\n    }\n    /**\n     * Destroy the Voice Focus instance and worker thread associated with the transformer.\n     */\n    static destroyVoiceFocus(transformer) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            /* istanbul ignore next */\n            (_a = transformer === null || transformer === void 0 ? void 0 : transformer.vf) === null || _a === void 0 ? void 0 : _a.destroy();\n        });\n    }\n    static augmentSpec(spec) {\n        if (!spec || (!spec.assetGroup && !spec.revisionID)) {\n            return Object.assign(Object.assign({}, spec), { assetGroup: VoiceFocusDeviceTransformer.currentSDKAssetGroup() });\n        }\n        return spec;\n    }\n    configure(preResolve = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const options = {\n                fetchBehavior: this.fetchBehavior,\n                preResolve,\n                logger: this.vfLogger,\n            };\n            return voicefocus_1.VoiceFocus.configure(this.spec, options);\n        });\n    }\n    init() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.configuration) {\n                this.configuration = this.configure();\n            }\n            const config = yield this.configuration;\n            if (!config.supported) {\n                // No need to init: it won't work.\n                this.supported = false;\n                return;\n            }\n            // We initialize the first one right now, which makes it easier to detect\n            // possible failures.\n            // This can throw for malformed input. Pass that up the chain.\n            this.pendingVoiceFocus = this.createVoiceFocus(config, this.preload);\n            try {\n                yield this.pendingVoiceFocus;\n            }\n            catch (e) {\n                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.error(`Unable to initialize Amazon Voice Focus: ${e}`);\n                this.supported = false;\n            }\n        });\n    }\n    createVoiceFocus(config, preload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const delegate = new VoiceFocusTransformDeviceDelegate_1.default();\n            this.vf = yield voicefocus_1.VoiceFocus.init(config, { delegate, preload, logger: this.vfLogger });\n            return [this.vf, delegate];\n        });\n    }\n    allocateVoiceFocus(preload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // A little safety.\n            /* istanbul ignore next */\n            if (!this.supported) {\n                throw new Error('Not supported.');\n            }\n            if (this.pendingVoiceFocus) {\n                // Use the one we already have, and free the slot for any future execution.\n                const vf = this.pendingVoiceFocus;\n                this.pendingVoiceFocus = undefined;\n                return vf;\n            }\n            return this.createVoiceFocus(yield this.configuration, preload);\n        });\n    }\n    static majorVersion() {\n        return Versioning_1.default.sdkVersion.match(/^[1-9][0-9]*\\.(?:0|[1-9][0-9]*)/)[0];\n    }\n    static majorMinorVersion() {\n        return Versioning_1.default.sdkVersion.match(/^[1-9][0-9]*\\.(?:0|(?:[1-9][0-9]*))\\.(?:0|[1-9][0-9]*)/)[0];\n    }\n    static currentSDKAssetGroup() {\n        // Just on the off chance someone does something silly, handle\n        // malformed version strings here.\n        const v = this.majorVersion();\n        // Just a little safety.\n        /* istanbul ignore next */\n        if (!v) {\n            return `stable-v1`;\n        }\n        return `sdk-${v}`;\n    }\n    // Note that we use query strings here, not headers, in order to make these requests 'simple' and\n    // avoid the need for CORS preflights.\n    // Be very, very careful if you choose to add headers here. You should never need to.\n    static defaultFetchBehavior() {\n        // Just a little safety.\n        /* istanbul ignore next */\n        const version = VoiceFocusDeviceTransformer.majorMinorVersion() || 'unknown';\n        const ua = Versioning_1.default.sdkUserAgentLowResolution;\n        return {\n            escapedQueryString: `sdk=${encodeURIComponent(version)}&ua=${encodeURIComponent(ua)}`,\n        };\n    }\n}\nexports.VoiceFocusDeviceTransformer = VoiceFocusDeviceTransformer;\nexports.default = VoiceFocusDeviceTransformer;\n//# sourceMappingURL=VoiceFocusDeviceTransformer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultEventController = exports.DefaultDevicePixelRatioMonitor = exports.DefaultDeviceController = exports.DefaultContentShareController = exports.DefaultBrowserBehavior = exports.DefaultAudioVideoFacade = exports.DefaultAudioVideoController = exports.DefaultAudioMixController = exports.DefaultActiveSpeakerPolicy = exports.DefaultActiveSpeakerDetector = exports.DataMessage = exports.CreateSDPTask = exports.CreatePeerConnectionTask = exports.ContentShareMediaStreamBroker = exports.ContentShareConstants = exports.ConsoleLogger = exports.ConnectionHealthPolicyConfiguration = exports.ConnectionHealthData = exports.ClientVideoStreamReceivingReport = exports.ClientMetricReportMediaType = exports.ClientMetricReportDirection = exports.ClientMetricReport = exports.CleanStoppedSessionTask = exports.CleanRestartedSessionTask = exports.CheckVideoInputFeedback = exports.CheckVideoConnectivityFeedback = exports.CheckNetworkUDPConnectivityFeedback = exports.CheckNetworkTCPConnectivityFeedback = exports.CheckContentShareConnectivityFeedback = exports.CheckCameraResolutionFeedback = exports.CheckAudioOutputFeedback = exports.CheckAudioInputFeedback = exports.CheckAudioConnectivityFeedback = exports.CanvasVideoFrameBuffer = exports.CSPMonitor = exports.BitrateParameters = exports.BaseTask = exports.BaseConnectionHealthPolicy = exports.BackgroundReplacementVideoFrameProcessor = exports.BackgroundFilterVideoFrameProcessor = exports.BackgroundBlurVideoFrameProcessor = exports.BackgroundBlurStrength = exports.AudioVideoControllerState = exports.AudioProfile = exports.AudioLogEvent = exports.Attendee = exports.AttachMediaInputTask = exports.AsyncScheduler = exports.ApplicationMetadata = exports.AllHighestVideoBandwidthPolicy = void 0;\nexports.MeetingSessionCredentials = exports.MeetingSessionConfiguration = exports.MeetingReadinessCheckerConfiguration = exports.MeetingEventsClientConfiguration = exports.MediaDeviceProxyHandler = exports.Maybe = exports.LogLevel = exports.Log = exports.ListenForVolumeIndicatorsTask = exports.LeaveAndReceiveLeaveAckTask = exports.JoinAndReceiveIndexTask = exports.IntervalScheduler = exports.InMemoryJSONEventBuffer = exports.GlobalMetricReport = exports.GetUserMediaError = exports.FullJitterLimitedBackoff = exports.FullJitterBackoffFactory = exports.FullJitterBackoff = exports.FinishGatheringICECandidatesTask = exports.EventIngestionConfiguration = exports.EventBufferConfiguration = exports.DeviceSelection = exports.DevicePixelRatioWindowSource = exports.DefaultWebSocketAdapter = exports.DefaultVolumeIndicatorAdapter = exports.DefaultVideoTransformDevice = exports.DefaultVideoTileFactory = exports.DefaultVideoTileController = exports.DefaultVideoTile = exports.DefaultVideoStreamIndex = exports.DefaultVideoStreamIdSet = exports.DefaultVideoFrameProcessorPipeline = exports.DefaultVideoCaptureAndEncodeParameter = exports.DefaultUserAgentParser = exports.DefaultTranscriptionController = exports.DefaultTransceiverController = exports.DefaultSimulcastUplinkPolicyForContentShare = exports.DefaultSimulcastUplinkPolicy = exports.DefaultSignalingClient = exports.DefaultSigV4 = exports.DefaultSessionStateController = exports.DefaultReconnectController = exports.DefaultRealtimeController = exports.DefaultPingPong = exports.DefaultModality = exports.DefaultMessagingSession = exports.DefaultMeetingSession = exports.DefaultMeetingReadinessChecker = exports.DefaultMeetingEventReporter = exports.DefaultMediaDeviceFactory = void 0;\nexports.SDPMediaSection = exports.SDPCandidateType = exports.SDP = exports.RunnableTask = exports.ReconnectionHealthPolicy = exports.ReceiveVideoStreamIndexTask = exports.ReceiveVideoInputTask = exports.ReceiveTURNCredentialsTask = exports.ReceiveAudioInputTask = exports.RealtimeVolumeIndicator = exports.RealtimeState = exports.RealtimeAttendeePositionInFrame = exports.PromoteToPrimaryMeetingTask = exports.PromiseQueue = exports.PrefetchSortBy = exports.PrefetchOn = exports.PermissionDeniedError = exports.ParallelGroupTask = exports.POSTLogger = exports.OverconstrainedError = exports.OpenSignalingConnectionTask = exports.OnceTask = exports.NotReadableError = exports.NotFoundError = exports.None = exports.NoVideoUplinkBandwidthPolicy = exports.NoVideoDownlinkBandwidthPolicy = exports.NoOpVideoFrameProcessor = exports.NoOpVideoElementFactory = exports.NoOpTask = exports.NoOpMediaStreamBroker = exports.NoOpLogger = exports.NoOpEventReporter = exports.NoOpDeviceController = exports.NoOpDebugLogger = exports.NoOpAudioVideoController = exports.NScaleVideoUplinkBandwidthPolicy = exports.MutableVideoPreferences = exports.MultiLogger = exports.MonitorTask = exports.ModelSpecBuilder = exports.MessagingSessionConfiguration = exports.Message = exports.MeetingSessionVideoAvailability = exports.MeetingSessionURLs = exports.MeetingSessionTURNCredentials = exports.MeetingSessionStatusCode = exports.MeetingSessionStatus = exports.MeetingSessionLifecycleEventCondition = exports.MeetingSessionLifecycleEvent = void 0;\nexports.VideoQualitySettings = exports.VideoPriorityBasedPolicyConfig = exports.VideoPriorityBasedPolicy = exports.VideoPreferences = exports.VideoPreference = exports.VideoOnlyTransceiverController = exports.VideoLogEvent = exports.VideoCodecCapability = exports.VideoAdaptiveProbePolicy = exports.Versioning = exports.UnusableAudioWarningConnectionHealthPolicy = exports.TypeError = exports.TranscriptionStatusType = exports.TranscriptionStatus = exports.TranscriptResult = exports.TranscriptLanguageWithScore = exports.TranscriptItemType = exports.TranscriptItem = exports.TranscriptEntity = exports.TranscriptAlternative = exports.Transcript = exports.TimeoutTask = exports.TimeoutScheduler = exports.TaskStatus = exports.TargetDisplaySize = exports.SubscribeAndReceiveSubscribeAckTask = exports.StreamMetricReport = exports.Some = exports.SingleNodeAudioTransformDevice = exports.SimulcastVideoStreamIndex = exports.SimulcastTransceiverController = exports.SimulcastLayers = exports.SimulcastContentShareTransceiverController = exports.SignalingClientVideoSubscriptionConfiguration = exports.SignalingClientSubscribe = exports.SignalingClientJoin = exports.SignalingClientEventType = exports.SignalingClientEvent = exports.SignalingClientConnectionRequest = exports.SignalingAndMetricsConnectionMonitor = exports.SetRemoteDescriptionTask = exports.SetLocalDescriptionTask = exports.SessionStateControllerTransitionResult = exports.SessionStateControllerState = exports.SessionStateControllerDeferPriority = exports.SessionStateControllerAction = exports.ServerSideNetworkAdaption = exports.SerialGroupTask = exports.SendingAudioFailureConnectionHealthPolicy = exports.SendAndReceiveDataMessagesTask = void 0;\nexports.isVideoTransformDevice = exports.isDestroyable = exports.isAudioTransformDevice = exports.ZLIBTextCompressor = exports.WebSocketReadyState = exports.WaitForAttendeePresenceTask = exports.VoiceFocusTransformDevice = exports.VoiceFocusDeviceTransformer = exports.VideoTileState = exports.VideoStreamDescription = exports.VideoSource = void 0;\nconst AllHighestVideoBandwidthPolicy_1 = require(\"./videodownlinkbandwidthpolicy/AllHighestVideoBandwidthPolicy\");\nexports.AllHighestVideoBandwidthPolicy = AllHighestVideoBandwidthPolicy_1.default;\nconst ApplicationMetadata_1 = require(\"./applicationmetadata/ApplicationMetadata\");\nexports.ApplicationMetadata = ApplicationMetadata_1.default;\nconst AsyncScheduler_1 = require(\"./scheduler/AsyncScheduler\");\nexports.AsyncScheduler = AsyncScheduler_1.default;\nconst AttachMediaInputTask_1 = require(\"./task/AttachMediaInputTask\");\nexports.AttachMediaInputTask = AttachMediaInputTask_1.default;\nconst Attendee_1 = require(\"./attendee/Attendee\");\nexports.Attendee = Attendee_1.default;\nconst AudioLogEvent_1 = require(\"./statscollector/AudioLogEvent\");\nexports.AudioLogEvent = AudioLogEvent_1.default;\nconst AudioProfile_1 = require(\"./audioprofile/AudioProfile\");\nexports.AudioProfile = AudioProfile_1.default;\nconst AudioVideoControllerState_1 = require(\"./audiovideocontroller/AudioVideoControllerState\");\nexports.AudioVideoControllerState = AudioVideoControllerState_1.default;\nconst BackgroundBlurStrength_1 = require(\"./backgroundblurprocessor/BackgroundBlurStrength\");\nexports.BackgroundBlurStrength = BackgroundBlurStrength_1.default;\nconst BackgroundBlurVideoFrameProcessor_1 = require(\"./backgroundblurprocessor/BackgroundBlurVideoFrameProcessor\");\nexports.BackgroundBlurVideoFrameProcessor = BackgroundBlurVideoFrameProcessor_1.default;\nconst BackgroundFilterVideoFrameProcessor_1 = require(\"./backgroundfilter/BackgroundFilterVideoFrameProcessor\");\nexports.BackgroundFilterVideoFrameProcessor = BackgroundFilterVideoFrameProcessor_1.default;\nconst BackgroundReplacementVideoFrameProcessor_1 = require(\"./backgroundreplacementprocessor/BackgroundReplacementVideoFrameProcessor\");\nexports.BackgroundReplacementVideoFrameProcessor = BackgroundReplacementVideoFrameProcessor_1.default;\nconst BaseConnectionHealthPolicy_1 = require(\"./connectionhealthpolicy/BaseConnectionHealthPolicy\");\nexports.BaseConnectionHealthPolicy = BaseConnectionHealthPolicy_1.default;\nconst BaseTask_1 = require(\"./task/BaseTask\");\nexports.BaseTask = BaseTask_1.default;\nconst BitrateParameters_1 = require(\"./videouplinkbandwidthpolicy/BitrateParameters\");\nexports.BitrateParameters = BitrateParameters_1.default;\nconst CSPMonitor_1 = require(\"./cspmonitor/CSPMonitor\");\nexports.CSPMonitor = CSPMonitor_1.default;\nconst CanvasVideoFrameBuffer_1 = require(\"./videoframeprocessor/CanvasVideoFrameBuffer\");\nexports.CanvasVideoFrameBuffer = CanvasVideoFrameBuffer_1.default;\nconst CheckAudioConnectivityFeedback_1 = require(\"./meetingreadinesschecker/CheckAudioConnectivityFeedback\");\nexports.CheckAudioConnectivityFeedback = CheckAudioConnectivityFeedback_1.default;\nconst CheckAudioInputFeedback_1 = require(\"./meetingreadinesschecker/CheckAudioInputFeedback\");\nexports.CheckAudioInputFeedback = CheckAudioInputFeedback_1.default;\nconst CheckAudioOutputFeedback_1 = require(\"./meetingreadinesschecker/CheckAudioOutputFeedback\");\nexports.CheckAudioOutputFeedback = CheckAudioOutputFeedback_1.default;\nconst CheckCameraResolutionFeedback_1 = require(\"./meetingreadinesschecker/CheckCameraResolutionFeedback\");\nexports.CheckCameraResolutionFeedback = CheckCameraResolutionFeedback_1.default;\nconst CheckContentShareConnectivityFeedback_1 = require(\"./meetingreadinesschecker/CheckContentShareConnectivityFeedback\");\nexports.CheckContentShareConnectivityFeedback = CheckContentShareConnectivityFeedback_1.default;\nconst CheckNetworkTCPConnectivityFeedback_1 = require(\"./meetingreadinesschecker/CheckNetworkTCPConnectivityFeedback\");\nexports.CheckNetworkTCPConnectivityFeedback = CheckNetworkTCPConnectivityFeedback_1.default;\nconst CheckNetworkUDPConnectivityFeedback_1 = require(\"./meetingreadinesschecker/CheckNetworkUDPConnectivityFeedback\");\nexports.CheckNetworkUDPConnectivityFeedback = CheckNetworkUDPConnectivityFeedback_1.default;\nconst CheckVideoConnectivityFeedback_1 = require(\"./meetingreadinesschecker/CheckVideoConnectivityFeedback\");\nexports.CheckVideoConnectivityFeedback = CheckVideoConnectivityFeedback_1.default;\nconst CheckVideoInputFeedback_1 = require(\"./meetingreadinesschecker/CheckVideoInputFeedback\");\nexports.CheckVideoInputFeedback = CheckVideoInputFeedback_1.default;\nconst CleanRestartedSessionTask_1 = require(\"./task/CleanRestartedSessionTask\");\nexports.CleanRestartedSessionTask = CleanRestartedSessionTask_1.default;\nconst CleanStoppedSessionTask_1 = require(\"./task/CleanStoppedSessionTask\");\nexports.CleanStoppedSessionTask = CleanStoppedSessionTask_1.default;\nconst ClientMetricReport_1 = require(\"./clientmetricreport/ClientMetricReport\");\nexports.ClientMetricReport = ClientMetricReport_1.default;\nconst ClientMetricReportDirection_1 = require(\"./clientmetricreport/ClientMetricReportDirection\");\nexports.ClientMetricReportDirection = ClientMetricReportDirection_1.default;\nconst ClientMetricReportMediaType_1 = require(\"./clientmetricreport/ClientMetricReportMediaType\");\nexports.ClientMetricReportMediaType = ClientMetricReportMediaType_1.default;\nconst ClientVideoStreamReceivingReport_1 = require(\"./clientmetricreport/ClientVideoStreamReceivingReport\");\nexports.ClientVideoStreamReceivingReport = ClientVideoStreamReceivingReport_1.default;\nconst ConnectionHealthData_1 = require(\"./connectionhealthpolicy/ConnectionHealthData\");\nexports.ConnectionHealthData = ConnectionHealthData_1.default;\nconst ConnectionHealthPolicyConfiguration_1 = require(\"./connectionhealthpolicy/ConnectionHealthPolicyConfiguration\");\nexports.ConnectionHealthPolicyConfiguration = ConnectionHealthPolicyConfiguration_1.default;\nconst ConsoleLogger_1 = require(\"./logger/ConsoleLogger\");\nexports.ConsoleLogger = ConsoleLogger_1.default;\nconst ContentShareConstants_1 = require(\"./contentsharecontroller/ContentShareConstants\");\nexports.ContentShareConstants = ContentShareConstants_1.default;\nconst ContentShareMediaStreamBroker_1 = require(\"./contentsharecontroller/ContentShareMediaStreamBroker\");\nexports.ContentShareMediaStreamBroker = ContentShareMediaStreamBroker_1.default;\nconst CreatePeerConnectionTask_1 = require(\"./task/CreatePeerConnectionTask\");\nexports.CreatePeerConnectionTask = CreatePeerConnectionTask_1.default;\nconst CreateSDPTask_1 = require(\"./task/CreateSDPTask\");\nexports.CreateSDPTask = CreateSDPTask_1.default;\nconst DataMessage_1 = require(\"./datamessage/DataMessage\");\nexports.DataMessage = DataMessage_1.default;\nconst DefaultActiveSpeakerDetector_1 = require(\"./activespeakerdetector/DefaultActiveSpeakerDetector\");\nexports.DefaultActiveSpeakerDetector = DefaultActiveSpeakerDetector_1.default;\nconst DefaultActiveSpeakerPolicy_1 = require(\"./activespeakerpolicy/DefaultActiveSpeakerPolicy\");\nexports.DefaultActiveSpeakerPolicy = DefaultActiveSpeakerPolicy_1.default;\nconst DefaultAudioMixController_1 = require(\"./audiomixcontroller/DefaultAudioMixController\");\nexports.DefaultAudioMixController = DefaultAudioMixController_1.default;\nconst DefaultAudioVideoController_1 = require(\"./audiovideocontroller/DefaultAudioVideoController\");\nexports.DefaultAudioVideoController = DefaultAudioVideoController_1.default;\nconst DefaultAudioVideoFacade_1 = require(\"./audiovideofacade/DefaultAudioVideoFacade\");\nexports.DefaultAudioVideoFacade = DefaultAudioVideoFacade_1.default;\nconst DefaultBrowserBehavior_1 = require(\"./browserbehavior/DefaultBrowserBehavior\");\nexports.DefaultBrowserBehavior = DefaultBrowserBehavior_1.default;\nconst DefaultContentShareController_1 = require(\"./contentsharecontroller/DefaultContentShareController\");\nexports.DefaultContentShareController = DefaultContentShareController_1.default;\nconst DefaultDeviceController_1 = require(\"./devicecontroller/DefaultDeviceController\");\nexports.DefaultDeviceController = DefaultDeviceController_1.default;\nconst DefaultDevicePixelRatioMonitor_1 = require(\"./devicepixelratiomonitor/DefaultDevicePixelRatioMonitor\");\nexports.DefaultDevicePixelRatioMonitor = DefaultDevicePixelRatioMonitor_1.default;\nconst DefaultEventController_1 = require(\"./eventcontroller/DefaultEventController\");\nexports.DefaultEventController = DefaultEventController_1.default;\nconst DefaultMediaDeviceFactory_1 = require(\"./mediadevicefactory/DefaultMediaDeviceFactory\");\nexports.DefaultMediaDeviceFactory = DefaultMediaDeviceFactory_1.default;\nconst DefaultMeetingEventReporter_1 = require(\"./eventreporter/DefaultMeetingEventReporter\");\nexports.DefaultMeetingEventReporter = DefaultMeetingEventReporter_1.default;\nconst DefaultMeetingReadinessChecker_1 = require(\"./meetingreadinesschecker/DefaultMeetingReadinessChecker\");\nexports.DefaultMeetingReadinessChecker = DefaultMeetingReadinessChecker_1.default;\nconst DefaultMeetingSession_1 = require(\"./meetingsession/DefaultMeetingSession\");\nexports.DefaultMeetingSession = DefaultMeetingSession_1.default;\nconst DefaultMessagingSession_1 = require(\"./messagingsession/DefaultMessagingSession\");\nexports.DefaultMessagingSession = DefaultMessagingSession_1.default;\nconst DefaultModality_1 = require(\"./modality/DefaultModality\");\nexports.DefaultModality = DefaultModality_1.default;\nconst DefaultPingPong_1 = require(\"./pingpong/DefaultPingPong\");\nexports.DefaultPingPong = DefaultPingPong_1.default;\nconst DefaultRealtimeController_1 = require(\"./realtimecontroller/DefaultRealtimeController\");\nexports.DefaultRealtimeController = DefaultRealtimeController_1.default;\nconst DefaultReconnectController_1 = require(\"./reconnectcontroller/DefaultReconnectController\");\nexports.DefaultReconnectController = DefaultReconnectController_1.default;\nconst DefaultSessionStateController_1 = require(\"./sessionstatecontroller/DefaultSessionStateController\");\nexports.DefaultSessionStateController = DefaultSessionStateController_1.default;\nconst DefaultSigV4_1 = require(\"./sigv4/DefaultSigV4\");\nexports.DefaultSigV4 = DefaultSigV4_1.default;\nconst DefaultSignalingClient_1 = require(\"./signalingclient/DefaultSignalingClient\");\nexports.DefaultSignalingClient = DefaultSignalingClient_1.default;\nconst DefaultSimulcastUplinkPolicy_1 = require(\"./videouplinkbandwidthpolicy/DefaultSimulcastUplinkPolicy\");\nexports.DefaultSimulcastUplinkPolicy = DefaultSimulcastUplinkPolicy_1.default;\nconst DefaultSimulcastUplinkPolicyForContentShare_1 = require(\"./videouplinkbandwidthpolicy/DefaultSimulcastUplinkPolicyForContentShare\");\nexports.DefaultSimulcastUplinkPolicyForContentShare = DefaultSimulcastUplinkPolicyForContentShare_1.default;\nconst DefaultTransceiverController_1 = require(\"./transceivercontroller/DefaultTransceiverController\");\nexports.DefaultTransceiverController = DefaultTransceiverController_1.default;\nconst DefaultTranscriptionController_1 = require(\"./transcript/DefaultTranscriptionController\");\nexports.DefaultTranscriptionController = DefaultTranscriptionController_1.default;\nconst DefaultUserAgentParser_1 = require(\"./useragentparser/DefaultUserAgentParser\");\nexports.DefaultUserAgentParser = DefaultUserAgentParser_1.default;\nconst DefaultVideoCaptureAndEncodeParameter_1 = require(\"./videocaptureandencodeparameter/DefaultVideoCaptureAndEncodeParameter\");\nexports.DefaultVideoCaptureAndEncodeParameter = DefaultVideoCaptureAndEncodeParameter_1.default;\nconst DefaultVideoFrameProcessorPipeline_1 = require(\"./videoframeprocessor/DefaultVideoFrameProcessorPipeline\");\nexports.DefaultVideoFrameProcessorPipeline = DefaultVideoFrameProcessorPipeline_1.default;\nconst DefaultVideoStreamIdSet_1 = require(\"./videostreamidset/DefaultVideoStreamIdSet\");\nexports.DefaultVideoStreamIdSet = DefaultVideoStreamIdSet_1.default;\nconst DefaultVideoStreamIndex_1 = require(\"./videostreamindex/DefaultVideoStreamIndex\");\nexports.DefaultVideoStreamIndex = DefaultVideoStreamIndex_1.default;\nconst DefaultVideoTile_1 = require(\"./videotile/DefaultVideoTile\");\nexports.DefaultVideoTile = DefaultVideoTile_1.default;\nconst DefaultVideoTileController_1 = require(\"./videotilecontroller/DefaultVideoTileController\");\nexports.DefaultVideoTileController = DefaultVideoTileController_1.default;\nconst DefaultVideoTileFactory_1 = require(\"./videotilefactory/DefaultVideoTileFactory\");\nexports.DefaultVideoTileFactory = DefaultVideoTileFactory_1.default;\nconst DefaultVideoTransformDevice_1 = require(\"./videoframeprocessor/DefaultVideoTransformDevice\");\nexports.DefaultVideoTransformDevice = DefaultVideoTransformDevice_1.default;\nconst DefaultVolumeIndicatorAdapter_1 = require(\"./volumeindicatoradapter/DefaultVolumeIndicatorAdapter\");\nexports.DefaultVolumeIndicatorAdapter = DefaultVolumeIndicatorAdapter_1.default;\nconst DefaultWebSocketAdapter_1 = require(\"./websocketadapter/DefaultWebSocketAdapter\");\nexports.DefaultWebSocketAdapter = DefaultWebSocketAdapter_1.default;\nconst DevicePixelRatioWindowSource_1 = require(\"./devicepixelratiosource/DevicePixelRatioWindowSource\");\nexports.DevicePixelRatioWindowSource = DevicePixelRatioWindowSource_1.default;\nconst DeviceSelection_1 = require(\"./devicecontroller/DeviceSelection\");\nexports.DeviceSelection = DeviceSelection_1.default;\nconst EventBufferConfiguration_1 = require(\"./eventbufferconfiguration/EventBufferConfiguration\");\nexports.EventBufferConfiguration = EventBufferConfiguration_1.default;\nconst EventIngestionConfiguration_1 = require(\"./eventingestionconfiguration/EventIngestionConfiguration\");\nexports.EventIngestionConfiguration = EventIngestionConfiguration_1.default;\nconst FinishGatheringICECandidatesTask_1 = require(\"./task/FinishGatheringICECandidatesTask\");\nexports.FinishGatheringICECandidatesTask = FinishGatheringICECandidatesTask_1.default;\nconst FullJitterBackoff_1 = require(\"./backoff/FullJitterBackoff\");\nexports.FullJitterBackoff = FullJitterBackoff_1.default;\nconst FullJitterBackoffFactory_1 = require(\"./backoff/FullJitterBackoffFactory\");\nexports.FullJitterBackoffFactory = FullJitterBackoffFactory_1.default;\nconst FullJitterLimitedBackoff_1 = require(\"./backoff/FullJitterLimitedBackoff\");\nexports.FullJitterLimitedBackoff = FullJitterLimitedBackoff_1.default;\nconst GetUserMediaError_1 = require(\"./devicecontroller/GetUserMediaError\");\nexports.GetUserMediaError = GetUserMediaError_1.default;\nconst GlobalMetricReport_1 = require(\"./clientmetricreport/GlobalMetricReport\");\nexports.GlobalMetricReport = GlobalMetricReport_1.default;\nconst InMemoryJSONEventBuffer_1 = require(\"./eventbuffer/InMemoryJSONEventBuffer\");\nexports.InMemoryJSONEventBuffer = InMemoryJSONEventBuffer_1.default;\nconst IntervalScheduler_1 = require(\"./scheduler/IntervalScheduler\");\nexports.IntervalScheduler = IntervalScheduler_1.default;\nconst JoinAndReceiveIndexTask_1 = require(\"./task/JoinAndReceiveIndexTask\");\nexports.JoinAndReceiveIndexTask = JoinAndReceiveIndexTask_1.default;\nconst LeaveAndReceiveLeaveAckTask_1 = require(\"./task/LeaveAndReceiveLeaveAckTask\");\nexports.LeaveAndReceiveLeaveAckTask = LeaveAndReceiveLeaveAckTask_1.default;\nconst ListenForVolumeIndicatorsTask_1 = require(\"./task/ListenForVolumeIndicatorsTask\");\nexports.ListenForVolumeIndicatorsTask = ListenForVolumeIndicatorsTask_1.default;\nconst Log_1 = require(\"./logger/Log\");\nexports.Log = Log_1.default;\nconst LogLevel_1 = require(\"./logger/LogLevel\");\nexports.LogLevel = LogLevel_1.default;\nconst MediaDeviceProxyHandler_1 = require(\"./mediadevicefactory/MediaDeviceProxyHandler\");\nexports.MediaDeviceProxyHandler = MediaDeviceProxyHandler_1.default;\nconst MeetingEventsClientConfiguration_1 = require(\"./eventsclientconfiguration/MeetingEventsClientConfiguration\");\nexports.MeetingEventsClientConfiguration = MeetingEventsClientConfiguration_1.default;\nconst MeetingReadinessCheckerConfiguration_1 = require(\"./meetingreadinesschecker/MeetingReadinessCheckerConfiguration\");\nexports.MeetingReadinessCheckerConfiguration = MeetingReadinessCheckerConfiguration_1.default;\nconst MeetingSessionConfiguration_1 = require(\"./meetingsession/MeetingSessionConfiguration\");\nexports.MeetingSessionConfiguration = MeetingSessionConfiguration_1.default;\nconst MeetingSessionCredentials_1 = require(\"./meetingsession/MeetingSessionCredentials\");\nexports.MeetingSessionCredentials = MeetingSessionCredentials_1.default;\nconst MeetingSessionLifecycleEvent_1 = require(\"./meetingsession/MeetingSessionLifecycleEvent\");\nexports.MeetingSessionLifecycleEvent = MeetingSessionLifecycleEvent_1.default;\nconst MeetingSessionLifecycleEventCondition_1 = require(\"./meetingsession/MeetingSessionLifecycleEventCondition\");\nexports.MeetingSessionLifecycleEventCondition = MeetingSessionLifecycleEventCondition_1.default;\nconst MeetingSessionStatus_1 = require(\"./meetingsession/MeetingSessionStatus\");\nexports.MeetingSessionStatus = MeetingSessionStatus_1.default;\nconst MeetingSessionStatusCode_1 = require(\"./meetingsession/MeetingSessionStatusCode\");\nexports.MeetingSessionStatusCode = MeetingSessionStatusCode_1.default;\nconst MeetingSessionTURNCredentials_1 = require(\"./meetingsession/MeetingSessionTURNCredentials\");\nexports.MeetingSessionTURNCredentials = MeetingSessionTURNCredentials_1.default;\nconst MeetingSessionURLs_1 = require(\"./meetingsession/MeetingSessionURLs\");\nexports.MeetingSessionURLs = MeetingSessionURLs_1.default;\nconst MeetingSessionVideoAvailability_1 = require(\"./meetingsession/MeetingSessionVideoAvailability\");\nexports.MeetingSessionVideoAvailability = MeetingSessionVideoAvailability_1.default;\nconst Message_1 = require(\"./message/Message\");\nexports.Message = Message_1.default;\nconst MessagingSessionConfiguration_1 = require(\"./messagingsession/MessagingSessionConfiguration\");\nexports.MessagingSessionConfiguration = MessagingSessionConfiguration_1.default;\nconst ModelSpecBuilder_1 = require(\"./backgroundblurprocessor/ModelSpecBuilder\");\nexports.ModelSpecBuilder = ModelSpecBuilder_1.default;\nconst MonitorTask_1 = require(\"./task/MonitorTask\");\nexports.MonitorTask = MonitorTask_1.default;\nconst MultiLogger_1 = require(\"./logger/MultiLogger\");\nexports.MultiLogger = MultiLogger_1.default;\nconst NScaleVideoUplinkBandwidthPolicy_1 = require(\"./videouplinkbandwidthpolicy/NScaleVideoUplinkBandwidthPolicy\");\nexports.NScaleVideoUplinkBandwidthPolicy = NScaleVideoUplinkBandwidthPolicy_1.default;\nconst NoOpAudioVideoController_1 = require(\"./audiovideocontroller/NoOpAudioVideoController\");\nexports.NoOpAudioVideoController = NoOpAudioVideoController_1.default;\nconst NoOpDebugLogger_1 = require(\"./logger/NoOpDebugLogger\");\nexports.NoOpDebugLogger = NoOpDebugLogger_1.default;\nconst NoOpDeviceController_1 = require(\"./devicecontroller/NoOpDeviceController\");\nexports.NoOpDeviceController = NoOpDeviceController_1.default;\nconst NoOpEventReporter_1 = require(\"./eventreporter/NoOpEventReporter\");\nexports.NoOpEventReporter = NoOpEventReporter_1.default;\nconst NoOpLogger_1 = require(\"./logger/NoOpLogger\");\nexports.NoOpLogger = NoOpLogger_1.default;\nconst NoOpMediaStreamBroker_1 = require(\"./mediastreambroker/NoOpMediaStreamBroker\");\nexports.NoOpMediaStreamBroker = NoOpMediaStreamBroker_1.default;\nconst NoOpTask_1 = require(\"./task/NoOpTask\");\nexports.NoOpTask = NoOpTask_1.default;\nconst NoOpVideoElementFactory_1 = require(\"./videoelementfactory/NoOpVideoElementFactory\");\nexports.NoOpVideoElementFactory = NoOpVideoElementFactory_1.default;\nconst NoOpVideoFrameProcessor_1 = require(\"./videoframeprocessor/NoOpVideoFrameProcessor\");\nexports.NoOpVideoFrameProcessor = NoOpVideoFrameProcessor_1.default;\nconst NoVideoDownlinkBandwidthPolicy_1 = require(\"./videodownlinkbandwidthpolicy/NoVideoDownlinkBandwidthPolicy\");\nexports.NoVideoDownlinkBandwidthPolicy = NoVideoDownlinkBandwidthPolicy_1.default;\nconst NoVideoUplinkBandwidthPolicy_1 = require(\"./videouplinkbandwidthpolicy/NoVideoUplinkBandwidthPolicy\");\nexports.NoVideoUplinkBandwidthPolicy = NoVideoUplinkBandwidthPolicy_1.default;\nconst NotFoundError_1 = require(\"./devicecontroller/NotFoundError\");\nexports.NotFoundError = NotFoundError_1.default;\nconst NotReadableError_1 = require(\"./devicecontroller/NotReadableError\");\nexports.NotReadableError = NotReadableError_1.default;\nconst OnceTask_1 = require(\"./task/OnceTask\");\nexports.OnceTask = OnceTask_1.default;\nconst OpenSignalingConnectionTask_1 = require(\"./task/OpenSignalingConnectionTask\");\nexports.OpenSignalingConnectionTask = OpenSignalingConnectionTask_1.default;\nconst OverconstrainedError_1 = require(\"./devicecontroller/OverconstrainedError\");\nexports.OverconstrainedError = OverconstrainedError_1.default;\nconst POSTLogger_1 = require(\"./logger/POSTLogger\");\nexports.POSTLogger = POSTLogger_1.default;\nconst ParallelGroupTask_1 = require(\"./task/ParallelGroupTask\");\nexports.ParallelGroupTask = ParallelGroupTask_1.default;\nconst PermissionDeniedError_1 = require(\"./devicecontroller/PermissionDeniedError\");\nexports.PermissionDeniedError = PermissionDeniedError_1.default;\nconst PrefetchOn_1 = require(\"./messagingsession/PrefetchOn\");\nexports.PrefetchOn = PrefetchOn_1.default;\nconst PrefetchSortBy_1 = require(\"./messagingsession/PrefetchSortBy\");\nexports.PrefetchSortBy = PrefetchSortBy_1.default;\nconst PromiseQueue_1 = require(\"./utils/PromiseQueue\");\nexports.PromiseQueue = PromiseQueue_1.default;\nconst PromoteToPrimaryMeetingTask_1 = require(\"./task/PromoteToPrimaryMeetingTask\");\nexports.PromoteToPrimaryMeetingTask = PromoteToPrimaryMeetingTask_1.default;\nconst RealtimeAttendeePositionInFrame_1 = require(\"./realtimecontroller/RealtimeAttendeePositionInFrame\");\nexports.RealtimeAttendeePositionInFrame = RealtimeAttendeePositionInFrame_1.default;\nconst RealtimeState_1 = require(\"./realtimecontroller/RealtimeState\");\nexports.RealtimeState = RealtimeState_1.default;\nconst RealtimeVolumeIndicator_1 = require(\"./realtimecontroller/RealtimeVolumeIndicator\");\nexports.RealtimeVolumeIndicator = RealtimeVolumeIndicator_1.default;\nconst ReceiveAudioInputTask_1 = require(\"./task/ReceiveAudioInputTask\");\nexports.ReceiveAudioInputTask = ReceiveAudioInputTask_1.default;\nconst ReceiveTURNCredentialsTask_1 = require(\"./task/ReceiveTURNCredentialsTask\");\nexports.ReceiveTURNCredentialsTask = ReceiveTURNCredentialsTask_1.default;\nconst ReceiveVideoInputTask_1 = require(\"./task/ReceiveVideoInputTask\");\nexports.ReceiveVideoInputTask = ReceiveVideoInputTask_1.default;\nconst ReceiveVideoStreamIndexTask_1 = require(\"./task/ReceiveVideoStreamIndexTask\");\nexports.ReceiveVideoStreamIndexTask = ReceiveVideoStreamIndexTask_1.default;\nconst ReconnectionHealthPolicy_1 = require(\"./connectionhealthpolicy/ReconnectionHealthPolicy\");\nexports.ReconnectionHealthPolicy = ReconnectionHealthPolicy_1.default;\nconst RunnableTask_1 = require(\"./task/RunnableTask\");\nexports.RunnableTask = RunnableTask_1.default;\nconst SDP_1 = require(\"./sdp/SDP\");\nexports.SDP = SDP_1.default;\nconst SDPCandidateType_1 = require(\"./sdp/SDPCandidateType\");\nexports.SDPCandidateType = SDPCandidateType_1.default;\nconst SDPMediaSection_1 = require(\"./sdp/SDPMediaSection\");\nexports.SDPMediaSection = SDPMediaSection_1.default;\nconst SendAndReceiveDataMessagesTask_1 = require(\"./task/SendAndReceiveDataMessagesTask\");\nexports.SendAndReceiveDataMessagesTask = SendAndReceiveDataMessagesTask_1.default;\nconst SendingAudioFailureConnectionHealthPolicy_1 = require(\"./connectionhealthpolicy/SendingAudioFailureConnectionHealthPolicy\");\nexports.SendingAudioFailureConnectionHealthPolicy = SendingAudioFailureConnectionHealthPolicy_1.default;\nconst SerialGroupTask_1 = require(\"./task/SerialGroupTask\");\nexports.SerialGroupTask = SerialGroupTask_1.default;\nconst ServerSideNetworkAdaption_1 = require(\"./signalingclient/ServerSideNetworkAdaption\");\nexports.ServerSideNetworkAdaption = ServerSideNetworkAdaption_1.default;\nconst SessionStateControllerAction_1 = require(\"./sessionstatecontroller/SessionStateControllerAction\");\nexports.SessionStateControllerAction = SessionStateControllerAction_1.default;\nconst SessionStateControllerDeferPriority_1 = require(\"./sessionstatecontroller/SessionStateControllerDeferPriority\");\nexports.SessionStateControllerDeferPriority = SessionStateControllerDeferPriority_1.default;\nconst SessionStateControllerState_1 = require(\"./sessionstatecontroller/SessionStateControllerState\");\nexports.SessionStateControllerState = SessionStateControllerState_1.default;\nconst SessionStateControllerTransitionResult_1 = require(\"./sessionstatecontroller/SessionStateControllerTransitionResult\");\nexports.SessionStateControllerTransitionResult = SessionStateControllerTransitionResult_1.default;\nconst SetLocalDescriptionTask_1 = require(\"./task/SetLocalDescriptionTask\");\nexports.SetLocalDescriptionTask = SetLocalDescriptionTask_1.default;\nconst SetRemoteDescriptionTask_1 = require(\"./task/SetRemoteDescriptionTask\");\nexports.SetRemoteDescriptionTask = SetRemoteDescriptionTask_1.default;\nconst SignalingAndMetricsConnectionMonitor_1 = require(\"./connectionmonitor/SignalingAndMetricsConnectionMonitor\");\nexports.SignalingAndMetricsConnectionMonitor = SignalingAndMetricsConnectionMonitor_1.default;\nconst SignalingClientConnectionRequest_1 = require(\"./signalingclient/SignalingClientConnectionRequest\");\nexports.SignalingClientConnectionRequest = SignalingClientConnectionRequest_1.default;\nconst SignalingClientEvent_1 = require(\"./signalingclient/SignalingClientEvent\");\nexports.SignalingClientEvent = SignalingClientEvent_1.default;\nconst SignalingClientEventType_1 = require(\"./signalingclient/SignalingClientEventType\");\nexports.SignalingClientEventType = SignalingClientEventType_1.default;\nconst SignalingClientJoin_1 = require(\"./signalingclient/SignalingClientJoin\");\nexports.SignalingClientJoin = SignalingClientJoin_1.default;\nconst SignalingClientSubscribe_1 = require(\"./signalingclient/SignalingClientSubscribe\");\nexports.SignalingClientSubscribe = SignalingClientSubscribe_1.default;\nconst SignalingClientVideoSubscriptionConfiguration_1 = require(\"./signalingclient/SignalingClientVideoSubscriptionConfiguration\");\nexports.SignalingClientVideoSubscriptionConfiguration = SignalingClientVideoSubscriptionConfiguration_1.default;\nconst SimulcastContentShareTransceiverController_1 = require(\"./transceivercontroller/SimulcastContentShareTransceiverController\");\nexports.SimulcastContentShareTransceiverController = SimulcastContentShareTransceiverController_1.default;\nconst SimulcastLayers_1 = require(\"./simulcastlayers/SimulcastLayers\");\nexports.SimulcastLayers = SimulcastLayers_1.default;\nconst SimulcastTransceiverController_1 = require(\"./transceivercontroller/SimulcastTransceiverController\");\nexports.SimulcastTransceiverController = SimulcastTransceiverController_1.default;\nconst SimulcastVideoStreamIndex_1 = require(\"./videostreamindex/SimulcastVideoStreamIndex\");\nexports.SimulcastVideoStreamIndex = SimulcastVideoStreamIndex_1.default;\nconst SingleNodeAudioTransformDevice_1 = require(\"./devicecontroller/SingleNodeAudioTransformDevice\");\nexports.SingleNodeAudioTransformDevice = SingleNodeAudioTransformDevice_1.default;\nconst StreamMetricReport_1 = require(\"./clientmetricreport/StreamMetricReport\");\nexports.StreamMetricReport = StreamMetricReport_1.default;\nconst SubscribeAndReceiveSubscribeAckTask_1 = require(\"./task/SubscribeAndReceiveSubscribeAckTask\");\nexports.SubscribeAndReceiveSubscribeAckTask = SubscribeAndReceiveSubscribeAckTask_1.default;\nconst TargetDisplaySize_1 = require(\"./videodownlinkbandwidthpolicy/TargetDisplaySize\");\nexports.TargetDisplaySize = TargetDisplaySize_1.default;\nconst TaskStatus_1 = require(\"./task/TaskStatus\");\nexports.TaskStatus = TaskStatus_1.default;\nconst TimeoutScheduler_1 = require(\"./scheduler/TimeoutScheduler\");\nexports.TimeoutScheduler = TimeoutScheduler_1.default;\nconst TimeoutTask_1 = require(\"./task/TimeoutTask\");\nexports.TimeoutTask = TimeoutTask_1.default;\nconst Transcript_1 = require(\"./transcript/Transcript\");\nexports.Transcript = Transcript_1.default;\nconst TranscriptAlternative_1 = require(\"./transcript/TranscriptAlternative\");\nexports.TranscriptAlternative = TranscriptAlternative_1.default;\nconst TranscriptEntity_1 = require(\"./transcript/TranscriptEntity\");\nexports.TranscriptEntity = TranscriptEntity_1.default;\nconst TranscriptItem_1 = require(\"./transcript/TranscriptItem\");\nexports.TranscriptItem = TranscriptItem_1.default;\nconst TranscriptItemType_1 = require(\"./transcript/TranscriptItemType\");\nexports.TranscriptItemType = TranscriptItemType_1.default;\nconst TranscriptLanguageWithScore_1 = require(\"./transcript/TranscriptLanguageWithScore\");\nexports.TranscriptLanguageWithScore = TranscriptLanguageWithScore_1.default;\nconst TranscriptResult_1 = require(\"./transcript/TranscriptResult\");\nexports.TranscriptResult = TranscriptResult_1.default;\nconst TranscriptionStatus_1 = require(\"./transcript/TranscriptionStatus\");\nexports.TranscriptionStatus = TranscriptionStatus_1.default;\nconst TranscriptionStatusType_1 = require(\"./transcript/TranscriptionStatusType\");\nexports.TranscriptionStatusType = TranscriptionStatusType_1.default;\nconst TypeError_1 = require(\"./devicecontroller/TypeError\");\nexports.TypeError = TypeError_1.default;\nconst UnusableAudioWarningConnectionHealthPolicy_1 = require(\"./connectionhealthpolicy/UnusableAudioWarningConnectionHealthPolicy\");\nexports.UnusableAudioWarningConnectionHealthPolicy = UnusableAudioWarningConnectionHealthPolicy_1.default;\nconst Versioning_1 = require(\"./versioning/Versioning\");\nexports.Versioning = Versioning_1.default;\nconst VideoAdaptiveProbePolicy_1 = require(\"./videodownlinkbandwidthpolicy/VideoAdaptiveProbePolicy\");\nexports.VideoAdaptiveProbePolicy = VideoAdaptiveProbePolicy_1.default;\nconst VideoCodecCapability_1 = require(\"./sdp/VideoCodecCapability\");\nexports.VideoCodecCapability = VideoCodecCapability_1.default;\nconst VideoLogEvent_1 = require(\"./statscollector/VideoLogEvent\");\nexports.VideoLogEvent = VideoLogEvent_1.default;\nconst VideoOnlyTransceiverController_1 = require(\"./transceivercontroller/VideoOnlyTransceiverController\");\nexports.VideoOnlyTransceiverController = VideoOnlyTransceiverController_1.default;\nconst VideoPreference_1 = require(\"./videodownlinkbandwidthpolicy/VideoPreference\");\nexports.VideoPreference = VideoPreference_1.default;\nconst VideoPreferences_1 = require(\"./videodownlinkbandwidthpolicy/VideoPreferences\");\nexports.VideoPreferences = VideoPreferences_1.default;\nconst VideoPriorityBasedPolicy_1 = require(\"./videodownlinkbandwidthpolicy/VideoPriorityBasedPolicy\");\nexports.VideoPriorityBasedPolicy = VideoPriorityBasedPolicy_1.default;\nconst VideoPriorityBasedPolicyConfig_1 = require(\"./videodownlinkbandwidthpolicy/VideoPriorityBasedPolicyConfig\");\nexports.VideoPriorityBasedPolicyConfig = VideoPriorityBasedPolicyConfig_1.default;\nconst VideoQualitySettings_1 = require(\"./devicecontroller/VideoQualitySettings\");\nexports.VideoQualitySettings = VideoQualitySettings_1.default;\nconst VideoSource_1 = require(\"./videosource/VideoSource\");\nexports.VideoSource = VideoSource_1.default;\nconst VideoStreamDescription_1 = require(\"./videostreamindex/VideoStreamDescription\");\nexports.VideoStreamDescription = VideoStreamDescription_1.default;\nconst VideoTileState_1 = require(\"./videotile/VideoTileState\");\nexports.VideoTileState = VideoTileState_1.default;\nconst VoiceFocusDeviceTransformer_1 = require(\"./voicefocus/VoiceFocusDeviceTransformer\");\nexports.VoiceFocusDeviceTransformer = VoiceFocusDeviceTransformer_1.default;\nconst VoiceFocusTransformDevice_1 = require(\"./voicefocus/VoiceFocusTransformDevice\");\nexports.VoiceFocusTransformDevice = VoiceFocusTransformDevice_1.default;\nconst WaitForAttendeePresenceTask_1 = require(\"./task/WaitForAttendeePresenceTask\");\nexports.WaitForAttendeePresenceTask = WaitForAttendeePresenceTask_1.default;\nconst WebSocketReadyState_1 = require(\"./websocketadapter/WebSocketReadyState\");\nexports.WebSocketReadyState = WebSocketReadyState_1.default;\nconst ZLIBTextCompressor_1 = require(\"./sdp/ZLIBTextCompressor\");\nexports.ZLIBTextCompressor = ZLIBTextCompressor_1.default;\nconst VideoPreferences_2 = require(\"./videodownlinkbandwidthpolicy/VideoPreferences\");\nObject.defineProperty(exports, \"MutableVideoPreferences\", { enumerable: true, get: function () { return VideoPreferences_2.MutableVideoPreferences; } });\nconst Types_1 = require(\"./utils/Types\");\nObject.defineProperty(exports, \"Some\", { enumerable: true, get: function () { return Types_1.Some; } });\nObject.defineProperty(exports, \"None\", { enumerable: true, get: function () { return Types_1.None; } });\nObject.defineProperty(exports, \"Maybe\", { enumerable: true, get: function () { return Types_1.Maybe; } });\nconst AudioTransformDevice_1 = require(\"./devicecontroller/AudioTransformDevice\");\nObject.defineProperty(exports, \"isAudioTransformDevice\", { enumerable: true, get: function () { return AudioTransformDevice_1.isAudioTransformDevice; } });\nconst Destroyable_1 = require(\"./destroyable/Destroyable\");\nObject.defineProperty(exports, \"isDestroyable\", { enumerable: true, get: function () { return Destroyable_1.isDestroyable; } });\nconst VideoTransformDevice_1 = require(\"./devicecontroller/VideoTransformDevice\");\nObject.defineProperty(exports, \"isVideoTransformDevice\", { enumerable: true, get: function () { return VideoTransformDevice_1.isVideoTransformDevice; } });\n//# sourceMappingURL=index.js.map"],"names":["Object","defineProperty","DefaultVideoStreamIdSet_1","value","DefaultVideoStreamIdSet","constructor","ids","this","Set","add","streamId","array","Array","from","values","sort","a","b","contain","has","forEach","callbackFn","empty","size","equal","other","x","y","length","i","clone","remove","delete","toJSON","truncate","splice","DefaultVideoStreamIdSet$1","default","AllHighestVideoBandwidthPolicy_1","require$$0","AllHighestVideoBandwidthPolicy","selfAttendeeId","reset","optimalReceiveSet","subscribedReceiveSet","videoSources","undefined","updateIndex","videoIndex","calculateOptimalReceiveSet","updateMetrics","_clientMetricReport","wantsResubscribe","chooseSubscriptions","chooseRemoteVideoSources","streamSelectionSet","allStreams","receiveSet","highestQualityStreamFromEachGroupExcludingSelf","remoteInfos","remoteStreamDescriptions","mapOfAttendeeIdToOptimalStreamId","Map","info","set","attendeeId","videoSource","attendee","get","AllHighestVideoBandwidthPolicy$1","ApplicationMetadata_1","ApplicationMetadata","appName","appVersion","static","APP_NAME_REGEX","Error","test","ApplicationMetadata$1","TimeoutScheduler_1","TimeoutScheduler","timeoutMs","timer","start","callback","stop","setTimeout","clearTimeout","TimeoutScheduler$1","AsyncScheduler_1","AsyncScheduler","super","AsyncScheduler$1","VideoLogEvent","exports","LogLevel","OnceTask_1","LogLevel_1","require$$1","OnceTask","logger","task","dependencies","canceled","name","cancel","dep","nextTick","cancelPromise","logDependencies","getLogLevel","INFO","names","filter","d","map","join","run","promise","Promise","all","resolve","ongoing","then","reject","catch","setParent","parentTask","OnceTask$1","TaskStatus","TaskStatus_1","TaskStatus$1","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","next","e","rejected","result","done","apply","BaseTask_1","BaseTask","taskName","status","IDLE","baseRun","bind","baseCancel","once","getStatus","logAndThrow","message","originalRun","startTime","Date","now","RUNNING","CANCELED","FINISHED","call","Math","round","err","originalCancel","BaseTask$1","AttachMediaInputTask_1","VideoLogEvent_1","AttachMediaInputTask","context","transceiverController","setPeer","peer","setupLocalTransceivers","audioInput","activeAudioInput","audioTracks","getAudioTracks","setAudioInput","videoInput","activeVideoInput","videoTracks","getVideoTracks","videoTrack","setVideoInput","enableSimulcast","videoUplinkBandwidthPolicy","encodingParam","chooseEncodingParameters","setEncodingParameters","statsCollector","logVideoEvent","InputAttached","videoDeviceInformation","videoSubscriptions","updateVideoTransceivers","videoStreamIndex","videosToReceive","AttachMediaInputTask$1","Attendee_1","Attendee","Attendee$1","AudioLogEvent","AudioProfile_1","AudioProfile","audioBitrateBps","isStereo","AudioProfile$1","DEFAULT_VIDEO_SUBSCRIPTION_LIMIT","browserBehavior","meetingSessionConfiguration","signalingClient","previousSdpOffer","sdpOfferInit","audioVideoController","realtimeController","videoTileController","mediaStreamBroker","audioMixController","indexFrame","iceCandidates","iceCandidateHandler","iceGatheringStateEventHandler","sdpAnswer","turnCredentials","reconnectController","removableObservers","audioProfile","videoDownlinkBandwidthPolicy","lastKnownVideoAvailability","videoCaptureAndEncodeParameter","lastVideosToReceive","videoSubscriptionLimit","previousSdpAnswerAsString","serverSupportsCompression","videoSendCodecPreferences","currentVideoSendCodec","meetingSupportedVideoSendCodecPreferences","videosPaused","videoDuplexMode","volumeIndicatorAdapter","connectionMonitor","videoInputAttachedTimestampMs","audioDeviceInformation","eventController","signalingOpenDurationMs","iceGatheringDurationMs","startAudioVideoTimestamp","attendeePresenceDurationMs","meetingStartDurationMs","poorConnectionCount","maxVideoTileCount","startTimeMs","resetConnectionSpecificState","close","BackgroundBlurStrength","BlurStrengthMapper","BlurStrength","LOW","MEDIUM","HIGH","bstrength","options","height","BLUR_STRENGTH_DIVISOR","fetchWithBehavior","url","init","fetchBehavior","fetch","withQuery","withQueryString","withHeaders","withRequestHeaders","headers","assign","escapedQueryString","hasQuery","lastIndexOf","addQueryParams","queryParams","keys","params","URLSearchParams","key","append","toString","fetch_1","isValidRevisionID","isValidAssetGroup","resolveURL","fetch$1","HEAD_OPTIONS","method","mode","credentials","redirect","referrerPolicy","response","redirected","assetGroup","revisionID","loader","loadWorker","fetch_js_1","WORKER_FETCH_OPTIONS","workerURL","debug","workerURLIsSameOrigin","self","origin","URL","error","workerURLWithQuery","Worker","res","ok","blob","window","createObjectURL","isOldChrome","supportsWASMStreaming","supportsSharedArrayBuffer","supportsWASM","supportsAudioWorklet","supportsWorker","supportsWASMPostMessage","isSafari","loader_js_1","global","globalThis","ua","navigator","userAgent","hasSafari","match","hasChrome","isChrome","chromeVersion","supportsVoiceFocusWorker","scope","fetchConfig","paths","workers","worker","terminate","AudioWorklet","AudioWorkletNode","WebAssembly","compile","compileStreaming","SharedArrayBuffer","chrome","crossOriginIsolated","_a","versionCheck","parseInt","version","ModelSpecBuilder_1","ModelSpecBuilder","path","input","output","withDefaultModel","withSelfieSegmentationDefaults","width","range","channels","withPath","withInput","withOutput","validate","build","ModelSpecBuilder$1","__spreadArray","to","pack","arguments","ar","l","prototype","slice","concat","BrowserInfo","os","type","NodeInfo","process","platform","SearchBotDeviceInfo","bot","BotInfo","ReactNativeInfo","SEARCHBOX_UA_REGEX","SEARCHBOT_OS_REGEX","REQUIRED_VERSION_PARTS","userAgentRules","operatingSystemRules","detect","parseUserAgent","document","product","getNodeVersion","matchUserAgent","reduce","matched","browser","regex","uaMatch","exec","browserName","data","matchedRule","versionParts","split","createVersionParts","detectOS","searchBotMatch","ii","count","push","FUNC_TYPE","UNDEF_TYPE","OBJ_TYPE","STR_TYPE","MODEL","NAME","TYPE","VENDOR","VERSION","ARCHITECTURE","CONSOLE","MOBILE","TABLET","SMARTTV","WEARABLE","EMBEDDED","AMAZON","APPLE","ASUS","BLACKBERRY","BROWSER","CHROME","FIREFOX","GOOGLE","HUAWEI","LG","MICROSOFT","MOTOROLA","OPERA","SAMSUNG","SHARP","SONY","XIAOMI","ZEBRA","FACEBOOK","enumerize","arr","enums","toUpperCase","str1","str2","lowerize","indexOf","str","toLowerCase","trim","len","replace","substring","rgxMapper","arrays","j","k","p","q","matches","props","strMapper","windowsVersionMap","ME","XP","Vista","RT","regexes","cpu","device","engine","EDGE","UAParser","extensions","getResult","_ua","_rgxmap","mergedRegexes","extend","getBrowser","_browser","major","majorize","getCPU","_cpu","getDevice","_device","getEngine","_engine","getOS","_os","getUA","setUA","CPU","DEVICE","ENGINE","OS","module","$","jQuery","Zepto","parser","prop","DefaultBrowserBehavior_1","detect_browser_1","ua_parser_js_1","DefaultBrowserBehavior","uaParserResult","browserSupport","electron","firefox","ios","safari","opera","samsung","crios","fxios","chromeLike","webkitBrowsers","majorVersion","osMajorVersion","hasChromiumWebRTC","hasWebKitWebRTC","hasFirefoxWebRTC","isFirefox","requiresPlaybackLatencyHintForAudioContext","supportsCanvasCapturedStreamPlayback","isIOSSafari","isIOSChrome","isIOSFirefox","isIOSEdge","MIN_IOS_SUPPORT_CANVAS_STREAM_PLAYBACK","MIN_IOS_NON_SAFARI_SUPPORT_CANVAS_STREAM_PLAYBACK","supportsBackgroundFilter","supportsVideoLayersAllocationRtpHeaderExtension","requiresResolutionAlignment","isAndroid","isPixel3","ceil","requiresCheckForSdpConnectionAttributes","requiresIceCandidateGatheringTimeoutWorkaround","requiresBundlePolicy","requiresNoExactMediaStreamConstraints","isSamsungInternet","requiresGroupIdMediaStreamConstraints","getDisplayMediaAudioCaptureSupport","isEdge","doesNotSupportMediaDeviceLabels","isSupported","isSimulcastSupported","supportDownlinkBandwidthEstimation","supportString","s","supportedVideoCodecs","pc","RTCPeerConnection","addTransceiver","direction","streams","createOffer","offerToReceiveVideo","sdp","includes","v","supportsSetSinkId","HTMLAudioElement","disableResolutionScaleDown","disable480pResolutionScaleDown","startsWith","requiresDisablingH264Encoding","requiresVideoPlayWorkaround","maxTouchPoints","DefaultBrowserBehavior$1","version$2","hash","raw","semverString","Versioning_1","version_1","Versioning","sdkName","sdkVersion","sdkVersionSemVer","_b","_c","_d","groups","minor","patch","preRelease","buildSHA","substr","sdkUserAgentLowResolution","urlWithVersion","searchParams","X_AMZN_VERSION","X_AMZN_USER_AGENT","Versioning$1","BackgroundFilterVideoFrameProcessor_1","loader_1","support_1","require$$2","require$$3","require$$4","CREATE_DEFAULT_MODEL_SPEC","builder","DEFAULT_CDN","DEFAULT_PATHS","wasm","simd","BackgroundFilterVideoFrameProcessor","u","spec","model","defaultAssetSpec","sdk","encodeURIComponent","createUrlWithParams","reportingPeriodMillis","filterCPUUtilization","warn","BackgroundFilterVideoFrameProcessor$1","ConsoleLogger_1","ConsoleLogger","level","WARN","msg","log","ERROR","debugFunction","DEBUG","setLogLevel","logMessage","toISOString","console","ConsoleLogger$1","NoOpVideoFrameProcessor_1","NoOpVideoFrameProcessor","buffers","destroy","NoOpVideoFrameProcessor$1","CanvasVideoFrameBuffer_1","CanvasVideoFrameBuffer","canvas","destroyed","asCanvasImageSource","asCanvasElement","CanvasVideoFrameBuffer$1","BackgroundFilterFrameCounter_1","FILTER_DURATION_FACTOR","BackgroundFilterFrameCounter","delegate","_processingFilter","lastReportedEventTimestamp","lastFilterCompleteTimestamp","filterTotalMillis","filterCount","framerate","filterDurationNotifyMillis","setSegmentationDuration","reportEvent","timestamp","timeDiff","currentFilterCount","currentFilterTotalMillis","avgFilterDurationMillis","framesDropped","cpuUtilization","filterFrameDurationHigh","periodMillis","filterCPUUtilizationHigh","filterMillis","frameReceived","filterSubmitted","filterComplete","processingSegment","BackgroundFilterFrameCounter$1","BackgroundFilterProcessor_1","BackgroundFilterMonitor","DeferredObservable","whenNext","BackgroundFilterProcessor","filterType","targetCanvas","createElement","canvasCtx","getContext","canvasVideoFrameBuffer","mask$","sourceWidth","sourceHeight","frameNumber","videoFramesPerFilterUpdate","initWorkerPromise","createWorkerPromise","loadModelPromise","modelInitialized","validateSpec","validateOptions","initCPUMonitor","resolver","frameCounter","cpuMonitor","reduceCPUUtilization","updateVideoFramesPerFilterUpdate","min","increaseCPUUtilization","max","addObserver","stringify","JSON","handleInitialize","payload","postMessage","modelUrl","inputHeight","inputWidth","inputChannels","modelRangeMin","modelRangeMax","blurPixels","handleLoadModel","handlePredict","handleWorkerEvent","evt","loadAssets","addEventListener","ev","wasmPath","simdPath","inputCanvas","frameWidth","frameHeight","initOnFirstExecution","mask","hscale","vscale","scaledCanvas","scaledCtx","save","scale","drawImage","restore","imageData","getImageData","maskPromise","buffer","drawImageWithMask","newRate","removeObserver","BackgroundFilterProcessor$1","monitoringPeriodMillis","observer","lastCPUChangeTimestamp","BackgroundFilterVideoFrameProcessorDelegate_1","BackgroundFilterVideoFrameProcessorDelegate","observers","event","BackgroundFilterVideoFrameProcessorDelegate$1","BackgroundBlurVideoFrameProcessorDelegate_1","BackgroundBlurVideoFrameProcessorDelegate","BackgroundBlurVideoFrameProcessorDelegate$1","BackgroundBlurProcessorProvided_1","BackgroundBlurStrength_1","BackgroundBlurProcessorProvided","blurAmount","setBlurStrength","blurStrength","setBlurPixels","ImageData","putImageData","clearRect","globalCompositeOperation","_blurStrength","getBlurAmount","supportsBlurFilter","BackgroundBlurProcessorProvided$1","BackgroundBlurProcessorBuiltIn_1","BackgroundBlurProcessorBuiltIn","blurCanvas","blurCanvasCtx","blurredImage","blurOutput","_super","create","BackgroundBlurProcessorBuiltIn$1","BackgroundBlurVideoFrameProcessor_1","require$$5","require$$6","NoOpBackgroundBlurProcessor","BackgroundBlurVideoFrameProcessor","resolveSpec","resolveOptions","supported","processor","processorOptions","BackgroundBlurVideoFrameProcessor$1","BackgroundReplacementVideoFrameProcessorDelegate_1","BackgroundReplacementVideoFrameProcessorDelegate","BackgroundReplacementVideoFrameProcessorDelegate$1","BackgroundReplacementFilter_1","BackgroundReplacementFilter","replacementBlob","imageBlob","setImageBlob","replacementImage","loadImage","createReplacementObjectUrl","imageUrl","image","Image","crossOrigin","src","loadImageExecutor","revokeReplacementObjectUrl","replacementObjectUrl","revokeObjectURL","BackgroundReplacementFilter$1","BackgroundReplacementVideoFrameProcessor_1","NoOpBackgroundReplacementProcessor","BackgroundReplacementVideoFrameProcessor","resolveOptionsAsync","ctx","fillStyle","fillRect","toBlob","BackgroundReplacementVideoFrameProcessor$1","BaseConnectionHealthPolicy_1","BaseConnectionHealthPolicy","configuration","minHealth","maxHealth","currentHealth","initialHealth","currentData","minimumHealth","maximumHealth","health","update","connectionHealthData","getConnectionHealthData","healthy","healthIfChanged","newHealth","BaseConnectionHealthPolicy$1","BitrateParameters_1","BitrateParameters","BitrateParameters$1","CSPMonitor_1","CSPMonitor","shouldRegisterCSPMonitor","added","listener","removeEventListener","loggers","unregister","CSPMonitor$1","blockedURI","violatedDirective","originalPolicy","documentURI","sourceFile","lineNumber","CheckAudioConnectivityFeedback","CheckAudioInputFeedback","CheckAudioOutputFeedback","CheckCameraResolutionFeedback","CheckContentShareConnectivityFeedback","CheckNetworkTCPConnectivityFeedback","CheckNetworkUDPConnectivityFeedback","CheckVideoConnectivityFeedback","CheckVideoInputFeedback","CleanRestartedSessionTask_1","CleanRestartedSessionTask","CleanRestartedSessionTask$1","SignalingClientEventType","CleanStoppedSessionTask_1","SignalingClientEventType_1","CleanStoppedSessionTask","taskCanceler","ready","closeConnection","receiveWebSocketClosedEvent","setTransceiverController","bindToTileController","tile","getLocalVideoTile","bindVideoStream","removeAllVideoTiles","interceptor","handleSignalingClientEvent","WebSocketClosed","registerObserver","CleanStoppedSessionTask$1","aspromise","fn","offset","index","pending","base64","string","n","charAt","b64","s64","encode","end","t","parts","chunk","String","fromCharCode","invalidEncoding","decode","c","charCodeAt","EventEmitter","_listeners","eventemitter","on","off","listeners","emit","args","factory","Float32Array","f32","f8b","Uint8Array","le","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","exponent","floor","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","float","inquire","moduleName","mod","eval","inquire_1","utf8","read","write","c1","c2","pool_1","alloc","SIZE","MAX","slab","longbits","LongBits","util","zero","toNumber","zzEncode","zzDecode","zeroHash","fromNumber","isString","Long","fromString","low","high","unsigned","toLong","Boolean","fromHash","toHash","part0","part1","part2","merge","dst","ifNotSet","newError","CustomError","properties","captureStackTrace","stack","asPromise","pool","require$$7","isNode","versions","node","emptyArray","freeze","emptyObject","isInteger","Number","isFinite","isObject","isset","isSet","obj","hasOwnProperty","isArray","Buffer","utf8Write","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","bits","fromBits","lcFirst","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","bytes","json","_configure","encoding","allocUnsafe","writer","Writer","BufferWriter","Op","noop","State","head","tail","states","writeByte","writeVarint32","VarintOp","writeVarint64","writeFixed32","subarray","_push","Writer$1","uint32","int32","sint32","uint64","int64","sint64","bool","fixed32","sfixed32","fixed64","sfixed64","double","writeBytes","fork","ldelim","finish","BufferWriter_","writer_buffer","writeStringBuffer","writeBytesBuffer","copy","byteLength","reader","Reader","BufferReader","indexOutOfRange","writeLength","RangeError","create_array","isBuffer","readLongVarint","readFixed32_end","readFixed64","Reader$1","_slice","skip","skipType","wireType","BufferReader_","reader_buffer","utf8Slice","service","Service","rpcImpl","requestDelimited","responseDelimited","TypeError","rpcCall","requestCtor","responseCtor","request","endedByRPC","roots","protobuf","configure","rpc","$protobuf","$Reader","$Writer","$util","$root","valuesById","SdkSignalFrame","timestampMs","joinack","sub","suback","pause","leave","leaveAck","bitrates","audioControl","audioMetadata","audioStreamIdInfo","pingPong","audioStatus","clientMetric","dataMessage","remoteVideoUpdate","primaryMeetingJoin","primaryMeetingJoinAck","primaryMeetingLeave","SdkErrorFrame","SdkJoinFrame","SdkJoinAckFrame","SdkSubscribeFrame","SdkSubscribeAckFrame","SdkIndexFrame","SdkPauseResumeFrame","SdkLeaveFrame","SdkLeaveAckFrame","SdkBitrateFrame","SdkAudioControlFrame","SdkAudioMetadataFrame","SdkAudioStreamIdInfoFrame","SdkPingPongFrame","SdkAudioStatusFrame","SdkClientMetricFrame","SdkDataMessageFrame","SdkRemoteVideoUpdateFrame","SdkPrimaryMeetingJoinFrame","SdkPrimaryMeetingJoinAckFrame","SdkPrimaryMeetingLeaveFrame","encodeDelimited","tag","instance","decodeDelimited","verify","fromObject","object","fromValue","toObject","defaults","long","Type","description","SdkJoinFlags","SdkClientDetails","deviceModel","deviceMake","platformName","platformVersion","clientSource","chimeSdkVersion","SdkServerSideNetworkAdaption","supportedServerSideNetworkAdaptions","protocolVersion","maxNumOfVideos","flags","clientDetails","audioSessionId","wantsCompressedSdp","serverSideNetworkAdaption","disablePeriodicKeyframeRequestOnContentSender","end2","defaultServerSideNetworkAdaption","SdkTurnCredentials","SdkStreamServiceType","SdkStreamMediaType","sendStreams","receiveStreamIds","videoSubscriptionConfiguration","duplex","sdpOffer","audioHost","audioCheckin","audioMuted","compressedSdpOffer","SdkStreamDescriptor","SdkVideoSubscriptionConfiguration","allocations","tracks","compressedSdpAnswer","SdkStreamAllocation","SdkTrackMapping","sources","pausedAtSourceIds","supportedReceiveCodecIntersection","atCapacity","numParticipants","SdkVideoCodecCapability","streamIds","groupIds","SdkBitrate","maxBitrateKbps","trackLabel","groupId","avgBitrateBps","mediaType","externalUserId","ssrc","sourceStreamId","muted","attendeeStates","SdkAudioAttendeeState","audioStreamId","volume","signalStrength","SdkAudioStreamIdInfo","dropped","SdkPingPongType","pingId","SdkMetric","SdkStreamMetricFrame","metrics","dimensions","SdkStreamDimension","globalMetrics","streamMetricFrames","SdkDimensionValue","stringValue","boolValue","uintValue","messages","SdkDataMessagePayload","topic","lifetimeMs","senderAttendeeId","ingestTimeNs","senderExternalUserId","uris","username","password","ttl","SdkTranscriptItem","content","endTime","speakerAttendeeId","speakerExternalUserId","vocabularyFilterMatch","confidence","stable","SdkTranscriptEntity","category","SdkTranscriptAlternative","items","entities","transcript","SdkTranscriptLanguageWithScore","languageCode","score","SdkTranscriptResult","alternatives","languageIdentification","channelId","isPartial","resultId","SdkTranscript","results","SdkTranscriptionStatus","eventTime","transcriptionRegion","transcriptionConfiguration","SdkTranscriptEvent","$oneOfFields","Event","oneofs","SdkTranscriptFrame","events","addedOrUpdatedVideoSubscriptions","removedVideoSubscriptionMids","mid","priority","targetBitrateKbps","SdkMeetingSessionCredentials","joinToken","SignalingProtocol","ClientMetricReportDirection","ClientMetricReportMediaType","GlobalMetricReport_1","GlobalMetricReport","previousMetrics","currentMetrics","currentStringMetrics","GlobalMetricReport$1","ClientMetricReport_1","SignalingProtocol_js_1","ClientMetricReportDirection_1","ClientMetricReportMediaType_1","ClientMetricReport","globalMetricReport","streamMetricReports","rtcStatsReport","currentTimestampMs","previousTimestampMs","currentSsrcs","identityValue","metricName","metricReport","decoderLossPercent","concealedSamples","totalSamplesReceived","packetLossPercent","sourceMetricName","sentOrReceived","lost","total","jitterBufferMs","jitterBufferDelay","jitterBufferEmittedCount","countPerSecond","intervalSeconds","diff","trunc","bitsPerSecond","secondsToMilliseconds","averageTimeSpentPerSecondInMilliseconds","isHardwareImplementation","implName","hasHwName","isFallback","globalMetricMap","retransmittedBytesSent","transform","VIDEO_RETRANSMIT_BITRATE","totalEncodedBytesTarget","VIDEO_TARGET_ENCODER_BITRATE","totalPacketSendDelay","VIDEO_BUCKET_DELAY_MS","packetsDiscardedOnSend","SOCKET_DISCARDED_PPS","availableIncomingBitrate","VIDEO_AVAILABLE_RECEIVE_BANDWIDTH","availableOutgoingBitrate","VIDEO_AVAILABLE_SEND_BANDWIDTH","currentRoundTripTime","STUN_RTT_MS","audioUpstreamMetricMap","jitter","RTC_MIC_JITTER_MS","packetsSent","RTC_MIC_PPS","bytesSent","RTC_MIC_BITRATE","roundTripTime","RTC_MIC_RTT_MS","packetsLost","RTC_MIC_FRACTION_PACKET_LOST_PERCENT","source","audioDownstreamMetricMap","decoderLoss","RTC_SPK_FRACTION_DECODER_LOSS_PERCENT","packetsReceived","RTC_SPK_PPS","RTC_SPK_FRACTION_PACKET_LOST_PERCENT","RTC_SPK_JITTER_MS","RTC_SPK_JITTER_BUFFER_MS","bytesReceived","RTC_SPK_BITRATE","videoUpstreamMetricMap","VIDEO_SENT_RTT_MS","nackCount","VIDEO_NACKS_RECEIVED","pliCount","VIDEO_PLIS_RECEIVED","firCount","VIDEO_FIRS_RECEIVED","framesPerSecond","VIDEO_INPUT_FPS","framesEncoded","VIDEO_ENCODE_FPS","VIDEO_SENT_PPS","VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT","VIDEO_SENT_BITRATE","qpSum","VIDEO_SENT_QP_SUM","VIDEO_ENCODE_HEIGHT","VIDEO_ENCODE_WIDTH","totalEncodeTime","VIDEO_ENCODE_MS","encoderImplementation","VIDEO_ENCODER_IS_HARDWARE","videoDownstreamMetricMap","VIDEO_RECEIVED_PPS","VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT","framesReceived","VIDEO_RECEIVED_FPS","framesDecoded","VIDEO_DECODE_FPS","VIDEO_NACKS_SENT","VIDEO_FIRS_SENT","VIDEO_PLIS_SENT","VIDEO_RECEIVED_BITRATE","VIDEO_RECEIVED_JITTER_MS","VIDEO_JITTER_BUFFER_MS","VIDEO_RECEIVED_QP_SUM","VIDEO_DECODE_HEIGHT","VIDEO_DECODE_WIDTH","totalDecodeTime","VIDEO_DECODE_MS","decoderImplementation","VIDEO_DECODER_IS_HARDWARE","streamDimensionMap","VIDEO_ENCODER_NAME","VIDEO_DECODER_NAME","observableVideoMetricSpec","videoUpstreamBitrate","media","VIDEO","dir","UPSTREAM","videoUpstreamPacketsSent","videoUpstreamPacketLossPercent","videoUpstreamFramesEncodedPerSecond","videoUpstreamFrameHeight","videoUpstreamFrameWidth","videoUpstreamJitterMs","videoUpstreamRoundTripTimeMs","videoDownstreamBitrate","DOWNSTREAM","videoDownstreamPacketLossPercent","videoDownstreamPacketsReceived","videoDownstreamFramesDecodedPerSecond","videoDownstreamFrameHeight","videoDownstreamFrameWidth","videoDownstreamJitterMs","videoDownstreamDelayMs","observableMetricSpec","audioPacketsReceived","AUDIO","audioPacketsReceivedFractionLoss","audioDecoderLoss","audioPacketsSent","audioPacketLossPercent","audioUpstreamRoundTripTimeMs","videoPacketSentPerSecond","audioSpeakerDelayMs","audioUpstreamJitterMs","audioDownstreamJitterMs","nackCountReceivedPerSecond","currentRoundTripTimeMs","getMetricMap","getStreamDimensionMap","getObservableMetricValue","metricSpec","streamMetricReport","getObservableVideoMetricValue","ssrcNum","getObservableMetrics","metric","getObservableVideoMetrics","videoStreamMetrics","metricValue","attendeeIdForStreamId","getRTCStatsReport","cloned","print","clientMetricReport","removeDestroyedSsrcs","ClientMetricReport$1","ClientVideoStreamReceivingReport_1","ClientVideoStreamReceivingReport","ClientVideoStreamReceivingReport$1","ConnectionHealthData_1","ConnectionHealthData","connectionStartTimestampMs","consecutiveStatsWithNoPackets","consecutiveStatsWithNoAudioPacketsSent","lastPacketLossInboundTimestampMs","lastGoodSignalTimestampMs","lastWeakSignalTimestampMs","lastNoSignalTimestampMs","consecutiveMissedPongs","packetsReceivedInLastMinute","fractionPacketsLostInboundInLastMinute","recentDurationMs","setConnectionStartTime","isConnectionStartRecent","isTimestampRecent","isLastPacketLossRecent","isGoodSignalRecent","isWeakSignalRecent","isNoSignalRecent","setConsecutiveMissedPongs","pongs","setConsecutiveStatsWithNoPackets","stats","setConsecutiveStatsWithNoAudioPacketsSent","setLastPacketLossInboundTimestampMs","timeStamp","setLastNoSignalTimestampMs","setLastWeakSignalTimestampMs","setLastGoodSignalTimestampMs","setAudioSpeakerDelayMs","delayMs","ConnectionHealthData$1","ConnectionHealthPolicyConfiguration_1","ConnectionHealthPolicyConfiguration","connectionUnhealthyThreshold","noSignalThresholdTimeMs","connectionWaitTimeMs","zeroBarsNoSignalTimeMs","oneBarWeakSignalTimeMs","twoBarsTimeMs","threeBarsTimeMs","fourBarsTimeMs","fiveBarsTimeMs","cooldownTimeMs","pastSamplesToConsider","goodSignalTimeMs","fractionalLoss","packetsExpected","maximumTimesToWarn","missedPongsLowerThreshold","missedPongsUpperThreshold","maximumAudioDelayMs","maximumAudioDelayDataPoints","sendingAudioFailureSamplesToConsider","sendingAudioFailureInitialWaitTimeMs","ConnectionHealthPolicyConfiguration$1","ContentShareConstants","ContentShareConstants_1","ContentShareConstants$1","IntervalScheduler_1","IntervalScheduler","intervalMs","setInterval","clearInterval","running","IntervalScheduler$1","adopt","MediaDeviceProxyHandler_1","MediaDeviceProxyHandler","scheduler","devices","deviceChangeListeners","target","property","receiver","Reflect","mediaDevices","patchAddEventListener","patchRemoveEventListener","INTERVAL_MS","pollDeviceLists","newDevices","sortedDeviceList","changed","some","deviceId","handleDeviceChangeEvent","enumerateDevices","device1","device2","handleEvent","MediaDeviceProxyHandler$1","DefaultMediaDeviceFactory_1","DefaultMediaDeviceFactory","isMediaDevicesSupported","Proxy","DefaultMediaDeviceFactory$1","PromiseQueue_1","PromiseQueue","queue","func","PromiseQueue$1","Types","None","Some","Maybe","of","isSome","isNone","f","flatMap","getOrElse","_value","defaulting","_f","DefaultModality_1","DefaultModality","_id","id","base","MODALITY_SEPARATOR","modality","components","hasModality","withModality","m","DefaultModality$1","Modality","MODALITY_CONTENT","VideoTileState_1","VideoTileState","tileId","localTile","localTileStarted","isContent","active","paused","poorConnection","boundAttendeeId","boundExternalUserId","boundVideoStream","boundVideoElement","nameplate","videoStreamContentWidth","videoStreamContentHeight","videoElementCSSWidthPixels","videoElementCSSHeightPixels","devicePixelRatio","videoElementPhysicalWidthPixels","videoElementPhysicalHeightPixels","VideoTileState$1","DefaultVideoTile_1","DefaultVideoTile","tileController","devicePixelRatioMonitor","tileState","videoStream","videoElement","getSettings","facingMode","setVideoElementFlag","style","hasAttribute","removeAttribute","setAttribute","srcObject","play","dueToPause","keepLastFrameWhenPaused","disconnectVideoStreamFromVideoElement","devicePixelRatioChanged","newDevicePixelRatio","sendTileStateUpdate","state","stateRef","mediaStream","contentWidth","contentHeight","tileUpdated","bindVideoElement","clientWidth","clientHeight","unpause","markPoorConnection","unmarkPoorConnection","capture","video","videoWidth","videoHeight","setStreamId","updateActiveState","updateVideoStreamOnVideoElement","updateVideoElementPhysicalPixels","connectVideoStreamToVideoElement","flag","DefaultVideoTile$1","isAudioTransformDevice","AudioTransformDevice","DeviceSelection_1","DeviceSelection","matchesConstraints","constraints","DeviceSelection$1","GetUserMediaError_1","GetUserMediaError","cause","GetUserMediaError$1","NotFoundError_1","NotFoundError","NotFoundError$1","NotReadableError_1","NotReadableError","NotReadableError$1","OverconstrainedError_1","OverconstrainedError","constraint","OverconstrainedError$1","PermissionDeniedError_1","PermissionDeniedError","PermissionDeniedError$1","_TypeError","TypeError$1","VideoQualitySettings_1","VideoQualitySettings","videoFrameRate","VideoQualitySettings$1","isVideoTransformDevice","VideoTransformDevice","DefaultDeviceController_1","Types_1","AudioTransformDevice_1","require$$8","require$$9","require$$10","require$$11","require$$12","TypeError_1","require$$13","require$$14","VideoTransformDevice_1","require$$15","DefaultDeviceController","deviceInfoCache","activeDevices","audio","chosenVideoTransformDevice","audioOutputDeviceId","deviceChangeObservers","mediaStreamBrokerObservers","deviceLabelTrigger","getUserMedia","audioInputDestinationNode","audioInputSourceNode","videoInputQualitySettings","useWebAudio","useMediaConstraintsFallback","audioInputTaskQueue","videoInputTaskQueue","mediaStreamMuteObserver","audioInputMuteStateChanged","alreadyHandlingDeviceChange","enableWebAudio","defaultVideoWidth","defaultVideoHeight","defaultVideoFrameRate","dimension","mediaDeviceWrapper","supportedConstraints","getSupportedConstraints","isWatchingForDeviceChanges","onDeviceChangeCallback","ensureWatchingDeviceChanges","handleDeviceChange","stopWatchingDeviceChanges","shouldObserveDeviceChanges","watchForDeviceChangesIfNecessary","stopAudioInput","stopVideoInput","listAudioInputDevices","forceUpdate","listDevicesOfKind","trace","listVideoInputDevices","listAudioOutputDevices","pushAudioMeetingStateForPermissions","audioStream","publishEvent","pushVideoMeetingStateForPermissions","startAudioInput","startAudioInputTask","chooseAudioTransformInputDevice","removeTransform","chooseInputIntrinsicDevice","attachAudioInputStreamToAudioContext","stream","getMediaStreamDestinationNode","mute","publishAudioInputDidChangeEvent","stopAudioInputTask","releaseAudioTransformStream","stopTracksAndRemoveCallbacks","getAudioContext","OfflineAudioContext","resume","nodes","createAudioNode","inner","intrinsicDevice","setTransform","chooseVideoTransformInputDevice","prevVideoTransformDevice","wasUsingTransformDevice","isMediaStreamReusableByDeviceId","onOutputStreamDisconnect","transformStream","startVideoInput","startVideoInputTask","publishVideoInputDidChangeEvent","outputMediaStream","chosenVideoInputIsTransformDevice","stopVideoInputTask","releaseVideoTransformStream","chooseAudioOutput","deviceInfo","deviceInfoFromDeviceId","publishAudioOutputDidChangeEvent","addDeviceChangeObserver","removeDeviceChangeObserver","createAnalyserNodeForAudioInput","analyser","createAnalyser","removeOriginalInputs","disconnect","connect","createAnalyserNodeForRawAudioInput","createAnalyserNodeForStream","audioContext","createMediaStreamSource","startVideoPreviewForVideoInput","element","stopVideoPreviewForVideoInput","setDeviceLabelTrigger","trigger","label","mixIntoAudioInput","getMediaStreamOutputNode","chooseVideoInputQuality","frameRate","getVideoInputQualitySettings","acquireAudioInputStream","acquireVideoInputStream","acquireDisplayInputStream","_streamConstraints","kind","activeDevice","endedCallback","trackMuteCallback","trackUnmuteCallback","track","getTracks","muteLocalAudioInputStream","toggleLocalAudioInputStream","unmuteLocalAudioInputStream","enabled","audioDevice","deviceIdConstraints","constraintStringParams","exact","synthesizeAudioDevice","toneHz","outputNode","createMediaStreamDestination","gainNode","createGain","gain","oscillatorNode","createOscillator","frequency","createBufferSource","createBuffer","sampleRate","defaultSampleRate","getChannelData","loop","deviceKind","updateDeviceInfoCacheFromBrowser","listCachedDevicesOfKind","MediaDeviceInfo","hasDeviceLabels","triggerStream","audioInputErrorMessage","getErrorMessage","videoInputErrorMessage","devicesOfKind","oldAudioInputDevices","oldVideoInputDevices","oldAudioOutputDevices","newAudioInputDevices","newVideoInputDevices","newAudioOutputDevices","forEachObserver","areDeviceListsEqual","audioInputsChanged","videoInputsChanged","audioOutputsChanged","handleDeviceStreamEnded","audioInputStreamEnded","videoInputStreamEnded","observerFunc","forEachMediaStreamBrokerObserver","intrinsicDeviceAsMediaStream","hasSameMediaStreamId","selection","proposedConstraints","hasSameGroupId","deviceIds","getIntrinsicDeviceId","getGroupIdFromDeviceId","cachedDeviceInfo","find","cachedDevice","handleGetUserMediaError","errorTimeMs","permissionDeniedOriginDetectionThresholdMs","matchesDeviceSelection","getMediaStreamConstraints","newDevice","createEmptyAudioDevice","handleNewInputDevice","errorMessage","hasError","fallbackConstraints","fallbackConstraintsJSON","newDeviceId","getMediaTrackSettings","calculateMediaStreamConstraints","minimal","trackConstraints","ideal","supportSampleRateConstraint","supportSampleSizeConstraint","sampleSize","defaultSampleSize","supportChannelCountConstraint","channelCount","defaultChannelCount","echoCancellation","googEchoCancellation","googEchoCancellation2","googAutoGainControl","googAutoGainControl2","googNoiseSuppression","googNoiseSuppression2","googHighpassFilter","getMediaStreamConstraintsFromTrackConstraints","isMediaDeviceInfo","hasAppliedTransform","settings","reconnectAudioInputs","proc","dest","previous","latencyHint","defaultLatencyHint","AudioContext","webkitAudioContext","addMediaStreamBrokerObserver","removeMediaStreamBrokerObserver","videoInputDidChange","audioInputDidChange","audioOutputDidChange","DefaultDeviceController$1","ContentShareMediaStreamBroker_1","ContentShareMediaStreamBroker","_mediaStream","streamConstraints","mandatory","chromeMediaSource","chromeMediaSourceId","getDisplayMedia","acquireScreenCaptureDisplayInputStream","sourceId","screenCaptureDisplayMediaConstraints","defaultFrameRate","maxFrameRate","toggleMediaStream","enable","cleanup","_observer","ContentShareMediaStreamBroker$1","CreatePeerConnectionTask_1","CreatePeerConnectionTask","removeTrackAddedEventListener","removeTrackRemovedEventListeners","trackEvents","removeVideoTrackEventListeners","trackAddedHandler","transceiver","currentDirection","bindAudioStream","trackIsVideoInput","addRemoteVideoTrack","trackId","addPeerConnectionEventLogger","connectionState","iceGatheringState","candidate","iceConnectionState","iceServers","urls","credential","credentialType","iceTransportPolicy","bundlePolicy","sdpSemantics","useTransceivers","attendeeIdForTrack","skipAdding","getVideoTileForAttendeeId","haveVideoTileForAttendeeId","addVideoTile","streamIdForTrack","trackEvent","removeRemoteVideoTrack","cap","getCapabilities","externalUserIdForTrack","endEvent","trackRemovedHandler","removeVideoTrackEventListener","removeVideoTile","CreatePeerConnectionTask$1","REMOVE_HANDLER_INTERVAL_MS","MeetingSessionStatusCode","SDPCandidateType","SDPMediaSection_1","SDPMediaSection","SDPMediaSection$1","VideoCodecCapability_1","SignalingProtocol_1","VideoCodecCapability","codecName","codecCapability","equals","mimeType","clockRate","sdpFmtpLine","h264ConstrainedBaselineProfile","capability","VP8","vp8","H264_CONSTRAINED_BASELINE_PROFILE","VideoCodecCapability$1","SDP_1","SDPCandidateType_1","SDP","lines","CRLF","candidateType","Host","ServerReflexive","PeerReflexive","Relay","sdpLine","candidateTypeFromString","line","section","sections","cameraLineIndex","hasCamera","sec","figGroupLine","prefix","splitLines","hasVideo","hasCandidates","hasCandidatesForAllMLines","withoutCandidateType","candidateTypeToExclude","linesToSDP","withoutServerReflexiveCandidates","withAudioMaxAverageBitrate","maxAverageBitrate","rfc7587LowestBitrate","rfc7587HighestBitrate","srcLines","fmtpAttributes","findOpusFmtpAttributes","dstLines","updateOpusFmtpAttributes","withStereoAudio","sdpLines","opusRtpMapRegex","lookingForOpusRtpMap","additionalParams","fmtpIndex","currFmtpAttribute","oldParameters","newParameters","parameter","findIndex","withUnifiedPlanFormat","originalSdp","getUniqueRtpHeaderExtensionId","headerExtensionIds","previousId","withVideoLayersAllocationRtpHeaderExtension","previousSdp","getRtpHeaderExtensionId","splitSections","newSections","getRtpHeaderExtensionIdInSection","hasRtpHeaderExtensionId","targetLine","newSdp","ssrcForVideoSendingSection","srcSDP","findActiveCameraSection","fidGroupMatch","matchPrefix","fidGroup","extractSSRCsFromFIDGroupLine","videoSSRC1","videoSendSectionHasDifferentSSRC","prevSdp","ssrc1","ssrc2","removeH264SupportFromSendSection","cameraSection","cameraSectionLines","payloadTypesForH264","primaryPayloadTypeToFeedbackPayloadTypes","attribute","payloadMatch","feedbackMatches","feedbackPayloadType","primaryPayloadType","payloadTypesToRemove","feedbackTypes","feedbackType","mline","text","filteredLines","newSDP","mediaSections","parsedMediaSections","headerExtension","targetId","withVideoSendCodecPreferences","preferences","sectionWithCodecPreferences","codecNamesToPayloadTypes","preference","codecMatches","prospectiveFmtpLine","orderedPreferedPayloadTypes","name1","name2","highestPriorityVideoSendCodec","mlineTokens","highestPriorityPayloadType","highestPriorityCodecName","highestPriorityClockRate","highestPriorityFmtpLine","nameAndClockRate","fmtpLineTokens","SDP$1","CreateSDPTask_1","MeetingSessionStatusCode_1","CreateSDPTask","sessionUsesAudio","audioHostURL","sessionUsesVideo","sending","hasVideoInput","hasStartedLocalVideoTile","receiving","usesVideo","offerOptions","offerToReceiveAudio","IncompatibleSDP","CreateSDPTask$1","DataMessage_1","DataMessage","throttled","TextDecoder","parse","DataMessage$1","DefaultActiveSpeakerDetector_1","DefaultActiveSpeakerDetector","hasBandwidthPriorityCallback","waitIntervalMs","updateIntervalMs","speakerScores","speakerMuteState","detectorCallbackToHandler","detectorCallbackToScoresTimer","detectorCallbackToActivityTimer","hasBandwidthPriority","mostRecentUpdateTimestamp","needUpdate","activeSpeakers","updateActiveSpeakers","policy","sortedSpeakers","attendeeIds","activeScore","sortedAttendeeIds","s1","s2","prioritizeVideoSendBandwidthForActiveSpeaker","updateScore","calculateScore","subscribe","scoresCallback","scoresCallbackIntervalMs","handler","present","realtimeSubscribeToVolumeIndicator","_signalStrength","activityTimer","scoresTimer","realtimeSubscribeToAttendeeIdPresence","unsubscribe","realtimeUnsubscribeToAttendeeIdPresence","clear","DefaultActiveSpeakerDetector$1","DefaultActiveSpeakerPolicy_1","DefaultActiveSpeakerPolicy","speakerWeight","cutoffThreshold","silenceThreshold","takeoverRate","volumes","otherAttendeeId","DefaultActiveSpeakerPolicy$1","DefaultAudioMixController_1","DefaultAudioMixController","audioElement","bindAudioElement","autoplay","bindAudioMix","unbindAudioElement","meetingAudioStreamBecameInactive","bindAudioDevice","previousStream","meetingAudioStreamBecameActive","shouldSetSinkId","sinkId","newSinkId","existingAudioElement","existingStream","setSinkId","getCurrentMeetingAudioStream","addAudioMixObserver","removeAudioMixObserver","DefaultAudioMixController$1","SignalingAndMetricsConnectionMonitor_1","SignalingAndMetricsConnectionMonitor","isActive","hasSeenValidPacketMetricsBefore","realtimeSubscribeToLocalSignalStrengthChange","receiveSignalStrengthChange","updateConnectionHealth","didReceivePong","latencyMs","clockSkewMs","logLatency","didMissPongs","metricsDidReceive","fractionPacketsLostInbound","potentialPacketsReceived","potentialFractionPacketsLostInbound","addToMinuteWindow","updateAudioPacketsSentInConnectionHealth","unshift","pop","connectionHealthDidChange","SignalingAndMetricsConnectionMonitor$1","MeetingSessionStatus_1","MeetingSessionStatus","_statusCode","statusCode","isFailure","AudioAuthenticationRejected","AudioCallAtCapacity","AudioInternalServerError","AudioServiceUnavailable","AudioDisconnected","VideoCallAtSourceCapacity","SignalingBadRequest","SignalingInternalServerError","SignalingRequestFailed","ICEGatheringTimeoutWorkaround","ConnectionHealthReconnect","RealtimeApiFailed","TaskFailed","NoAttendeePresent","isTerminal","Left","AudioJoinedFromAnotherDevice","MeetingEnded","TURNCredentialsForbidden","AudioAttendeeRemoved","isAudioConnectionFailure","OK","VideoCallSwitchToViewOnly","AudioVideoWasRemovedFromPrimaryMeeting","AudioDisconnectAudio","exhaustiveCheck","frame","fromSignalingStatus","AUDIO_STATUS","fromAudioStatus","PRIMARY_MEETING_LEAVE","MeetingSessionStatus$1","MeetingSessionVideoAvailability_1","MeetingSessionVideoAvailability","remoteVideoAvailable","canStartLocalVideo","MeetingSessionVideoAvailability$1","DefaultPingPong_1","DefaultPingPong","observerQueue","consecutivePongsUnaccountedFor","intervalScheduler","startPingInterval","stopPingInterval","ping","PING","pingTimestampLocalMs","pong","PONG","WebSocketOpen","WebSocketFailed","WebSocketError","WebSocketClosing","ReceivedSignalFrame","PING_PONG","pongTimestampRemoteMs","pingPongLocalIntervalMs","estimatedPingTimestampRemoteMs","estimatedClockSkewMs","DefaultPingPong$1","Transcript_1","Transcript","Transcript$1","TranscriptionStatus_1","TranscriptionStatus","TranscriptionStatus$1","TranscriptionStatusType","TranscriptionStatusType_1","TranscriptionStatusType$1","TranscriptItemType","TranscriptItemType_1","TranscriptItemType$1","TranscriptEvent","TranscriptEventConverter","TranscriptionStatusTypes","STARTED","INTERRUPTED","RESUMED","STOPPED","FAILED","transcriptEvents","sdkTranscriptEvent","transcriptionStatusType","transcriptionStatus","eventTimeMs","transcriptResult","endTimeMs","transcriptLanguageWithScore","alternative","transcriptAlternative","item","transcriptItem","PRONUNCIATION","PUNCTUATION","entity","transcriptEntity","TRANSCRIPTION_DATA_MESSAGE_TOPIC","TranscriptEvent_1","transcriptEventCallbacks","subscribeToTranscriptEvent","realtimeSubscribeToReceiveDataMessage","transcriptEvent","transcriptEventCallback","unsubscribeFromTranscriptEvent","realtimeUnsubscribeFromReceiveDataMessage","RealtimeState_1","RealtimeState","localAttendeeId","localExternalUserId","attendeeIdChangesCallbacks","canUnmute","setCanUnmuteLocalAudioCallbacks","muteAndUnmuteLocalAudioCallbacks","volumeIndicatorState","attendeeIdToExternalUserId","volumeIndicatorCallbacks","localSignalStrengthChangeCallbacks","fatalErrorCallbacks","sendDataMessageCallbacks","receiveDataMessageCallbacks","RealtimeState$1","RealtimeVolumeIndicator_1","RealtimeVolumeIndicator","RealtimeVolumeIndicator$1","DefaultRealtimeController_1","DefaultTranscriptionController_1","DefaultRealtimeController","transcriptionController","_transcriptionController","realtimeSetLocalAttendeeId","realtimeSetAttendeeIdPresence","posInFrame","onError","realtimeSetCanUnmuteLocalAudio","realtimeSubscribeToSetCanUnmuteLocalAudio","realtimeUnsubscribeToSetCanUnmuteLocalAudio","realtimeCanUnmuteLocalAudio","realtimeMuteLocalAudio","setAudioInputEnabled","realtimeUpdateVolumeIndicator","realtimeUnmuteLocalAudio","realtimeSubscribeToMuteAndUnmuteLocalAudio","realtimeUnsubscribeToMuteAndUnmuteLocalAudio","realtimeIsLocalAudioMuted","sendVolumeIndicatorChange","realtimeUnsubscribeFromVolumeIndicator","applyLocalMuteOverride","getVolumeIndicatorState","volumeUpdated","mutedUpdated","signalStrengthUpdated","sendLocalSignalStrengthChange","realtimeUnsubscribeToLocalSignalStrengthChange","realtimeSubscribeToSendDataMessage","realtimeUnsubscribeFromSendDataMessage","realtimeSendDataMessage","realtimeReceiveDataMessage","realtimeSubscribeToFatalError","realtimeUnsubscribeToFatalError","attendeeIdRemote","mutedRemote","attendeeIdLocal","mutedLocal","updateState","stateIsEmpty","eventError","consoleError","DefaultRealtimeController$1","SessionStateControllerAction","SessionStateControllerDeferPriority","SessionStateControllerState","SessionStateControllerTransitionResult","DefaultSessionStateController_1","SessionStateControllerAction_1","SessionStateControllerDeferPriority_1","SessionStateControllerState_1","SessionStateControllerTransitionResult_1","DefaultSessionStateController","currentState","NotConnected","deferredAction","deferredWork","perform","action","work","Connect","transition","Connecting","Fail","Disconnecting","FinishConnecting","Connected","Disconnect","Reconnect","Update","Updating","FinishUpdating","FinishDisconnecting","canDefer","deferAction","DeferredTransition","NoTransitionAvailable","TransitionFailed","performDeferredAction","Transitioned","newState","deferPriority","VeryHigh","High","Medium","Low","DoNotDefer","DefaultSessionStateController$1","WebSocketReadyState","convertServerSideNetworkAdaptionEnumToSignaled","convertServerSideNetworkAdaptionEnumFromSignaled","ServerSideNetworkAdaption","adaption","DEFAULT","Default","NONE","BANDWIDTH_PROBING","BandwidthProbing","SignalingClientEvent_1","SignalingClientEvent","client","closeCode","closeReason","isConnectionTerminated","SignalingClientEvent$1","DefaultSignalingClient_1","WebSocketReadyState_1","ServerSideNetworkAdaption_1","DefaultSignalingClient","webSocket","unloadHandler","closeEventHandler","deactivatePageUnloadHandler","resetConnection","sendEvent","code","reason","serviceConnectionRequestQueue","connectionRequestQueue","generateNewAudioSessionId","openConnection","pingPongFrame","sendMessage","joinFrame","HAS_STREAM_UPDATE","sdkClientDetails","applicationMetadata","CLIENT_SUPPORTS_COMPRESSION","JOIN","subscribeFrame","connectionTypeHasVideo","RX","localVideoEnabled","DUPLEX","videoStreamDescriptions","streamDescription","toStreamDescriptor","convertVideoSubscriptionConfiguration","SUBSCRIBE","addedOrUpdated","removed","REMOTE_VIDEO_UPDATE","config","signalConfig","LEAVE","sendClientMetrics","clientMetricFrame","CLIENT_METRIC","sendDataMessage","messageFrame","DATA_MESSAGE","readyState","Closed","isClosing","CLOSE_EVENT_TIMEOUT_MS","CloseEvent","wasClean","bubbles","Open","wasOpened","AUDIO_CONTROL","PAUSE","RESUME","prependWithFrameTypeRTC","send","WebSocketSendMessageFailure","WebSocketSentMessage","WebSocketSkippedMessage","receiveMessage","inBuffer","ProtocolDecodeFailure","stripFrameTypeRTC","frameType","FRAME_TYPE_RTC","outBuffer","shift","protocols","setUpEventListeners","WebSocketConnecting","WebSocketMessage","activatePageUnloadHandler","GlobalAny","num","Uint32Array","crypto","getRandomValues","promoteToPrimaryMeeting","signaledCredentials","PRIMARY_MEETING_JOIN","demoteFromPrimaryMeeting","DefaultSignalingClient$1","SignalingClientVideoSubscriptionConfiguration_1","SignalingClientVideoSubscriptionConfiguration","SignalingClientVideoSubscriptionConfiguration$1","StreamMetricReport_1","StreamMetricReport","StreamMetricReport$1","MeetingSessionLifecycleEvent","MeetingSessionLifecycleEventCondition","StatsCollector_1","MeetingSessionLifecycleEvent_1","MeetingSessionLifecycleEventCondition_1","AudioLogEvent_1","StatsCollector","interval","metricsAddTime","_name","_duration","_attributes","metricsLogEvent","toAttribute","toSuffix","$1","eventName","timeMs","attributes","logEventTime","logStateTimeout","stateName","logEvent","logAudioEvent","finalAttributes","call_id","meetingId","client_type","CLIENT_TYPE","metric_type","logMeetingSessionStatus","statusEventName","statusAttribute","status_code","logLifecycleEvent","lifecycleEvent","condition","lifecycle_event","lifecycle_event_code","lifecycle_event_condition","lifecycle_event_condition_code","getStatsWrapper","updateMetricValues","rawMetricReport","isStream","metricMap","rawMetric","processRawMetricReports","rawMetricReports","isStreamRawMetricReport","existingStreamMetricReport","streamIdForSSRC","getMediaType","getDirectionType","addStreamMetricDimensionFrames","streamMetricFrame","dimensionFrame","dimensionValue","addMetricFrame","sourceMetric","streamMetricFramesLength","latestStreamMetricFrame","metricFrame","addGlobalMetricsToProtobuf","addStreamMetricsToProtobuf","makeClientMetricProtobuf","sendClientMetricProtobuf","isValidStandardRawMetric","isValidSsrc","validSsrc","isValidRawMetricReport","filterRawMetricReports","filteredRawMetricReports","handleRawMetricReports","rtcPeerConnection","report","getStats","StatsCollector$1","FinishGatheringICECandidatesTask_1","FinishGatheringICECandidatesTask","chromeVpnTimeoutMs","CHROME_VPN_TIMEOUT_MS","connectionTimeoutMs","startTimestampMs","localDescription","isRTPCandidate","FinishGatheringICECandidatesTask$1","MeetingSessionTURNCredentials_1","MeetingSessionTURNCredentials","MeetingSessionTURNCredentials$1","SignalingClientJoin_1","SignalingClientJoin","SignalingClientJoin$1","JoinAndReceiveIndexTask_1","JoinAndReceiveIndexTask","handleMeetingSessionStatus","JOIN_ACK","joinAckFrame","setServerSideNetworkAdaption","uri","urlRewriter","INDEX","getServerSideNetworkAdaption","JoinAndReceiveIndexTask$1","LeaveAndReceiveLeaveAckTask_1","LeaveAndReceiveLeaveAckTask","receiveLeaveAck","LEAVE_ACK","LeaveAndReceiveLeaveAckTask$1","ListenForVolumeIndicatorsTask_1","ListenForVolumeIndicatorsTask","realtimeMuteAndUnmuteHandler","AUDIO_STREAM_ID_INFO","sendRealtimeUpdatesForAudioStreamIdInfo","AUDIO_METADATA","sendRealtimeUpdatesForAudioMetadata","ListenForVolumeIndicatorsTask$1","ReconnectionHealthPolicy_1","ReconnectionHealthPolicy","audioDelayPointsOverMaximum","CONNECTION_UNHEALTHY_THRESHOLD","CONNECTION_WAIT_TIME_MS","MISSED_PONGS_THRESHOLD","MAXIMUM_AUDIO_DELAY_MS","MAXIMUM_AUDIO_DELAY_DATA_POINTS","noPacketsReceivedRecently","missedPongsRecently","hasBadAudioDelay","ReconnectionHealthPolicy$1","SendingAudioFailureConnectionHealthPolicy_1","SendingAudioFailureConnectionHealthPolicy","coolDownTimeMs","lastWarnTimestampMs","warnCount","isSendingAudioUnhealthy","hasEnoughTimeElapsedToEvaluateStatus","areAudioPacketsNotBeingSent","didWarnRecently","SendingAudioFailureConnectionHealthPolicy$1","UnusableAudioWarningConnectionHealthPolicy_1","UnusableAudioWarningConnectionHealthPolicy","calculateFractionalLoss","samplesToConsider","totalPacketsExpected","totalPacketsReceived","UnusableAudioWarningConnectionHealthPolicy$1","MonitorTask_1","MonitorTask","connectionHealthPolicyConfiguration","initialConnectionHealthData","prevSignalStrength","currentVideoDownlinkBandwidthEstimationKbps","currentAvailableStreamAvgBitrates","hasSignalingError","presenceHandlerCalled","isResubscribeCheckPaused","pendingMetricsReport","checkAndSendWeakSignalEvent","isCurrentSignalBad","isPrevSignalBad","signalStrengthEventType","RedmicStartLoss","RedmicEndLoss","realtimeFatalErrorCallback","realtimeAttendeeIdPresenceHandler","presentAttendeeId","generateBaseAudioVideoEventAttributes","meetingDurationMs","generateAudioVideoEventAttributesForReceivingAudioDropped","baseAttributes","reconnectionHealthPolicy","unusableAudioWarningHealthPolicy","sendingAudioFailureHealthPolicy","pauseResubscribeCheck","resumeResubscribeCheck","checkResubscribe","needsRenegotiation","videoTileDidUpdate","_tileState","getAllVideoTiles","availableSendBandwidth","nackCountPerSecond","needResubscribe","resubscribeForDownlink","videoSubscriptionIdSet","updateConnectionMetric","uplinkKbps","resubscribeForUplink","chooseMediaTrackConstraints","defaultClientMetricReport","downlinkVideoStream","videoReceivingBitrateMap","fireCallback","bitrate","newReport","prevBytesReceived","currBytesReceived","receivedBitrate","expectedAverageBitrateKbps","receivedAverageBitrateKbps","DEFAULT_DOWNLINK_CALLRATE_UNDERSHOOT_FACTOR","setLastActiveTimestampMs","applyHealthPolicy","haveVideoTilesWithStreams","connectionDidSuggestStopVideo","connectionDidBecomePoor","connectionDidBecomeGood","healthPolicy","unhealthyCallback","healthyCallback","healthValue","handleBitrateFrame","requiredBandwidthKbps","DEFAULT_DOWNLINK_CALLRATE_OVERSHOOT_FACTOR","bitrateFrame","integrateBitratesFrame","fromSignalFrame","PRIMARY_MEETING_JOIN_ACK","MonitorTask$1","SignalingClientConnectionRequest_1","SignalingClientConnectionRequest","signalingURL","SignalingClientConnectionRequest$1","OpenSignalingConnectionTask_1","OpenSignalingConnectionTask","OpenSignalingConnectionTask$1","ParallelGroupTask_1","ParallelGroupTask","tasksToRunParallel","taskResults","failures","failureMessage","ParallelGroupTask$1","PromoteToPrimaryMeetingTask_1","__1","PromoteToPrimaryMeetingTask$1","completionCallback","receivePrimaryMeetingJoinAck","_","PromoteToPrimaryMeetingTask","ReceiveAudioInputTask_1","ReceiveAudioInputTask","ReceiveAudioInputTask$1","ReceiveTURNCredentialsTask_1","ReceiveTURNCredentialsTask","turnControlURL","cache","referrer","body","responseBodyJson","responseBody","ReceiveTURNCredentialsTask$1","ReceiveVideoInputTask_1","ReceiveVideoInputTask","receiveEnabled","TX","chooseCaptureAndEncodeParameters","integrateUplinkPolicyDecision","stopLocalVideoTile","encodingParams","isContentAttendee","trackSettings","applyConstraints","ReceiveVideoInputTask$1","ReceiveVideoStreamIndexTask_1","ReceiveVideoStreamIndexTask","isIngestionPaused","pendingIndex","handleIndexFrame","pauseIngestion","resumeIngestion","oldVideoSources","allVideoSendingSourcesExcludingSelf","integrateIndexFrame","resubscribe","updateVideoAvailability","handleIndexVideosPausedAtSource","handleSupportedVideoReceiveCodecIntersection","newVideoSources","areVideoSourcesEqual","remoteVideoSourcesDidChange","compare","videoSourceA","videoSourceB","localeCompare","sortedOldVideoSources","sortedNewVideoSources","shouldResubscribe","videoAvailability","videoAvailabilityDidChange","newMeetingSupportedVideoSendCodecPreferences","willNeedUpdate","codecSupported","signaledCapability","fromSignaled","streamsPausedAtSource","ReceiveVideoStreamIndexTask$1","SendAndReceiveDataMessagesTask_1","SendAndReceiveDataMessagesTask","sendDataMessageHandler","uint8Data","TextEncoder","validateDataMessage","TOPIC_REGEX","DATA_SIZE","SendAndReceiveDataMessagesTask$1","RegExp","SerialGroupTask_1","SerialGroupTask","tasksToRunSerially","currentTask","SerialGroupTask$1","SetLocalDescriptionTask_1","SetLocalDescriptionTask","setLocalDescription","SetLocalDescriptionTask$1","SetRemoteDescriptionTask_1","SetRemoteDescriptionTask","cancelICEPromise","remoteDescription","createICEConnectionCompletedPromise","checkConnectionCompleted","setRemoteDescription","SetRemoteDescriptionTask$1","Z_FIXED","Z_BINARY","Z_TEXT","Z_UNKNOWN","STORED_BLOCK","STATIC_TREES","DYN_TREES","MIN_MATCH","MAX_MATCH","LENGTH_CODES","LITERALS","L_CODES","D_CODES","BL_CODES","HEAP_SIZE","MAX_BITS","Buf_size","MAX_BL_BITS","END_BLOCK","REP_3_6","REPZ_3_10","REPZ_11_138","extra_lbits","extra_dbits","extra_blbits","bl_order","DIST_CODE_LEN","static_ltree","zero$1","static_dtree","_dist_code","_length_code","base_length","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","static_l_desc","static_d_desc","static_bl_desc","TreeDesc","dyn_tree","stat_desc","max_code","d_code","dist","put_short","w","pending_buf","send_bits","bi_valid","bi_buf","send_code","tree","bi_reverse","bi_flush","gen_bitlen","desc","stree","extra","h","xbits","overflow","bl_count","heap","heap_max","opt_len","static_len","gen_codes","next_code","tr_static_init","init_block","dyn_ltree","dyn_dtree","bl_tree","sym_next","bi_windup","smaller","depth","_n2","_m2","pqdownheap","heap_len","compress_block","ltree","dtree","lc","sx","sym_buf","build_tree","scan_tree","curlen","prevlen","nextlen","max_count","min_count","send_tree","build_bl_tree","max_blindex","l_desc","d_desc","bl_desc","send_all_trees","lcodes","dcodes","blcodes","rank","detect_data_type","block_mask","static_init_done","_tr_init","_tr_stored_block","stored_len","last","_tr_align","_tr_flush_block","opt_lenb","static_lenb","strm","data_type","strategy","_tr_tally","sym_end","trees","adler32","adler","adler32_1","makeTable","table","crcTable","crc32","crc","crc32_1","constants","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Z_TREES","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_DEFAULT_STRATEGY","Z_DEFLATED","MAX_MEM_LEVEL","MAX_WBITS","DEF_MEM_LEVEL","MIN_LOOKAHEAD","PRESET_DICT","INIT_STATE","GZIP_STATE","EXTRA_STATE","NAME_STATE","COMMENT_STATE","HCRC_STATE","BUSY_STATE","FINISH_STATE","BS_NEED_MORE","BS_BLOCK_DONE","BS_FINISH_STARTED","BS_FINISH_DONE","OS_CODE","errorCode","slide_hash","wsize","w_size","hash_size","prev","HASH_ZLIB","hash_shift","hash_mask","HASH","flush_pending","avail_out","pending_out","next_out","total_out","flush_block_only","block_start","strstart","put_byte","putShortMSB","read_buf","avail_in","next_in","wrap","total_in","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","limit","_win","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","_w_size","more","window_size","insert","ins_h","deflate_stored","flush","left","have","min_block","pending_buf_size","used","high_water","deflate_fast","hash_head","bflush","match_length","max_lazy_match","deflate_slow","max_insert","prev_match","match_available","deflate_rle","deflate_huff","Config","good_length","max_lazy","nice_length","max_chain","configuration_table","lm_init","DeflateState","gzhead","gzindex","last_flush","w_bits","hash_bits","Uint16Array","lit_bufsize","deflateStateCheck","deflateResetKeep","deflateReset","ret","deflateSetHeader","deflateInit2","windowBits","memLevel","deflateInit","deflate","old_flush","header","level_flags","hcrc","comment","time","beg","gzhead_extra","bstate","deflateEnd","deflateSetDictionary","dictionary","dictLength","tmpDict","avail","deflate$3","deflateInfo","_has","common","flattenChunks","chunks","STR_APPLY_UIA_OK","__","_utf8len","strings","string2buf","m_pos","str_len","buf_len","buf2binstring","ZStream","buf2string","out","utf16buf","c_len","utf8border","zstream","zlib_deflate","utils","Deflate","chunkSize","opt","gzip","ended","dict","_dict_set","deflator","deflateRaw","Deflate$1","flush_mode","_flush_mode","onData","onEnd","deflate$4","BAD","inffast","_in","_out","dmax","whave","wnext","s_window","hold","lcode","dcode","lmask","dmask","here","op","from_source","lencode","distcode","lenbits","distbits","top","dolen","dodist","sane","MAXBITS","ENOUGH_LENS","ENOUGH_DISTS","CODES","LENS","DISTS","lbase","lext","dbase","dext","inflate_table","lens","lens_index","codes","table_index","opts","incr","fill","sym","root","curr","drop","huff","offs","here_bits","here_op","here_val","inftrees","inflate_fast","HEAD","FLAGS","TIME","EXLEN","EXTRA","COMMENT","HCRC","DICTID","DICT","TYPEDO","STORED","COPY_","COPY","TABLE","LENLENS","CODELENS","LEN_","LEN","LENEXT","DIST","DISTEXT","MATCH","LIT","CHECK","LENGTH","DONE","MEM","SYNC","DEF_WBITS","zswap32","InflateState","havedict","check","wbits","ncode","nlen","ndist","lendyn","distdyn","back","was","inflateStateCheck","inflateResetKeep","Int32Array","inflateReset","inflateReset2","inflateInit2","inflateInit","virgin","lenfix","distfix","fixedtables","updatewindow","inflate","put","last_bits","last_op","last_val","hbuf","order","inf_leave","xflags","extra_len","inflateEnd","inflateGetHeader","inflateSetDictionary","dictid","GZheader","inflate$3","inflateInfo","gzheader","zlib_inflate","Inflate","inflator","inflateRaw","Inflate$1","last_avail_out","next_out_utf8","utf8str","inflate$4","ungzip","pako$1","ZLIBTextCompressor_1","pako","ZLIBTextCompressor","compress","dictionarySize","MAX_DICTIONARY_SIZE","Z_MEM_LEVEL","decompress","compressedText","decompressedText","ex","ZLIBTextCompressor$1","SignalingClientSubscribe_1","SignalingClientSubscribe","SignalingClientSubscribe$1","SubscribeAndReceiveSubscribeAckTask_1","SubscribeAndReceiveSubscribeAckTask","textCompressor","localSdp","maxEncodeBitrateKbps","captureFrameRate","encodeBitrates","param","rid","maxBitrate","maxFramerate","subscribeFrameSent","fixUpSubscriptionOrder","isSendingStreams","compressedSDPOffer","localSdpOffer","prevOffer","localStreamDescriptions","getVideoPreferences","convertVideoPreferencesToVideoSubscriptionConfiguration","subscribeAckFrame","receiveSubscribeAck","integrateSubscribeAckFrame","getMidForStreamId","midsToStreamIds","newSubscriptions","configurations","attendeeIdToMid","attendeeIdToGroupId","groupIdForStreamId","MAX_SAFE_INTEGER","targetSizeToBitrateKbps","targetSize","SUBSCRIBE_ACK","subackFrame","SubscribeAndReceiveSubscribeAckTask$1","TimeoutTask_1","TimeoutTask","taskToRunBeforeTimeout","TimeoutTask$1","WaitForAttendeePresenceTask_1","WaitForAttendeePresenceTask","_externalUserId","_dropped","_pos","WaitForAttendeePresenceTask$1","DefaultTransceiverController_1","DefaultTransceiverController","_localCameraTransceiver","_localAudioTransceiver","defaultMediaStream","streamIdToTransceiver","encodingParamMap","sender","newEncodingParams","oldParam","getParameters","encodings","existing","setParameters","localAudioTransceiver","localVideoTransceiver","setVideoSendingBitrateKbps","bitrateKbps","encodeParam","getTransceivers","MediaStream","replaceAudioTrack","replaceTrack","setTransceiverInput","transceivers","updateTransceivers","debugDumpTransceivers","videosRemaining","updateTransceiverWithStop","updateTransceiverWithoutStop","transceiverIsVideo","reusingTranceiver","recvStreamId","entries","StreamIdsInSameGroup","previousTransceiver","setStreamIdForMid","newStreamId","DefaultTransceiverController$1","SimulcastTransceiverController_1","SimulcastTransceiverController","videoQualityControlParameterMap","NAME_ARR_ASCENDING","ridName","scaleResolutionDownBy","BITRATE_ARR_ASCENDING","LOW_LEVEL_NAME","copyEncodingParams","MID_LEVEL_NAME","HIGH_LEVEL_NAME","logVideoTransceiverParameters","_bitrateKbps","sendEncodings","fromEncodingParams","toEncodingParams","SimulcastTransceiverController$1","SimulcastContentShareTransceiverController_1","SimulcastContentShareTransceiverController","SimulcastContentShareTransceiverController$1","VideoOnlyTransceiverController_1","VideoOnlyTransceiverController","VideoOnlyTransceiverController$1","DefaultVideoCaptureAndEncodeParameter_1","DefaultVideoCaptureAndEncodeParameter","cameraWidth","cameraHeight","cameraFrameRate","isSimulcast","checkForEqual","captureWidth","captureHeight","encodeScaleResolutionDownBy","encodeWidths","encodeHeights","DefaultVideoCaptureAndEncodeParameter$1","TargetDisplaySize","VideoPreference_1","TargetDisplaySize_1","VideoPreference","partialCompare","HIGH_BITRATE_KBPS","MID_BITRATE_KBPS","LOW_BITRATE_KBPS","VideoPreference$1","VideoPreferences_1","VideoPreferences$1","VideoPreferences","MutableVideoPreferences","ObjectSet","Symbol","iterator","first","replaceFirst","newItem","isEmpty","modify","SetBuilder","copied","cow","pref","newPref","highestPriority","sorted","videoPreferences","prepare","VideoPriorityBasedPolicyConfig_1","VideoPriorityBasedPolicyConfig","networkIssueResponseDelayFactor","networkIssueRecoveryDelayFactor","currentNetworkEvent","bandwidthDecreaseTimestamp","referenceBitrate","allowSubscribe","numberOfParticipants","currentEstimated","timeBeforeAllowSubscribeMs","previousNetworkEvent","getSubscribeDelay","subscribeDelay","MINIMUM_DELAY_MS","MAXIMUM_DELAY_MS","responseFactor","VideoPriorityBasedPolicyConfig$1","UnstableNetworkPreset","StableNetworkPreset","VideoPriorityBasedPolicy_1","LinkMediaStats","bandwidthEstimateKbps","usedBandwidthKbps","rttMs","VideoPriorityBasedPolicy","videoPriorityBasedPolicyConfig","shouldPauseTiles","pausedBwAttendeeIds","optimalReceiveStreams","optimalNonPausedReceiveStreams","subscribedReceiveStreams","defaultVideoPreferences","pausedStreamIds","videoPreferencesUpdated","logCount","startupPeriod","usingPrevTargetRate","rateProbeState","firstEstimateTimestamp","lastUpgradeRateKbps","MIN_TIME_BETWEEN_SUBSCRIBE_MS","lastProbeTimestamp","timeBeforeAllowProbeMs","MIN_TIME_BETWEEN_PROBE_MS","downlinkStats","prevDownlinkStats","probeFailed","updateDefaultVideoPreferences","prefs","numAttendees","targetDisplaySize","ssrcStr","lastSubscribeTimestamp","setVideoPriorityBasedPolicyConfigs","calculateOptimalReceiveStreams","chosenStreams","lastProbeState","cleanBwPausedTiles","handleAppPausedStreams","sameStreamChoices","availStreamsSameAsLast","noMajorChange","avgBitrateKbps","endsWith","rates","targetDownlinkBitrate","chosenTotalBitrate","deltaToNextUpgrade","determineTargetRate","dontAllowSubscribe","upgradeStream","priorityPolicy","subscriptionChoice","setProbeState","handleProbe","maybeOverrideOrProbe","prevRemoteInfos","prevTargetRateKbps","subscribedRate","calculateSubscribeRate","preProbeNonPausedReceiveStreams","preProbeReceiveStreams","processBwPausedStreams","lastNumberPaused","policyStateLogStr","targetBitrate","DEFAULT_BANDWIDTH_KBPS","STARTUP_PERIOD_MS","SPURIOUS_PACKET_LOST_THRESHOLD","USED_BANDWIDTH_OVERRIDE_BUFFER_KBPS","LARGE_RATE_CHANGE_TRIGGER_PERCENT","probePendingStartTimestamp","MAX_HOLD_BEFORE_PROBE_MS","upgradeToStream","diffRate","MAX_ALLOWED_PROBE_TIME_MS","chosenStreamsSameAsLast","sameSubscriptions","useLastSubscriptions","triggerPercent","LOW_BITRATE_THRESHOLD_KBPS","TARGET_RATE_CHANGE_TRIGGER_PERCENT","minTargetBitrateDelta","targetRateBaselineForDeltaCheckKbps","abs","subscribeRate","remoteTiles","getAllRemoteVideoTiles","getCurrentVideoPreferences","videoTiles","videoTile","tileWillBeUnpausedByDownlinkPolicy","unpauseVideoTile","streamExists","tileWillBePausedByDownlinkPolicy","pauseVideoTile","newTile","tiles","nextPriority","increaseKbps","hasSimulcastStreams","canUpgrade","bitrateKbp","targetResolution","targetBitrateKbp","streamCount","prevInfo","lastStream","probeState","remoteInfoStr","logString","VideoPriorityBasedPolicy$1","VideoAdaptiveProbePolicy_1","VideoAdaptiveProbePolicy","newPreferences","containsContent","_preferences","VideoAdaptiveProbePolicy$1","VideoStreamDescription_1","VideoStreamDescription","timeEnabled","disabledByWebRTC","disabledByUplinkPolicy","newInfo","descriptor","VideoStreamDescription$1","DefaultVideoStreamIndex_1","DefaultVideoStreamIndex","currentIndex","indexForSubscribe","currentSubscribeAck","subscribeTrackToStreamMap","subscribeStreamToAttendeeMap","subscribeStreamToExternalUserIdMap","subscribeSsrcToStreamMap","streamToAttendeeMap","streamToExternalUserIdMap","videoStreamDescription","convertBpsToKbps","streamInfos","attendeeIdToMainGroupIdMap","attendeeWithMultipleGroupIdsExists","currentGroupId","subscribeAck","buildTrackToStreamMap","buildSSRCToStreamMap","buildStreamToAttendeeMap","buildStreamExternalUserIdMap","attendeeSet","streamSelectionUnderBandwidthConstraint","largeTileAttendeeIds","smallTileAttendeeIds","bandwidthKbps","newAttendees","attendeeToStreamDescriptorMap","buildAttendeeToSortedStreamDescriptorMapExcludingSelf","selectionMap","usage","trySelectHighBitrateForAttendees","maxes","numberOfVideoPublishingParticipantsExcludingSelf","streamId1","streamId2","ssrcId","overrideStreamIdMappings","current","trackMapping","highAttendees","currentUsage","currentSelectionRef","reverse","_attendeeId","stream1","stream2","DefaultVideoStreamIndex$1","SimulcastVideoStreamIndex_1","SimulcastVideoStreamIndex","streamIdToBitrateKbpsMap","_localStreamInfos","_lastBitRateMsgTime","clonedDescriptions","hasStreamsToReuse","localStreamIndex","targetMaxBitrateKbps","targetMaxFrameRate","stillSending","existingSet","bitrateMsg","UNSEEN_STREAM_BITRATE","RECENTLY_INACTIVE_STREAM_BITRATE","NOT_SENDING_STREAM_BITRATE","BitratesMsgFrequencyMs","logLocalStreamDescriptions","newIndexStreamIdSet","localStreamStartIndex","allocation","SimulcastVideoStreamIndex$1","DefaultDevicePixelRatioMonitor_1","DefaultDevicePixelRatioMonitor","devicePixelRatioSource","mediaQueryListener","tileObserver","mediaQueryList","matchMedia","addListener","removeListener","DefaultDevicePixelRatioMonitor$1","DevicePixelRatioWindowSource_1","DevicePixelRatioWindowSource","DevicePixelRatioWindowSource$1","DefaultVideoTileController_1","DefaultVideoTileController","tileFactory","tileMap","nextTileId","currentLocalTile","currentPausedTilesByIds","createDevicePixelRatioMonitorIfNeeded","discardDevicePixelRatioMonitorIfNotNeeded","monitor","getVideoTile","unbindVideoElement","cleanUpVideoElement","startLocalVideoTile","findOrCreateLocalVideoTile","removeLocalVideoTile","pauseReceivingStream","resumeReceivingStream","getVideoTileArea","tileHeight","tileWidth","makeTile","videoTileWasRemoved","removeVideoTilesByAttendeeId","tilesRemoved","tileIds","captureVideoTile","DefaultVideoTileController$1","DefaultVideoTileFactory_1","DefaultVideoTileFactory","DefaultVideoTileFactory$1","SimulcastLayers","DefaultSimulcastUplinkPolicy_1","SimulcastLayers_1","DefaultSimulcastUplinkPolicy","numSenders","shouldDisableSimulcast","newQualityMap","currentQualityMap","newActiveStreams","currentActiveStreams","lastUplinkBandwidthKbps","defaultUplinkBandwidthKbps","lastUpdatedMs","currLocalDescriptions","nextLocalDescriptions","optimalParameters","parametersInEffect","fillEncodingParamWithBitrates","startupDurationMs","holdTime","holdDownDurationMs","kMidDisabledRate","kHiDisabledRate","calculateEncodingParameters","numSendersChanged","newBitrates","hysteresisIncrease","hysteresisDecrease","_i","encodingParametersEqual","getQualityMapString","activeStreamsToPublish","publishEncodingSimulcastLayer","newShouldDisableSimulcast","shouldDisableSimulcastChanged","maxBandwidthKbps","constraintDiff","prevIndex","compareEncodingParameter","encoding1","encoding2","different","setIdealMaxBandwidthKbps","_idealMaxBandwidthKbps","setHasBandwidthPriority","_hasBandwidthPriority","bitratesKbps","newMap","nameArr","bitrateArr","qualityString","localDescriptions","getEncodingSimulcastLayer","activeStreams","LowAndHigh","LowAndMedium","simulcastLayers","encodingSimulcastLayersDidChange","DefaultSimulcastUplinkPolicy$1","defaultMaxFrameRate","NScaleVideoUplinkBandwidthPolicy_1","NScaleVideoUplinkBandwidthPolicy","scaleResolution","numberOfPublishedVideoSources","idealMaxBandwidthKbps","encodingMapKey","_metrics","hasLocalVideo","getStreamCaptureSetting","getNumberOfPublishedVideoSources","rate","updateTransceiverController","shouldUpdateEndcodingParameters","transceiverEncoding","setting","targetHeight","targetHeightArray","NScaleVideoUplinkBandwidthPolicy$1","DefaultVolumeIndicatorAdapter_1","DefaultVolumeIndicatorAdapter","minVolumeDecibels","maxVolumeDecibels","streamIdToAttendeeId","streamIdToExternalUserId","warnedAboutMissingStreamIdMapping","attendeeIdToStreamId","sessionReconnected","onReconnect","streamIndex","hasAttendeeId","hasExternalUserId","hasMuted","hasDropped","attendeeIndex","attendeesInFrame","attendeeHasNewStreamId","otherStreamId","otherStreamIdNumber","cleanUpState","localAttendeeIds","remoteAttendeeIds","deletedAttendeeIds","deletedAttendeeId","metadata","signalStrengths","normalizedVolume","normalizedSignalStrength","applyRealtimeUpdatesForAudioMetadata","normalized","MAX_SIGNAL_STRENGTH_LEVELS","volumeUpdate","signalStrengthUpdate","IMPLICIT_VOLUME","IMPLICIT_SIGNAL_STRENGTH","DefaultAudioVideoController_1","require$$16","require$$17","require$$18","require$$19","require$$20","require$$21","require$$22","require$$23","require$$24","require$$25","require$$26","require$$27","require$$28","require$$29","require$$30","require$$31","require$$32","require$$33","require$$34","require$$35","require$$36","require$$37","require$$38","require$$39","require$$40","require$$41","require$$42","require$$43","require$$44","require$$45","require$$46","require$$47","require$$48","require$$49","require$$50","require$$51","require$$52","require$$53","require$$54","require$$55","require$$56","require$$57","require$$58","require$$59","require$$60","require$$61","AudioVideoControllerState_1","require$$62","DefaultAudioVideoController$1","DefaultAudioVideoController","webSocketAdapter","_audioProfile","meetingSessionContext","useUpdateTransceiverControllerForUplink","totalRetryCount","mayNeedRenegotiationForSimulcastLayerChange","promotedToPrimaryMeeting","hasGetRTCPeerConnectionStatsDeprecationMessageBeenSent","receiveIndexTask","monitorTask","usePromises","_logger","sessionStateController","_configuration","_webSocketAdapter","_realtimeController","_mediaStreamBroker","_reconnectController","_videoTileController","_audioMixController","_eventController","activeSpeakerDetector","_activeSpeakerDetector","handleHasBandwidthPriority","getRTCPeerConnectionStats","selector","setAudioProfile","initSignalingClient","uninstallPreStartObserver","preStartObserver","prestart","createOrReuseSignalingTask","handleClosed","signalingTask","startReturningPromise","signalingOnly","actionConnect","connectWithPromises","needsToWaitForAttendeePresence","receiveAudioInput","signaling","createPeerConnection","attachMediaInput","createSDP","ice","wrapTaskName","timeout","attendeePresenceTimeoutMs","connectWithTasks","reconnecting","enableSimulcastForUnifiedPlanChromiumBasedBrowsers","useAudioConnection","MIN_VOLUME_DECIBELS","MAX_VOLUME_DECIBELS","simulcastPolicy","maxUplinkBandwidthKbps","PING_PONG_INTERVAL_MS","audioVideoDidStartConnecting","hasStartedConnectionAttempt","startedConnectionAttempt","retryCount","actionFinishConnecting","getMeetingStatusCode","actionDisconnect","notifyStop","enforceBandwidthLimitationForSender","audioVideoDidStart","stopReturningPromise","cleanUpMediaStreamsAfterStop","disableReconnect","stopError","subtasks","cleanError","updateRemoteVideosFromLastVideosToReceive","updateLocalVideoFromPolicy","actionFinishUpdating","actionUpdateWithRenegotiation","simulcastStreamUpdates","currentId","foundUpdatedPreviousStreamId","idFromPrevious","stillReceiving","isUpdated","updatedVideoSubscriptionConfigurations","updatedConfig","negotiatedBitrateLayersAllocationRtpHeaderExtension","parameters","headerExtensions","extension","restartLocalVideo","restartVideo","replaceLocalVideo","replaceLocalAudio","notify","audioVideoDidStop","audioVideoWasDemotedFromPrimaryMeeting","meetingStatus","meetingErrorMessage","reconnect","willRetry","retryWithBackoff","actionReconnect","videoSendDidBecomeUnavailable","setVideoMaxBandwidthKbps","oldMaxBandwidth","newMaxBandwidth","setVideoCodecSendPreferences","getRemoteVideoSources","actionPromoteToPrimaryMeeting","resultingStatus","DefaultVolumeIndicatorAdapter$1","DefaultAudioVideoFacade_1","DefaultAudioVideoFacade","deviceController","contentShareController","videoElementId","subscribeToActiveSpeakerDetector","unsubscribeFromActiveSpeakerDetector","setContentAudioProfile","enableSimulcastForContentShare","startContentShare","startContentShareFromScreenCapture","pauseContentShare","unpauseContentShare","stopContentShare","addContentShareObserver","removeContentShareObserver","setContentShareVideoCodecPreferences","DefaultAudioVideoFacade$1","wait","waitTimeMs","isIFramed","frameElement","nodeName","parent","toLowerCasePropertyNames","newValue","Utils","Utils$1","MeetingSessionCredentials_1","MeetingSessionCredentials","MeetingSessionCredentials$1","MeetingSessionURLs_1","MeetingSessionURLs","_audioHostURL","_signalingURL","_turnControlURL","_eventIngestionURL","eventIngestionURL","MeetingSessionURLs$1","MeetingSessionConfiguration_1","Utils_1","MeetingSessionConfiguration","createMeetingResponse","createAttendeeResponse","externalMeetingId","reconnectTimeoutMs","reconnectFixedWaitMs","reconnectShortBackOffMs","reconnectLongBackOffMs","meeting","meetingid","externalmeetingid","mediaplacement","audiohosturl","signalingurl","turncontrolurl","eventingestionurl","attendeeid","externaluserid","jointoken","MeetingSessionConfiguration$1","DefaultSimulcastUplinkPolicyForContentShare_1","DefaultSimulcastUplinkPolicyForContentShare","_e","_g","_h","_j","_k","_l","_m","_observerFunc","DefaultSimulcastUplinkPolicyForContentShare$1","DefaultContentShareController_1","DefaultContentShareController","contentAudioVideo","attendeeAudioVideo","setupContentShareEvents","contentShareConfiguration","forEachContentShareObserver","contentShareDidPause","contentShareDidUnpause","_sessionStatus","contentShareTile","contentShareDidStop","isSelfAttendee","contentShareDidStart","DefaultContentShareController$1","isDestroyable","Destroyable","EventBufferConfiguration_1","EventBufferConfiguration","flushIntervalMs","flushSize","maxBufferCapacityKb","totalBufferItems","retryCountLimit","EventBufferConfiguration$1","EventIngestionConfiguration_1","EventIngestionConfiguration","eventsClientConfiguration","ingestionURL","eventBufferConfiguration","EventIngestionConfiguration$1","FullJitterBackoff_1","FullJitterBackoff","fixedWaitMs","shortBackoffMs","longBackoffMs","currentRetry","nextBackoffAmountMs","fullJitterMs","random","FullJitterBackoff$1","DefaultUserAgentParser_1","DefaultUserAgentParser","parserResult","browserMajorVersion","UNAVAILABLE","browserVersion","deviceName","vendor","getParserResult","osName","osVersion","DefaultUserAgentParser$1","__rest","getOwnPropertySymbols","propertyIsEnumerable","InMemoryJSONEventBuffer_1","InMemoryJSONEventBuffer","importantEvents","bufferSize","maxBufferItemCapacityBytes","ingestionEventSize","failedIngestionEvents","lock","cancellableEvents","attributesToFilter","deepCopyCurrentIngestionEvent","payloads","sendEvents","batch","getItems","makeRequestBody","failed","userAgentParserResult","clientMetadata","rest","authenticationToken","getAuthenticationToken","maxBufferCapacityBytes","currentIngestionEvent","initializeAndGetCurrentIngestionEvent","beaconEventListener","beaconEventHandler","addEventListeners","visibilityState","sendBeacon","removeEventListeners","addItem","ts","filteredAttributes","filterAttributes","getSize","MAX_ITEM_SIZE_BYTES_ALLOWED","sendEventImmediately","isFull","bufferItemThresholdReached","currentEvent","attributesToFilterSet","bufferItem","MAX_PAYLOAD_ITEMS","getPrimitiveSize","makeBeaconRequestBody","batchEvents","ingestionRecord","authorization","backoff","RETRY_FIXED_BACKOFF_WAIT_MS","RETRY_SHORT_BACKOFF_MS","RETRY_LONG_BACKOFF_MS","Authorization","SENDING_FAILURE_CODES","backoffTime","clearCurrenIngestionEvent","failedRecordsCopy","record","beaconData","InMemoryJSONEventBuffer$1","DefaultMeetingEventReporter_1","Destroyable_1","DefaultMeetingEventReporter","eventIngestionConfiguration","reportingEvents","eventsToIgnore","eventBuffer","DefaultMeetingEventReporter$1","MeetingEventsClientConfiguration_1","MeetingEventsClientConfiguration","MeetingEventsClientConfiguration$1","flattenEventAttributes_1","flattenEventAttributes","flattenedAttributes","flattenEventAttributes$1","DefaultEventController_1","DefaultEventController","eventReporter","meetingHistoryStates","observerSet","setupEventReporter","eventAttributes","getAttributes","eventDidReceive","_eventReporter","meetingEventsClientConfiguration","meetingHistory","DefaultEventController$1","MeetingReadinessCheckerConfiguration_1","MeetingReadinessCheckerConfiguration","waitDurationMs","audioOutputFrequency","audioOutputGain","MeetingReadinessCheckerConfiguration$1","DefaultMeetingReadinessChecker_1","CheckAudioConnectivityFeedback_1","CheckAudioInputFeedback_1","CheckAudioOutputFeedback_1","CheckCameraResolutionFeedback_1","CheckContentShareConnectivityFeedback_1","CheckNetworkTCPConnectivityFeedback_1","CheckNetworkUDPConnectivityFeedback_1","CheckVideoConnectivityFeedback_1","CheckVideoInputFeedback_1","DefaultMeetingReadinessChecker","meetingSession","checkAudioInput","audioInputDevice","audioVideo","Succeeded","PermissionDenied","Failed","checkAudioOutput","audioOutputDeviceInfo","audioOutputVerificationCallback","playTone","stopTone","maxGainValue","destinationStream","currentTime","linearRampToValueAtTime","Audio","rampSec","checkVideoInput","videoInputDevice","checkCameraResolution","videoInputDeviceId","videoConstraint","calculateVideoConstraint","ResolutionNotSupported","checkContentShareConnectivity","isContentShareStarted","isAudioVideoStarted","contentShareObserver","executeTimeoutTask","stopMeeting","TimedOut","ConnectionFailed","checkAudioConnectivity","audioPresence","audioConnectivityMetrics","checkAudioConnectivityMetricsObserver","attendeePresenceHandler","AudioInputPermissionDenied","AudioInputRequestFailed","startMeeting","isAudioConnectionSuccessful","AudioNotReceived","checkVideoConnectivity","VideoInputPermissionDenied","VideoInputRequestFailed","VideoNotSent","checkNetworkUDPConnectivity","candidatePairSucceed","originalURLRewriter","MeetingSessionURLsNotInitialized","transformedUri","ICENegotiationFailed","checkNetworkTCPConnectivity","isStarted","isStopped","conditionCheck","isSuccess","CheckForConditionTask","isCancelled","delay","timeoutTask","DefaultMeetingReadinessChecker$1","DefaultReconnectController_1","DefaultReconnectController","backoffPolicy","shouldReconnect","onlyRestartPeerConnection","firstConnectionAttempted","firstConnectionAttemptTimestampMs","lastActiveTimestampMs","_isFirstConnection","backoffTimer","backoffCancel","timeSpentReconnectingMs","hasPastReconnectDeadline","isFirstConnection","enableRestartPeerConnection","retryFunc","cancelFunc","shouldOnlyRestartPeerConnection","DefaultReconnectController$1","DefaultWebSocketAdapter_1","DefaultWebSocketAdapter","isSignedUrl","connection","WebSocket","binaryType","eventListener","CONNECTING","OPEN","CLOSING","Closing","CLOSED","DefaultMeetingSession_1","checkBrowserSupportAndFeatureConfiguration","addLogger","register","_deviceController","contentShareMediaStreamBroker","createContentShareMeetingSessionConfigure","audioVideoFacade","contentShare","removeLogger","isSimulcastUplinkPolicy","DefaultWebSocketAdapter$1","SelectorType","DEFAULT_USE_DUALSTACK_ENDPOINT","DEFAULT_USE_FIPS_ENDPOINT","normalizeProvider","promisified","isFipsRegion","region","getRealRegion","resolveRegionConfig","useFipsEndpoint","async","providedRegion","HttpRequest","hostname","port","query","protocol","req","cloneQuery","carry","paramName","HttpResponse","resp","CONTENT_LENGTH_HEADER","contentLengthMiddleware","bodyLengthChecker","isInstance","contentLengthMiddlewareOptions","tags","override","getContentLengthPlugin","applyToStack","clientStack","resolveParamsForS3","endpointParams","bucket","Bucket","isArnBucketName","ForcePathStyle","isDnsCompatibleBucketName","Endpoint","DisableMultiRegionAccessPoints","disableMultiRegionAccessPoints","DisableMRAP","DOMAIN_PATTERN","IP_ADDRESS_PATTERN","DOTS_PATTERN","bucketName","arn","partition","account","typeOrId","isArn","isValidArn","createConfigValueProvider","configKey","canonicalEndpointParamKey","configProvider","configValue","endpoint","href","getEndpointFromInstructions","commandInput","instructionsSupplier","clientConfig","resolveParams","endpointProvider","instructions","getEndpointParameterInstructions","instruction","serviceId","parseQueryString","querystring","pair","decodeURIComponent","parseUrl","pathname","search","toEndpointV1","endpointMiddleware","endpointV2","authSchemes","authScheme","signingRegion","signingName","deserializerMiddleware","deserializer","serializerMiddleware","serializer","urlParser","deserializerMiddlewareOption","serializerMiddlewareOption","getSerdePlugin","commandStack","endpointMiddlewareOptions","relation","toMiddleware","getEndpointPlugin","addRelativeTo","resolveEndpointConfig","tls","customEndpointProvider","isCustomEndpoint","useDualstackEndpoint","resolveHostHeaderConfig","hostHeaderMiddleware","handlerProtocol","requestHandler","hostHeaderMiddlewareOptions","getHostHeaderPlugin","loggerMiddleware","clientName","commandName","inputFilterSensitiveLog","outputFilterSensitiveLog","dynamoDbDocumentClientOptions","overrideInputFilterSensitiveLog","overrideOutputFilterSensitiveLog","$metadata","outputWithoutMetadata","loggerMiddlewareOptions","getLoggerPlugin","TRACE_ID_HEADER_NAME","ENV_LAMBDA_FUNCTION_NAME","ENV_TRACE_ID","recursionDetectionMiddleware","runtime","functionName","env","traceId","nonEmptyString","addRecursionDetectionMiddlewareOptions","getRecursionDetectionPlugin","RETRY_MODES","DEFAULT_MAX_ATTEMPTS","DEFAULT_RETRY_MODE","THROTTLING_ERROR_CODES","TRANSIENT_ERROR_CODES","TRANSIENT_ERROR_STATUS_CODES","NODEJS_TIMEOUT_ERROR_CODES","isThrottlingError","httpStatusCode","$retryable","throttling","isTransientError","isServerError","DefaultRateLimiter","currentCapacity","lastMaxRate","measuredTxRate","requestCount","lastTimestamp","timeWindow","beta","minCapacity","minFillRate","scaleConstant","smooth","currentTimeInSeconds","getCurrentTimeInSeconds","lastThrottleTime","lastTxRateBucket","fillRate","maxCapacity","acquireTokenBucket","amount","refillTokenBucket","fillAmount","updateClientSendingRate","calculatedRate","updateMeasuredRate","rateToUse","calculateTimeWindow","cubicThrottle","enableTokenBucket","cubicSuccess","updateTokenBucketRate","getPrecise","timeBucket","currentRate","parseFloat","toFixed","DEFAULT_RETRY_DELAY_BASE","MAXIMUM_RETRY_DELAY","THROTTLING_RETRY_DELAY_BASE","INITIAL_RETRY_TOKENS","RETRY_COST","TIMEOUT_RETRY_COST","NO_RETRY_INCREMENT","INVOCATION_ID_HEADER","REQUEST_HEADER","getDefaultRetryBackoffStrategy","delayBase","computeNextBackoffDelay","attempts","setDelayBase","getDefaultRetryToken","initialRetryTokens","initialRetryDelay","initialRetryCount","MAX_CAPACITY","retryCost","timeoutRetryCost","retryBackoffStrategy","lastRetryCost","availableCapacity","retryDelay","getCapacityAmount","errorType","hasRetryTokens","getRetryCount","getRetryDelay","getLastRetryCost","getRetryTokenCount","errorInfo","capacityAmount","delayFromErrorType","retryAfterHint","delayFromRetryAfterHint","getTime","releaseRetryTokens","releaseAmount","StandardRetryStrategy","maxAttemptsProvider","STANDARD","retryToken","retryTokenScope","tokenToRenew","maxAttempts","getMaxAttempts","shouldRetry","recordSuccess","token","isRetryableError","AdaptiveRetryStrategy","ADAPTIVE","rateLimiter","standardRetryStrategy","getSendToken","acquireInitialRetryToken","refreshRetryTokenForRetry","rnds8","rng","msCrypto","REGEX","uuid","byteToHex","v4","rnds","asSdkError","resolveRetryConfig","retryStrategy","retryMode","retryMiddleware","isRetryStrategyV2","retry","lastError","totalRetryDelay","retryErrorInfo","getRetyErrorInto","refreshError","getRetryErrorType","getRetryAfterHint","$response","retryMiddlewareOptions","getRetryPlugin","retryAfterHeaderName","retryAfter","retryAfterSeconds","memoize","provider","isExpired","requiresRefresh","resolved","hasResult","isConstant","coalesceProvider","forceRefresh","SHORT_TO_HEX","HEX_TO_SHORT","encodedByte","fromHex","encoded","toHex","fromUtf8","toUint8Array","ArrayBuffer","isView","byteOffset","BYTES_PER_ELEMENT","toUtf8","ALGORITHM_QUERY_PARAM","CREDENTIAL_QUERY_PARAM","AMZ_DATE_QUERY_PARAM","SIGNED_HEADERS_QUERY_PARAM","EXPIRES_QUERY_PARAM","SIGNATURE_QUERY_PARAM","TOKEN_QUERY_PARAM","AUTH_HEADER","AMZ_DATE_HEADER","DATE_HEADER","GENERATED_HEADERS","SIGNATURE_HEADER","SHA256_HEADER","TOKEN_HEADER","ALWAYS_UNSIGNABLE_HEADERS","expect","pragma","referer","te","trailer","upgrade","PROXY_HEADER_PATTERN","SEC_HEADER_PATTERN","ALGORITHM_IDENTIFIER","EVENT_ALGORITHM_IDENTIFIER","UNSIGNED_PAYLOAD","MAX_CACHE_SIZE","KEY_TYPE_IDENTIFIER","MAX_PRESIGNED_TTL","signingKeyCache","cacheQueue","createScope","shortDate","getSigningKey","sha256Constructor","cacheKey","hmac","secretAccessKey","accessKeyId","sessionToken","signable","ctor","secret","digest","getCanonicalHeaders","unsignableHeaders","signableHeaders","canonical","headerName","canonicalHeaderName","escapeUri","hexEncode","getCanonicalQuery","serialized","isArrayBuffer","arg","getPayloadHash","hashConstructor","hashCtor","hasHeader","soughtHeader","cloneRequest","moveHeadersToQuery","lname","unhoistableHeaders","prepareRequest","iso8601","toDate","SignatureV4","applyChecksum","sha256","uriEscapePath","regionProvider","credentialProvider","originalRequest","signingDate","expiresIn","signingService","validateResolvedCredentials","longDate","formatDate","canonicalHeaders","getCanonicalHeaderList","getSignature","createCanonicalRequest","toSign","signString","signEvent","signRequest","priorSignature","hashedPayload","hashedHeaders","stringToSign","requestToSign","payloadHash","signature","sortedHeaders","getCanonicalPath","credentialScope","canonicalRequest","hashedRequest","normalizedPathSegments","pathSegment","normalizedPath","keyPromise","createStringToSign","CREDENTIAL_EXPIRE_WINDOW","resolveAwsAuthConfig","normalizedCreds","normalizeCredentialProvider","credentialDefaultProvider","signingEscapePath","systemClockOffset","signer","regionInfoProvider","regionInfo","signerConstructor","defaultSigningName","expiration","getSkewCorrectedDate","isClockSkewed","clockTime","getUpdatedSystemClockOffset","currentSystemClockOffset","clockTimeInMs","awsAuthMiddleware","multiRegionOverride","signingRegionSet","serverTime","ServerTime","getDateHeader","dateHeader","date","awsAuthMiddlewareOptions","getAwsAuthPlugin","resolveUserAgentConfig","customUserAgent","USER_AGENT","X_AMZ_USER_AGENT","SPACE","UA_ESCAPE_REGEX","userAgentMiddleware","escapeUserAgent","defaultUserAgent","defaultUserAgentProvider","sdkUserAgentValue","normalUAValue","prefixSeparatorIndex","uaName","getUserAgentMiddlewareOptions","getUserAgentPlugin","NoOpLogger$2","constructStack","absoluteEntries","relativeEntries","entriesNameSet","cloneTo","toStack","entry","middleware","expandRelativeMiddlewareList","expandedMiddlewareList","before","after","getMiddlewareList","normalizedAbsoluteEntries","normalizedRelativeEntries","normalizedEntriesNameMap","normalizedEntry","mainChain","stepWeights","priorityWeights","wholeList","expendedMiddlewareList","toOverrideIndex","toOverride","use","plugin","toRemove","isRemoved","filterCb","removeByName","removeByReference","removeByTag","identify","mw","initialize","serialize","finalizeRequest","deserialize","normal","Client","middlewareStack","command","optionsOrCb","cb","resolveMiddleware","Command","SENSITIVE_STRING","expectBoolean","stackTraceWarning","lower","expectNumber","parsed","expectLong","expectInt32","expectSizedInt","expected","castInt","Int16Array","Int8Array","expectNonNull","location","expectObject","receivedType","expectString","strictParseDouble","parseNumber","NUMBER_REGEX","parseEpochTimestamp","valueAsDouble","ServiceException","setPrototypeOf","$fault","decorateServiceException","exception","additions","Message","throwDefaultError","parsedBody","exceptionCtor","deserializeMetadata","Code","requestId","extendedRequestId","cfId","loadConfigsForDefaultMode","connectionTimeout","extendedEncodeURIComponent","StringWrapper","Class","getPrototypeOf","Function","arg0","arg1","arg2","mapWithFilter","defaultFilterPassed","customFilterPassed","enumerable","writable","configurable","_instructions","resolvedPath","memberName","labelValueProvider","uriLabel","isGreedyLabel","labelValue","segment","resolveClientEndpointParameters","extendStatics","__proto__","__extends","__assign","__decorate","decorators","r","getOwnPropertyDescriptor","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","__generator","g","sent","trys","ops","verb","throw","return","__createBinding","o","k2","__exportStar","__values","__read","__spread","__spreadArrays","il","jl","__await","__asyncGenerator","asyncIterator","fulfill","settle","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","__importStar","__esModule","__importDefault","__classPrivateFieldGet","privateMap","__classPrivateFieldSet","isEmptyData_1","isEmptyData","EMPTY_DATA_SHA_256","SHA_256_HMAC_ALGO","SHA_256_HASH","surrogatePair","decoded","byte","nextByte","byteValue","textEncoderFromUtf8","jsFromUtf8","textEncoderToUtf8","jsToUtf8","fallbackWindow","locateWindow","ie11Sha256","Sha256","constants_1","util_utf8_browser_1","util_locate_window_1","_this","operation","onerror","toArrayBufferView","oncomplete","keyOperation","subtle","importKey","keyData","convertToBuffer_1","convertToBuffer","numToUint8_1","numToUint8","uint32ArrayFrom_1","uint32ArrayFrom","a_lookUpTable","return_array","a_index","webCryptoSha256","util_1","typedArray","MAX_HASHABLE_LENGTH","INIT","KEY","DIGEST_LENGTH","BLOCK_SIZE","RawSha256_1","RawSha256","temp","bufferLength","bytesHashed","finished","position","hashBuffer","bitsHashed","bufferView","DataView","undecoratedLength","setUint8","setUint32","state0","state1","state2","state3","state4","state5","state6","state7","t1_1","t2_1","t1","t2","jsSha256","tslib_1","digestSync","outer","bufferHash","bufferFromSecret","supportsWebCrypto_1","supportsZeroByteGCM","supportsSecureRandom","supportsWebCrypto","subtleCryptoMethods","supportsSubtleCrypto","every","methodName","generateKey","encrypt","iv","additionalData","tagLength","CryptoOperation","Key","KeyOperation","MsSubtleCrypto","MsWindow","isMsWindow","msSubtleCryptoMethods","quacksLikeAnMsWindow","subtle_1","crossPlatformSha256","ie11Sha256_1","webCryptoSha256_1","sha256_js_1","supports_web_crypto_1","ie11_detection_1","buildQueryString","iLen","qsEntry","requestTimeout","timeoutInMs","timeoutError","WebCryptoSha256","Ie11Sha256","FetchHttpHandler","abortSignal","requestTimeoutInMs","aborted","abortError","queryString","requestOptions","Headers","AbortController","fetchRequest","Request","raceOfPromises","fetchHeaders","transformedHeaders","onabort","race","alphabetByEncoding","alphabetByValue","char","bitsPerLetter","bitsPerByte","maxLetterValue","fromBase64","totalByteLength","dataView","bitLength","chunkOffset","toBase64","bitClusterCount","streamCollector","Blob","collectBlob","collectStream","readToBase64","arrayBuffer","getReader","isDone","prior","FileReader","onloadend","commaIndex","dataOffset","readAsDataURL","invalidProvider","calculateBodyLength","BROWSER_ALIASES_MAP","Bada","BlackBerry","Chrome","Chromium","Electron","Epiphany","Firefox","Focus","Generic","Googlebot","Maxthon","Opera","PhantomJS","Puffin","QupZilla","QQ","QQLite","Safari","Sailfish","SeaMonkey","Sleipnir","Swing","Tizen","Vivaldi","WeChat","Roku","BROWSER_MAP","amazon_silk","android","bada","blackberry","chromium","epiphany","focus","generic","googlebot","google_search","ie","k_meleon","maxthon","edge","mz","naver","opera_coast","phantomjs","puffin","qupzilla","qq","qqlite","sailfish","samsung_internet","seamonkey","sleipnir","swing","tizen","uc","vivaldi","webos","wechat","yandex","PLATFORMS_MAP","tablet","mobile","desktop","tv","OS_MAP","WindowsPhone","Windows","MacOS","iOS","Android","WebOS","Linux","ChromeOS","PlayStation4","ENGINE_MAP","EdgeHTML","Blink","Trident","Presto","Gecko","WebKit","regexp","_const","versionA","versionB","isLoose","versionAPrecision","getVersionPrecision","versionBPrecision","precision","lastPrecision","delta","_version","predicate","assigners","assigner","browserAlias","commonVersionIdentifier","browsersList","describe","getFirstMatch","getSecondMatch","notLikeAndroid","butAndroid","osParsersList","versionName","getWindowsVersionName","getMacOSVersionName","getAndroidVersionName","platformParsersList","iDevice","likeIDevice","getBrowserName","getOSVersion","getOSName","enginesParsersList","isGecko","likeGecko","Parser","UA","skipParsing","parsedResult","parseBrowser","browserDescriptor","browserParsersList","getBrowserVersion","parseOS","getPlatform","parsePlatform","getPlatformType","_platform","parseEngine","getEngineName","satisfies","checkTree","platformsAndOSes","platformsAndOSCounter","browsers","browsersCounter","currentDefinition","platformsAndOSNames","OSMatchingDefinition","isOS","osResult","platformMatchingDefinition","isPlatform","platformResult","browserNames","matchingDefinition","isBrowser","compareVersion","includingAlias","defaultBrowserName","browserNameLower","alias","getBrowserTypeByAlias","expectedResults","comparableVersion","currentBrowserVersion","compareVersions","platformType","isEngine","engineName","is","anything","anythings","Bowser","clientVersion","parsedUA","bowser","partitions","partitionsInfo","DEFAULT_PARTITION","regions","outputs","regionData","regionRegex","debugId","toDebugString","ref","argv","EndpointError","IP_V4_REGEX","isIpAddress","VALID_HOST_LABEL_REGEX","isValidHostLabel","allowSubDomains","labels","isVirtualHostableS3Bucket","parseArn","segments","accountId","resourceId","booleanEquals","value1","value2","getAttrPathList","pathList","part","squareBracketIndex","arrayIndex","getAttr","acc","not","HttpAuthLocation","EndpointURLScheme","DEFAULT_PORTS","HTTP","HTTPS","parseURL","whatwgURL","urlString","host","scheme","isIp","authority","stringEquals","uriEncode","evaluateTemplate","template","evaluatedTemplateArr","templateContext","referenceRecord","openingBraceIndex","closingBraceIndex","parameterName","refName","attrName","getReferenceValue","evaluateExpression","keyName","callFunction","evaluatedArgs","lib","evaluateCondition","fnArgs","toAssign","evaluateConditions","conditions","conditionsReferenceRecord","getEndpointHeaders","headerKey","headerVal","headerValEntry","processedExpr","getEndpointProperty","propertyEntry","getEndpointProperties","propertyKey","propertyVal","getEndpointUrl","endpointUrl","expression","evaluateEndpointRule","endpointRule","endpointRuleOptions","evaluateErrorRule","errorRule","evaluateTreeRule","treeRule","rules","evaluateRules","rule","endpointOrUndefined","resolveEndpoint","ruleSetObject","paramsWithDefault","paramKey","paramDefaultValue","requiredParams","required","requiredParam","givenEndpoint","_data","Region","UseDualStack","UseFIPS","ruleSet","defaultEndpointResolver","getRuntimeConfig","apiVersion","base64Decoder","base64Encoder","disableHostPrefix","NoOpLogger","utf8Decoder","utf8Encoder","DEFAULTS_MODE_OPTIONS","resolveDefaultsModeConfig","defaultsMode","isMobileBrowser","toLocaleLowerCase","defaultConfigProvider","clientSharedValues","getSharedRuntimeConfig","packageInfo","RequestHandler","ChimeSDKMessagingClient","__Client","_config_0","__getRuntimeConfig","_config_1","_config_2","_config_3","_config_5","_config_7","ChimeSDKMessagingServiceException","__ServiceException","AllowNotifications","ChannelMembershipType","ErrorCode","ChannelMode","ChannelPrivacy","InvocationType","FallbackAction","PushNotificationType","ChannelMessagePersistenceType","ChannelMessageStatus","ChannelMessageType","SortOrder","SearchFieldKey","SearchFieldOperator","BadRequestException","__BaseException","ConflictException","ForbiddenException","NotFoundException","ServiceFailureException","ServiceUnavailableException","ThrottledClientException","UnauthorizedClientException","ResourceLimitExceededException","AppInstanceUserMembershipSummaryFilterSensitiveLog","AssociateChannelFlowRequestFilterSensitiveLog","IdentityFilterSensitiveLog","Name","BatchChannelMembershipsFilterSensitiveLog","InvitedBy","Members","BatchCreateChannelMembershipRequestFilterSensitiveLog","BatchCreateChannelMembershipErrorFilterSensitiveLog","BatchCreateChannelMembershipResponseFilterSensitiveLog","BatchChannelMemberships","ElasticChannelConfigurationFilterSensitiveLog","ChannelFilterSensitiveLog","Metadata","CreatedBy","ChannelAssociatedWithFlowSummaryFilterSensitiveLog","ChannelBanFilterSensitiveLog","Member","ChannelBanSummaryFilterSensitiveLog","LambdaConfigurationFilterSensitiveLog","ProcessorConfigurationFilterSensitiveLog","ProcessorFilterSensitiveLog","ChannelFlowFilterSensitiveLog","Processors","MessageAttributeValueFilterSensitiveLog","StringValues","PushNotificationConfigurationFilterSensitiveLog","Title","Body","ChannelMessageCallbackFilterSensitiveLog","Content","PushNotification","MessageAttributes","ChannelFlowCallbackRequestFilterSensitiveLog","ChannelMessage","ChannelFlowCallbackResponseFilterSensitiveLog","ChannelFlowSummaryFilterSensitiveLog","ChannelMembershipFilterSensitiveLog","ChannelSummaryFilterSensitiveLog","ChannelMembershipForAppInstanceUserSummaryFilterSensitiveLog","ChannelSummary","PushNotificationPreferencesFilterSensitiveLog","FilterRule","ChannelMembershipPreferencesFilterSensitiveLog","PushNotifications","ChannelMembershipSummaryFilterSensitiveLog","ChannelMessageStatusStructureFilterSensitiveLog","ChannelMessageFilterSensitiveLog","Sender","ChannelMessageSummaryFilterSensitiveLog","ChannelModeratedByAppInstanceUserSummaryFilterSensitiveLog","ChannelModeratorFilterSensitiveLog","Moderator","ChannelModeratorSummaryFilterSensitiveLog","TagFilterSensitiveLog","Value","CreateChannelRequestFilterSensitiveLog","ClientRequestToken","Tags","ChannelId","CreateChannelResponseFilterSensitiveLog","CreateChannelBanRequestFilterSensitiveLog","CreateChannelBanResponseFilterSensitiveLog","CreateChannelFlowRequestFilterSensitiveLog","CreateChannelFlowResponseFilterSensitiveLog","CreateChannelMembershipRequestFilterSensitiveLog","CreateChannelMembershipResponseFilterSensitiveLog","CreateChannelModeratorRequestFilterSensitiveLog","CreateChannelModeratorResponseFilterSensitiveLog","ChannelModerator","DeleteChannelRequestFilterSensitiveLog","DeleteChannelBanRequestFilterSensitiveLog","DeleteChannelFlowRequestFilterSensitiveLog","DeleteChannelMembershipRequestFilterSensitiveLog","DeleteChannelMessageRequestFilterSensitiveLog","DeleteChannelModeratorRequestFilterSensitiveLog","DescribeChannelRequestFilterSensitiveLog","DescribeChannelResponseFilterSensitiveLog","Channel","DescribeChannelBanRequestFilterSensitiveLog","DescribeChannelBanResponseFilterSensitiveLog","ChannelBan","DescribeChannelFlowRequestFilterSensitiveLog","DescribeChannelFlowResponseFilterSensitiveLog","ChannelFlow","DescribeChannelMembershipRequestFilterSensitiveLog","DescribeChannelMembershipResponseFilterSensitiveLog","ChannelMembership","DescribeChannelMembershipForAppInstanceUserRequestFilterSensitiveLog","DescribeChannelMembershipForAppInstanceUserResponseFilterSensitiveLog","DescribeChannelModeratedByAppInstanceUserRequestFilterSensitiveLog","DescribeChannelModeratedByAppInstanceUserResponseFilterSensitiveLog","DescribeChannelModeratorRequestFilterSensitiveLog","DescribeChannelModeratorResponseFilterSensitiveLog","DisassociateChannelFlowRequestFilterSensitiveLog","GetChannelMembershipPreferencesRequestFilterSensitiveLog","GetChannelMembershipPreferencesResponseFilterSensitiveLog","Preferences","GetChannelMessageRequestFilterSensitiveLog","GetChannelMessageResponseFilterSensitiveLog","GetChannelMessageStatusRequestFilterSensitiveLog","GetChannelMessageStatusResponseFilterSensitiveLog","GetMessagingSessionEndpointRequestFilterSensitiveLog","MessagingSessionEndpointFilterSensitiveLog","GetMessagingSessionEndpointResponseFilterSensitiveLog","ListChannelBansRequestFilterSensitiveLog","NextToken","ListChannelBansResponseFilterSensitiveLog","ChannelBans","ListChannelFlowsRequestFilterSensitiveLog","ListChannelFlowsResponseFilterSensitiveLog","ChannelFlows","ListChannelMembershipsRequestFilterSensitiveLog","ListChannelMembershipsResponseFilterSensitiveLog","ChannelMemberships","ListChannelMembershipsForAppInstanceUserRequestFilterSensitiveLog","ListChannelMembershipsForAppInstanceUserResponseFilterSensitiveLog","ListChannelMessagesRequestFilterSensitiveLog","ListChannelMessagesResponseFilterSensitiveLog","ChannelMessages","ListChannelModeratorsRequestFilterSensitiveLog","ListChannelModeratorsResponseFilterSensitiveLog","ChannelModerators","ListChannelsRequestFilterSensitiveLog","ListChannelsResponseFilterSensitiveLog","Channels","ListChannelsAssociatedWithChannelFlowRequestFilterSensitiveLog","ListChannelsAssociatedWithChannelFlowResponseFilterSensitiveLog","ListChannelsModeratedByAppInstanceUserRequestFilterSensitiveLog","ListChannelsModeratedByAppInstanceUserResponseFilterSensitiveLog","ListSubChannelsRequestFilterSensitiveLog","SubChannelSummaryFilterSensitiveLog","ListSubChannelsResponseFilterSensitiveLog","ListTagsForResourceRequestFilterSensitiveLog","ListTagsForResourceResponseFilterSensitiveLog","PutChannelMembershipPreferencesRequestFilterSensitiveLog","PutChannelMembershipPreferencesResponseFilterSensitiveLog","RedactChannelMessageRequestFilterSensitiveLog","RedactChannelMessageResponseFilterSensitiveLog","SearchFieldFilterSensitiveLog","SearchChannelsRequestFilterSensitiveLog","SearchChannelsResponseFilterSensitiveLog","SendChannelMessageRequestFilterSensitiveLog","SendChannelMessageResponseFilterSensitiveLog","TagResourceRequestFilterSensitiveLog","UntagResourceRequestFilterSensitiveLog","TagKeys","UpdateChannelRequestFilterSensitiveLog","UpdateChannelResponseFilterSensitiveLog","UpdateChannelFlowRequestFilterSensitiveLog","UpdateChannelFlowResponseFilterSensitiveLog","UpdateChannelMessageRequestFilterSensitiveLog","UpdateChannelMessageResponseFilterSensitiveLog","UpdateChannelReadMarkerRequestFilterSensitiveLog","UpdateChannelReadMarkerResponseFilterSensitiveLog","serializeAws_restJson1AssociateChannelFlowCommand","basePath","isSerializableHeaderValue","ChimeBearer","__resolvedPath","ChannelArn","ChannelFlowArn","__HttpRequest","serializeAws_restJson1BatchCreateChannelMembershipCommand","MemberArns","serializeAws_restJson1MemberArns","SubChannelId","serializeAws_restJson1ChannelFlowCallbackCommand","CallbackId","generateIdempotencyToken","serializeAws_restJson1ChannelMessageCallback","DeleteResource","serializeAws_restJson1CreateChannelCommand","AppInstanceArn","ElasticChannelConfiguration","serializeAws_restJson1ElasticChannelConfiguration","serializeAws_restJson1ChannelMemberArns","Mode","ModeratorArns","serializeAws_restJson1ChannelModeratorArns","Privacy","serializeAws_restJson1TagList","serializeAws_restJson1CreateChannelBanCommand","MemberArn","serializeAws_restJson1CreateChannelFlowCommand","serializeAws_restJson1ProcessorList","serializeAws_restJson1CreateChannelMembershipCommand","serializeAws_restJson1CreateChannelModeratorCommand","ChannelModeratorArn","serializeAws_restJson1DeleteChannelCommand","serializeAws_restJson1DeleteChannelBanCommand","serializeAws_restJson1DeleteChannelFlowCommand","serializeAws_restJson1DeleteChannelMembershipCommand","serializeAws_restJson1DeleteChannelMessageCommand","MessageId","serializeAws_restJson1DeleteChannelModeratorCommand","serializeAws_restJson1DescribeChannelCommand","serializeAws_restJson1DescribeChannelBanCommand","serializeAws_restJson1DescribeChannelFlowCommand","serializeAws_restJson1DescribeChannelMembershipCommand","serializeAws_restJson1DescribeChannelMembershipForAppInstanceUserCommand","__expectNonNull","AppInstanceUserArn","serializeAws_restJson1DescribeChannelModeratedByAppInstanceUserCommand","serializeAws_restJson1DescribeChannelModeratorCommand","serializeAws_restJson1DisassociateChannelFlowCommand","serializeAws_restJson1GetChannelMembershipPreferencesCommand","serializeAws_restJson1GetChannelMessageCommand","serializeAws_restJson1GetChannelMessageStatusCommand","serializeAws_restJson1GetMessagingSessionEndpointCommand","serializeAws_restJson1ListChannelBansCommand","MaxResults","serializeAws_restJson1ListChannelFlowsCommand","serializeAws_restJson1ListChannelMembershipsCommand","serializeAws_restJson1ListChannelMembershipsForAppInstanceUserCommand","serializeAws_restJson1ListChannelMessagesCommand","NotBefore","NotAfter","serializeAws_restJson1ListChannelModeratorsCommand","serializeAws_restJson1ListChannelsCommand","privacy","serializeAws_restJson1ListChannelsAssociatedWithChannelFlowCommand","serializeAws_restJson1ListChannelsModeratedByAppInstanceUserCommand","serializeAws_restJson1ListSubChannelsCommand","serializeAws_restJson1ListTagsForResourceCommand","ResourceARN","serializeAws_restJson1PutChannelMembershipPreferencesCommand","serializeAws_restJson1ChannelMembershipPreferences","serializeAws_restJson1RedactChannelMessageCommand","serializeAws_restJson1SearchChannelsCommand","Fields","serializeAws_restJson1SearchFields","serializeAws_restJson1SendChannelMessageCommand","serializeAws_restJson1MessageAttributeMap","Persistence","serializeAws_restJson1PushNotificationConfiguration","serializeAws_restJson1TagResourceCommand","serializeAws_restJson1UntagResourceCommand","serializeAws_restJson1TagKeyList","serializeAws_restJson1UpdateChannelCommand","serializeAws_restJson1UpdateChannelFlowCommand","serializeAws_restJson1UpdateChannelMessageCommand","serializeAws_restJson1UpdateChannelReadMarkerCommand","deserializeAws_restJson1AssociateChannelFlowCommand","deserializeAws_restJson1AssociateChannelFlowCommandError","contents","collectBody","parsedOutput","parseErrorBody","loadRestJsonErrorCode","deserializeAws_restJson1BadRequestExceptionResponse","deserializeAws_restJson1ConflictExceptionResponse","deserializeAws_restJson1ForbiddenExceptionResponse","deserializeAws_restJson1NotFoundExceptionResponse","deserializeAws_restJson1ServiceFailureExceptionResponse","deserializeAws_restJson1ServiceUnavailableExceptionResponse","deserializeAws_restJson1ThrottledClientExceptionResponse","deserializeAws_restJson1UnauthorizedClientExceptionResponse","deserializeAws_restJson1BatchCreateChannelMembershipCommand","deserializeAws_restJson1BatchCreateChannelMembershipCommandError","__expectObject","parseBody","deserializeAws_restJson1BatchChannelMemberships","Errors","deserializeAws_restJson1BatchCreateChannelMembershipErrors","deserializeAws_restJson1ResourceLimitExceededExceptionResponse","deserializeAws_restJson1ChannelFlowCallbackCommand","deserializeAws_restJson1ChannelFlowCallbackCommandError","__expectString","deserializeAws_restJson1CreateChannelCommand","deserializeAws_restJson1CreateChannelCommandError","deserializeAws_restJson1CreateChannelBanCommand","deserializeAws_restJson1CreateChannelBanCommandError","deserializeAws_restJson1Identity","deserializeAws_restJson1CreateChannelFlowCommand","deserializeAws_restJson1CreateChannelFlowCommandError","deserializeAws_restJson1CreateChannelMembershipCommand","deserializeAws_restJson1CreateChannelMembershipCommandError","deserializeAws_restJson1CreateChannelModeratorCommand","deserializeAws_restJson1CreateChannelModeratorCommandError","deserializeAws_restJson1DeleteChannelCommand","deserializeAws_restJson1DeleteChannelCommandError","deserializeAws_restJson1DeleteChannelBanCommand","deserializeAws_restJson1DeleteChannelBanCommandError","deserializeAws_restJson1DeleteChannelFlowCommand","deserializeAws_restJson1DeleteChannelFlowCommandError","deserializeAws_restJson1DeleteChannelMembershipCommand","deserializeAws_restJson1DeleteChannelMembershipCommandError","deserializeAws_restJson1DeleteChannelMessageCommand","deserializeAws_restJson1DeleteChannelMessageCommandError","deserializeAws_restJson1DeleteChannelModeratorCommand","deserializeAws_restJson1DeleteChannelModeratorCommandError","deserializeAws_restJson1DescribeChannelCommand","deserializeAws_restJson1DescribeChannelCommandError","deserializeAws_restJson1Channel","deserializeAws_restJson1DescribeChannelBanCommand","deserializeAws_restJson1DescribeChannelBanCommandError","deserializeAws_restJson1ChannelBan","deserializeAws_restJson1DescribeChannelFlowCommand","deserializeAws_restJson1DescribeChannelFlowCommandError","deserializeAws_restJson1ChannelFlow","deserializeAws_restJson1DescribeChannelMembershipCommand","deserializeAws_restJson1DescribeChannelMembershipCommandError","deserializeAws_restJson1ChannelMembership","deserializeAws_restJson1DescribeChannelMembershipForAppInstanceUserCommand","deserializeAws_restJson1DescribeChannelMembershipForAppInstanceUserCommandError","deserializeAws_restJson1ChannelMembershipForAppInstanceUserSummary","deserializeAws_restJson1DescribeChannelModeratedByAppInstanceUserCommand","deserializeAws_restJson1DescribeChannelModeratedByAppInstanceUserCommandError","deserializeAws_restJson1ChannelModeratedByAppInstanceUserSummary","deserializeAws_restJson1DescribeChannelModeratorCommand","deserializeAws_restJson1DescribeChannelModeratorCommandError","deserializeAws_restJson1ChannelModerator","deserializeAws_restJson1DisassociateChannelFlowCommand","deserializeAws_restJson1DisassociateChannelFlowCommandError","deserializeAws_restJson1GetChannelMembershipPreferencesCommand","deserializeAws_restJson1GetChannelMembershipPreferencesCommandError","deserializeAws_restJson1ChannelMembershipPreferences","deserializeAws_restJson1GetChannelMessageCommand","deserializeAws_restJson1GetChannelMessageCommandError","deserializeAws_restJson1ChannelMessage","deserializeAws_restJson1GetChannelMessageStatusCommand","deserializeAws_restJson1GetChannelMessageStatusCommandError","Status","deserializeAws_restJson1ChannelMessageStatusStructure","deserializeAws_restJson1GetMessagingSessionEndpointCommand","deserializeAws_restJson1GetMessagingSessionEndpointCommandError","deserializeAws_restJson1MessagingSessionEndpoint","deserializeAws_restJson1ListChannelBansCommand","deserializeAws_restJson1ListChannelBansCommandError","deserializeAws_restJson1ChannelBanSummaryList","deserializeAws_restJson1ListChannelFlowsCommand","deserializeAws_restJson1ListChannelFlowsCommandError","deserializeAws_restJson1ChannelFlowSummaryList","deserializeAws_restJson1ListChannelMembershipsCommand","deserializeAws_restJson1ListChannelMembershipsCommandError","deserializeAws_restJson1ChannelMembershipSummaryList","deserializeAws_restJson1ListChannelMembershipsForAppInstanceUserCommand","deserializeAws_restJson1ListChannelMembershipsForAppInstanceUserCommandError","deserializeAws_restJson1ChannelMembershipForAppInstanceUserSummaryList","deserializeAws_restJson1ListChannelMessagesCommand","deserializeAws_restJson1ListChannelMessagesCommandError","deserializeAws_restJson1ChannelMessageSummaryList","deserializeAws_restJson1ListChannelModeratorsCommand","deserializeAws_restJson1ListChannelModeratorsCommandError","deserializeAws_restJson1ChannelModeratorSummaryList","deserializeAws_restJson1ListChannelsCommand","deserializeAws_restJson1ListChannelsCommandError","deserializeAws_restJson1ChannelSummaryList","deserializeAws_restJson1ListChannelsAssociatedWithChannelFlowCommand","deserializeAws_restJson1ListChannelsAssociatedWithChannelFlowCommandError","deserializeAws_restJson1ChannelAssociatedWithFlowSummaryList","deserializeAws_restJson1ListChannelsModeratedByAppInstanceUserCommand","deserializeAws_restJson1ListChannelsModeratedByAppInstanceUserCommandError","deserializeAws_restJson1ChannelModeratedByAppInstanceUserSummaryList","deserializeAws_restJson1ListSubChannelsCommand","deserializeAws_restJson1ListSubChannelsCommandError","SubChannels","deserializeAws_restJson1SubChannelSummaryList","deserializeAws_restJson1ListTagsForResourceCommand","deserializeAws_restJson1ListTagsForResourceCommandError","deserializeAws_restJson1TagList","deserializeAws_restJson1PutChannelMembershipPreferencesCommand","deserializeAws_restJson1PutChannelMembershipPreferencesCommandError","deserializeAws_restJson1RedactChannelMessageCommand","deserializeAws_restJson1RedactChannelMessageCommandError","deserializeAws_restJson1SearchChannelsCommand","deserializeAws_restJson1SearchChannelsCommandError","deserializeAws_restJson1SendChannelMessageCommand","deserializeAws_restJson1SendChannelMessageCommandError","deserializeAws_restJson1TagResourceCommand","deserializeAws_restJson1TagResourceCommandError","deserializeAws_restJson1UntagResourceCommand","deserializeAws_restJson1UntagResourceCommandError","deserializeAws_restJson1UpdateChannelCommand","deserializeAws_restJson1UpdateChannelCommandError","deserializeAws_restJson1UpdateChannelFlowCommand","deserializeAws_restJson1UpdateChannelFlowCommandError","deserializeAws_restJson1UpdateChannelMessageCommand","deserializeAws_restJson1UpdateChannelMessageCommandError","deserializeAws_restJson1UpdateChannelReadMarkerCommand","deserializeAws_restJson1UpdateChannelReadMarkerCommandError","__map","__decorateServiceException","serializeAws_restJson1PushNotificationPreferences","MaximumSubChannels","MinimumMembershipPercentage","TargetMembershipsPerSubChannel","serializeAws_restJson1LambdaConfiguration","ResourceArn","serializeAws_restJson1MessageAttributeValue","serializeAws_restJson1MessageAttributeStringValues","serializeAws_restJson1Processor","Configuration","serializeAws_restJson1ProcessorConfiguration","ExecutionOrder","Lambda","serializeAws_restJson1SearchField","Operator","Values","serializeAws_restJson1SearchFieldValues","serializeAws_restJson1Tag","deserializeAws_restJson1AppInstanceUserMembershipSummary","ReadMarkerTimestamp","__parseEpochTimestamp","__expectNumber","deserializeAws_restJson1Members","deserializeAws_restJson1BatchCreateChannelMembershipError","ErrorMessage","retVal","CreatedTimestamp","deserializeAws_restJson1ElasticChannelConfiguration","LastMessageTimestamp","LastUpdatedTimestamp","deserializeAws_restJson1ChannelAssociatedWithFlowSummary","deserializeAws_restJson1ChannelBanSummary","deserializeAws_restJson1ProcessorList","deserializeAws_restJson1ChannelFlowSummary","AppInstanceUserMembershipSummary","deserializeAws_restJson1ChannelSummary","deserializeAws_restJson1PushNotificationPreferences","deserializeAws_restJson1ChannelMembershipSummary","LastEditedTimestamp","deserializeAws_restJson1MessageAttributeMap","Redacted","__expectBoolean","Detail","deserializeAws_restJson1ChannelMessageSummary","deserializeAws_restJson1ChannelModeratorSummary","__expectInt32","Arn","deserializeAws_restJson1LambdaConfiguration","deserializeAws_restJson1MessageAttributeValue","deserializeAws_restJson1MessageAttributeStringValues","Url","deserializeAws_restJson1Processor","deserializeAws_restJson1ProcessorConfiguration","deserializeAws_restJson1SubChannelSummary","MembershipCount","deserializeAws_restJson1Tag","streamBody","collectBodyString","getOwnPropertyNames","errorBody","sanitizeErrorCode","rawValue","cleanValue","AssociateChannelFlowCommand","$Command","handlerExecutionContext","handle","BatchCreateChannelMembershipCommand","ChannelFlowCallbackCommand","CreateChannelBanCommand","CreateChannelCommand","CreateChannelFlowCommand","CreateChannelMembershipCommand","CreateChannelModeratorCommand","DeleteChannelBanCommand","DeleteChannelCommand","DeleteChannelFlowCommand","DeleteChannelMembershipCommand","DeleteChannelMessageCommand","DeleteChannelModeratorCommand","DescribeChannelBanCommand","DescribeChannelCommand","DescribeChannelFlowCommand","DescribeChannelMembershipCommand","DescribeChannelMembershipForAppInstanceUserCommand","DescribeChannelModeratedByAppInstanceUserCommand","DescribeChannelModeratorCommand","DisassociateChannelFlowCommand","GetChannelMembershipPreferencesCommand","GetChannelMessageCommand","GetChannelMessageStatusCommand","GetMessagingSessionEndpointCommand","ListChannelBansCommand","ListChannelFlowsCommand","ListChannelMembershipsCommand","ListChannelMembershipsForAppInstanceUserCommand","ListChannelMessagesCommand","ListChannelModeratorsCommand","ListChannelsAssociatedWithChannelFlowCommand","ListChannelsCommand","ListChannelsModeratedByAppInstanceUserCommand","ListSubChannelsCommand","ListTagsForResourceCommand","PutChannelMembershipPreferencesCommand","RedactChannelMessageCommand","SearchChannelsCommand","SendChannelMessageCommand","TagResourceCommand","UntagResourceCommand","UpdateChannelCommand","UpdateChannelFlowCommand","UpdateChannelMessageCommand","UpdateChannelReadMarkerCommand","ChimeSDKMessaging","associateChannelFlow","batchCreateChannelMembership","channelFlowCallback","createChannel","createChannelBan","createChannelFlow","createChannelMembership","createChannelModerator","deleteChannel","deleteChannelBan","deleteChannelFlow","deleteChannelMembership","deleteChannelMessage","deleteChannelModerator","describeChannel","describeChannelBan","describeChannelFlow","describeChannelMembership","describeChannelMembershipForAppInstanceUser","describeChannelModeratedByAppInstanceUser","describeChannelModerator","disassociateChannelFlow","getChannelMembershipPreferences","getChannelMessage","getChannelMessageStatus","getMessagingSessionEndpoint","listChannelBans","listChannelFlows","listChannelMemberships","listChannelMembershipsForAppInstanceUser","listChannelMessages","listChannelModerators","listChannels","listChannelsAssociatedWithChannelFlow","listChannelsModeratedByAppInstanceUser","listSubChannels","listTagsForResource","putChannelMembershipPreferences","redactChannelMessage","searchChannels","sendChannelMessage","tagResource","untagResource","updateChannel","updateChannelFlow","updateChannelMessage","updateChannelReadMarker","makePagedClientRequest","makePagedRequest","paginateListChannelBans","additionalArguments","page","startingToken","hasNext","pageSize","prevToken","stopOnSameToken","paginateListChannelFlows","paginateListChannelMembershipsForAppInstanceUser","paginateListChannelMemberships","paginateListChannelMessages","paginateListChannelModerators","paginateListChannelsAssociatedWithChannelFlow","paginateListChannelsModeratedByAppInstanceUser","paginateListChannels","paginateListSubChannels","paginateSearchChannels","Message_1","Message$1","DefaultSigV4_1","util_hex_encoding_1","DefaultSigV4","chimeClient","makeTwoDigits","getDateTimeString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getDateString","dateTimeString","getSignatureKey","regionName","serviceName","kDate","kRegion","kService","signURL","today","encodedKey","canonicalQuerystring","hashedCanonicalRequest","signingKey","DefaultSigV4$1","PrefetchOn","PrefetchOn_1","PrefetchOn$1","DefaultMessagingSession_1","client_chime_sdk_messaging_1","DefaultMessagingSession","sigV4","reconnectShortBackoffMs","reconnectLongBackoffMs","preBootstrapMessages","isClosed","startConnecting","openEventHandler","receiveMessageHandler","startConnectingInternal","bootstrapResolved","bootstrapRejected","closeEvent","signedUrl","prepareWebSocketUrl","messagingSessionDidStartConnecting","userArn","messagingSessionId","prefetchOn","prefetchSortBy","isSessionEstablished","jsonData","messageType","Payload","messagingSessionDidStart","preBootstrapMessageLength","iter","preBootstrapMessage","sendMessageToObserver","messagingSessionDidReceiveMessage","retryConnection","canReconnect","messagingSessionDidStop","DefaultMessagingSession$1","DefaultVideoFrameProcessorPipeline_1","DEFAULT_FRAMERATE","DefaultVideoFrameProcessorPipeline","stages","fr","canvasOutput","outputCtx","canvasInput","inputCtx","inputVideoStream","sourceBuffers","destBuffers","hasStarted","_event","processVideoStart","performance","imageSource","processors","_error","obs","processingDidFailToStart","processingDidStart","processVideoLatency","nextFrameDelay","processingLatencyTooHigh","lastTimeOut","stage","destroyInputMediaStreamAndBuffers","processingDidStop","getInputMediaStream","getActiveOutputMediaStream","isOutputMediaStreamActive","captureStream","cloneInputAudioTracksToOutput","setInputMediaStream","inputMediaStream","canvasBuffer","load","audioTrack","removeTrack","addTrack","DefaultVideoFrameProcessorPipeline$1","DefaultVideoTransformDevice_1","DefaultVideoTransformDevice","pipe","chooseNewInnerDevice","newTransformDevice","getInnerDevice","deviceIsMediaStream","DefaultVideoTransformDevice$1","FullJitterLimitedBackoff_1","FullJitterLimitedBackoff","FullJitterLimitedBackoff$1","FullJitterBackoffFactory_1","FullJitterBackoffFactory","createWithLimit","FullJitterBackoffFactory$1","Log_1","Log","sequenceNumber","logLevel","Log$1","MessagingSessionConfiguration_1","MessagingSessionConfiguration","generateSessionId","MessagingSessionConfiguration$1","MultiLogger_1","MultiLogger","_loggers","memoized","OFF","MultiLogger$1","NoOpLogger_1","_msg","NoOpLogger$1","NoOpDebugLogger_1","NoOpDebugLogger","NoOpDebugLogger$1","NoOpMediaStreamBroker_1","NoOpMediaStreamBroker","NoOpAudioVideoController_1","NoOpAudioVideoController$1","emptyConfiguration","noOpLogger","NoOpAudioVideoController","NoOpMediaStreamBroker$1","NoOpDeviceController_1","NoOpDeviceControllerWithEventController","NoOpDeviceController","_options","_deviceId","_element","_trigger","_stream","_width","_height","_frameRate","NoOpDeviceController$1","NoOpEventReporter_1","NoOpEventReporter","_ts","NoOpEventReporter$1","NoOpTask_1","NoOpTask","_parentTask","NoOpTask$1","NoOpVideoElementFactory_1","NoOpVideoElementFactory","NoOpVideoElementFactory$1","NoVideoDownlinkBandwidthPolicy_1","NoVideoDownlinkBandwidthPolicy","_videoIndex","NoVideoDownlinkBandwidthPolicy$1","NoVideoUplinkBandwidthPolicy_1","NoVideoUplinkBandwidthPolicy","NoVideoUplinkBandwidthPolicy$1","POSTLogger_1","POSTLogger","logCapture","batchSize","BATCH_SIZE","getLogCaptureSize","logs","POSTLogger$1","PrefetchSortBy","PrefetchSortBy_1","PrefetchSortBy$1","RealtimeAttendeePositionInFrame_1","RealtimeAttendeePositionInFrame","RealtimeAttendeePositionInFrame$1","RunnableTask_1","RunnableTask","RunnableTask$1","SingleNodeAudioTransformDevice_1","SingleNodeAudioTransformDevice","_muted","createSingleAudioNode","SingleNodeAudioTransformDevice$1","TranscriptAlternative_1","TranscriptAlternative","TranscriptAlternative$1","TranscriptEntity_1","TranscriptEntity","TranscriptEntity$1","TranscriptItem_1","TranscriptItem","TranscriptItem$1","TranscriptLanguageWithScore_1","TranscriptLanguageWithScore","TranscriptLanguageWithScore$1","TranscriptResult_1","TranscriptResult","TranscriptResult$1","VideoSource_1","VideoSource","VideoSource$1","decider","decideModel","measureAndDecideExecutionApproach","support_js_1","DEFAULT_EXECUTION_QUANTA","SIMD_SCORE_FIXED_POINT","WASM_SCORE_FIXED_POINT","SINGLE_INLINE_SCORE_MULTIPLIER","QUALITY_MULTIPLE_QUANTA_SCORE_MULTIPLIER","INTERACTIVITY_MULTIPLE_QUANTA_SCORE_MULTIPLIER","WORKER_SCORE_MULTIPLIER","PERFORMANCE_THRESHOLDS","noSupport","inline","c100","c50","c20","c10","Estimator","roundtrip","toSend","receive","expectedKey","supportsSIMD","supports","measure","budget","benchWASM","benchSIMD","measurement","inlineScoreMultiplier","executionQuanta","usagePreference","decideExecutionApproach","supportsSAB","duration","executionPreference","simdPreference","variantPreference","namePreference","executionQuantaPreference","allThresholds","useSIMD","checkScores","baseScore","thresholds","inlineScore","workerScore","unsupported","succeed","executionApproach","variant","resolveVariant","lookup","reducePreference","inlineOption","workerOption","featureCheck","forceSIMD","estimator","estimateAndFeatureCheck","estimatorBudget","knownModel","knownExecution","types","VoiceFocusAudioWorkletNode","workletInlineNode","types_js_1","CPU_WARNING_MAX_INTERVAL_MS","VoiceFocusInlineNode","cpuWarningCount","channelCountMode","modelURL","onmessage","onProcessorMessage","onWorkerMessage","onModuleBufferLoaded","onModuleLoaded","disable","cpuWarningLastTriggered","onCPUWarning","workletWorkerSabNode","INDICES","STATES","disabled","stopped","VoiceFocusWorkerBufferNode","resamplerURL","supportFarendStream","approach","frames","Atomics","store","shared","workletWorkerPostMessageNode","VoiceFocusWorkerPostMessageNode","audioBufferURL","agc","voicefocus","getAudioInput","createAudioContext","decider_js_1","worklet_inline_node_js_1","worklet_worker_sab_node_js_1","worklet_worker_postMessage_node_js_1","DEFAULT_AGC_DISABLED_SETTING","useVoiceFocusAGC","useBuiltInAGC","DEFAULT_AGC_SETTING","DEFAULT_ASSET_GROUP","models","DEFAULT_CONTEXT_HINT","BASE_AUDIO_CONSTRAINTS","noiseSuppression","googTypingNoiseDetection","DEFAULT_AUDIO_CONSTRAINTS_WITH_BUILTIN_AGC","autoGainControl","DEFAULT_AUDIO_CONSTRAINTS_WITHOUT_BUILTIN_AGC","PROCESSORS","file","validateAssetSpec","mungeConstraints","defaultConstraints","urlForModel","VoiceFocus","processorURL","nodeConstructor","nodeOptions","internal","isDestroyed","assetConfig","updatedFetchBehavior","isAuto","preResolve","executionSpec","mungeExecutionPreference","executionDefinition","startingURL","preload","numberOfInputs","createNode","voiceFocusSampleRate","es","sendBufferCount","prefill","audioWorklet","addModule","applyToStream","applyToSourceNode","destination","contextHint","inputOptions","voiceFocusOptions","LoggerAdapter_1","LoggerAdapter","LoggerAdapter$1","VoiceFocusTransformDevice_1","VoiceFocusTransformDevice","voiceFocus","farEndStreamToAudioSourceNode","mixDestNode","mixSourceNode","isDefaultDevice","isUsingES","MediaStreamAudioDestinationNode","assignFarEndStreamToAudioSourceNode","createMixSourceNode","onFallback","observeMeetingAudio","addFarEndStream","unObserveMeetingAudio","removeFarendStream","activeStream","inactiveStream","streamToAdd","streamNodeToAdd","VoiceFocusTransformDevice$1","VoiceFocusTransformDeviceDelegate_1","VoiceFocusTransformDeviceDelegate","voiceFocusFellBackToInnerStream","voiceFocusInsufficientResources","VoiceFocusTransformDeviceDelegate$1","VoiceFocusDeviceTransformer_1","VoiceFocusDeviceTransformer","voicefocus_1","defaultFetchBehavior","vfLogger","augmentSpec","allowIFrame","Meeting","meetingFeaturesAllowsES","MeetingFeatures","EchoReduction","forbiddenConfig","forbiddenSpec","transformer","getConfiguration","createTransformDevice","vf","allocateVoiceFocus","currentSDKAssetGroup","pendingVoiceFocus","createVoiceFocus","majorMinorVersion","AudioVideoControllerState","DefaultTranscriptionController","DefaultMeetingSession","require$$63","require$$64","require$$65","require$$66","require$$67","require$$68","require$$69","require$$70","require$$71","require$$72","require$$73","require$$74","require$$75","require$$76","require$$77","require$$78","require$$79","require$$80","require$$81","require$$82","require$$83","require$$84","require$$85","require$$86","require$$87","require$$88","require$$89","require$$90","require$$91","require$$92","require$$93","require$$94","require$$95","require$$96","require$$97","require$$98","require$$99","require$$100","require$$101","require$$102","require$$103","require$$104","require$$105","require$$106","require$$107","require$$108","require$$109","require$$110","require$$111","require$$112","require$$113","require$$114","require$$115","require$$116","require$$117","require$$118","require$$119","require$$120","require$$121","require$$122","require$$123","require$$124","require$$125","require$$126","require$$127","require$$128","require$$129","require$$130","require$$131","require$$132","require$$133","require$$134","require$$135","require$$136","require$$137","require$$138","require$$139","require$$140","require$$141","require$$142","require$$143","require$$144","require$$145","require$$146","require$$147","require$$148","require$$149","require$$150","require$$151","require$$152","require$$153","require$$154","require$$155","require$$156","require$$157","require$$158","require$$159","require$$160","require$$161","require$$162","require$$163","require$$164","require$$165","require$$166","require$$167","require$$168","require$$169","require$$170","require$$171","require$$172","require$$173","require$$174","require$$175","require$$176","require$$177","require$$178","require$$179","require$$180","require$$181","require$$182","require$$183","require$$184","require$$185","require$$186","require$$187","require$$188","require$$189","require$$190","require$$191","require$$192","require$$193","require$$194","require$$195","require$$196","require$$197","require$$198","require$$199","require$$200","require$$201","require$$202","require$$203","VideoPreferences_2","require$$204","require$$205","require$$206","require$$207","VoiceFocusDeviceTransformer$1"],"mappings":"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O1C,kBAAkB87G,kBACzBoD,QAAaH,iBAAiBr8G,EAAO1C,OAAQtoE,KAAUunL,OAEtD,MAAIv8G,EAAO1C,kBAAkB06F,yBAI9B,MAAM,IAAIj1K,MAAM,wEAHhBy5L,QAAaJ,uBAAuBp8G,EAAO1C,OAAQtoE,KAAUunL,EAIhE,OACKC,EACN,MAAMI,EAAYv4C,EAClBA,EAAQm4C,EAAK3b,UACb6b,KAAar4C,GAAWrkE,EAAO68G,iBAAmBx4C,IAAUu4C,EAC/D,CAEL,0teC5BAz+L,OAAOC,eAAeo/L,UAAS,aAAc,CAAEl/L,OAAO,IACtD,MAAM63J,QACF33J,YAAYgY,EACZ/G,EAASuc,GACLttB,KAAK8X,KAAOA,EACZ9X,KAAK+Q,QAAUA,EACf/Q,KAAKstB,QAAUA,CAClB,EAEUyxK,UAAAj9L,QAAG21J,wKCXlBh4J,OAAOC,eAAegiG,UAAS,aAAc,CAAE9hG,OAAO,IAC3B8hG,UAAA29D,oBAAG39D,UAAY49D,KAAG59D,UAAW69D,IAAG79D,UAAqB89D,cAAG99D,UAAkB+9D,gBAAG,EAItF/9D,UAAA+9D,WAAG,GAIA/9D,UAAA89D,cAAG,GAIb99D,UAAA69D,IAAG,IAAIx7E,YAAY,CAC1B,WACA,WACA,WACA,WACA,UACA,WACA,WACA,WACA,WACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,aAKJ2d,UAAA49D,KAAe,CACX,WACA,WACA,WACA,WACA,WACA,WACA,UACA,YAKuB59D,UAAA29D,oBAAGv1J,KAAKoyB,IAAI,EAAG,IAAM,+IC/FhDz8B,OAAOC,eAAeggK,UAAS,aAAc,CAAE9/J,OAAO,IACrC8/J,UAAAC,eAAG,EACpB,IAAI9B,EAAc77J,mBAI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"}